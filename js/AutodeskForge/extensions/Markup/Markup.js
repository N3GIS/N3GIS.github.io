/*!
 * LMV v7.105.0
 *
 * Copyright 2025 Autodesk, Inc.
 * All rights reserved.
 *
 * This computer source code and related instructions and comments are the
 * unpublished confidential and proprietary information of Autodesk, Inc.
 * and are protected under Federal copyright and state trade secret law.
 * They may not be disclosed to, copied or used by any third party without
 * the prior written consent of Autodesk, Inc.
 *
 * Autodesk Viewer SDK Usage Limitations:
 *
 * The Autodesk Viewer SDK JavaScript must be delivered from an
 * Autodesk-hosted URL.
 */
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	// runtime can't be in strict mode because a global variable is assign and maybe created.
/******/ 	var __webpack_modules__ = ({

/***/ "./extensions/Markup/Markup.js":
/*!*************************************!*\
  !*** ./extensions/Markup/Markup.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Core: () => (/* binding */ Core),\n/* harmony export */   Gui: () => (/* binding */ Gui)\n/* harmony export */ });\n/* harmony import */ var _core_MarkupsCore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/MarkupsCore */ \"./extensions/Markup/core/MarkupsCore.js\");\n/* harmony import */ var _gui_MarkupsGui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gui/MarkupsGui */ \"./extensions/Markup/gui/MarkupsGui.js\");\n/* harmony import */ var _core_edit_clipboard_Clipboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/edit-clipboard/Clipboard */ \"./extensions/Markup/core/edit-clipboard/Clipboard.js\");\n/* harmony import */ var _core_edit_actions_CloneMarkup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/edit-actions/CloneMarkup */ \"./extensions/Markup/core/edit-actions/CloneMarkup.js\");\n/* harmony import */ var _core_edit_actions_CreateArrow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/edit-actions/CreateArrow */ \"./extensions/Markup/core/edit-actions/CreateArrow.js\");\n/* harmony import */ var _core_edit_actions_CreateCallout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/edit-actions/CreateCallout */ \"./extensions/Markup/core/edit-actions/CreateCallout.js\");\n/* harmony import */ var _core_edit_actions_CreateCircle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core/edit-actions/CreateCircle */ \"./extensions/Markup/core/edit-actions/CreateCircle.js\");\n/* harmony import */ var _core_edit_actions_CreateCloud__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./core/edit-actions/CreateCloud */ \"./extensions/Markup/core/edit-actions/CreateCloud.js\");\n/* harmony import */ var _core_edit_actions_CreateDimension__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./core/edit-actions/CreateDimension */ \"./extensions/Markup/core/edit-actions/CreateDimension.js\");\n/* harmony import */ var _core_edit_actions_CreateFreehand__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./core/edit-actions/CreateFreehand */ \"./extensions/Markup/core/edit-actions/CreateFreehand.js\");\n/* harmony import */ var _core_edit_actions_CreateHighlight__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/edit-actions/CreateHighlight */ \"./extensions/Markup/core/edit-actions/CreateHighlight.js\");\n/* harmony import */ var _core_edit_actions_CreatePolycloud__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./core/edit-actions/CreatePolycloud */ \"./extensions/Markup/core/edit-actions/CreatePolycloud.js\");\n/* harmony import */ var _core_edit_actions_CreatePolyline__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./core/edit-actions/CreatePolyline */ \"./extensions/Markup/core/edit-actions/CreatePolyline.js\");\n/* harmony import */ var _core_edit_actions_CreateRectangle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/edit-actions/CreateRectangle */ \"./extensions/Markup/core/edit-actions/CreateRectangle.js\");\n/* harmony import */ var _core_edit_actions_CreateText__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./core/edit-actions/CreateText */ \"./extensions/Markup/core/edit-actions/CreateText.js\");\n/* harmony import */ var _core_edit_actions_DeleteArrow__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./core/edit-actions/DeleteArrow */ \"./extensions/Markup/core/edit-actions/DeleteArrow.js\");\n/* harmony import */ var _core_edit_actions_DeleteCallout__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./core/edit-actions/DeleteCallout */ \"./extensions/Markup/core/edit-actions/DeleteCallout.js\");\n/* harmony import */ var _core_edit_actions_DeleteCircle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./core/edit-actions/DeleteCircle */ \"./extensions/Markup/core/edit-actions/DeleteCircle.js\");\n/* harmony import */ var _core_edit_actions_DeleteCloud__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./core/edit-actions/DeleteCloud */ \"./extensions/Markup/core/edit-actions/DeleteCloud.js\");\n/* harmony import */ var _core_edit_actions_DeleteStamp__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./core/edit-actions/DeleteStamp */ \"./extensions/Markup/core/edit-actions/DeleteStamp.js\");\n/* harmony import */ var _core_edit_actions_DeleteDimension__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./core/edit-actions/DeleteDimension */ \"./extensions/Markup/core/edit-actions/DeleteDimension.js\");\n/* harmony import */ var _core_edit_actions_DeleteFreehand__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./core/edit-actions/DeleteFreehand */ \"./extensions/Markup/core/edit-actions/DeleteFreehand.js\");\n/* harmony import */ var _core_edit_actions_DeleteHighlight__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./core/edit-actions/DeleteHighlight */ \"./extensions/Markup/core/edit-actions/DeleteHighlight.js\");\n/* harmony import */ var _core_edit_actions_DeletePolycloud__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./core/edit-actions/DeletePolycloud */ \"./extensions/Markup/core/edit-actions/DeletePolycloud.js\");\n/* harmony import */ var _core_edit_actions_DeletePolyline__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./core/edit-actions/DeletePolyline */ \"./extensions/Markup/core/edit-actions/DeletePolyline.js\");\n/* harmony import */ var _core_edit_actions_DeleteRectangle__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./core/edit-actions/DeleteRectangle */ \"./extensions/Markup/core/edit-actions/DeleteRectangle.js\");\n/* harmony import */ var _core_edit_actions_DeleteText__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./core/edit-actions/DeleteText */ \"./extensions/Markup/core/edit-actions/DeleteText.js\");\n/* harmony import */ var _core_edit_actions_EditAction__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./core/edit-actions/EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _core_edit_actions_EditActionGroup__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./core/edit-actions/EditActionGroup */ \"./extensions/Markup/core/edit-actions/EditActionGroup.js\");\n/* harmony import */ var _core_edit_actions_EditActionManager__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./core/edit-actions/EditActionManager */ \"./extensions/Markup/core/edit-actions/EditActionManager.js\");\n/* harmony import */ var _core_EditFrame__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./core/EditFrame */ \"./extensions/Markup/core/EditFrame.js\");\n/* harmony import */ var _core_edit_modes_EditMode__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./core/edit-modes/EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _core_edit_modes_EditModeArrow__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./core/edit-modes/EditModeArrow */ \"./extensions/Markup/core/edit-modes/EditModeArrow.js\");\n/* harmony import */ var _core_edit_modes_EditModeCallout__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./core/edit-modes/EditModeCallout */ \"./extensions/Markup/core/edit-modes/EditModeCallout.js\");\n/* harmony import */ var _core_edit_modes_EditModeCircle__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./core/edit-modes/EditModeCircle */ \"./extensions/Markup/core/edit-modes/EditModeCircle.js\");\n/* harmony import */ var _core_edit_modes_EditModeCloud__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./core/edit-modes/EditModeCloud */ \"./extensions/Markup/core/edit-modes/EditModeCloud.js\");\n/* harmony import */ var _core_edit_modes_EditModeStamp__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./core/edit-modes/EditModeStamp */ \"./extensions/Markup/core/edit-modes/EditModeStamp.js\");\n/* harmony import */ var _core_edit_modes_EditModeDimension__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./core/edit-modes/EditModeDimension */ \"./extensions/Markup/core/edit-modes/EditModeDimension.js\");\n/* harmony import */ var _core_edit_modes_EditModeFreehand__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./core/edit-modes/EditModeFreehand */ \"./extensions/Markup/core/edit-modes/EditModeFreehand.js\");\n/* harmony import */ var _core_edit_modes_EditModeHighlight__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./core/edit-modes/EditModeHighlight */ \"./extensions/Markup/core/edit-modes/EditModeHighlight.js\");\n/* harmony import */ var _core_edit_modes_EditModePen__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./core/edit-modes/EditModePen */ \"./extensions/Markup/core/edit-modes/EditModePen.js\");\n/* harmony import */ var _core_edit_modes_EditModePolycloud__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./core/edit-modes/EditModePolycloud */ \"./extensions/Markup/core/edit-modes/EditModePolycloud.js\");\n/* harmony import */ var _core_edit_modes_EditModePolyline__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./core/edit-modes/EditModePolyline */ \"./extensions/Markup/core/edit-modes/EditModePolyline.js\");\n/* harmony import */ var _core_edit_modes_EditModeRectangle__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./core/edit-modes/EditModeRectangle */ \"./extensions/Markup/core/edit-modes/EditModeRectangle.js\");\n/* harmony import */ var _core_edit_modes_EditModeText__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./core/edit-modes/EditModeText */ \"./extensions/Markup/core/edit-modes/EditModeText.js\");\n/* harmony import */ var _core_edit_modes_EditorTextInput__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./core/edit-modes/EditorTextInput */ \"./extensions/Markup/core/edit-modes/EditorTextInput.js\");\n/* harmony import */ var _core_Markup__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./core/Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _core_MarkupArrow__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./core/MarkupArrow */ \"./extensions/Markup/core/MarkupArrow.js\");\n/* harmony import */ var _core_MarkupCallout__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./core/MarkupCallout */ \"./extensions/Markup/core/MarkupCallout.js\");\n/* harmony import */ var _core_MarkupCircle__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./core/MarkupCircle */ \"./extensions/Markup/core/MarkupCircle.js\");\n/* harmony import */ var _core_MarkupCloud__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./core/MarkupCloud */ \"./extensions/Markup/core/MarkupCloud.js\");\n/* harmony import */ var _core_MarkupDimension__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./core/MarkupDimension */ \"./extensions/Markup/core/MarkupDimension.js\");\n/* harmony import */ var _core_MarkupFreehand__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./core/MarkupFreehand */ \"./extensions/Markup/core/MarkupFreehand.js\");\n/* harmony import */ var _core_MarkupHighlight__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./core/MarkupHighlight */ \"./extensions/Markup/core/MarkupHighlight.js\");\n/* harmony import */ var _core_MarkupPen__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./core/MarkupPen */ \"./extensions/Markup/core/MarkupPen.js\");\n/* harmony import */ var _core_MarkupPolycloud__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./core/MarkupPolycloud */ \"./extensions/Markup/core/MarkupPolycloud.js\");\n/* harmony import */ var _core_MarkupPolyLine__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./core/MarkupPolyLine */ \"./extensions/Markup/core/MarkupPolyLine.js\");\n/* harmony import */ var _core_MarkupRectangle__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./core/MarkupRectangle */ \"./extensions/Markup/core/MarkupRectangle.js\");\n/* harmony import */ var _core_MarkupText__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./core/MarkupText */ \"./extensions/Markup/core/MarkupText.js\");\n/* harmony import */ var _core_MarkupStamp__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./core/MarkupStamp */ \"./extensions/Markup/core/MarkupStamp.js\");\n/* harmony import */ var _core_MarkupTool__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./core/MarkupTool */ \"./extensions/Markup/core/MarkupTool.js\");\n/* harmony import */ var _core_edit_actions_SetArrow__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./core/edit-actions/SetArrow */ \"./extensions/Markup/core/edit-actions/SetArrow.js\");\n/* harmony import */ var _core_edit_actions_SetCallout__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./core/edit-actions/SetCallout */ \"./extensions/Markup/core/edit-actions/SetCallout.js\");\n/* harmony import */ var _core_edit_actions_SetCircle__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./core/edit-actions/SetCircle */ \"./extensions/Markup/core/edit-actions/SetCircle.js\");\n/* harmony import */ var _core_edit_actions_SetCloud__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./core/edit-actions/SetCloud */ \"./extensions/Markup/core/edit-actions/SetCloud.js\");\n/* harmony import */ var _core_edit_actions_SetDimension__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./core/edit-actions/SetDimension */ \"./extensions/Markup/core/edit-actions/SetDimension.js\");\n/* harmony import */ var _core_edit_actions_SetFreehand__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./core/edit-actions/SetFreehand */ \"./extensions/Markup/core/edit-actions/SetFreehand.js\");\n/* harmony import */ var _core_edit_actions_SetHighlight__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./core/edit-actions/SetHighlight */ \"./extensions/Markup/core/edit-actions/SetHighlight.js\");\n/* harmony import */ var _core_edit_actions_SetPolycloud__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./core/edit-actions/SetPolycloud */ \"./extensions/Markup/core/edit-actions/SetPolycloud.js\");\n/* harmony import */ var _core_edit_actions_SetPolyline__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./core/edit-actions/SetPolyline */ \"./extensions/Markup/core/edit-actions/SetPolyline.js\");\n/* harmony import */ var _core_edit_actions_SetPosition__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./core/edit-actions/SetPosition */ \"./extensions/Markup/core/edit-actions/SetPosition.js\");\n/* harmony import */ var _core_edit_actions_SetRectangle__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./core/edit-actions/SetRectangle */ \"./extensions/Markup/core/edit-actions/SetRectangle.js\");\n/* harmony import */ var _core_edit_actions_SetRotation__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./core/edit-actions/SetRotation */ \"./extensions/Markup/core/edit-actions/SetRotation.js\");\n/* harmony import */ var _core_edit_actions_SetSize__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./core/edit-actions/SetSize */ \"./extensions/Markup/core/edit-actions/SetSize.js\");\n/* harmony import */ var _core_edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./core/edit-actions/SetStyle */ \"./extensions/Markup/core/edit-actions/SetStyle.js\");\n/* harmony import */ var _core_edit_actions_SetText__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./core/edit-actions/SetText */ \"./extensions/Markup/core/edit-actions/SetText.js\");\n/* harmony import */ var _core_edit_actions_SetStamp__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./core/edit-actions/SetStamp */ \"./extensions/Markup/core/edit-actions/SetStamp.js\");\n/* harmony import */ var _core_MarkupEvents__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./core/MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./core/MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _core_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./core/MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _core_StyleUtils__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./core/StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _core_EditModeManager__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./core/EditModeManager */ \"./extensions/Markup/core/EditModeManager.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// All the things\nconst Core = {\n  Clipboard: _core_edit_clipboard_Clipboard__WEBPACK_IMPORTED_MODULE_2__.Clipboard,\n  CloneMarkup: _core_edit_actions_CloneMarkup__WEBPACK_IMPORTED_MODULE_3__.CloneMarkup,\n  CreateArrow: _core_edit_actions_CreateArrow__WEBPACK_IMPORTED_MODULE_4__.CreateArrow,\n  CreateCallout: _core_edit_actions_CreateCallout__WEBPACK_IMPORTED_MODULE_5__.CreateCallout,\n  CreateCircle: _core_edit_actions_CreateCircle__WEBPACK_IMPORTED_MODULE_6__.CreateCircle,\n  CreateCloud: _core_edit_actions_CreateCloud__WEBPACK_IMPORTED_MODULE_7__.CreateCloud,\n  CreateDimension: _core_edit_actions_CreateDimension__WEBPACK_IMPORTED_MODULE_8__.CreateDimension,\n  CreateFreehand: _core_edit_actions_CreateFreehand__WEBPACK_IMPORTED_MODULE_9__.CreateFreehand,\n  CreateHighlight: _core_edit_actions_CreateHighlight__WEBPACK_IMPORTED_MODULE_10__.CreateHighlight,\n  CreatePolycloud: _core_edit_actions_CreatePolycloud__WEBPACK_IMPORTED_MODULE_11__.CreatePolycloud,\n  CreatePolyline: _core_edit_actions_CreatePolyline__WEBPACK_IMPORTED_MODULE_12__.CreatePolyline,\n  CreateRectangle: _core_edit_actions_CreateRectangle__WEBPACK_IMPORTED_MODULE_13__.CreateRectangle,\n  CreateText: _core_edit_actions_CreateText__WEBPACK_IMPORTED_MODULE_14__.CreateText,\n  DeleteArrow: _core_edit_actions_DeleteArrow__WEBPACK_IMPORTED_MODULE_15__.DeleteArrow,\n  DeleteCallout: _core_edit_actions_DeleteCallout__WEBPACK_IMPORTED_MODULE_16__.DeleteCallout,\n  DeleteCircle: _core_edit_actions_DeleteCircle__WEBPACK_IMPORTED_MODULE_17__.DeleteCircle,\n  DeleteCloud: _core_edit_actions_DeleteCloud__WEBPACK_IMPORTED_MODULE_18__.DeleteCloud,\n  DeleteDimension: _core_edit_actions_DeleteDimension__WEBPACK_IMPORTED_MODULE_20__.DeleteDimension,\n  DeleteFreehand: _core_edit_actions_DeleteFreehand__WEBPACK_IMPORTED_MODULE_21__.DeleteFreehand,\n  DeleteHighlight: _core_edit_actions_DeleteHighlight__WEBPACK_IMPORTED_MODULE_22__.DeleteHighlight,\n  DeletePolycloud: _core_edit_actions_DeletePolycloud__WEBPACK_IMPORTED_MODULE_23__.DeletePolycloud,\n  DeletePolyline: _core_edit_actions_DeletePolyline__WEBPACK_IMPORTED_MODULE_24__.DeletePolyline,\n  DeleteRectangle: _core_edit_actions_DeleteRectangle__WEBPACK_IMPORTED_MODULE_25__.DeleteRectangle,\n  DeleteText: _core_edit_actions_DeleteText__WEBPACK_IMPORTED_MODULE_26__.DeleteText,\n  DeleteStamp: _core_edit_actions_DeleteStamp__WEBPACK_IMPORTED_MODULE_19__.DeleteStamp,\n\n  EditAction: _core_edit_actions_EditAction__WEBPACK_IMPORTED_MODULE_27__.EditAction,\n  EditActionGroup: _core_edit_actions_EditActionGroup__WEBPACK_IMPORTED_MODULE_28__.EditActionGroup,\n  EditActionManager: _core_edit_actions_EditActionManager__WEBPACK_IMPORTED_MODULE_29__.EditActionManager,\n  EditFrame: _core_EditFrame__WEBPACK_IMPORTED_MODULE_30__.EditFrame,\n\n  EditMode: _core_edit_modes_EditMode__WEBPACK_IMPORTED_MODULE_31__.EditMode,\n  EditModeArrow: _core_edit_modes_EditModeArrow__WEBPACK_IMPORTED_MODULE_32__.EditModeArrow,\n  EditModeCallout: _core_edit_modes_EditModeCallout__WEBPACK_IMPORTED_MODULE_33__.EditModeCallout,\n  EditModeCircle: _core_edit_modes_EditModeCircle__WEBPACK_IMPORTED_MODULE_34__.EditModeCircle,\n  EditModeCloud: _core_edit_modes_EditModeCloud__WEBPACK_IMPORTED_MODULE_35__.EditModeCloud,\n  EditModeDimension: _core_edit_modes_EditModeDimension__WEBPACK_IMPORTED_MODULE_37__.EditModeDimension,\n  EditModeFreehand: _core_edit_modes_EditModeFreehand__WEBPACK_IMPORTED_MODULE_38__.EditModeFreehand,\n  EditModeHighlight: _core_edit_modes_EditModeHighlight__WEBPACK_IMPORTED_MODULE_39__.EditModeHighlight,\n  EditModePen: _core_edit_modes_EditModePen__WEBPACK_IMPORTED_MODULE_40__.EditModePen,\n  EditModePolycloud: _core_edit_modes_EditModePolycloud__WEBPACK_IMPORTED_MODULE_41__.EditModePolycloud,\n  EditModePolyline: _core_edit_modes_EditModePolyline__WEBPACK_IMPORTED_MODULE_42__.EditModePolyline,\n  EditModeRectangle: _core_edit_modes_EditModeRectangle__WEBPACK_IMPORTED_MODULE_43__.EditModeRectangle,\n  EditModeText: _core_edit_modes_EditModeText__WEBPACK_IMPORTED_MODULE_44__.EditModeText,\n  EditModeStamp: _core_edit_modes_EditModeStamp__WEBPACK_IMPORTED_MODULE_36__.EditModeStamp,\n  EditorTextInput: _core_edit_modes_EditorTextInput__WEBPACK_IMPORTED_MODULE_45__.EditorTextInput,\n\n  Markup: _core_Markup__WEBPACK_IMPORTED_MODULE_46__.Markup,\n  MarkupArrow: _core_MarkupArrow__WEBPACK_IMPORTED_MODULE_47__.MarkupArrow,\n  MarkupCallout: _core_MarkupCallout__WEBPACK_IMPORTED_MODULE_48__.MarkupCallout,\n  MarkupCircle: _core_MarkupCircle__WEBPACK_IMPORTED_MODULE_49__.MarkupCircle,\n  MarkupCloud: _core_MarkupCloud__WEBPACK_IMPORTED_MODULE_50__.MarkupCloud,\n  MarkupDimension: _core_MarkupDimension__WEBPACK_IMPORTED_MODULE_51__.MarkupDimension,\n  MarkupFreehand: _core_MarkupFreehand__WEBPACK_IMPORTED_MODULE_52__.MarkupFreehand,\n  MarkupHighlight: _core_MarkupHighlight__WEBPACK_IMPORTED_MODULE_53__.MarkupHighlight,\n  MarkupPen: _core_MarkupPen__WEBPACK_IMPORTED_MODULE_54__.MarkupPen,\n  MarkupPolycloud: _core_MarkupPolycloud__WEBPACK_IMPORTED_MODULE_55__.MarkupPolycloud,\n  MarkupPolyline: _core_MarkupPolyLine__WEBPACK_IMPORTED_MODULE_56__.MarkupPolyline,\n  MarkupRectangle: _core_MarkupRectangle__WEBPACK_IMPORTED_MODULE_57__.MarkupRectangle,\n  MarkupText: _core_MarkupText__WEBPACK_IMPORTED_MODULE_58__.MarkupText,\n  MarkupStamp: _core_MarkupStamp__WEBPACK_IMPORTED_MODULE_59__.MarkupStamp,\n  MarkupTool: _core_MarkupTool__WEBPACK_IMPORTED_MODULE_60__.MarkupTool,\n\n  MarkupsCore: _core_MarkupsCore__WEBPACK_IMPORTED_MODULE_0__.MarkupsCore,\n\n  SetArrow: _core_edit_actions_SetArrow__WEBPACK_IMPORTED_MODULE_61__.SetArrow,\n  SetCallout: _core_edit_actions_SetCallout__WEBPACK_IMPORTED_MODULE_62__.SetCallout,\n  SetCircle: _core_edit_actions_SetCircle__WEBPACK_IMPORTED_MODULE_63__.SetCircle,\n  SetCloud: _core_edit_actions_SetCloud__WEBPACK_IMPORTED_MODULE_64__.SetCloud,\n  SetDimension: _core_edit_actions_SetDimension__WEBPACK_IMPORTED_MODULE_65__.SetDimension,\n  SetFreehand: _core_edit_actions_SetFreehand__WEBPACK_IMPORTED_MODULE_66__.SetFreehand,\n  SetHighlight: _core_edit_actions_SetHighlight__WEBPACK_IMPORTED_MODULE_67__.SetHighlight,\n  SetPolycloud: _core_edit_actions_SetPolycloud__WEBPACK_IMPORTED_MODULE_68__.SetPolycloud,\n  SetPolyline: _core_edit_actions_SetPolyline__WEBPACK_IMPORTED_MODULE_69__.SetPolyline,\n  SetPosition: _core_edit_actions_SetPosition__WEBPACK_IMPORTED_MODULE_70__.SetPosition,\n  SetRectangle: _core_edit_actions_SetRectangle__WEBPACK_IMPORTED_MODULE_71__.SetRectangle,\n  SetRotation: _core_edit_actions_SetRotation__WEBPACK_IMPORTED_MODULE_72__.SetRotation,\n  SetSize: _core_edit_actions_SetSize__WEBPACK_IMPORTED_MODULE_73__.SetSize,\n  SetStyle: _core_edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_74__.SetStyle,\n  SetText: _core_edit_actions_SetText__WEBPACK_IMPORTED_MODULE_75__.SetText,\n  SetStamp: _core_edit_actions_SetStamp__WEBPACK_IMPORTED_MODULE_76__.SetStamp,\n\n\n  MarkupEvents: _core_MarkupEvents__WEBPACK_IMPORTED_MODULE_77__,\n  MarkupTypes: _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_78__,\n  theEditModeManager: _core_EditModeManager__WEBPACK_IMPORTED_MODULE_81__.theEditModeManager,\n  Utils: _core_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_79__\n};\n\n// Spread the markup types to minimize breaking changes (sigh)\nfor (var markupType in _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_78__) {\n  Core[markupType] = _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_78__[markupType];\n}\n\n// Spread the event ids to minimize breaking changes (sigh)\nfor (var eventType in _core_MarkupEvents__WEBPACK_IMPORTED_MODULE_77__) {\n  Core[eventType] = _core_MarkupEvents__WEBPACK_IMPORTED_MODULE_77__[eventType];\n}\n\n// Merge StyleUtils with utils (because those methods used to live in Utils)\nfor (var thing in _core_StyleUtils__WEBPACK_IMPORTED_MODULE_80__) {\n  if (thing in Core.Utils)\n  throw new Error(`Property ${thing} from StyleUtils already present in MarkupsCoreUtils.`);\n\n  Core.Utils[thing] = _core_StyleUtils__WEBPACK_IMPORTED_MODULE_80__[thing];\n}\n\n\nconst Gui = {\n  MarkupsGui: _gui_MarkupsGui__WEBPACK_IMPORTED_MODULE_1__.MarkupsGui\n};\n\n\n// Also map back to legacy namespace\nAutodesk.Viewing.Extensions.Markups = {\n  Core\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QzFCLElBQUlLLEtBQUssSUFBSUgsSUFBSSxDQUFDSCxLQUFLO0VBQ25CLE1BQU0sSUFBSU8sS0FBSyxDQUFFLFlBQVdELEtBQU0sdURBQXNELENBQUM7O0VBRTdGSCxJQUFJLENBQUNILEtBQUssQ0FBQ00sS0FBSyxDQUFDLEdBQUdMLDhDQUFVLENBQUNLLEtBQUssQ0FBQztBQUN6Qzs7O0FBR08sTUFBTUUsR0FBRyxHQUFHO0VBQ2Z0RixVQUFVQSx5REFBQUE7QUFDZCxDQUFDOzs7QUFHRDtBQUNBdUYsUUFBUSxDQUFDQyxPQUFPLENBQUNDLFVBQVUsQ0FBQ0MsT0FBTyxHQUFHO0VBQ2xDVDtBQUNKLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvTWFya3VwLmpzPzA2ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBNYXJrdXBzQ29yZSB9IGZyb20gJy4vY29yZS9NYXJrdXBzQ29yZSc7XG5pbXBvcnQgeyBNYXJrdXBzR3VpIH0gZnJvbSAnLi9ndWkvTWFya3Vwc0d1aSc7XG5cbmltcG9ydCB7IENsaXBib2FyZCB9IGZyb20gJy4vY29yZS9lZGl0LWNsaXBib2FyZC9DbGlwYm9hcmQnO1xuaW1wb3J0IHsgQ2xvbmVNYXJrdXAgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0Nsb25lTWFya3VwJztcbmltcG9ydCB7IENyZWF0ZUFycm93IH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVBcnJvdyc7XG5pbXBvcnQgeyBDcmVhdGVDYWxsb3V0IH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVDYWxsb3V0JztcbmltcG9ydCB7IENyZWF0ZUNpcmNsZSB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvQ3JlYXRlQ2lyY2xlJztcbmltcG9ydCB7IENyZWF0ZUNsb3VkIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVDbG91ZCc7XG5pbXBvcnQgeyBDcmVhdGVEaW1lbnNpb24gfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZURpbWVuc2lvbic7XG5pbXBvcnQgeyBDcmVhdGVGcmVlaGFuZCB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvQ3JlYXRlRnJlZWhhbmQnO1xuaW1wb3J0IHsgQ3JlYXRlSGlnaGxpZ2h0IH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVIaWdobGlnaHQnO1xuaW1wb3J0IHsgQ3JlYXRlUG9seWNsb3VkIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVQb2x5Y2xvdWQnO1xuaW1wb3J0IHsgQ3JlYXRlUG9seWxpbmUgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZVBvbHlsaW5lJztcbmltcG9ydCB7IENyZWF0ZVJlY3RhbmdsZSB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvQ3JlYXRlUmVjdGFuZ2xlJztcbmltcG9ydCB7IENyZWF0ZVRleHQgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZVRleHQnO1xuaW1wb3J0IHsgRGVsZXRlQXJyb3cgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0RlbGV0ZUFycm93JztcbmltcG9ydCB7IERlbGV0ZUNhbGxvdXQgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0RlbGV0ZUNhbGxvdXQnO1xuaW1wb3J0IHsgRGVsZXRlQ2lyY2xlIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVDaXJjbGUnO1xuaW1wb3J0IHsgRGVsZXRlQ2xvdWQgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0RlbGV0ZUNsb3VkJztcbmltcG9ydCB7IERlbGV0ZVN0YW1wIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVTdGFtcCc7XG5pbXBvcnQgeyBEZWxldGVEaW1lbnNpb24gfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0RlbGV0ZURpbWVuc2lvbic7XG5pbXBvcnQgeyBEZWxldGVGcmVlaGFuZCB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvRGVsZXRlRnJlZWhhbmQnO1xuaW1wb3J0IHsgRGVsZXRlSGlnaGxpZ2h0IH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVIaWdobGlnaHQnO1xuaW1wb3J0IHsgRGVsZXRlUG9seWNsb3VkIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVQb2x5Y2xvdWQnO1xuaW1wb3J0IHsgRGVsZXRlUG9seWxpbmUgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0RlbGV0ZVBvbHlsaW5lJztcbmltcG9ydCB7IERlbGV0ZVJlY3RhbmdsZSB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvRGVsZXRlUmVjdGFuZ2xlJztcbmltcG9ydCB7IERlbGV0ZVRleHQgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL0RlbGV0ZVRleHQnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9FZGl0QWN0aW9uJztcbmltcG9ydCB7IEVkaXRBY3Rpb25Hcm91cCB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvRWRpdEFjdGlvbkdyb3VwJztcbmltcG9ydCB7IEVkaXRBY3Rpb25NYW5hZ2VyIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9FZGl0QWN0aW9uTWFuYWdlcic7XG5pbXBvcnQgeyBFZGl0RnJhbWUgfSBmcm9tICcuL2NvcmUvRWRpdEZyYW1lJztcblxuaW1wb3J0IHsgRWRpdE1vZGUgfSBmcm9tICcuL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZSc7XG5pbXBvcnQgeyBFZGl0TW9kZUFycm93IH0gZnJvbSAnLi9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVBcnJvdyc7XG5pbXBvcnQgeyBFZGl0TW9kZUNhbGxvdXQgfSBmcm9tICcuL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZUNhbGxvdXQnO1xuaW1wb3J0IHsgRWRpdE1vZGVDaXJjbGUgfSBmcm9tICcuL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZUNpcmNsZSc7XG5pbXBvcnQgeyBFZGl0TW9kZUNsb3VkIH0gZnJvbSAnLi9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVDbG91ZCc7XG5pbXBvcnQgeyBFZGl0TW9kZVN0YW1wIH0gZnJvbSAnLi9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVTdGFtcCc7XG5pbXBvcnQgeyBFZGl0TW9kZURpbWVuc2lvbiB9IGZyb20gJy4vY29yZS9lZGl0LW1vZGVzL0VkaXRNb2RlRGltZW5zaW9uJztcbmltcG9ydCB7IEVkaXRNb2RlRnJlZWhhbmQgfSBmcm9tICcuL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZUZyZWVoYW5kJztcbmltcG9ydCB7IEVkaXRNb2RlSGlnaGxpZ2h0IH0gZnJvbSAnLi9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVIaWdobGlnaHQnO1xuaW1wb3J0IHsgRWRpdE1vZGVQZW4gfSBmcm9tICcuL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZVBlbic7XG5pbXBvcnQgeyBFZGl0TW9kZVBvbHljbG91ZCB9IGZyb20gJy4vY29yZS9lZGl0LW1vZGVzL0VkaXRNb2RlUG9seWNsb3VkJztcbmltcG9ydCB7IEVkaXRNb2RlUG9seWxpbmUgfSBmcm9tICcuL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZVBvbHlsaW5lJztcbmltcG9ydCB7IEVkaXRNb2RlUmVjdGFuZ2xlIH0gZnJvbSAnLi9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVSZWN0YW5nbGUnO1xuaW1wb3J0IHsgRWRpdE1vZGVUZXh0IH0gZnJvbSAnLi9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVUZXh0JztcbmltcG9ydCB7IEVkaXRvclRleHRJbnB1dCB9IGZyb20gJy4vY29yZS9lZGl0LW1vZGVzL0VkaXRvclRleHRJbnB1dCc7XG5cblxuaW1wb3J0IHsgTWFya3VwIH0gZnJvbSAnLi9jb3JlL01hcmt1cCc7XG5pbXBvcnQgeyBNYXJrdXBBcnJvdyB9IGZyb20gJy4vY29yZS9NYXJrdXBBcnJvdyc7XG5pbXBvcnQgeyBNYXJrdXBDYWxsb3V0IH0gZnJvbSAnLi9jb3JlL01hcmt1cENhbGxvdXQnO1xuaW1wb3J0IHsgTWFya3VwQ2lyY2xlIH0gZnJvbSAnLi9jb3JlL01hcmt1cENpcmNsZSc7XG5pbXBvcnQgeyBNYXJrdXBDbG91ZCB9IGZyb20gJy4vY29yZS9NYXJrdXBDbG91ZCc7XG5pbXBvcnQgeyBNYXJrdXBEaW1lbnNpb24gfSBmcm9tICcuL2NvcmUvTWFya3VwRGltZW5zaW9uJztcbmltcG9ydCB7IE1hcmt1cEZyZWVoYW5kIH0gZnJvbSAnLi9jb3JlL01hcmt1cEZyZWVoYW5kJztcbmltcG9ydCB7IE1hcmt1cEhpZ2hsaWdodCB9IGZyb20gJy4vY29yZS9NYXJrdXBIaWdobGlnaHQnO1xuaW1wb3J0IHsgTWFya3VwUGVuIH0gZnJvbSAnLi9jb3JlL01hcmt1cFBlbic7XG5pbXBvcnQgeyBNYXJrdXBQb2x5Y2xvdWQgfSBmcm9tICcuL2NvcmUvTWFya3VwUG9seWNsb3VkJztcbmltcG9ydCB7IE1hcmt1cFBvbHlsaW5lIH0gZnJvbSAnLi9jb3JlL01hcmt1cFBvbHlMaW5lJztcbmltcG9ydCB7IE1hcmt1cFJlY3RhbmdsZSB9IGZyb20gJy4vY29yZS9NYXJrdXBSZWN0YW5nbGUnO1xuaW1wb3J0IHsgTWFya3VwVGV4dCB9IGZyb20gJy4vY29yZS9NYXJrdXBUZXh0JztcbmltcG9ydCB7IE1hcmt1cFN0YW1wIH0gZnJvbSAnLi9jb3JlL01hcmt1cFN0YW1wJztcbmltcG9ydCB7IE1hcmt1cFRvb2wgfSBmcm9tICcuL2NvcmUvTWFya3VwVG9vbCc7XG5cbmltcG9ydCB7IFNldEFycm93IH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9TZXRBcnJvdyc7XG5pbXBvcnQgeyBTZXRDYWxsb3V0IH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9TZXRDYWxsb3V0JztcbmltcG9ydCB7IFNldENpcmNsZSB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvU2V0Q2lyY2xlJztcbmltcG9ydCB7IFNldENsb3VkIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9TZXRDbG91ZCc7XG5pbXBvcnQgeyBTZXREaW1lbnNpb24gfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL1NldERpbWVuc2lvbic7XG5pbXBvcnQgeyBTZXRGcmVlaGFuZCB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvU2V0RnJlZWhhbmQnO1xuaW1wb3J0IHsgU2V0SGlnaGxpZ2h0IH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9TZXRIaWdobGlnaHQnO1xuaW1wb3J0IHsgU2V0UG9seWNsb3VkIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9TZXRQb2x5Y2xvdWQnO1xuaW1wb3J0IHsgU2V0UG9seWxpbmUgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL1NldFBvbHlsaW5lJztcbmltcG9ydCB7IFNldFBvc2l0aW9uIH0gZnJvbSAnLi9jb3JlL2VkaXQtYWN0aW9ucy9TZXRQb3NpdGlvbic7XG5pbXBvcnQgeyBTZXRSZWN0YW5nbGUgfSBmcm9tICcuL2NvcmUvZWRpdC1hY3Rpb25zL1NldFJlY3RhbmdsZSc7XG5pbXBvcnQgeyBTZXRSb3RhdGlvbiB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvU2V0Um90YXRpb24nO1xuaW1wb3J0IHsgU2V0U2l6ZSB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvU2V0U2l6ZSc7XG5pbXBvcnQgeyBTZXRTdHlsZSB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvU2V0U3R5bGUnO1xuaW1wb3J0IHsgU2V0VGV4dCB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvU2V0VGV4dCc7XG5pbXBvcnQgeyBTZXRTdGFtcCB9IGZyb20gJy4vY29yZS9lZGl0LWFjdGlvbnMvU2V0U3RhbXAnO1xuXG5cbmltcG9ydCAqIGFzIE1hcmt1cEV2ZW50cyBmcm9tICcuL2NvcmUvTWFya3VwRXZlbnRzJztcbmltcG9ydCAqIGFzIE1hcmt1cFR5cGVzIGZyb20gJy4vY29yZS9NYXJrdXBUeXBlcyc7XG5cbmltcG9ydCAqIGFzIFV0aWxzIGZyb20gJy4vY29yZS9NYXJrdXBzQ29yZVV0aWxzJztcbmltcG9ydCAqIGFzIFN0eWxlVXRpbHMgZnJvbSAnLi9jb3JlL1N0eWxlVXRpbHMnO1xuXG5pbXBvcnQgeyB0aGVFZGl0TW9kZU1hbmFnZXIgfSBmcm9tICcuL2NvcmUvRWRpdE1vZGVNYW5hZ2VyJztcblxuLy8gQWxsIHRoZSB0aGluZ3NcbmV4cG9ydCBjb25zdCBDb3JlID0ge1xuICAgIENsaXBib2FyZCxcbiAgICBDbG9uZU1hcmt1cCxcbiAgICBDcmVhdGVBcnJvdyxcbiAgICBDcmVhdGVDYWxsb3V0LFxuICAgIENyZWF0ZUNpcmNsZSxcbiAgICBDcmVhdGVDbG91ZCxcbiAgICBDcmVhdGVEaW1lbnNpb24sXG4gICAgQ3JlYXRlRnJlZWhhbmQsXG4gICAgQ3JlYXRlSGlnaGxpZ2h0LFxuICAgIENyZWF0ZVBvbHljbG91ZCxcbiAgICBDcmVhdGVQb2x5bGluZSxcbiAgICBDcmVhdGVSZWN0YW5nbGUsXG4gICAgQ3JlYXRlVGV4dCxcbiAgICBEZWxldGVBcnJvdyxcbiAgICBEZWxldGVDYWxsb3V0LFxuICAgIERlbGV0ZUNpcmNsZSxcbiAgICBEZWxldGVDbG91ZCxcbiAgICBEZWxldGVEaW1lbnNpb24sXG4gICAgRGVsZXRlRnJlZWhhbmQsXG4gICAgRGVsZXRlSGlnaGxpZ2h0LFxuICAgIERlbGV0ZVBvbHljbG91ZCxcbiAgICBEZWxldGVQb2x5bGluZSxcbiAgICBEZWxldGVSZWN0YW5nbGUsXG4gICAgRGVsZXRlVGV4dCxcbiAgICBEZWxldGVTdGFtcCxcblxuICAgIEVkaXRBY3Rpb24sXG4gICAgRWRpdEFjdGlvbkdyb3VwLFxuICAgIEVkaXRBY3Rpb25NYW5hZ2VyLFxuICAgIEVkaXRGcmFtZSxcblxuICAgIEVkaXRNb2RlLFxuICAgIEVkaXRNb2RlQXJyb3csXG4gICAgRWRpdE1vZGVDYWxsb3V0LFxuICAgIEVkaXRNb2RlQ2lyY2xlLFxuICAgIEVkaXRNb2RlQ2xvdWQsXG4gICAgRWRpdE1vZGVEaW1lbnNpb24sXG4gICAgRWRpdE1vZGVGcmVlaGFuZCxcbiAgICBFZGl0TW9kZUhpZ2hsaWdodCxcbiAgICBFZGl0TW9kZVBlbixcbiAgICBFZGl0TW9kZVBvbHljbG91ZCxcbiAgICBFZGl0TW9kZVBvbHlsaW5lLFxuICAgIEVkaXRNb2RlUmVjdGFuZ2xlLFxuICAgIEVkaXRNb2RlVGV4dCxcbiAgICBFZGl0TW9kZVN0YW1wLFxuICAgIEVkaXRvclRleHRJbnB1dCxcblxuICAgIE1hcmt1cCxcbiAgICBNYXJrdXBBcnJvdyxcbiAgICBNYXJrdXBDYWxsb3V0LFxuICAgIE1hcmt1cENpcmNsZSxcbiAgICBNYXJrdXBDbG91ZCxcbiAgICBNYXJrdXBEaW1lbnNpb24sXG4gICAgTWFya3VwRnJlZWhhbmQsXG4gICAgTWFya3VwSGlnaGxpZ2h0LFxuICAgIE1hcmt1cFBlbixcbiAgICBNYXJrdXBQb2x5Y2xvdWQsXG4gICAgTWFya3VwUG9seWxpbmUsXG4gICAgTWFya3VwUmVjdGFuZ2xlLFxuICAgIE1hcmt1cFRleHQsXG4gICAgTWFya3VwU3RhbXAsXG4gICAgTWFya3VwVG9vbCxcblxuICAgIE1hcmt1cHNDb3JlLFxuXG4gICAgU2V0QXJyb3csXG4gICAgU2V0Q2FsbG91dCxcbiAgICBTZXRDaXJjbGUsXG4gICAgU2V0Q2xvdWQsXG4gICAgU2V0RGltZW5zaW9uLFxuICAgIFNldEZyZWVoYW5kLFxuICAgIFNldEhpZ2hsaWdodCxcbiAgICBTZXRQb2x5Y2xvdWQsXG4gICAgU2V0UG9seWxpbmUsXG4gICAgU2V0UG9zaXRpb24sXG4gICAgU2V0UmVjdGFuZ2xlLFxuICAgIFNldFJvdGF0aW9uLFxuICAgIFNldFNpemUsXG4gICAgU2V0U3R5bGUsXG4gICAgU2V0VGV4dCxcbiAgICBTZXRTdGFtcCxcblxuXG4gICAgTWFya3VwRXZlbnRzLFxuICAgIE1hcmt1cFR5cGVzLFxuICAgIHRoZUVkaXRNb2RlTWFuYWdlcixcbiAgICBVdGlscyxcbn07XG5cbi8vIFNwcmVhZCB0aGUgbWFya3VwIHR5cGVzIHRvIG1pbmltaXplIGJyZWFraW5nIGNoYW5nZXMgKHNpZ2gpXG5mb3IgKHZhciBtYXJrdXBUeXBlIGluIE1hcmt1cFR5cGVzKSB7XG4gICAgQ29yZVttYXJrdXBUeXBlXSA9IE1hcmt1cFR5cGVzW21hcmt1cFR5cGVdO1xufVxuXG4vLyBTcHJlYWQgdGhlIGV2ZW50IGlkcyB0byBtaW5pbWl6ZSBicmVha2luZyBjaGFuZ2VzIChzaWdoKVxuZm9yICh2YXIgZXZlbnRUeXBlIGluIE1hcmt1cEV2ZW50cykge1xuICAgIENvcmVbZXZlbnRUeXBlXSA9IE1hcmt1cEV2ZW50c1tldmVudFR5cGVdO1xufVxuXG4vLyBNZXJnZSBTdHlsZVV0aWxzIHdpdGggdXRpbHMgKGJlY2F1c2UgdGhvc2UgbWV0aG9kcyB1c2VkIHRvIGxpdmUgaW4gVXRpbHMpXG5mb3IgKHZhciB0aGluZyBpbiBTdHlsZVV0aWxzKSB7XG4gICAgaWYgKHRoaW5nIGluIENvcmUuVXRpbHMpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUHJvcGVydHkgJHt0aGluZ30gZnJvbSBTdHlsZVV0aWxzIGFscmVhZHkgcHJlc2VudCBpbiBNYXJrdXBzQ29yZVV0aWxzLmApO1xuXG4gICAgQ29yZS5VdGlsc1t0aGluZ10gPSBTdHlsZVV0aWxzW3RoaW5nXTtcbn1cblxuXG5leHBvcnQgY29uc3QgR3VpID0ge1xuICAgIE1hcmt1cHNHdWlcbn07XG5cblxuLy8gQWxzbyBtYXAgYmFjayB0byBsZWdhY3kgbmFtZXNwYWNlXG5BdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3VwcyA9IHtcbiAgICBDb3JlXG59O1xuIl0sIm5hbWVzIjpbIk1hcmt1cHNDb3JlIiwiTWFya3Vwc0d1aSIsIkNsaXBib2FyZCIsIkNsb25lTWFya3VwIiwiQ3JlYXRlQXJyb3ciLCJDcmVhdGVDYWxsb3V0IiwiQ3JlYXRlQ2lyY2xlIiwiQ3JlYXRlQ2xvdWQiLCJDcmVhdGVEaW1lbnNpb24iLCJDcmVhdGVGcmVlaGFuZCIsIkNyZWF0ZUhpZ2hsaWdodCIsIkNyZWF0ZVBvbHljbG91ZCIsIkNyZWF0ZVBvbHlsaW5lIiwiQ3JlYXRlUmVjdGFuZ2xlIiwiQ3JlYXRlVGV4dCIsIkRlbGV0ZUFycm93IiwiRGVsZXRlQ2FsbG91dCIsIkRlbGV0ZUNpcmNsZSIsIkRlbGV0ZUNsb3VkIiwiRGVsZXRlU3RhbXAiLCJEZWxldGVEaW1lbnNpb24iLCJEZWxldGVGcmVlaGFuZCIsIkRlbGV0ZUhpZ2hsaWdodCIsIkRlbGV0ZVBvbHljbG91ZCIsIkRlbGV0ZVBvbHlsaW5lIiwiRGVsZXRlUmVjdGFuZ2xlIiwiRGVsZXRlVGV4dCIsIkVkaXRBY3Rpb24iLCJFZGl0QWN0aW9uR3JvdXAiLCJFZGl0QWN0aW9uTWFuYWdlciIsIkVkaXRGcmFtZSIsIkVkaXRNb2RlIiwiRWRpdE1vZGVBcnJvdyIsIkVkaXRNb2RlQ2FsbG91dCIsIkVkaXRNb2RlQ2lyY2xlIiwiRWRpdE1vZGVDbG91ZCIsIkVkaXRNb2RlU3RhbXAiLCJFZGl0TW9kZURpbWVuc2lvbiIsIkVkaXRNb2RlRnJlZWhhbmQiLCJFZGl0TW9kZUhpZ2hsaWdodCIsIkVkaXRNb2RlUGVuIiwiRWRpdE1vZGVQb2x5Y2xvdWQiLCJFZGl0TW9kZVBvbHlsaW5lIiwiRWRpdE1vZGVSZWN0YW5nbGUiLCJFZGl0TW9kZVRleHQiLCJFZGl0b3JUZXh0SW5wdXQiLCJNYXJrdXAiLCJNYXJrdXBBcnJvdyIsIk1hcmt1cENhbGxvdXQiLCJNYXJrdXBDaXJjbGUiLCJNYXJrdXBDbG91ZCIsIk1hcmt1cERpbWVuc2lvbiIsIk1hcmt1cEZyZWVoYW5kIiwiTWFya3VwSGlnaGxpZ2h0IiwiTWFya3VwUGVuIiwiTWFya3VwUG9seWNsb3VkIiwiTWFya3VwUG9seWxpbmUiLCJNYXJrdXBSZWN0YW5nbGUiLCJNYXJrdXBUZXh0IiwiTWFya3VwU3RhbXAiLCJNYXJrdXBUb29sIiwiU2V0QXJyb3ciLCJTZXRDYWxsb3V0IiwiU2V0Q2lyY2xlIiwiU2V0Q2xvdWQiLCJTZXREaW1lbnNpb24iLCJTZXRGcmVlaGFuZCIsIlNldEhpZ2hsaWdodCIsIlNldFBvbHljbG91ZCIsIlNldFBvbHlsaW5lIiwiU2V0UG9zaXRpb24iLCJTZXRSZWN0YW5nbGUiLCJTZXRSb3RhdGlvbiIsIlNldFNpemUiLCJTZXRTdHlsZSIsIlNldFRleHQiLCJTZXRTdGFtcCIsIk1hcmt1cEV2ZW50cyIsIk1hcmt1cFR5cGVzIiwiVXRpbHMiLCJTdHlsZVV0aWxzIiwidGhlRWRpdE1vZGVNYW5hZ2VyIiwiQ29yZSIsIm1hcmt1cFR5cGUiLCJldmVudFR5cGUiLCJ0aGluZyIsIkVycm9yIiwiR3VpIiwiQXV0b2Rlc2siLCJWaWV3aW5nIiwiRXh0ZW5zaW9ucyIsIk1hcmt1cHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/Markup.js\n");

/***/ }),

/***/ "./extensions/Markup/core/DomElementStyle.js":
/*!***************************************************!*\
  !*** ./extensions/Markup/core/DomElementStyle.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DomElementStyle: () => (/* binding */ DomElementStyle)\n/* harmony export */ });\n\n\n/**\n * Curring object which generate a string that can be used\n * as a Dom element's 'style' value.\n *\n * @constructor\n */\nfunction DomElementStyle() {\n\n  this.reset();\n}\n\n/*\n * Constants\n */\nvar BROWSER_PREFIXES = ['-ms-', '-webkit-', '-moz-', '-o-'];\n\nvar proto = DomElementStyle.prototype;\n\nproto.reset = function () {\n\n  this.attributes = {};\n  this.dirty = false;\n  this.styleString = '';\n\n  return this;\n};\n\n/**\n *\n * @param {String} key\n * @param {*} value\n * @param {Object} [options]\n * @param {Boolean} [options.allBrowsers] - Whether to add browser prefix to key\n * @returns {Autodesk.Viewing.Extensions.Markups.Core.Utils.DomeElemStyle}\n */\nproto.setAttribute = function (key, value, options) {\n\n  this.attributes[key] = value;\n\n  if (options && options.allBrowsers) {\n    var that = this;\n    BROWSER_PREFIXES.forEach(function (prefix) {\n      that.attributes[prefix + key] = value;\n    });\n  }\n  this.dirty = true; // Could be optimized\n  return this;\n};\n\n/**\n * Removes one or more attributes\n * @param {String|Array} key - Key or Keys to be removed\n * @returns {Autodesk.Viewing.Extensions.Markups.Core.Utils.DomElemStyle} this\n */\nproto.removeAttribute = function (key) {\n\n  if (!Array.isArray(key)) {\n    key = [key];\n  }\n\n  var self = this;\n  key.forEach(function (k) {\n    if (k in self.attributes) {\n      delete self.attributes[k];\n      self.dirty = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Gets the String representation of this style object\n * @returns {string}\n */\nproto.getStyleString = function () {\n\n  if (this.dirty) {\n    this.styleString = generateStyle(this.attributes);\n    this.dirty = false;\n  }\n  return this.styleString;\n};\n\n/**\n * Clones the current Object\n *\n * @returns {Autodesk.Viewing.Extensions.Markups.Core.Utils.DomElemStyle}\n */\nproto.clone = function () {\n\n  var clone = new DomElementStyle();\n  var attributes = this.attributes;\n\n  for (var key in attributes) {\n    clone.setAttribute(key, attributes[key]);\n  }\n  return clone;\n};\n\n/**\n * Generates the style value string. Non mutable function.\n *\n * @param {Object} attributes\n * @private\n */\nfunction generateStyle(attributes) {\n\n  var elements = [];\n  for (var key in attributes) {\n    var val = attributes[key];\n    elements.push(key);\n    elements.push(':');\n    elements.push(val);\n    elements.push('; ');\n  }\n  return elements.join('');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL0RvbUVsZW1lbnRTdHlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRVQ7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0EsZUFBZUEsQ0FBQSxFQUFHOztFQUU5QixJQUFJLENBQUNDLEtBQUssQ0FBQyxDQUFDO0FBQ2hCOztBQUVBO0FBQ0o7QUFDQTtBQUNJLElBQUlDLGdCQUFnQixHQUFHLENBQUMsTUFBTSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDOztBQUUzRCxJQUFJQyxLQUFLLEdBQUdILGVBQWUsQ0FBQ0ksU0FBUzs7QUFFckNELEtBQUssQ0FBQ0YsS0FBSyxHQUFHLFlBQVc7O0VBRXJCLElBQUksQ0FBQ0ksVUFBVSxHQUFHLENBQUMsQ0FBQztFQUNwQixJQUFJLENBQUNDLEtBQUssR0FBRyxLQUFLO0VBQ2xCLElBQUksQ0FBQ0MsV0FBVyxHQUFHLEVBQUU7O0VBRXJCLE9BQU8sSUFBSTtBQUNmLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNJSixLQUFLLENBQUNLLFlBQVksR0FBRyxVQUFTQyxHQUFHLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFOztFQUUvQyxJQUFJLENBQUNOLFVBQVUsQ0FBQ0ksR0FBRyxDQUFDLEdBQUdDLEtBQUs7O0VBRTVCLElBQUlDLE9BQU8sSUFBSUEsT0FBTyxDQUFDQyxXQUFXLEVBQUU7SUFDaEMsSUFBSUMsSUFBSSxHQUFHLElBQUk7SUFDZlgsZ0JBQWdCLENBQUNZLE9BQU8sQ0FBQyxVQUFTQyxNQUFNLEVBQUM7TUFDckNGLElBQUksQ0FBQ1IsVUFBVSxDQUFFVSxNQUFNLEdBQUNOLEdBQUcsQ0FBRSxHQUFHQyxLQUFLO0lBQ3pDLENBQUMsQ0FBQztFQUNOO0VBQ0EsSUFBSSxDQUFDSixLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUM7RUFDbkIsT0FBTyxJQUFJO0FBQ2YsQ0FBQzs7QUFFRDtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0lILEtBQUssQ0FBQ2EsZUFBZSxHQUFHLFVBQVNQLEdBQUcsRUFBRTs7RUFFbEMsSUFBSSxDQUFDUSxLQUFLLENBQUNDLE9BQU8sQ0FBQ1QsR0FBRyxDQUFDLEVBQUU7SUFDckJBLEdBQUcsR0FBRyxDQUFDQSxHQUFHLENBQUM7RUFDZjs7RUFFQSxJQUFJVSxJQUFJLEdBQUcsSUFBSTtFQUNmVixHQUFHLENBQUNLLE9BQU8sQ0FBQyxVQUFTTSxDQUFDLEVBQUU7SUFDcEIsSUFBSUEsQ0FBQyxJQUFJRCxJQUFJLENBQUNkLFVBQVUsRUFBRTtNQUN0QixPQUFPYyxJQUFJLENBQUNkLFVBQVUsQ0FBQ2UsQ0FBQyxDQUFDO01BQ3pCRCxJQUFJLENBQUNiLEtBQUssR0FBRyxJQUFJO0lBQ3JCO0VBQ0osQ0FBQyxDQUFDO0VBQ0YsT0FBTyxJQUFJO0FBQ2YsQ0FBQzs7QUFFRDtBQUNKO0FBQ0E7QUFDQTtBQUNJSCxLQUFLLENBQUNrQixjQUFjLEdBQUcsWUFBVzs7RUFFOUIsSUFBSSxJQUFJLENBQUNmLEtBQUssRUFBRTtJQUNaLElBQUksQ0FBQ0MsV0FBVyxHQUFHZSxhQUFhLENBQUMsSUFBSSxDQUFDakIsVUFBVSxDQUFDO0lBQ2pELElBQUksQ0FBQ0MsS0FBSyxHQUFHLEtBQUs7RUFDdEI7RUFDQSxPQUFPLElBQUksQ0FBQ0MsV0FBVztBQUMzQixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDSUosS0FBSyxDQUFDb0IsS0FBSyxHQUFHLFlBQVc7O0VBRXJCLElBQUlBLEtBQUssR0FBRyxJQUFJdkIsZUFBZSxDQUFDLENBQUM7RUFDakMsSUFBSUssVUFBVSxHQUFHLElBQUksQ0FBQ0EsVUFBVTs7RUFFaEMsS0FBSyxJQUFJSSxHQUFHLElBQUlKLFVBQVUsRUFBRTtJQUN4QmtCLEtBQUssQ0FBQ2YsWUFBWSxDQUFDQyxHQUFHLEVBQUVKLFVBQVUsQ0FBQ0ksR0FBRyxDQUFDLENBQUM7RUFDNUM7RUFDQSxPQUFPYyxLQUFLO0FBQ2hCLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0ksU0FBU0QsYUFBYUEsQ0FBQ2pCLFVBQVUsRUFBRTs7RUFFL0IsSUFBSW1CLFFBQVEsR0FBRyxFQUFFO0VBQ2pCLEtBQUssSUFBSWYsR0FBRyxJQUFJSixVQUFVLEVBQUU7SUFDeEIsSUFBSW9CLEdBQUcsR0FBR3BCLFVBQVUsQ0FBQ0ksR0FBRyxDQUFDO0lBQ3pCZSxRQUFRLENBQUNFLElBQUksQ0FBQ2pCLEdBQUcsQ0FBQztJQUNsQmUsUUFBUSxDQUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ2xCRixRQUFRLENBQUNFLElBQUksQ0FBQ0QsR0FBRyxDQUFDO0lBQ2xCRCxRQUFRLENBQUNFLElBQUksQ0FBQyxJQUFJLENBQUM7RUFDdkI7RUFDQSxPQUFPRixRQUFRLENBQUNHLElBQUksQ0FBQyxFQUFFLENBQUM7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9Eb21FbGVtZW50U3R5bGUuanM/ODFiNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbiAgICAvKipcbiAgICAgKiBDdXJyaW5nIG9iamVjdCB3aGljaCBnZW5lcmF0ZSBhIHN0cmluZyB0aGF0IGNhbiBiZSB1c2VkXG4gICAgICogYXMgYSBEb20gZWxlbWVudCdzICdzdHlsZScgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gRG9tRWxlbWVudFN0eWxlKCkge1xuXG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG5cbiAgICAvKlxuICAgICAqIENvbnN0YW50c1xuICAgICAqL1xuICAgIHZhciBCUk9XU0VSX1BSRUZJWEVTID0gWyctbXMtJywgJy13ZWJraXQtJywgJy1tb3otJywgJy1vLSddO1xuXG4gICAgdmFyIHByb3RvID0gRG9tRWxlbWVudFN0eWxlLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlc2V0ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzID0ge307XG4gICAgICAgIHRoaXMuZGlydHkgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zdHlsZVN0cmluZyA9ICcnO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBrZXlcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlXG4gICAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuYWxsQnJvd3NlcnNdIC0gV2hldGhlciB0byBhZGQgYnJvd3NlciBwcmVmaXggdG8ga2V5XG4gICAgICogQHJldHVybnMge0F1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuVXRpbHMuRG9tZUVsZW1TdHlsZX1cbiAgICAgKi9cbiAgICBwcm90by5zZXRBdHRyaWJ1dGUgPSBmdW5jdGlvbihrZXksIHZhbHVlLCBvcHRpb25zKSB7XG5cbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW2tleV0gPSB2YWx1ZTtcblxuICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmFsbEJyb3dzZXJzKSB7XG4gICAgICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgICAgICBCUk9XU0VSX1BSRUZJWEVTLmZvckVhY2goZnVuY3Rpb24ocHJlZml4KXtcbiAgICAgICAgICAgICAgICB0aGF0LmF0dHJpYnV0ZXNbKHByZWZpeCtrZXkpXSA9IHZhbHVlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kaXJ0eSA9IHRydWU7IC8vIENvdWxkIGJlIG9wdGltaXplZFxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBvbmUgb3IgbW9yZSBhdHRyaWJ1dGVzXG4gICAgICogQHBhcmFtIHtTdHJpbmd8QXJyYXl9IGtleSAtIEtleSBvciBLZXlzIHRvIGJlIHJlbW92ZWRcbiAgICAgKiBAcmV0dXJucyB7QXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5VdGlscy5Eb21FbGVtU3R5bGV9IHRoaXNcbiAgICAgKi9cbiAgICBwcm90by5yZW1vdmVBdHRyaWJ1dGUgPSBmdW5jdGlvbihrZXkpIHtcblxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoa2V5KSkge1xuICAgICAgICAgICAga2V5ID0gW2tleV07XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIGtleS5mb3JFYWNoKGZ1bmN0aW9uKGspIHtcbiAgICAgICAgICAgIGlmIChrIGluIHNlbGYuYXR0cmlidXRlcykge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBzZWxmLmF0dHJpYnV0ZXNba107XG4gICAgICAgICAgICAgICAgc2VsZi5kaXJ0eSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgc3R5bGUgb2JqZWN0XG4gICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgKi9cbiAgICBwcm90by5nZXRTdHlsZVN0cmluZyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGlmICh0aGlzLmRpcnR5KSB7XG4gICAgICAgICAgICB0aGlzLnN0eWxlU3RyaW5nID0gZ2VuZXJhdGVTdHlsZSh0aGlzLmF0dHJpYnV0ZXMpO1xuICAgICAgICAgICAgdGhpcy5kaXJ0eSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnN0eWxlU3RyaW5nO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDbG9uZXMgdGhlIGN1cnJlbnQgT2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7QXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5VdGlscy5Eb21FbGVtU3R5bGV9XG4gICAgICovXG4gICAgcHJvdG8uY2xvbmUgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgY2xvbmUgPSBuZXcgRG9tRWxlbWVudFN0eWxlKCk7XG4gICAgICAgIHZhciBhdHRyaWJ1dGVzID0gdGhpcy5hdHRyaWJ1dGVzO1xuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICBjbG9uZS5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjbG9uZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIHRoZSBzdHlsZSB2YWx1ZSBzdHJpbmcuIE5vbiBtdXRhYmxlIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGF0dHJpYnV0ZXNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdlbmVyYXRlU3R5bGUoYXR0cmlidXRlcykge1xuXG4gICAgICAgIHZhciBlbGVtZW50cyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gYXR0cmlidXRlcykge1xuICAgICAgICAgICAgdmFyIHZhbCA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgICAgIGVsZW1lbnRzLnB1c2goa2V5KTtcbiAgICAgICAgICAgIGVsZW1lbnRzLnB1c2goJzonKTtcbiAgICAgICAgICAgIGVsZW1lbnRzLnB1c2godmFsKTtcbiAgICAgICAgICAgIGVsZW1lbnRzLnB1c2goJzsgJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVsZW1lbnRzLmpvaW4oJycpO1xuICAgIH1cbiJdLCJuYW1lcyI6WyJEb21FbGVtZW50U3R5bGUiLCJyZXNldCIsIkJST1dTRVJfUFJFRklYRVMiLCJwcm90byIsInByb3RvdHlwZSIsImF0dHJpYnV0ZXMiLCJkaXJ0eSIsInN0eWxlU3RyaW5nIiwic2V0QXR0cmlidXRlIiwia2V5IiwidmFsdWUiLCJvcHRpb25zIiwiYWxsQnJvd3NlcnMiLCJ0aGF0IiwiZm9yRWFjaCIsInByZWZpeCIsInJlbW92ZUF0dHJpYnV0ZSIsIkFycmF5IiwiaXNBcnJheSIsInNlbGYiLCJrIiwiZ2V0U3R5bGVTdHJpbmciLCJnZW5lcmF0ZVN0eWxlIiwiY2xvbmUiLCJlbGVtZW50cyIsInZhbCIsInB1c2giLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/DomElementStyle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/EditFrame.js":
/*!*********************************************!*\
  !*** ./extensions/Markup/core/EditFrame.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditFrame: () => (/* binding */ EditFrame)\n/* harmony export */ });\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _edit_actions_CloneMarkup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./edit-actions/CloneMarkup */ \"./extensions/Markup/core/edit-actions/CloneMarkup.js\");\n/* harmony import */ var _edit_actions_SetPosition__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./edit-actions/SetPosition */ \"./extensions/Markup/core/edit-actions/SetPosition.js\");\n/* harmony import */ var _edit_actions_SetSize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-actions/SetSize */ \"./extensions/Markup/core/edit-actions/SetSize.js\");\n/* harmony import */ var _edit_actions_SetRotation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edit-actions/SetRotation */ \"./extensions/Markup/core/edit-actions/SetRotation.js\");\n\n\n\n\n\n\n\n\n\nvar av = Autodesk.Viewing;\nvar avp = Autodesk.Viewing.Private;\n\n/**\n * A component to handle the selection of markups.\n *\n *\n *      Sample\n *\n *      var containingDiv = document.getElementById('containingDiv3d-app-wrapper');\n *      var selectionComponent = new EditFrame(containingDiv);\n *      selectionComponent.setSelection(100, 100, 300, 150, 0);\n *\n * @param {HTMLElement} containingDiv The container where the selection layer will live.\n * @param {Object} editor\n * @constructor\n */\nfunction EditFrame(containingDiv, editor) {\n\n  this.containingDiv = containingDiv;\n  this.editor = editor;\n  this.setGlobalManager(this.editor.viewer.globalManager);\n  this.selectionLayer = createSelectionLayer.bind(this)();\n\n  this.frameMargin = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.EDIT_FRAME_DEFAULT_MARGIN;\n\n  this.selection = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    rotation: 0,\n    element: null,\n    active: false,\n    dragging: false,\n    resizing: false,\n    //a dictionary of all the drag points\n    //the key for each drag point will be its cardinal/ordinal direction\n    handle: {}\n  };\n\n  createSelectorBox.bind(this)();\n\n  if ((0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.isTouchDevice)()) {\n    this.hammer = new av.Hammer.Manager(this.selectionLayer, {\n      recognizers: [\n      av.GestureRecognizers.drag,\n      av.GestureRecognizers.doubletap,\n      av.GestureRecognizers.doubletap2,\n      av.GestureRecognizers.pan,\n      av.GestureRecognizers.pinch],\n\n      handlePointerEventMouse: false,\n      inputClass: av.Hammer.TouchInput\n    });\n\n    this.onHammerDragBinded = this.onHammerDrag.bind(this);\n    this.onHammerDoubleTapBinded = this.onHammerDoubleTap.bind(this);\n    this.onTouchPanBinded = this.onTouchPan.bind(this);\n    this.onTouchPinchBinded = this.onTouchPinch.bind(this);\n\n    this.hammer.on(\"dragstart dragmove dragend\", this.onHammerDragBinded);\n    this.hammer.on(\"doubletap\", this.onHammerDoubleTapBinded);\n    this.hammer.on(\"doubletap2\", this.onHammerDoubleTapBinded);\n    this.hammer.on(\"panstart panmove panend\", this.onTouchPanBinded);\n    this.hammer.on(\"pinchstart pinchmove pinchend\", this.onTouchPinchBinded);\n\n    this.hammer.get('drag').requireFailure('pinch');\n    this.hammer.get('drag').requireFailure('pan');\n  }\n\n  handleSelectionBoxDragging.bind(this)();\n  handleSelectionBoxResizing.bind(this)();\n  handleSelectionDoubleClick.bind(this)();\n  handleSelectionBoxRotating.bind(this)();\n\n  //add the selection into the container given to us\n  this.containingDiv.appendChild(this.selectionLayer);\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.addTraitEventDispatcher)(this);\n}\n\nav.GlobalManagerMixin.call(EditFrame.prototype);\nvar proto = EditFrame.prototype;\n\nproto.unload = function () {\n\n  this.containingDiv.removeChild(this.selectionLayer);\n  this.selectionLayer = null;\n};\n/**\n * Draws a selection box with the given attributes\n *\n * @param {number} x - The x coordinate to place the selection box\n * @param {number} y - The y coordinate to place the selection box\n * @param {number} width - The width of the selection box\n * @param {number} height - The height of the selection box\n * @param {number} rotation - The amount of degrees to rotate the selection box\n */\nproto.setSelection = function (x, y, width, height, rotation) {\n\n  var margin = this.frameMargin;\n  var doubleMargin = margin * 2;\n\n  updateSelectorBoxDimensions.bind(this)(width + doubleMargin, height + doubleMargin);\n  updateSelectorBoxPosition.bind(this)(x - margin, y - margin, rotation);\n  updateSelectionBoxState.bind(this)(true); //activate the selection box\n  this.selectionLayer.style.visibility = 'visible';\n};\n\n/**\n * Displays the selection box based on the position, dimension, and rotation of a given markup\n *\n * @param {Autodesk.Viewing.Extensions.Markups.Core.Markup} markup - the markup that should appear as selected\n */\nproto.setMarkup = function (markup) {\n\n  this.hammer && this.hammer.set({ enable: markup !== null });\n  this.markup = markup;\n\n  updateSelectionBoxState.bind(this)(false);\n\n  if (markup) {\n    var boundingBox = markup.getBoundingRect();\n    var rotation = markup.getRotation();\n    this.frameMargin = boundingBox.margin !== undefined ? boundingBox.margin : _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.EDIT_FRAME_DEFAULT_MARGIN;\n\n    this.setSelection(boundingBox.x, boundingBox.y, boundingBox.width, boundingBox.height, rotation);\n\n    this.enableResizeHandles();\n    this.enableRotationHandle();\n\n    if (markup.preventReposition) {\n      this.selectionLayer.firstChild.style.cursor = '';\n    } else\n    {\n      this.selectionLayer.firstChild.style.cursor = 'move';\n    }\n  }\n};\n\nproto.startDrag = function (event) {\n\n  if (this.markup && this.markup.preventReposition) return;\n\n  this.onMouseMove = this._onRepositionMouseMove.bind(this);\n  this.onMouseUp = this._onRepositionMouseUp.bind(this);\n  this._onRepositionMouseDown(event, this.editor.getMousePosition());\n};\n\nproto.isActive = function () {\n  return this.selection.active;\n};\n\nproto.isDragging = function () {\n\n  return this.selection.dragging;\n};\n\nproto.isResizing = function () {\n\n  return this.selection.resizing;\n};\n\nproto.isRotating = function () {\n\n  return this.selection.rotating;\n};\n\nproto.onMouseMove = function (event) {\n\n\n  //dummy fn\n};\nproto.onMouseUp = function (event) {\n\n  //dummy fn\n};\nproto.onWheel = function (event) {\n  this.editor.viewer.toolController.mousewheel(event);\n};\n\nproto.onTouchPan = function (event) {\n  var gestureHandler = this.editor.viewer.toolController.getTool(\"gestures\");\n  gestureHandler.distributeGesture(event);\n  event.preventDefault();\n};\n\nproto.onTouchPinch = function (event) {\n  var gestureHandler = this.editor.viewer.toolController.getTool(\"gestures\");\n  gestureHandler.distributeGesture(event);\n  event.preventDefault();\n};\n\nproto.onHammerDrag = function (event) {\n\n  function updateEditorInput(input, parent, event) {\n\n    //TODO: Change this when refactoring input in edit frame.\n    var rect = parent.getBoundingClientRect();\n    input.mousePosition.x = event.pageX - rect.left;\n    input.mousePosition.y = event.pageY - rect.top;\n  }\n\n  //console.log('EditFrame drag ' + event.type);\n  convertEventHammerToMouse(event);\n  switch (event.type) {\n    case 'dragstart':\n      updateEditorInput(this.editor.input, this.editor.svg, event);\n      this.editor.callSnapperMouseDown();\n      // Check whether to translate, rotate or resize\n      if (isRotatePoint(event.target)) {\n        // Rotate\n        this._onRotationMouseDown(event);\n      } else if (isDragPoint(event.target)) {\n        // Resize\n        this._onResizeMouseDown(event);\n      } else {\n        this.startDrag(event);\n      }\n      event.preventDefault();\n      break;\n    case 'dragmove':\n      updateEditorInput(this.editor.input, this.editor.svg, event);\n      this.editor.callSnapperMouseMove();\n      this.onMouseMove(event);\n      event.preventDefault();\n      break;\n    case 'dragend':\n      updateEditorInput(this.editor.input, this.editor.svg, event);\n      this.onMouseUp(event);\n      event.preventDefault();\n      break;\n  }\n};\n\nproto.onHammerDoubleTap = function (event) {\n\n  function updateEditorInput(input, parent, event) {\n\n    //TODO: Change this when refactoring input in edit frame.\n    var rect = parent.getBoundingClientRect();\n    input.mousePosition.x = event.pageX - rect.left;\n    input.mousePosition.y = event.pageY - rect.top;\n  }\n\n  convertEventHammerToMouse(event);\n  updateEditorInput(this.editor.input, this.editor.svg, event);\n\n  this.selection.dragging = false;\n  this.editor.editMode && this.editor.editMode.onMouseDoubleClick(this.markup);\n};\n\nproto.enableResizeHandles = function () {\n\n  var markup = this.markup;\n  var handle;\n\n  if (markup.isHeightConstrained() || markup.isWidthConstrained()) {\n    //hide all the handles\n    for (var direction in this.selection.handle) {\n      handle = this.selection.handle[direction];\n      if (handle) handle.style.display = 'none';\n    }\n\n    //show only the resize points that are allowed\n    if (!markup.isHeightConstrained()) {\n      this.selection.handle['n'].style.display = 'block';\n      this.selection.handle['s'].style.display = 'block';\n    }\n    if (!markup.isWidthConstrained()) {\n      this.selection.handle['w'].style.display = 'block';\n      this.selection.handle['e'].style.display = 'block';\n    }\n  } else {\n    //no constraints, show all resize handles\n    for (let direction in this.selection.handle) {\n      handle = this.selection.handle[direction];\n      if (handle) handle.style.display = 'block';\n    }\n  }\n};\n\nproto.enableRotationHandle = function () {\n\n  var markup = this.markup;\n  var display = markup.isRotationConstrained() ? 'none' : 'block';\n  this.selection.rotationHandle.style.display = display;\n  this.selection.rotationBridge.style.display = display;\n};\n\nfunction convertEventHammerToMouse(event) {\n  // Convert Hammer touch-event X,Y into mouse-event X,Y.\n  event.pageX = event.pointers[0].clientX;\n  event.pageY = event.pointers[0].clientY;\n}\n\n/**\n * Creates an element spanning the full height and width of its parent.\n * It serves as our surface to draw the selection box.\n *\n * @return {HTMLElement}\n */\nfunction createSelectionLayer() {\n\n  const _document = this.getDocument();\n  var selectionLayer = _document.createElement('div');\n  selectionLayer.style.position = 'absolute';\n  selectionLayer.style.top = 0;\n  selectionLayer.style.bottom = 0;\n  selectionLayer.style.left = 0;\n  selectionLayer.style.right = 0;\n  //don't let the selection box be visible outside the selection layer\n  selectionLayer.style.overflow = 'hidden';\n  selectionLayer.style.visibility = 'hidden';\n  togglePointerEvents(selectionLayer, false);\n  return selectionLayer;\n}\n\n/**\n * Creates a single drag point with the corresponding styles\n *\n * @param {number} diameter - The size of the drag point\n * @param {string} position - The cardinal(n, s, w, e) or ordinal(nw, nw, sw, se) direction of the point\n * @return {HTMLElement}\n */\nfunction createDragPoint(position) {\n\n  const _document = this.getDocument();\n  var point = _document.createElement('div');\n\n  setResizeCursor(point, position);\n  point.className = 'selector-drag-point autodesk-markups-extension-core-make-me-bigger sdp-handle-' + position;\n  point.classList.add('adsk-viewing-viewer');\n  point.setAttribute('data-sdp-handle', position);\n\n  return point;\n}\n\nfunction createRotatePoint() {\n  const _document = this.getDocument();\n  var point = _document.createElement('div');\n  point.classList.add('adsk-viewing-viewer');\n  point.classList.add('selector-rotate-point');\n  point.classList.add('autodesk-markups-extension-core-make-me-bigger');\n  setResizeCursor(point, 'w');\n\n  return point;\n}\n\nfunction createRotationBridge() {\n  const _document = this.getDocument();\n  var rotationBridge = _document.createElement('div');\n  rotationBridge.classList.add('adsk-viewing-viewer');\n  rotationBridge.classList.add('selector-rotate-point');\n  rotationBridge.classList.add('autodesk-markups-extension-core-make-me-bigger');\n  rotationBridge.classList.add('rotation-bridge');\n  setResizeCursor(rotationBridge, 'w');\n\n  return rotationBridge;\n}\n\nfunction setResizeCursor(element, direction) {\n\n  var cursor;\n  switch (direction) {\n    case 'n':\n    case 's':\n      cursor = 'ns-resize';\n      break;\n    case 'w':\n    case 'e':\n      cursor = 'ew-resize';\n      break;\n    case 'ne':\n    case 'sw':\n      cursor = 'nesw-resize';\n      break;\n    case 'nw':\n    case 'se':\n      cursor = 'nwse-resize';\n      break;\n  }\n  element.style.cursor = cursor;\n}\n\n/**\n * Creates the 8 drag points of the selection box.\n *\n * @this EditFrame\n */\nfunction createDragPoints(selector) {\n\n  ['n', 's', 'w', 'e', 'nw', 'ne', 'sw', 'se'].forEach(function (direction) {\n    //store the drag point and put it in the DOM\n    this.selection.handle[direction] = createDragPoint.call(this, direction);\n    selector.appendChild(this.selection.handle[direction]);\n  }.bind(this));\n}\n\n/**\n * Determines if an element is a drag point\n *\n * @return {boolean}\n */\nfunction isDragPoint(element) {\n\n  return matchesSelectorAux(element, '.selector-drag-point');\n}\n\n/**\n * Determines if an element is a rotate point\n *\n * @return {boolean}\n */\nfunction isRotatePoint(element) {\n\n  return matchesSelectorAux(element, '.selector-rotate-point');\n}\n\n/**\n * Creates the element that will be used as the selection box. It also\n * takes care of adding the drag handles\n *\n * @return {HTMLElement} - the selection box\n * @this EditFrame\n */\nfunction createSelectorBox() {\n\n  const _document = this.getDocument();\n  var selectorBox = _document.createElement('div');\n  togglePointerEvents(selectorBox, true);\n  selectorBox.classList.add('selector-box');\n\n  this.selection.rotationBridge = createRotationBridge.bind(this)();\n  selectorBox.appendChild(this.selection.rotationBridge);\n\n  this.selection.rotationHandle = createRotatePoint.bind(this)();\n  selectorBox.appendChild(this.selection.rotationHandle);\n\n  createDragPoints.bind(this)(selectorBox);\n\n  //store the selector box\n  this.selection.element = selectorBox;\n\n  if (!av.isMobileDevice()) {\n    this.onWheelBinded = this.onWheel.bind(this);\n    this.selection.element.addEventListener('wheel', this.onWheelBinded);\n    this.selection.element.addEventListener('DOMMouseScroll', this.onWheelBinded); // firefox\n  }\n\n  //add the selection box to the selection layer\n  this.selectionLayer.appendChild(this.selection.element);\n\n  //we are just creating the box, start it out hidden\n  updateSelectionBoxState.bind(this)(false);\n\n  return selectorBox;\n}\n\n/**\n * Utility to create the CSS translate3d value from a given 2d point\n *\n * @param {number} x - coordinate\n * @param {number} y - coordinate\n * @return {string}\n */\nfunction toTranslate3d(x, y) {\n\n  return 'translate3d(' + x + 'px,' + y + 'px,0)';\n}\n\n\n/**\n * Updates the display state of the selection box\n *\n * @param {boolean} active - The new state of the the selection box\n * @this EditFrame\n */\nfunction updateSelectionBoxState(active) {\n\n  this.selection.active = active;\n  this.selection.element.style.display = active ? 'block' : 'none';\n}\n\n/**\n * Updates the position and rotation of the selection box.\n *\n * @param {number} x - The x coordinate to place the selection box\n * @param {number} y - The y coordinate to place the selection box\n * @param {number} rotation - The amount of degrees to rotate the selection box\n * @this EditFrame\n */\nfunction updateSelectorBoxPosition(x, y, rotation) {\n\n  this.selection.x = x;\n  this.selection.y = y;\n  this.selection.rotation = rotation;\n  var size = this.markup.getBoundingRect();\n  //TODO: consider DomElementStyle\n\n  size.width += this.frameMargin * 2;\n  size.height += this.frameMargin * 2;\n\n  var transform = toTranslate3d(x, y) + ' rotate(' + rotation + 'rad)';\n  var transformOrigin = size.width / 2 + 'px ' + size.height / 2 + 'px';\n\n  this.selection.element.style.msTransform =\n  this.selection.element.style.webkitTransform =\n  this.selection.element.style.transform = transform;\n  this.selection.element.style.msTransformOrigin =\n  this.selection.element.style.webkitTransformOrigin =\n  this.selection.element.style.transformOrigin = transformOrigin;\n}\n\n/**\n * Updates the dimensions of the selection box (width and height).\n *\n * @param {number} width - The new width of the selection box\n * @param {number} height - The new height of the selection box\n * @this EditFrame\n */\nfunction updateSelectorBoxDimensions(width, height) {\n\n  this.selection.width = width;\n  this.selection.height = height;\n  this.selection.element.style.width = width + 'px';\n  this.selection.element.style.height = height + 'px';\n}\n\n/**\n * Attaches all the necessary listeners to handle a drag action.\n *\n * @this EditFrame\n */\nfunction handleSelectionBoxDragging() {\n\n  this.selection.element.addEventListener('mousedown', this._onRepositionMouseDown.bind(this));\n}\n\n/**\n * Handles panning when right clicking down\n * @param event\n * @returns {boolean} returns true if the event was handled\n * @private\n */\nproto._handleRightClickDown = function (event) {\n\n  if (!av.isMobileDevice() && (avp.isRightClick(event, this.editor.viewer.navigation) || avp.isMiddleClick(event))) {\n    this.editor.input.onMouseDownRightClick(event);\n    return true;\n  }\n\n  return false;\n};\n\nvar ignoreFirstMouseMove = false;\nproto._onRepositionMouseDown = function (event, cursor) {\n\n  if (this._handleRightClickDown(event))\n  return;\n\n  // Return for markups that are not allowed to be repositioned.\n  if (this.markup && this.markup.preventReposition) return;\n\n  // ignore the first mouse move for the Microsoft Surface\n  ignoreFirstMouseMove = !av.isMobileDevice() && av.isTouchDevice();\n  //a synthetic start means that the event was triggered manually and not as a\n  //result of a mousedown on the edit frame\n  const _window = this.getWindow();\n  var syntheticStart = !(event instanceof _window.MouseEvent);\n\n  //during a real mousedown, ignore events originating from a resizing handle\n  if (!syntheticStart && (isDragPoint(event.target) || isRotatePoint(event.target))) return;\n\n  //get the cursor position\n  cursor = syntheticStart ? cursor : this.editor.getMousePosition();\n\n  //store the initial cursor and axis constrains\n  this.initialCursor = cursor;\n  this.initialPosition = this.markup.getClientPosition();\n  this.areAxisConstrained = false;\n  this.axisConstrains = new THREE.Vector2(1, 1);\n\n  //update the function that will handle the mousemove and mouseup events\n  this.onMouseMove = this._onRepositionMouseMove.bind(this);\n  this.onMouseUp = this._onRepositionMouseUp.bind(this);\n\n  if (this.selection.dragging)\n  return;\n\n  this.selection.dragging = true;\n  this.editor.beginActionGroup();\n\n  //if alt down I drop a clone.\n  if (event && event.altKey) {\n    var editor = this.editor;\n    var cloneMarkup = new _edit_actions_CloneMarkup__WEBPACK_IMPORTED_MODULE_2__.CloneMarkup(editor, editor.getId(), this.markup, this.markup.position);\n    cloneMarkup.execute();\n  }\n\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITFRAME_EDITION_START }); // Moving around\n};\n\nproto._onRepositionMouseMove = function (event) {\n\n  // This check is needed for selecting markups on devices that have touch screen + mouse (eg: Microsoft Surface)\n  if (ignoreFirstMouseMove) {\n    ignoreFirstMouseMove = false;\n    return false;\n  }\n  //ignore mousemove events if the dragging state hasn't been activated\n  if (!this.selection.dragging || !this.markup || this.markup.preventReposition) return false;\n\n  //get the position of the cursor relative to selection layer\n  var cursor = this.editor.getMousePosition();\n\n  //constrain axis if shift key is down.\n  var constrainAxis = this.editor.input.constrainAxis;\n  if (this.areAxisConstrained !== constrainAxis) {\n    this.areAxisConstrained = constrainAxis;\n    this.axisConstrains = constrainAxis ? new THREE.Vector2(0, 0) : new THREE.Vector2(1, 1);\n\n    this.initialPosition.x += cursor.x - this.initialCursor.x;\n    this.initialPosition.y += cursor.y - this.initialCursor.y;\n\n    this.initialCursor.x = cursor.x;\n    this.initialCursor.y = cursor.y;\n  }\n\n  //determine how many pixel we have to shift the\n  //selection box to keep the cursor on the drag point\n  var movement = {\n    x: cursor.x - this.initialCursor.x,\n    y: cursor.y - this.initialCursor.y\n  };\n\n  var deadZone = 15;\n  if (this.axisConstrains.x === 0 && this.axisConstrains.y === 0) {\n\n    if (Math.abs(movement.x) > deadZone) {\n      this.axisConstrains.x = 1;\n      movement.x += movement.x < 0 ? deadZone : -deadZone;\n    } else\n    if (Math.abs(movement.y) > deadZone) {\n      this.axisConstrains.y = 1;\n      movement.y += movement.y < 0 ? deadZone : -deadZone;\n    }\n  }\n\n  var x = this.initialPosition.x + movement.x * this.axisConstrains.x;\n  var y = this.initialPosition.y + movement.y * this.axisConstrains.y;\n\n  updateSelectorBoxPosition.bind(this)(x, y, this.selection.rotation);\n\n  //tell the markup to start transforming\n  //the markup expects an (x, y) coordinate that\n  //uses an origin at the center, adjust our x, y because\n  //our origin starts at the top left\n  var position = this.editor.positionFromClientToMarkups(x, y);\n  var setPosition = new _edit_actions_SetPosition__WEBPACK_IMPORTED_MODULE_3__.SetPosition(this.editor, this.markup, position);\n  setPosition.execute();\n  return true;\n};\n\nproto._onRepositionMouseUp = function () {\n\n  if (this.markup && this.markup.preventReposition) return;\n\n  this.last = null;\n\n  //this should never be called after the mouse up because we are no longer repositioning\n  this.onMouseMove = function () {/*do nothing*/};\n  this.onMouseUp = function () {/*do nothing*/};\n\n  if (!this.selection.dragging) {\n    return;\n  }\n\n  this.editor.closeActionGroup();\n  this.selection.dragging = false;\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITFRAME_EDITION_END }); // Moving around\n};\n\nproto._onResizeMouseDown = function (event) {\n\n  if (this._handleRightClickDown(event))\n  return;\n\n  var target = event.target;\n\n  //is the target where the mousedown occurred a drag point\n  if (!isDragPoint(target)) {\n    return;\n  }\n\n  //keep a reference to the point where the drag started\n  this.selection.handle.resizing = target;\n  //figure out which direction this point should resize\n  var direction = this.selection.handle.resizing.getAttribute('data-sdp-handle');\n  //set the cursor position for the entire layer\n  this.containingDiv.style.cursor = direction + '-resize';\n\n  var cursor = this.editor.getMousePosition();\n\n  var position = this.markup.getClientPosition();\n  var size = this.markup.getBoundingRect();\n\n  //store the center\n  this.initial = {\n    x: position.x,\n    y: position.y,\n    width: size.width,\n    height: size.height,\n    mouseX: cursor.x,\n    mouseY: cursor.y\n  };\n\n  this.onMouseMove = this._onResizeMouseMove.bind(this);\n  this.onMouseUp = this._onResizeMouseUp.bind(this);\n\n  if (this.selection.resizing) {\n    return;\n  }\n\n  this.selection.resizing = true;\n  this.editor.beginActionGroup();\n\n  setHandleSelected(event.target, true);\n\n  //notify the markup that dragging has started\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITFRAME_EDITION_START }); // Resizing\n};\n\nproto._onResizeMouseMove = function (event) {\n\n  if (!this.selection.resizing) return false;\n\n  var cursor = this.editor.getMousePosition();\n  var initial = this.initial;\n\n  var movement = {\n    x: cursor.x - initial.mouseX,\n    y: cursor.y - initial.mouseY\n  };\n\n  // Skip resize if there is no movement\n  if (movement.x === 0 && movement.y === 0) return;\n\n  var vector = new THREE.Vector3(movement.x, movement.y, 0);\n  var undoRotation = new THREE.Matrix4().makeRotationZ(-this.selection.rotation);\n  movement = vector.applyMatrix4(undoRotation);\n\n  var x = initial.x,\n    y = initial.y,\n    width = initial.width,\n    height = initial.height;\n\n  var localSpaceDelta = new THREE.Vector3();\n\n  //get the direction of the arrow being dragged\n  var direction = this.selection.handle.resizing.getAttribute('data-sdp-handle');\n\n  // TODO: Make a mechanism to configure and use this feature from Markups Core.\n  // If shift is pressed, figure aspect ratio is maintained.\n  if (this.editor.input.keepAspectRatio && ['nw', 'ne', 'sw', 'se'].indexOf(direction) !== -1) {\n\n    var delta = new THREE.Vector3(movement.x, movement.y, 0);\n    switch (direction) {\n      case 'nw':movement.set(-initial.width, -initial.height, 0);break;\n      case 'ne':movement.set(initial.width, -initial.height, 0);break;\n      case 'sw':movement.set(initial.width, -initial.height, 0);break;\n      case 'se':movement.set(initial.width, initial.height, 0);break;\n    }\n    movement.normalize();\n    movement = delta.projectOnVector(movement);\n  }\n\n  var translations = {\n    n: function () {\n      height -= movement.y;\n      localSpaceDelta.y = movement.y;\n    },\n    s: function () {\n      height += movement.y;\n      localSpaceDelta.y = movement.y;\n    },\n    w: function () {\n      width -= movement.x;\n      localSpaceDelta.x = movement.x;\n    },\n    e: function () {\n      width += movement.x;\n      localSpaceDelta.x = movement.x;\n    },\n    nw: function () {\n      this.n();\n      this.w();\n    },\n    ne: function () {\n      this.n();\n      this.e();\n    },\n    sw: function () {\n      this.s();\n      this.w();\n    },\n    se: function () {\n      this.s();\n      this.e();\n    }\n  };\n\n  translations[direction]();\n\n  // Check if new size is smaller than min width or height\n  if (width <= this.markup.getMinWidth() || height <= this.markup.getMinHeight()) return;\n\n  var redoRotation = new THREE.Matrix4().makeRotationZ(this.selection.rotation);\n  var actualDelta = localSpaceDelta.applyMatrix4(redoRotation);\n\n  var newPos = this.editor.positionFromClientToMarkups(\n    x + actualDelta.x * 0.5,\n    y + actualDelta.y * 0.5);\n\n  var newSize = this.editor.sizeFromClientToMarkups(width, height);\n\n  var setSize = new _edit_actions_SetSize__WEBPACK_IMPORTED_MODULE_4__.SetSize(this.editor, this.markup, newPos, newSize.x, newSize.y);\n  setSize.execute();\n  return true;\n};\n\nfunction setHandleSelected(handle, isSelected) {\n  if (isSelected) {\n    handle.classList.add('selected');\n  } else {\n    handle.classList.remove('selected');\n  }\n}\n\nproto._onResizeMouseUp = function (event) {\n  this.selection.resizing = false;\n  this.selection.handle.resizing = null;\n  this.containingDiv.style.cursor = '';\n\n  for (var direction in this.selection.handle) {\n    if (this.selection.handle[direction]) {\n      setHandleSelected(this.selection.handle[direction], false);\n    }\n  }\n\n\n  this.editor.closeActionGroup();\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITFRAME_EDITION_END }); // Resizing\n\n  //this should never be called after the mouse up because we are no longer resizing\n  this.onMouseMove = function () {\n    /*do nothing*/};\n  this.onMouseUp = function () {\n    /*do nothing*/};\n};\n\n\n/**\n * Attaches all the necessary listeners to handle a resizing action.\n *\n * @this EditFrame\n */\nfunction handleSelectionBoxResizing() {\n  this.selectionLayer.addEventListener('mousedown', this._onResizeMouseDown.bind(this));\n}\n\nfunction handleSelectionBoxRotating() {\n\n  this.selection.element.addEventListener('mousedown', this._onRotationMouseDown.bind(this));\n}\n\nvar initialRotation;\nvar initialHandlePosition;\n\nproto._onRotationMouseDown = function (event) {\n\n  if (this._handleRightClickDown(event))\n  return;\n\n  //ignore anything not coming from the rotation point\n  if (!isRotatePoint(event.target)) return;\n\n  this.editor.beginActionGroup();\n  this.selection.rotating = true;\n\n  //store the initial cursor\n  initialHandlePosition = this.editor.getMousePosition();\n\n  initialRotation = this.selection.rotation || 0;\n\n  //update the function that will handle the mousemove and mouseup events\n  this.onMouseMove = this._onRotationMouseMove.bind(this);\n  this.onMouseUp = this._onRotationMouseUp.bind(this);\n\n  setHandleSelected(event.target, true);\n\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITFRAME_EDITION_START }); // Rotating\n};\n\nproto._onRotationMouseMove = function (event) {\n\n  //ignore mousemove events if the dragging state hasn't been activated\n  if (!this.selection.rotating) return false;\n\n  var cursor = this.editor.getMousePosition();\n  var position = this.markup.getClientPosition();\n\n  var r = getAngleBetweenPoints(position, cursor);\n  var r2 = getAngleBetweenPoints(position, initialHandlePosition);\n  var rotation = r - r2 + initialRotation;\n\n  // TODO: Make a mechanism to configure and use this feature from Markups Core.\n  if (this.editor.input.snapRotations) {\n    var snap = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(22.5);\n    rotation = Math.ceil(rotation / snap) * snap;\n  }\n\n  //pass rotation as degrees\n  updateSelectorBoxPosition.bind(this)(this.selection.x, this.selection.y, rotation);\n\n  //convert to radians\n  var setRotation = new _edit_actions_SetRotation__WEBPACK_IMPORTED_MODULE_5__.SetRotation(this.editor, this.markup, rotation);\n  setRotation.execute();\n  return true;\n};\n\nproto._onRotationMouseUp = function (event) {\n\n  this.selection.rotating = false;\n  initialRotation = null;\n  initialHandlePosition = null;\n  setHandleSelected(this.selection.rotationHandle, false);\n  this.editor.closeActionGroup();\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITFRAME_EDITION_END }); // Rotating\n};\n\n/**\n * Attaches double click listener and pass events to markup, markups such as text use it to enter text edit\n * mode.\n *\n * @this EditFrame\n */\nfunction handleSelectionDoubleClick() {\n\n  var doubleClick = function (event) {\n    if (event.defaultPrevented) {\n      return;\n    }\n    this.selection.dragging = false;\n    var editMode = this.editor.editMode;\n    editMode && editMode.onMouseDoubleClick(this.markup);\n  }.bind(this);\n\n  var selectorBoxWrapper = this.selectionLayer;\n  selectorBoxWrapper.addEventListener('dblclick', doubleClick);\n}\n\nfunction togglePointerEvents(element, state) {\n\n  element.style.pointerEvents = state ? 'auto' : 'none';\n}\n\nfunction getAngleBetweenPoints(p1, p2) {\n\n  return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n}\n\nfunction matchesSelectorAux(domElem, selector) {\n  if (domElem.matches) return domElem.matches(selector); //Un-prefixed\n  if (domElem.msMatchesSelector) return domElem.msMatchesSelector(selector); //IE\n  if (domElem.mozMatchesSelector) return domElem.mozMatchesSelector(selector); //Firefox (Gecko)\n  if (domElem.webkitMatchesSelector) return domElem.webkitMatchesSelector(selector); // Opera, Safari, Chrome\n  return false;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/EditFrame.js\n");

/***/ }),

/***/ "./extensions/Markup/core/EditModeManager.js":
/*!***************************************************!*\
  !*** ./extensions/Markup/core/EditModeManager.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   theEditModeManager: () => (/* binding */ theEditModeManager)\n/* harmony export */ });\n\n// Maps EditMode id (string) into a contructor/class\nvar _editModes = {};\n\nclass EditModeManager {\n  constructor() {\n\n    // nothing //\n  }\n  register(id, clazz) {\n    if (id in _editModes)\n    throw new Error(`EditMode with id (${id}) already registered.`);\n\n    _editModes[id] = clazz;\n  }\n\n  unregister(id) {\n    if (id in _editModes)\n    delete _editModes[id];\n  }\n\n  getClass(id) {\n    return _editModes[id] || null;\n  }\n\n  getRegistered() {\n    var ret = {};\n    for (var id in _editModes) {\n      if (Object.prototype.hasOwnProperty.call(_editModes, id)) {\n        ret[id] = _editModes[id];\n      }\n    }\n    return ret; // shallow copy.\n  }\n}\n\n\nvar theEditModeManager = new EditModeManager();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL0VkaXRNb2RlTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUNBO0FBQ0EsSUFBSUEsVUFBVSxHQUFHLENBQUMsQ0FBQzs7QUFFbkIsTUFBTUMsZUFBZSxDQUFDO0VBQ2xCQyxXQUFXQSxDQUFBLEVBQUU7O0lBQ1Q7RUFBQTtFQUdKQyxRQUFRQSxDQUFDQyxFQUFFLEVBQUVDLEtBQUssRUFBRTtJQUNoQixJQUFJRCxFQUFFLElBQUlKLFVBQVU7SUFDaEIsTUFBTSxJQUFJTSxLQUFLLENBQUUscUJBQW9CRixFQUFHLHVCQUFzQixDQUFDOztJQUUvREosVUFBVSxDQUFDSSxFQUFFLENBQUMsR0FBR0MsS0FBSztFQUM5Qjs7RUFFQUUsVUFBVUEsQ0FBQ0gsRUFBRSxFQUFFO0lBQ1gsSUFBSUEsRUFBRSxJQUFJSixVQUFVO0lBQ2hCLE9BQU9BLFVBQVUsQ0FBQ0ksRUFBRSxDQUFDO0VBQzdCOztFQUVBSSxRQUFRQSxDQUFDSixFQUFFLEVBQUU7SUFDVCxPQUFPSixVQUFVLENBQUNJLEVBQUUsQ0FBQyxJQUFJLElBQUk7RUFDakM7O0VBRUFLLGFBQWFBLENBQUEsRUFBRztJQUNaLElBQUlDLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDWixLQUFLLElBQUlOLEVBQUUsSUFBSUosVUFBVSxFQUFFO01BQ3ZCLElBQUlXLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ2QsVUFBVSxFQUFFSSxFQUFFLENBQUMsRUFBRTtRQUN0RE0sR0FBRyxDQUFDTixFQUFFLENBQUMsR0FBR0osVUFBVSxDQUFDSSxFQUFFLENBQUM7TUFDNUI7SUFDSjtJQUNBLE9BQU9NLEdBQUcsQ0FBQyxDQUFDO0VBQ2hCO0FBQ0o7OztBQUdPLElBQUlLLGtCQUFrQixHQUFJLElBQUlkLGVBQWUsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvRWRpdE1vZGVNYW5hZ2VyLmpzP2VkYzAiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBNYXBzIEVkaXRNb2RlIGlkIChzdHJpbmcpIGludG8gYSBjb250cnVjdG9yL2NsYXNzXG52YXIgX2VkaXRNb2RlcyA9IHt9O1xuXG5jbGFzcyBFZGl0TW9kZU1hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIC8vIG5vdGhpbmcgLy9cbiAgICB9XG5cbiAgICByZWdpc3RlcihpZCwgY2xhenopIHtcbiAgICAgICAgaWYgKGlkIGluIF9lZGl0TW9kZXMpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVkaXRNb2RlIHdpdGggaWQgKCR7aWR9KSBhbHJlYWR5IHJlZ2lzdGVyZWQuYCk7XG5cbiAgICAgICAgICAgIF9lZGl0TW9kZXNbaWRdID0gY2xheno7XG4gICAgfVxuXG4gICAgdW5yZWdpc3RlcihpZCkge1xuICAgICAgICBpZiAoaWQgaW4gX2VkaXRNb2RlcylcbiAgICAgICAgICAgIGRlbGV0ZSBfZWRpdE1vZGVzW2lkXTtcbiAgICB9XG5cbiAgICBnZXRDbGFzcyhpZCkge1xuICAgICAgICByZXR1cm4gX2VkaXRNb2Rlc1tpZF0gfHwgbnVsbDtcbiAgICB9XG5cbiAgICBnZXRSZWdpc3RlcmVkKCkge1xuICAgICAgICB2YXIgcmV0ID0ge307XG4gICAgICAgIGZvciAodmFyIGlkIGluIF9lZGl0TW9kZXMpIHtcbiAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2VkaXRNb2RlcywgaWQpKSB7XG4gICAgICAgICAgICAgICAgcmV0W2lkXSA9IF9lZGl0TW9kZXNbaWRdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXQ7IC8vIHNoYWxsb3cgY29weS5cbiAgICB9XG59XG5cblxuZXhwb3J0IHZhciB0aGVFZGl0TW9kZU1hbmFnZXIgPSAgbmV3IEVkaXRNb2RlTWFuYWdlcigpOyJdLCJuYW1lcyI6WyJfZWRpdE1vZGVzIiwiRWRpdE1vZGVNYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJyZWdpc3RlciIsImlkIiwiY2xhenoiLCJFcnJvciIsInVucmVnaXN0ZXIiLCJnZXRDbGFzcyIsImdldFJlZ2lzdGVyZWQiLCJyZXQiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ0aGVFZGl0TW9kZU1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/EditModeManager.js\n");

/***/ }),

/***/ "./extensions/Markup/core/Markup.js":
/*!******************************************!*\
  !*** ./extensions/Markup/core/Markup.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Markup: () => (/* binding */ Markup)\n/* harmony export */ });\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _MarkupEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n\n\n\n\n\n\nvar av = Autodesk.Viewing;\n\n/**\n * Base class for all markups.\n *\n * A Markup is a class that is capable of rendering itself as an Svg node.<br>\n * It can also render itself into a canvas-2d context.\n * Component within {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore MarkupsCore} extension.\n *\n * Any class extending Markup should contain at least the following methods:\n * - getEditMode()\n * - set()\n * - updateStyle()\n * - setParent()\n * - setRotation()\n * - setSize()\n * - setPosition()\n * - renderToCanvas()\n * - setMetadata()\n *\n * A good reference is the rectangle markup implementation available in\n * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupRectangle|MarkupRectangle}.\n *\n * @tutorial feature_markup\n * @constructor\n * @memberof Autodesk.Viewing.Extensions.Markups.Core\n *\n * @param {number} id - Identifier, populated with return value of {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#getId getId()}.\n * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor - Markups extension\n * @param {Array} styleAttributes - Attributes for customization. Related to {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#setStyle setStyle()}.\n * @constructor\n */\nfunction Markup(id, editor, styleAttributes) {\n\n  this.id = id;\n  this.type = \"\";\n  this.editor = editor;\n  this.viewer = editor.viewer;\n  this.setGlobalManager(this.viewer.globalManager);\n  this.position = { x: 0, y: 0 };\n  this.size = { x: 0, y: 0 };\n  this.rotation = 0;\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_1__.createStyle)(styleAttributes, this.editor);\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_1__.copyStyle)(editor.getDefaultStyle(), this.style);\n  this.highlightColor = '#0696D7';\n  this.constraintWidth = false;\n  this.constraintHeight = false;\n  this.constraintRotation = false;\n  this.minWidth = -10000;\n  this.minHeight = -10000;\n  this.highlighted = false;\n  this.selected = false;\n\n  // bind to this to pass this.globalManager\n  this.checkLineSegment = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.checkLineSegment.bind(this);\n  this.checkPolygon = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.checkPolygon.bind(this);\n  this.renderToCanvasX = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.renderToCanvas.bind(this);\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.addTraitEventDispatcher)(this);\n}\n\nav.GlobalManagerMixin.call(Markup.prototype);\nvar proto = Markup.prototype;\n\nproto.destroy = function () {\n\n  this.unselect();\n  this.setParent(null);\n};\n\n/**\n * Specifies the parent layer which will contain the markup.\n * @param {HTMLElement} parent\n */\nproto.setParent = function (parent) {\n\n  var div = this.shape;\n  div.parentNode && div.parentNode.removeChild(div);\n  parent && parent.appendChild(div);\n};\n\n/**\n * Clones (deep-copy) the markup. Used internally by the copy/cut/paste mechanism in\n * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore MarkupsCore}.\n *\n * @returns {Autodesk.Viewing.Extensions.Markups.Core.Markup} clone of the current markup\n */\nproto.clone = function () {\n\n  var clone = Object.create(this.__proto__);\n  var overrides = this.getCloneOverrides();\n\n  for (var name in this) {\n\n    if (!Object.prototype.hasOwnProperty.call(this, name)) {\n      continue;\n    }\n\n    var member = this[name];\n\n    // Is there an override for this member?\n    if (Object.prototype.hasOwnProperty.call(overrides, name)) {\n      clone[name] = overrides[name];\n      continue;\n    }\n\n    // Member is null or undefined?\n    if (member === null || member === undefined) {\n      clone[name] = member;\n      continue;\n    }\n\n    // Member has a clone function?\n    if (member['clone'] instanceof Function) {\n      clone[name] = member.clone();\n      continue;\n    }\n\n    // Is it a function?\n    if (member instanceof Function) {\n      clone[name] = member.bind(clone);\n      continue;\n    }\n\n    // Is it an html node?\n    if (member.nodeType) {\n      clone[name] = member.cloneNode(true);\n      continue;\n    }\n\n    // Is it the globalManager?\n    if (member instanceof av.GlobalManager) {\n      av.GlobalManagerMixin.call(clone);\n      clone.setGlobalManager(member);\n      continue;\n    }\n\n    // Just a plain object?\n    if (member instanceof Object) {\n      clone[name] = JSON.parse(JSON.stringify(member));\n      continue;\n    }\n\n    // Ok, it seems it's just a primitive type.\n    clone[name] = member;\n  }\n\n  this.cloneShape(clone);\n  return clone;\n};\n\nproto.cloneShape = function (clone) {\n\n  clone.shape.markup = clone.shape.childNodes.item(0);\n  clone.shape.hitarea = clone.shape.childNodes.item(1);\n  clone.bindDomEvents();\n};\n\n/**\n * Used internally by\n * {@link Autodesk.Viewing.Extensions.Markups.Core.Markup#clone clone()},\n * provides a mechanism to avoid cloning specific attributes.<br>\n * Developers only need to override this method when creating new Markup types.\n * When overriding, first call the super() implementation and then include additional attribute/value pairs to it.\n * @returns {Object} containing attributes that need not to be cloned.\n */\nproto.getCloneOverrides = function () {\n\n  return {\n    viewer: this.viewer,\n    editor: this.editor,\n    hammer: null,\n    listeners: {}\n  };\n};\n\n/**\n * Used internally to select a markup.<br>\n * Fires event Autodesk.Viewing.Extensions.Markups.Core.EVENT_MARKUP_SELECTED.\n */\nproto.select = function () {\n\n  if (this.selected) {\n    return;\n  }\n\n  this.selected = true;\n  this.highlighted = false;\n  this.updateStyle();\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_2__.EVENT_MARKUP_SELECTED, markup: this });\n};\n\n/**\n * Used internally to signal that the current markup has been unselected.<br>\n * No event is fired.\n */\nproto.unselect = function () {\n\n  this.selected = false;\n};\n\nproto.highlight = function (highlight) {\n\n  if (this.interactionsDisabled) {\n    return;\n  }\n\n  this.highlighted = highlight;\n  this.updateStyle();\n};\n\n/**\n * Returns a copy of the markup's style.\n * @returns {Object}\n */\nproto.getStyle = function () {\n\n  return (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_1__.cloneStyle)(this.style);\n};\n\n/**\n * Used internally to set the style object. Triggers a re-render of the markup (Svg)\n * @param {Object} style - Dictionary with key/value pairs\n */\nproto.setStyle = function (style) {\n\n  (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_1__.copyStyle)(style, this.style);\n  this.updateStyle();\n};\n\n/**\n * Used internally and implemented by specific Markup types to render themselves as Svg.\n */\nproto.updateStyle = function () {\n\n};\n\n/**\n * Used internally to notify the markup that it is now being edited.<br>\n * Fires event Autodesk.Viewing.Extensions.Markups.Core.EVENT_MARKUP_ENTER_EDITION.\n */\nproto.edit = function () {\n\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_2__.EVENT_MARKUP_ENTER_EDITION, markup: this });\n};\n\n/**\n * Used internally to signal that it is no longer being edited.<br>\n * Fires event Autodesk.Viewing.Extensions.Markups.Core.EVENT_MARKUP_CANCEL_EDITION.\n */\nproto.cancel = function () {\n\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_2__.EVENT_MARKUP_CANCEL_EDITION, markup: this });\n};\n\n/**\n * Used internally to signal that the markup is being deleted.<br>\n * Fires event Autodesk.Viewing.Extensions.Markups.Core.EVENT_MARKUP_DELETE_EDITION.\n */\nproto.deleteMarkup = function () {\n\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_2__.EVENT_MARKUP_DELETE_EDITION, markup: this });\n};\n\n/**\n * Used internally to get the {@link Autodesk.Viewing.Extensions.Markups.Core.EditMode EditMode}\n * associated with the current Markup.<br>\n * Implemented by classes extending this one.\n * @returns {Autodesk.Viewing.Extensions.Markups.Core.EditMode}\n */\nproto.getEditMode = function () {\n\n  console.warn('EditMode of markup type' + this.type + ' not defined.');\n  return null;\n};\n\n/**\n * Used internally to get the markup's position in browser pixel space.<br>\n * Notice that (0,0) is top left.<br>\n * See also\n * {@link Autodesk.Viewing.Extensions.Markups.Core.Markup#getClientSize|getClientSize()}.\n * @returns {*}\n */\nproto.getClientPosition = function () {\n\n  var position = this.position;\n  return this.editor.positionFromMarkupsToClient(position.x, position.y);\n};\n\n/**\n * Used internally to get the markup's bounding rect in browser pixel space.<br>\n * See also\n * {@link Autodesk.Viewing.Extensions.Markups.Core.Markup#getClientPosition|getClientPosition()}.\n * @returns {*}\n */\nproto.getClientSize = function () {\n\n  var size = this.size;\n  return this.editor.sizeFromMarkupsToClient(size.x, size.y);\n};\n\n/**\n * Used internally to get the markup's bounding rect in browser pixel space, including the stroke width.<br>\n * @returns {Object} a rectangle with right, top, left, bottom attributes\n */\nproto.getBoundingRect = function () {\n\n  var rotation = this.rotation;\n\n  if (rotation !== 0) {// Undo rotation to find a tight bounding rect\n    this.setRotation(0);\n  }\n\n  var parentRect = this.viewer.impl.getCanvasBoundingClientRect();\n\n  var boundRect = this.shape.markup.getBoundingClientRect();\n  var top = boundRect.top - parentRect.top;\n\n  var strokeWidth = this.style['stroke-width'] || 0;\n  var offset = this.editor.sizeFromMarkupsToClient(strokeWidth, 0).x;\n\n  if (rotation !== 0) {\n    this.setRotation(rotation);\n  }\n\n  return {\n    x: boundRect.left - parentRect.left - offset,\n    y: top - offset,\n    width: boundRect.width + 2 * offset,\n    height: boundRect.height + 2 * offset\n  };\n};\n\n/**\n * Changes the rotation of the markup to the given angle.\n * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetRotation edit action\n *\n * @param {Number} angle\n */\nproto.setRotation = function (angle) {\n\n  this.rotation = angle;\n  this.updateStyle();\n};\n\nproto.getRotation = function () {\n\n  return this.rotation;\n};\n\n/**\n * Used by the EditFrame to move the markup in Client Space coordinates\n * @param {Number} x - New X location for the markup. Notice that markups are centered on this value.\n * @param {Number} y - New Y location for the markup. Notice that markups are centered on this value.\n */\nproto.setPosition = function (x, y) {\n\n  this.position.x = x;\n  this.position.y = y;\n\n  this.updateStyle();\n};\n\n/**\n * Changes the position and size of the markup.\n * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetSize edit action\n * @param {{x: Number, y: Number}} position\n * @param {Number} width\n * @param {Number} height\n */\nproto.setSize = function (position, width, height) {\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n  this.size.x = width;\n  this.size.y = height;\n\n  this.updateStyle();\n};\n\nproto.isWidthConstrained = function () {\n\n  return this.constraintWidth;\n};\n\nproto.isHeightConstrained = function () {\n\n  return this.constraintHeight;\n};\n\nproto.isRotationConstrained = function () {\n\n  return this.constraintRotation;\n};\n\nproto.setMinWidth = function (minWidth) {\n  this.minWidth = minWidth;\n};\n\nproto.setMinHeight = function (minHeight) {\n  this.minHeight = minHeight;\n};\n\nproto.getMinWidth = function () {\n  return this.minWidth;\n};\n\nproto.getMinHeight = function () {\n  return this.minHeight;\n};\n\n/**\n * Used to disable highlight on annotations while a new annotation is being created.\n * @param {Boolean} disable - Whether (mouse) interactions are enable.\n */\nproto.disableInteractions = function (disable) {\n\n  this.interactionsDisabled = disable;\n};\n\n/**\n *\n * @param width\n */\nproto.setStrokeWidth = function (width) {\n\n};\n\nproto.constrainsToBounds = function (bounds) {\n\n};\n\nproto.onMouseDown = function (event) {\n\n  if (this.interactionsDisabled) {\n    return;\n  }\n\n  this.select();\n  this.editor.editFrame.startDrag(event);\n};\n\n/**\n *\n * @param idTarget\n * @returns *\n */\nproto.generatePoint3d = function (idTarget) {\n\n  var viewer = this.viewer;\n  var polygon = this.generateBoundingPolygon();\n  var self = this;\n\n  function checkLineSegmentAux(a, b) {\n\n    var point2d = self.checkLineSegment(a.x, a.y, b.x, b.y, idTarget);\n    var point3d = point2d && viewer.clientToWorld(point2d.x, point2d.y);\n    return point3d && point3d.point;\n  }\n\n  function checkPolygonAux(polygon) {\n\n    var point2d = self.checkPolygon(polygon, idTarget);\n    var point3d = point2d && viewer.clientToWorld(point2d.x, point2d.y);\n    return point3d && point3d.point;\n  }\n\n  // Try to avoid expensive calculations by checking some lines segments first.\n  // If line check cannot find a point the costly one by area is used.\n  // A ----midAB---- B\n  // |               |\n  // |     center    |\n  // |               |\n  // C --------------D\n\n  var xVertices = polygon.xVertices;\n  var yVertices = polygon.yVertices;\n\n  var midAB = new THREE.Vector2(xVertices[0] + xVertices[1], yVertices[0] + yVertices[1]).multiplyScalar(0.5);\n  var midAC = new THREE.Vector2(xVertices[0] + xVertices[3], yVertices[0] + yVertices[3]).multiplyScalar(0.5);\n  var midDB = new THREE.Vector2(xVertices[2] + xVertices[1], yVertices[2] + yVertices[1]).multiplyScalar(0.5);\n  var midDC = new THREE.Vector2(xVertices[2] + xVertices[3], yVertices[2] + yVertices[3]).multiplyScalar(0.5);\n  var center = midAC.clone().add(midDB).multiplyScalar(0.5);\n\n  var point3d =\n  checkLineSegmentAux(center, midDB) ||\n  checkLineSegmentAux(center, midAC) ||\n  checkLineSegmentAux(center, midAB) ||\n  checkLineSegmentAux(center, midDC);\n\n  return point3d || checkPolygonAux(polygon);\n};\n\n/**\n *\n * @returns {{min: {x: number, y: number}, max: {x: number, y: number}}}\n */\nproto.generateBoundingBox = function () {\n\n  var boundingBox = { min: { x: 0, y: 0 }, max: { x: 0, y: 0 } };\n\n  // Get bounding box from markup bounding polygon.\n  var polygon = this.generateBoundingPolygon();\n\n  var vertexCount = polygon.vertexCount;\n  var xVertices = polygon.xVertices;\n  var yVertices = polygon.yVertices;\n\n  var bbX0 = Number.POSITIVE_INFINITY;\n  var bbY0 = Number.POSITIVE_INFINITY;\n  var bbX1 = Number.NEGATIVE_INFINITY;\n  var bbY1 = Number.NEGATIVE_INFINITY;\n\n  for (var i = 0; i < vertexCount; ++i) {\n\n    var bbX = xVertices[i];\n    var bbY = yVertices[i];\n\n    bbX0 = Math.min(bbX0, bbX);\n    bbY0 = Math.min(bbY0, bbY);\n    bbX1 = Math.max(bbX1, bbX);\n    bbY1 = Math.max(bbY1, bbY);\n  }\n\n  boundingBox.min.x = bbX0;\n  boundingBox.min.y = bbY0;\n  boundingBox.max.x = bbX1;\n  boundingBox.max.y = bbY1;\n\n  return boundingBox;\n};\n\n/**\n *\n * @returns {{vertexCount: number, xVertices: Float32Array, yVertices: Float32Array}}\n */\nproto.generateBoundingPolygon = function () {\n\n  var position = this.getClientPosition();\n  var halfSize = this.getClientSize();\n\n  halfSize.x *= 0.5;\n  halfSize.y *= 0.5;\n\n  var lt = new THREE.Vector3(-halfSize.x, -halfSize.y).add(position);\n  var rt = new THREE.Vector3(halfSize.x, -halfSize.y).add(position);\n  var rb = new THREE.Vector3(halfSize.x, halfSize.y).add(position);\n  var lb = new THREE.Vector3(-halfSize.x, halfSize.y).add(position);\n\n  if (this.rotation !== 0) {\n\n    var m1 = new THREE.Matrix4().makeTranslation(-position.x, -position.y, 0);\n    var m2 = new THREE.Matrix4().makeRotationZ(this.rotation);\n    var m3 = new THREE.Matrix4().makeTranslation(position.x, position.y, 0);\n    var transform = m3.multiply(m2).multiply(m1);\n\n    lt.applyMatrix4(transform);\n    rt.applyMatrix4(transform);\n    rb.applyMatrix4(transform);\n    lb.applyMatrix4(transform);\n  }\n\n  return { // packed for fast access in test algorithm.\n    vertexCount: 4,\n    xVertices: new Float32Array([lt.x, rt.x, rb.x, lb.x]),\n    yVertices: new Float32Array([lt.y, rt.y, rb.y, lb.y])\n  };\n};\n\n/**\n * Implemented by extending classes.<br>\n * Gets called automatically when\n * {@link Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore#generateData|generateData()}\n * @returns {null|Element} - Either null (default) or the metadata Svg node\n */\nproto.setMetadata = function () {\n\n  return null; // No metadata is injected by default.\n};\n\nproto.setMouseDisabledWhenTouching = function (event) {\n\n  if (event.isFirst) {\n    this.shape.removeEventListener('mousedown', this.onMouseDownBinded);\n  } else if (event.isFinal) {\n    var _this = this;\n    setTimeout(function () {\n      _this.shape.addEventListener('mousedown', _this.onMouseDownBinded);\n    }, 10);\n  }\n};\n\nproto.bindDomEvents = function () {\n\n  if ((0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.isTouchDevice)()) {\n\n    this.hammer = new av.Hammer.Manager(this.shape, {\n      recognizers: [\n      av.GestureRecognizers.singletap],\n\n      handlePointerEventMouse: false,\n      inputClass: av.Hammer.TouchInput\n    });\n\n    this.onSingleTapBinded = function (event) {\n\n      this.onMouseDown(event);\n    }.bind(this);\n\n    this.onHammerInputBinded = function (event) {\n\n      this.setMouseDisabledWhenTouching(event);\n    }.bind(this);\n\n    this.hammer.on('singletap', this.onSingleTapBinded);\n    this.hammer.on('hammer.input', this.onHammerInputBinded);\n  }\n\n  this.onMouseDownBinded = this.onMouseDown.bind(this);\n  this.onMouseOutBinded = function () {\n\n    this.highlight(false);\n  }.bind(this);\n\n  this.onMouseOverBinded = function () {\n\n    this.highlight(true);\n  }.bind(this);\n\n  this.shape.addEventListener('mousedown', this.onMouseDownBinded);\n  this.shape.addEventListener('mouseout', this.onMouseOutBinded);\n  this.shape.addEventListener('mouseover', this.onMouseOverBinded);\n};\n\nproto.renderToCanvas = function (ctx, viewBox, width, height, callback) {\n\n  this.renderToCanvasX(this.shape, viewBox, width, height, ctx, callback);\n};\n\nproto.getPath = function () {\n\n};\n\nproto.getTransform = function () {\n\n  return [\n  'translate(', this.position.x, ',', this.position.y, ')',\n  'rotate(', (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.radiansToDegrees)(-this.rotation), ')'].\n  join(' ');\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFlBQVksRUFBRSxJQUFJLENBQUMvTCxRQUFRLENBQUNDLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDRCxRQUFRLENBQUNFLENBQUMsRUFBRSxHQUFHO0VBQ3hELFNBQVMsRUFBRXJCLG1FQUFnQixDQUFDLENBQUMsSUFBSSxDQUFDdUIsUUFBUSxDQUFDLEVBQUUsR0FBRyxDQUNuRDtFQUFDNEwsSUFBSSxDQUFDLEdBQUcsQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9NYXJrdXAuanM/NTg5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IGFkZFRyYWl0RXZlbnREaXNwYXRjaGVyLCByZW5kZXJUb0NhbnZhcywgcmFkaWFuc1RvRGVncmVlcyxcbiAgICAgICAgIGNoZWNrUG9seWdvbiwgY2hlY2tMaW5lU2VnbWVudCwgaXNUb3VjaERldmljZSB9IGZyb20gJy4vTWFya3Vwc0NvcmVVdGlscyc7XG5pbXBvcnQgeyBjcmVhdGVTdHlsZSwgY29weVN0eWxlLCBjbG9uZVN0eWxlIH0gZnJvbSAnLi9TdHlsZVV0aWxzJztcbmltcG9ydCAqIGFzIE1hcmt1cEV2ZW50cyBmcm9tICcuL01hcmt1cEV2ZW50cyc7XG5cbiAgICB2YXIgYXYgPSBBdXRvZGVzay5WaWV3aW5nO1xuXG4gICAgLyoqXG4gICAgICogQmFzZSBjbGFzcyBmb3IgYWxsIG1hcmt1cHMuXG4gICAgICpcbiAgICAgKiBBIE1hcmt1cCBpcyBhIGNsYXNzIHRoYXQgaXMgY2FwYWJsZSBvZiByZW5kZXJpbmcgaXRzZWxmIGFzIGFuIFN2ZyBub2RlLjxicj5cbiAgICAgKiBJdCBjYW4gYWxzbyByZW5kZXIgaXRzZWxmIGludG8gYSBjYW52YXMtMmQgY29udGV4dC5cbiAgICAgKiBDb21wb25lbnQgd2l0aGluIHtAbGluayBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLk1hcmt1cHNDb3JlIE1hcmt1cHNDb3JlfSBleHRlbnNpb24uXG4gICAgICpcbiAgICAgKiBBbnkgY2xhc3MgZXh0ZW5kaW5nIE1hcmt1cCBzaG91bGQgY29udGFpbiBhdCBsZWFzdCB0aGUgZm9sbG93aW5nIG1ldGhvZHM6XG4gICAgICogLSBnZXRFZGl0TW9kZSgpXG4gICAgICogLSBzZXQoKVxuICAgICAqIC0gdXBkYXRlU3R5bGUoKVxuICAgICAqIC0gc2V0UGFyZW50KClcbiAgICAgKiAtIHNldFJvdGF0aW9uKClcbiAgICAgKiAtIHNldFNpemUoKVxuICAgICAqIC0gc2V0UG9zaXRpb24oKVxuICAgICAqIC0gcmVuZGVyVG9DYW52YXMoKVxuICAgICAqIC0gc2V0TWV0YWRhdGEoKVxuICAgICAqXG4gICAgICogQSBnb29kIHJlZmVyZW5jZSBpcyB0aGUgcmVjdGFuZ2xlIG1hcmt1cCBpbXBsZW1lbnRhdGlvbiBhdmFpbGFibGUgaW5cbiAgICAgKiB7QGxpbmsgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5NYXJrdXBSZWN0YW5nbGV8TWFya3VwUmVjdGFuZ2xlfS5cbiAgICAgKlxuICAgICAqIEB0dXRvcmlhbCBmZWF0dXJlX21hcmt1cFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBtZW1iZXJvZiBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaWQgLSBJZGVudGlmaWVyLCBwb3B1bGF0ZWQgd2l0aCByZXR1cm4gdmFsdWUgb2Yge0BsaW5rIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuTWFya3Vwc0NvcmUjZ2V0SWQgZ2V0SWQoKX0uXG4gICAgICogQHBhcmFtIHtBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLk1hcmt1cHNDb3JlfSBlZGl0b3IgLSBNYXJrdXBzIGV4dGVuc2lvblxuICAgICAqIEBwYXJhbSB7QXJyYXl9IHN0eWxlQXR0cmlidXRlcyAtIEF0dHJpYnV0ZXMgZm9yIGN1c3RvbWl6YXRpb24uIFJlbGF0ZWQgdG8ge0BsaW5rIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuTWFya3Vwc0NvcmUjc2V0U3R5bGUgc2V0U3R5bGUoKX0uXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIE1hcmt1cChpZCwgZWRpdG9yLCBzdHlsZUF0dHJpYnV0ZXMpIHtcblxuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMudHlwZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuZWRpdG9yID0gZWRpdG9yO1xuICAgICAgICB0aGlzLnZpZXdlciA9IGVkaXRvci52aWV3ZXI7XG4gICAgICAgIHRoaXMuc2V0R2xvYmFsTWFuYWdlcih0aGlzLnZpZXdlci5nbG9iYWxNYW5hZ2VyKTtcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHt4OiAwLCB5OiAwfTtcbiAgICAgICAgdGhpcy5zaXplID0ge3g6MCwgeTowfTtcbiAgICAgICAgdGhpcy5yb3RhdGlvbiA9IDA7XG4gICAgICAgIHRoaXMuc3R5bGUgPSBjcmVhdGVTdHlsZShzdHlsZUF0dHJpYnV0ZXMsIHRoaXMuZWRpdG9yKTtcbiAgICAgICAgdGhpcy5zdHlsZSA9IGNvcHlTdHlsZShlZGl0b3IuZ2V0RGVmYXVsdFN0eWxlKCksIHRoaXMuc3R5bGUpO1xuICAgICAgICB0aGlzLmhpZ2hsaWdodENvbG9yID0gJyMwNjk2RDcnO1xuICAgICAgICB0aGlzLmNvbnN0cmFpbnRXaWR0aCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNvbnN0cmFpbnRIZWlnaHQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jb25zdHJhaW50Um90YXRpb24gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5taW5XaWR0aCA9IC0xMDAwMDtcbiAgICAgICAgdGhpcy5taW5IZWlnaHQgPSAtMTAwMDA7XG4gICAgICAgIHRoaXMuaGlnaGxpZ2h0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xuXG4gICAgICAgIC8vIGJpbmQgdG8gdGhpcyB0byBwYXNzIHRoaXMuZ2xvYmFsTWFuYWdlclxuICAgICAgICB0aGlzLmNoZWNrTGluZVNlZ21lbnQgPSBjaGVja0xpbmVTZWdtZW50LmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuY2hlY2tQb2x5Z29uID0gY2hlY2tQb2x5Z29uLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMucmVuZGVyVG9DYW52YXNYID0gcmVuZGVyVG9DYW52YXMuYmluZCh0aGlzKTtcblxuICAgICAgICBhZGRUcmFpdEV2ZW50RGlzcGF0Y2hlcih0aGlzKTtcbiAgICB9XG5cbiAgICBhdi5HbG9iYWxNYW5hZ2VyTWl4aW4uY2FsbChNYXJrdXAucHJvdG90eXBlKTtcbiAgICB2YXIgcHJvdG8gPSBNYXJrdXAucHJvdG90eXBlO1xuXG4gICAgcHJvdG8uZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICB0aGlzLnVuc2VsZWN0KCk7XG4gICAgICAgIHRoaXMuc2V0UGFyZW50KG51bGwpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHBhcmVudCBsYXllciB3aGljaCB3aWxsIGNvbnRhaW4gdGhlIG1hcmt1cC5cbiAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBwYXJlbnRcbiAgICAgKi9cbiAgICBwcm90by5zZXRQYXJlbnQgPSBmdW5jdGlvbihwYXJlbnQpIHtcblxuICAgICAgICB2YXIgZGl2ID0gdGhpcy5zaGFwZTtcbiAgICAgICAgZGl2LnBhcmVudE5vZGUgJiYgZGl2LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZGl2KTtcbiAgICAgICAgcGFyZW50ICYmIHBhcmVudC5hcHBlbmRDaGlsZChkaXYpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDbG9uZXMgKGRlZXAtY29weSkgdGhlIG1hcmt1cC4gVXNlZCBpbnRlcm5hbGx5IGJ5IHRoZSBjb3B5L2N1dC9wYXN0ZSBtZWNoYW5pc20gaW5cbiAgICAgKiB7QGxpbmsgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5NYXJrdXBzQ29yZSBNYXJrdXBzQ29yZX0uXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7QXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5NYXJrdXB9IGNsb25lIG9mIHRoZSBjdXJyZW50IG1hcmt1cFxuICAgICAqL1xuICAgIHByb3RvLmNsb25lID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIGNsb25lID0gT2JqZWN0LmNyZWF0ZSh0aGlzLl9fcHJvdG9fXyk7XG4gICAgICAgIHZhciBvdmVycmlkZXMgPSB0aGlzLmdldENsb25lT3ZlcnJpZGVzKCk7XG5cbiAgICAgICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG5cbiAgICAgICAgICAgIGlmKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcywgbmFtZSkpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG1lbWJlciA9IHRoaXNbbmFtZV07XG5cbiAgICAgICAgICAgIC8vIElzIHRoZXJlIGFuIG92ZXJyaWRlIGZvciB0aGlzIG1lbWJlcj9cbiAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3ZlcnJpZGVzLCBuYW1lKSkge1xuICAgICAgICAgICAgICAgIGNsb25lW25hbWVdID0gb3ZlcnJpZGVzW25hbWVdO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBNZW1iZXIgaXMgbnVsbCBvciB1bmRlZmluZWQ/XG4gICAgICAgICAgICBpZiAobWVtYmVyID09PSBudWxsIHx8IG1lbWJlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgY2xvbmVbbmFtZV0gPSBtZW1iZXI7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIE1lbWJlciBoYXMgYSBjbG9uZSBmdW5jdGlvbj9cbiAgICAgICAgICAgIGlmIChtZW1iZXJbJ2Nsb25lJ10gaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgICAgICAgICAgIGNsb25lW25hbWVdID0gbWVtYmVyLmNsb25lKCk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIElzIGl0IGEgZnVuY3Rpb24/XG4gICAgICAgICAgICBpZiAobWVtYmVyIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBjbG9uZVtuYW1lXSA9IG1lbWJlci5iaW5kKGNsb25lKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gSXMgaXQgYW4gaHRtbCBub2RlP1xuICAgICAgICAgICAgaWYgKG1lbWJlci5ub2RlVHlwZSkge1xuICAgICAgICAgICAgICAgIGNsb25lW25hbWVdID0gbWVtYmVyLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gSXMgaXQgdGhlIGdsb2JhbE1hbmFnZXI/XG4gICAgICAgICAgICBpZiAobWVtYmVyIGluc3RhbmNlb2YgYXYuR2xvYmFsTWFuYWdlcikge1xuICAgICAgICAgICAgICAgIGF2Lkdsb2JhbE1hbmFnZXJNaXhpbi5jYWxsKGNsb25lKTtcbiAgICAgICAgICAgICAgICBjbG9uZS5zZXRHbG9iYWxNYW5hZ2VyKG1lbWJlcik7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEp1c3QgYSBwbGFpbiBvYmplY3Q/XG4gICAgICAgICAgICBpZiAobWVtYmVyIGluc3RhbmNlb2YgT2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgY2xvbmVbbmFtZV0gPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG1lbWJlcikpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBPaywgaXQgc2VlbXMgaXQncyBqdXN0IGEgcHJpbWl0aXZlIHR5cGUuXG4gICAgICAgICAgICBjbG9uZVtuYW1lXSA9IG1lbWJlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY2xvbmVTaGFwZShjbG9uZSk7XG4gICAgICAgIHJldHVybiBjbG9uZTtcbiAgICB9O1xuXG4gICAgcHJvdG8uY2xvbmVTaGFwZSA9IGZ1bmN0aW9uKGNsb25lKSB7XG5cbiAgICAgICAgY2xvbmUuc2hhcGUubWFya3VwID0gY2xvbmUuc2hhcGUuY2hpbGROb2Rlcy5pdGVtKDApO1xuICAgICAgICBjbG9uZS5zaGFwZS5oaXRhcmVhID0gY2xvbmUuc2hhcGUuY2hpbGROb2Rlcy5pdGVtKDEpO1xuICAgICAgICBjbG9uZS5iaW5kRG9tRXZlbnRzKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgaW50ZXJuYWxseSBieVxuICAgICAqIHtAbGluayBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLk1hcmt1cCNjbG9uZSBjbG9uZSgpfSxcbiAgICAgKiBwcm92aWRlcyBhIG1lY2hhbmlzbSB0byBhdm9pZCBjbG9uaW5nIHNwZWNpZmljIGF0dHJpYnV0ZXMuPGJyPlxuICAgICAqIERldmVsb3BlcnMgb25seSBuZWVkIHRvIG92ZXJyaWRlIHRoaXMgbWV0aG9kIHdoZW4gY3JlYXRpbmcgbmV3IE1hcmt1cCB0eXBlcy5cbiAgICAgKiBXaGVuIG92ZXJyaWRpbmcsIGZpcnN0IGNhbGwgdGhlIHN1cGVyKCkgaW1wbGVtZW50YXRpb24gYW5kIHRoZW4gaW5jbHVkZSBhZGRpdGlvbmFsIGF0dHJpYnV0ZS92YWx1ZSBwYWlycyB0byBpdC5cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBjb250YWluaW5nIGF0dHJpYnV0ZXMgdGhhdCBuZWVkIG5vdCB0byBiZSBjbG9uZWQuXG4gICAgICovXG4gICAgcHJvdG8uZ2V0Q2xvbmVPdmVycmlkZXMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmlld2VyOiB0aGlzLnZpZXdlcixcbiAgICAgICAgICAgIGVkaXRvcjogdGhpcy5lZGl0b3IsXG4gICAgICAgICAgICBoYW1tZXI6IG51bGwsXG4gICAgICAgICAgICBsaXN0ZW5lcnM6IHt9XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgaW50ZXJuYWxseSB0byBzZWxlY3QgYSBtYXJrdXAuPGJyPlxuICAgICAqIEZpcmVzIGV2ZW50IEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuRVZFTlRfTUFSS1VQX1NFTEVDVEVELlxuICAgICAqL1xuICAgIHByb3RvLnNlbGVjdCA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuaGlnaGxpZ2h0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy51cGRhdGVTdHlsZSgpO1xuICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoe3R5cGU6IE1hcmt1cEV2ZW50cy5FVkVOVF9NQVJLVVBfU0VMRUNURUQsIG1hcmt1cDogdGhpc30pO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVc2VkIGludGVybmFsbHkgdG8gc2lnbmFsIHRoYXQgdGhlIGN1cnJlbnQgbWFya3VwIGhhcyBiZWVuIHVuc2VsZWN0ZWQuPGJyPlxuICAgICAqIE5vIGV2ZW50IGlzIGZpcmVkLlxuICAgICAqL1xuICAgIHByb3RvLnVuc2VsZWN0ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGZhbHNlO1xuICAgIH07XG5cbiAgICBwcm90by5oaWdobGlnaHQgPSBmdW5jdGlvbihoaWdobGlnaHQpIHtcblxuICAgICAgICBpZiAodGhpcy5pbnRlcmFjdGlvbnNEaXNhYmxlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5oaWdobGlnaHRlZCA9IGhpZ2hsaWdodDtcbiAgICAgICAgdGhpcy51cGRhdGVTdHlsZSgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgY29weSBvZiB0aGUgbWFya3VwJ3Mgc3R5bGUuXG4gICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAgKi9cbiAgICBwcm90by5nZXRTdHlsZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHJldHVybiBjbG9uZVN0eWxlKHRoaXMuc3R5bGUpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVc2VkIGludGVybmFsbHkgdG8gc2V0IHRoZSBzdHlsZSBvYmplY3QuIFRyaWdnZXJzIGEgcmUtcmVuZGVyIG9mIHRoZSBtYXJrdXAgKFN2ZylcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gc3R5bGUgLSBEaWN0aW9uYXJ5IHdpdGgga2V5L3ZhbHVlIHBhaXJzXG4gICAgICovXG4gICAgcHJvdG8uc2V0U3R5bGUgPSBmdW5jdGlvbihzdHlsZSkge1xuXG4gICAgICAgIGNvcHlTdHlsZShzdHlsZSwgdGhpcy5zdHlsZSk7XG4gICAgICAgIHRoaXMudXBkYXRlU3R5bGUoKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXNlZCBpbnRlcm5hbGx5IGFuZCBpbXBsZW1lbnRlZCBieSBzcGVjaWZpYyBNYXJrdXAgdHlwZXMgdG8gcmVuZGVyIHRoZW1zZWx2ZXMgYXMgU3ZnLlxuICAgICAqL1xuICAgIHByb3RvLnVwZGF0ZVN0eWxlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgaW50ZXJuYWxseSB0byBub3RpZnkgdGhlIG1hcmt1cCB0aGF0IGl0IGlzIG5vdyBiZWluZyBlZGl0ZWQuPGJyPlxuICAgICAqIEZpcmVzIGV2ZW50IEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuRVZFTlRfTUFSS1VQX0VOVEVSX0VESVRJT04uXG4gICAgICovXG4gICAgcHJvdG8uZWRpdCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudCh7dHlwZTogTWFya3VwRXZlbnRzLkVWRU5UX01BUktVUF9FTlRFUl9FRElUSU9OLCBtYXJrdXA6IHRoaXN9KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXNlZCBpbnRlcm5hbGx5IHRvIHNpZ25hbCB0aGF0IGl0IGlzIG5vIGxvbmdlciBiZWluZyBlZGl0ZWQuPGJyPlxuICAgICAqIEZpcmVzIGV2ZW50IEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuRVZFTlRfTUFSS1VQX0NBTkNFTF9FRElUSU9OLlxuICAgICAqL1xuICAgIHByb3RvLmNhbmNlbCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudCh7dHlwZTogTWFya3VwRXZlbnRzLkVWRU5UX01BUktVUF9DQU5DRUxfRURJVElPTiwgbWFya3VwOiB0aGlzfSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgaW50ZXJuYWxseSB0byBzaWduYWwgdGhhdCB0aGUgbWFya3VwIGlzIGJlaW5nIGRlbGV0ZWQuPGJyPlxuICAgICAqIEZpcmVzIGV2ZW50IEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuRVZFTlRfTUFSS1VQX0RFTEVURV9FRElUSU9OLlxuICAgICAqL1xuICAgIHByb3RvLmRlbGV0ZU1hcmt1cCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudCh7dHlwZTogTWFya3VwRXZlbnRzLkVWRU5UX01BUktVUF9ERUxFVEVfRURJVElPTiwgbWFya3VwOiB0aGlzfSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgaW50ZXJuYWxseSB0byBnZXQgdGhlIHtAbGluayBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLkVkaXRNb2RlIEVkaXRNb2RlfVxuICAgICAqIGFzc29jaWF0ZWQgd2l0aCB0aGUgY3VycmVudCBNYXJrdXAuPGJyPlxuICAgICAqIEltcGxlbWVudGVkIGJ5IGNsYXNzZXMgZXh0ZW5kaW5nIHRoaXMgb25lLlxuICAgICAqIEByZXR1cm5zIHtBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLkVkaXRNb2RlfVxuICAgICAqL1xuICAgIHByb3RvLmdldEVkaXRNb2RlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgY29uc29sZS53YXJuKCdFZGl0TW9kZSBvZiBtYXJrdXAgdHlwZScgKyB0aGlzLnR5cGUgKyAnIG5vdCBkZWZpbmVkLicgKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgaW50ZXJuYWxseSB0byBnZXQgdGhlIG1hcmt1cCdzIHBvc2l0aW9uIGluIGJyb3dzZXIgcGl4ZWwgc3BhY2UuPGJyPlxuICAgICAqIE5vdGljZSB0aGF0ICgwLDApIGlzIHRvcCBsZWZ0Ljxicj5cbiAgICAgKiBTZWUgYWxzb1xuICAgICAqIHtAbGluayBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLk1hcmt1cCNnZXRDbGllbnRTaXplfGdldENsaWVudFNpemUoKX0uXG4gICAgICogQHJldHVybnMgeyp9XG4gICAgICovXG4gICAgcHJvdG8uZ2V0Q2xpZW50UG9zaXRpb24gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgcG9zaXRpb24gPSB0aGlzLnBvc2l0aW9uO1xuICAgICAgICByZXR1cm4gdGhpcy5lZGl0b3IucG9zaXRpb25Gcm9tTWFya3Vwc1RvQ2xpZW50KHBvc2l0aW9uLngsIHBvc2l0aW9uLnkpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVc2VkIGludGVybmFsbHkgdG8gZ2V0IHRoZSBtYXJrdXAncyBib3VuZGluZyByZWN0IGluIGJyb3dzZXIgcGl4ZWwgc3BhY2UuPGJyPlxuICAgICAqIFNlZSBhbHNvXG4gICAgICoge0BsaW5rIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuTWFya3VwI2dldENsaWVudFBvc2l0aW9ufGdldENsaWVudFBvc2l0aW9uKCl9LlxuICAgICAqIEByZXR1cm5zIHsqfVxuICAgICAqL1xuICAgIHByb3RvLmdldENsaWVudFNpemUgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgdmFyIHNpemUgPSB0aGlzLnNpemU7XG4gICAgICAgIHJldHVybiB0aGlzLmVkaXRvci5zaXplRnJvbU1hcmt1cHNUb0NsaWVudChzaXplLngsIHNpemUueSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgaW50ZXJuYWxseSB0byBnZXQgdGhlIG1hcmt1cCdzIGJvdW5kaW5nIHJlY3QgaW4gYnJvd3NlciBwaXhlbCBzcGFjZSwgaW5jbHVkaW5nIHRoZSBzdHJva2Ugd2lkdGguPGJyPlxuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IGEgcmVjdGFuZ2xlIHdpdGggcmlnaHQsIHRvcCwgbGVmdCwgYm90dG9tIGF0dHJpYnV0ZXNcbiAgICAgKi9cbiAgICBwcm90by5nZXRCb3VuZGluZ1JlY3QgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgdmFyIHJvdGF0aW9uID0gdGhpcy5yb3RhdGlvbjtcblxuICAgICAgICBpZiAocm90YXRpb24gIT09IDApIHsgLy8gVW5kbyByb3RhdGlvbiB0byBmaW5kIGEgdGlnaHQgYm91bmRpbmcgcmVjdFxuICAgICAgICAgICAgdGhpcy5zZXRSb3RhdGlvbigwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwYXJlbnRSZWN0ID0gdGhpcy52aWV3ZXIuaW1wbC5nZXRDYW52YXNCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICB2YXIgYm91bmRSZWN0ID0gdGhpcy5zaGFwZS5tYXJrdXAuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHZhciB0b3AgPSBib3VuZFJlY3QudG9wIC0gcGFyZW50UmVjdC50b3A7XG5cbiAgICAgICAgdmFyIHN0cm9rZVdpZHRoID0gdGhpcy5zdHlsZVsnc3Ryb2tlLXdpZHRoJ10gfHwgMDtcbiAgICAgICAgdmFyIG9mZnNldCA9IHRoaXMuZWRpdG9yLnNpemVGcm9tTWFya3Vwc1RvQ2xpZW50KHN0cm9rZVdpZHRoLCAwKS54O1xuXG4gICAgICAgIGlmIChyb3RhdGlvbiAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5zZXRSb3RhdGlvbihyb3RhdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgeDogYm91bmRSZWN0LmxlZnQgLSBwYXJlbnRSZWN0LmxlZnQgLSBvZmZzZXQsXG4gICAgICAgICAgICB5OiB0b3AgLSBvZmZzZXQsXG4gICAgICAgICAgICB3aWR0aDogYm91bmRSZWN0LndpZHRoICsgMipvZmZzZXQsXG4gICAgICAgICAgICBoZWlnaHQ6IGJvdW5kUmVjdC5oZWlnaHQgKyAyKm9mZnNldFxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDaGFuZ2VzIHRoZSByb3RhdGlvbiBvZiB0aGUgbWFya3VwIHRvIHRoZSBnaXZlbiBhbmdsZS5cbiAgICAgKiBUaGlzIGdldHMgY2FsbGVkIGJ5IHRoZSBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLlNldFJvdGF0aW9uIGVkaXQgYWN0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gYW5nbGVcbiAgICAgKi9cbiAgICBwcm90by5zZXRSb3RhdGlvbiA9IGZ1bmN0aW9uKGFuZ2xlKSB7XG5cbiAgICAgICAgdGhpcy5yb3RhdGlvbiA9IGFuZ2xlO1xuICAgICAgICB0aGlzLnVwZGF0ZVN0eWxlKCk7XG4gICAgfTtcblxuICAgIHByb3RvLmdldFJvdGF0aW9uID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHJldHVybiB0aGlzLnJvdGF0aW9uO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVc2VkIGJ5IHRoZSBFZGl0RnJhbWUgdG8gbW92ZSB0aGUgbWFya3VwIGluIENsaWVudCBTcGFjZSBjb29yZGluYXRlc1xuICAgICAqIEBwYXJhbSB7TnVtYmVyfSB4IC0gTmV3IFggbG9jYXRpb24gZm9yIHRoZSBtYXJrdXAuIE5vdGljZSB0aGF0IG1hcmt1cHMgYXJlIGNlbnRlcmVkIG9uIHRoaXMgdmFsdWUuXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IHkgLSBOZXcgWSBsb2NhdGlvbiBmb3IgdGhlIG1hcmt1cC4gTm90aWNlIHRoYXQgbWFya3VwcyBhcmUgY2VudGVyZWQgb24gdGhpcyB2YWx1ZS5cbiAgICAgKi9cbiAgICBwcm90by5zZXRQb3NpdGlvbiA9IGZ1bmN0aW9uKHgseSkge1xuXG4gICAgICAgIHRoaXMucG9zaXRpb24ueCA9IHg7XG4gICAgICAgIHRoaXMucG9zaXRpb24ueSA9IHk7XG5cbiAgICAgICAgdGhpcy51cGRhdGVTdHlsZSgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDaGFuZ2VzIHRoZSBwb3NpdGlvbiBhbmQgc2l6ZSBvZiB0aGUgbWFya3VwLlxuICAgICAqIFRoaXMgZ2V0cyBjYWxsZWQgYnkgdGhlIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuU2V0U2l6ZSBlZGl0IGFjdGlvblxuICAgICAqIEBwYXJhbSB7e3g6IE51bWJlciwgeTogTnVtYmVyfX0gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0ge051bWJlcn0gd2lkdGhcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gaGVpZ2h0XG4gICAgICovXG4gICAgcHJvdG8uc2V0U2l6ZSA9IGZ1bmN0aW9uIChwb3NpdGlvbiwgd2lkdGgsIGhlaWdodCkge1xuXG4gICAgICAgIHRoaXMucG9zaXRpb24ueCA9IHBvc2l0aW9uLng7XG4gICAgICAgIHRoaXMucG9zaXRpb24ueSA9IHBvc2l0aW9uLnk7XG4gICAgICAgIHRoaXMuc2l6ZS54ID0gd2lkdGg7XG4gICAgICAgIHRoaXMuc2l6ZS55ID0gaGVpZ2h0O1xuXG4gICAgICAgIHRoaXMudXBkYXRlU3R5bGUoKTtcbiAgICB9O1xuXG4gICAgcHJvdG8uaXNXaWR0aENvbnN0cmFpbmVkID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RyYWludFdpZHRoO1xuICAgIH07XG5cbiAgICBwcm90by5pc0hlaWdodENvbnN0cmFpbmVkID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RyYWludEhlaWdodDtcbiAgICB9O1xuXG4gICAgcHJvdG8uaXNSb3RhdGlvbkNvbnN0cmFpbmVkID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RyYWludFJvdGF0aW9uO1xuICAgIH07XG5cbiAgICBwcm90by5zZXRNaW5XaWR0aCA9IGZ1bmN0aW9uKG1pbldpZHRoKSB7XG4gICAgICAgIHRoaXMubWluV2lkdGggPSBtaW5XaWR0aDtcbiAgICB9O1xuXG4gICAgcHJvdG8uc2V0TWluSGVpZ2h0ID0gZnVuY3Rpb24obWluSGVpZ2h0KSB7XG4gICAgICAgIHRoaXMubWluSGVpZ2h0ID0gbWluSGVpZ2h0O1xuICAgIH07XG5cbiAgICBwcm90by5nZXRNaW5XaWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5taW5XaWR0aDtcbiAgICB9O1xuXG4gICAgcHJvdG8uZ2V0TWluSGVpZ2h0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1pbkhlaWdodDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXNlZCB0byBkaXNhYmxlIGhpZ2hsaWdodCBvbiBhbm5vdGF0aW9ucyB3aGlsZSBhIG5ldyBhbm5vdGF0aW9uIGlzIGJlaW5nIGNyZWF0ZWQuXG4gICAgICogQHBhcmFtIHtCb29sZWFufSBkaXNhYmxlIC0gV2hldGhlciAobW91c2UpIGludGVyYWN0aW9ucyBhcmUgZW5hYmxlLlxuICAgICAqL1xuICAgIHByb3RvLmRpc2FibGVJbnRlcmFjdGlvbnMgPSBmdW5jdGlvbihkaXNhYmxlKSB7XG5cbiAgICAgICAgdGhpcy5pbnRlcmFjdGlvbnNEaXNhYmxlZCA9IGRpc2FibGU7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHdpZHRoXG4gICAgICovXG4gICAgcHJvdG8uc2V0U3Ryb2tlV2lkdGggPSBmdW5jdGlvbih3aWR0aCkge1xuXG4gICAgfTtcblxuICAgIHByb3RvLmNvbnN0cmFpbnNUb0JvdW5kcyA9IGZ1bmN0aW9uKGJvdW5kcykge1xuXG4gICAgfTtcblxuICAgIHByb3RvLm9uTW91c2VEb3duID0gZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgICAgICBpZiAodGhpcy5pbnRlcmFjdGlvbnNEaXNhYmxlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZWxlY3QoKTtcbiAgICAgICAgdGhpcy5lZGl0b3IuZWRpdEZyYW1lLnN0YXJ0RHJhZyhldmVudCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGlkVGFyZ2V0XG4gICAgICogQHJldHVybnMgKlxuICAgICAqL1xuICAgIHByb3RvLmdlbmVyYXRlUG9pbnQzZCA9IGZ1bmN0aW9uKGlkVGFyZ2V0KSB7XG5cbiAgICAgICAgdmFyIHZpZXdlciA9IHRoaXMudmlld2VyO1xuICAgICAgICB2YXIgcG9seWdvbiA9IHRoaXMuZ2VuZXJhdGVCb3VuZGluZ1BvbHlnb24oKTtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgIGZ1bmN0aW9uIGNoZWNrTGluZVNlZ21lbnRBdXgoYSwgYikge1xuXG4gICAgICAgICAgICB2YXIgcG9pbnQyZCA9IHNlbGYuY2hlY2tMaW5lU2VnbWVudChhLngsIGEueSwgYi54LCBiLnksIGlkVGFyZ2V0KTtcbiAgICAgICAgICAgIHZhciBwb2ludDNkID0gcG9pbnQyZCAmJiB2aWV3ZXIuY2xpZW50VG9Xb3JsZChwb2ludDJkLngsIHBvaW50MmQueSk7XG4gICAgICAgICAgICByZXR1cm4gcG9pbnQzZCAmJiBwb2ludDNkLnBvaW50O1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY2hlY2tQb2x5Z29uQXV4KHBvbHlnb24pIHtcblxuICAgICAgICAgICAgdmFyIHBvaW50MmQgPSBzZWxmLmNoZWNrUG9seWdvbihwb2x5Z29uLCBpZFRhcmdldCk7XG4gICAgICAgICAgICB2YXIgcG9pbnQzZCA9IHBvaW50MmQgJiYgdmlld2VyLmNsaWVudFRvV29ybGQocG9pbnQyZC54LCBwb2ludDJkLnkpO1xuICAgICAgICAgICAgcmV0dXJuIHBvaW50M2QgJiYgcG9pbnQzZC5wb2ludDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRyeSB0byBhdm9pZCBleHBlbnNpdmUgY2FsY3VsYXRpb25zIGJ5IGNoZWNraW5nIHNvbWUgbGluZXMgc2VnbWVudHMgZmlyc3QuXG4gICAgICAgIC8vIElmIGxpbmUgY2hlY2sgY2Fubm90IGZpbmQgYSBwb2ludCB0aGUgY29zdGx5IG9uZSBieSBhcmVhIGlzIHVzZWQuXG4gICAgICAgIC8vIEEgLS0tLW1pZEFCLS0tLSBCXG4gICAgICAgIC8vIHwgICAgICAgICAgICAgICB8XG4gICAgICAgIC8vIHwgICAgIGNlbnRlciAgICB8XG4gICAgICAgIC8vIHwgICAgICAgICAgICAgICB8XG4gICAgICAgIC8vIEMgLS0tLS0tLS0tLS0tLS1EXG5cbiAgICAgICAgdmFyIHhWZXJ0aWNlcyA9IHBvbHlnb24ueFZlcnRpY2VzO1xuICAgICAgICB2YXIgeVZlcnRpY2VzID0gcG9seWdvbi55VmVydGljZXM7XG5cbiAgICAgICAgdmFyIG1pZEFCID0gbmV3IFRIUkVFLlZlY3RvcjIoeFZlcnRpY2VzWzBdICsgeFZlcnRpY2VzWzFdLCB5VmVydGljZXNbMF0gKyB5VmVydGljZXNbMV0pLm11bHRpcGx5U2NhbGFyKDAuNSk7XG4gICAgICAgIHZhciBtaWRBQyA9IG5ldyBUSFJFRS5WZWN0b3IyKHhWZXJ0aWNlc1swXSArIHhWZXJ0aWNlc1szXSwgeVZlcnRpY2VzWzBdICsgeVZlcnRpY2VzWzNdKS5tdWx0aXBseVNjYWxhcigwLjUpO1xuICAgICAgICB2YXIgbWlkREIgPSBuZXcgVEhSRUUuVmVjdG9yMih4VmVydGljZXNbMl0gKyB4VmVydGljZXNbMV0sIHlWZXJ0aWNlc1syXSArIHlWZXJ0aWNlc1sxXSkubXVsdGlwbHlTY2FsYXIoMC41KTtcbiAgICAgICAgdmFyIG1pZERDID0gbmV3IFRIUkVFLlZlY3RvcjIoeFZlcnRpY2VzWzJdICsgeFZlcnRpY2VzWzNdLCB5VmVydGljZXNbMl0gKyB5VmVydGljZXNbM10pLm11bHRpcGx5U2NhbGFyKDAuNSk7XG4gICAgICAgIHZhciBjZW50ZXIgPSBtaWRBQy5jbG9uZSgpLmFkZChtaWREQikubXVsdGlwbHlTY2FsYXIoMC41KTtcblxuICAgICAgICB2YXIgcG9pbnQzZCA9XG4gICAgICAgICAgICBjaGVja0xpbmVTZWdtZW50QXV4KGNlbnRlciwgbWlkREIpIHx8XG4gICAgICAgICAgICBjaGVja0xpbmVTZWdtZW50QXV4KGNlbnRlciwgbWlkQUMpIHx8XG4gICAgICAgICAgICBjaGVja0xpbmVTZWdtZW50QXV4KGNlbnRlciwgbWlkQUIpIHx8XG4gICAgICAgICAgICBjaGVja0xpbmVTZWdtZW50QXV4KGNlbnRlciwgbWlkREMpO1xuXG4gICAgICAgIHJldHVybiBwb2ludDNkIHx8IGNoZWNrUG9seWdvbkF1eChwb2x5Z29uKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7e21pbjoge3g6IG51bWJlciwgeTogbnVtYmVyfSwgbWF4OiB7eDogbnVtYmVyLCB5OiBudW1iZXJ9fX1cbiAgICAgKi9cbiAgICBwcm90by5nZW5lcmF0ZUJvdW5kaW5nQm94ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIGJvdW5kaW5nQm94ID0ge21pbjoge3g6IDAseTogMH0sIG1heDoge3g6IDAsIHk6IDB9fTtcblxuICAgICAgICAvLyBHZXQgYm91bmRpbmcgYm94IGZyb20gbWFya3VwIGJvdW5kaW5nIHBvbHlnb24uXG4gICAgICAgIHZhciBwb2x5Z29uID0gdGhpcy5nZW5lcmF0ZUJvdW5kaW5nUG9seWdvbigpO1xuXG4gICAgICAgIHZhciB2ZXJ0ZXhDb3VudCA9IHBvbHlnb24udmVydGV4Q291bnQ7XG4gICAgICAgIHZhciB4VmVydGljZXMgPSBwb2x5Z29uLnhWZXJ0aWNlcztcbiAgICAgICAgdmFyIHlWZXJ0aWNlcyA9IHBvbHlnb24ueVZlcnRpY2VzO1xuXG4gICAgICAgIHZhciBiYlgwID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO1xuICAgICAgICB2YXIgYmJZMCA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbiAgICAgICAgdmFyIGJiWDEgPSBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFk7XG4gICAgICAgIHZhciBiYlkxID0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZO1xuXG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB2ZXJ0ZXhDb3VudDsgKytpKSB7XG5cbiAgICAgICAgICAgIHZhciBiYlggPSB4VmVydGljZXNbaV07XG4gICAgICAgICAgICB2YXIgYmJZID0geVZlcnRpY2VzW2ldO1xuXG4gICAgICAgICAgICBiYlgwID0gTWF0aC5taW4oYmJYMCwgYmJYKTtcbiAgICAgICAgICAgIGJiWTAgPSBNYXRoLm1pbihiYlkwLCBiYlkpO1xuICAgICAgICAgICAgYmJYMSA9IE1hdGgubWF4KGJiWDEsIGJiWCk7XG4gICAgICAgICAgICBiYlkxID0gTWF0aC5tYXgoYmJZMSwgYmJZKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJvdW5kaW5nQm94Lm1pbi54ID0gYmJYMDtcbiAgICAgICAgYm91bmRpbmdCb3gubWluLnkgPSBiYlkwO1xuICAgICAgICBib3VuZGluZ0JveC5tYXgueCA9IGJiWDE7XG4gICAgICAgIGJvdW5kaW5nQm94Lm1heC55ID0gYmJZMTtcblxuICAgICAgICByZXR1cm4gYm91bmRpbmdCb3g7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHJldHVybnMge3t2ZXJ0ZXhDb3VudDogbnVtYmVyLCB4VmVydGljZXM6IEZsb2F0MzJBcnJheSwgeVZlcnRpY2VzOiBGbG9hdDMyQXJyYXl9fVxuICAgICAqL1xuICAgIHByb3RvLmdlbmVyYXRlQm91bmRpbmdQb2x5Z29uID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIHBvc2l0aW9uID0gdGhpcy5nZXRDbGllbnRQb3NpdGlvbigpO1xuICAgICAgICB2YXIgaGFsZlNpemUgPSB0aGlzLmdldENsaWVudFNpemUoKTtcblxuICAgICAgICBoYWxmU2l6ZS54ICo9IDAuNTtcbiAgICAgICAgaGFsZlNpemUueSAqPSAwLjU7XG5cbiAgICAgICAgdmFyIGx0ID0gbmV3IFRIUkVFLlZlY3RvcjMoLWhhbGZTaXplLngsLWhhbGZTaXplLnkpLmFkZChwb3NpdGlvbik7XG4gICAgICAgIHZhciBydCA9IG5ldyBUSFJFRS5WZWN0b3IzKCBoYWxmU2l6ZS54LC1oYWxmU2l6ZS55KS5hZGQocG9zaXRpb24pO1xuICAgICAgICB2YXIgcmIgPSBuZXcgVEhSRUUuVmVjdG9yMyggaGFsZlNpemUueCwgaGFsZlNpemUueSkuYWRkKHBvc2l0aW9uKTtcbiAgICAgICAgdmFyIGxiID0gbmV3IFRIUkVFLlZlY3RvcjMoLWhhbGZTaXplLngsIGhhbGZTaXplLnkpLmFkZChwb3NpdGlvbik7XG5cbiAgICAgICAgaWYgKHRoaXMucm90YXRpb24gIT09IDApIHtcblxuICAgICAgICAgICAgdmFyIG0xID0gbmV3IFRIUkVFLk1hdHJpeDQoKS5tYWtlVHJhbnNsYXRpb24oLXBvc2l0aW9uLngsIC1wb3NpdGlvbi55LCAwKTtcbiAgICAgICAgICAgIHZhciBtMiA9IG5ldyBUSFJFRS5NYXRyaXg0KCkubWFrZVJvdGF0aW9uWih0aGlzLnJvdGF0aW9uKTtcbiAgICAgICAgICAgIHZhciBtMyA9IG5ldyBUSFJFRS5NYXRyaXg0KCkubWFrZVRyYW5zbGF0aW9uKHBvc2l0aW9uLngsIHBvc2l0aW9uLnksIDApO1xuICAgICAgICAgICAgdmFyIHRyYW5zZm9ybSA9IG0zLm11bHRpcGx5KG0yKS5tdWx0aXBseShtMSk7XG5cbiAgICAgICAgICAgIGx0LmFwcGx5TWF0cml4NCh0cmFuc2Zvcm0pO1xuICAgICAgICAgICAgcnQuYXBwbHlNYXRyaXg0KHRyYW5zZm9ybSk7XG4gICAgICAgICAgICByYi5hcHBseU1hdHJpeDQodHJhbnNmb3JtKTtcbiAgICAgICAgICAgIGxiLmFwcGx5TWF0cml4NCh0cmFuc2Zvcm0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHsgLy8gcGFja2VkIGZvciBmYXN0IGFjY2VzcyBpbiB0ZXN0IGFsZ29yaXRobS5cbiAgICAgICAgICAgIHZlcnRleENvdW50OiA0LFxuICAgICAgICAgICAgeFZlcnRpY2VzIDogbmV3IEZsb2F0MzJBcnJheShbbHQueCwgcnQueCwgcmIueCwgbGIueF0pLFxuICAgICAgICAgICAgeVZlcnRpY2VzIDogbmV3IEZsb2F0MzJBcnJheShbbHQueSwgcnQueSwgcmIueSwgbGIueV0pXG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEltcGxlbWVudGVkIGJ5IGV4dGVuZGluZyBjbGFzc2VzLjxicj5cbiAgICAgKiBHZXRzIGNhbGxlZCBhdXRvbWF0aWNhbGx5IHdoZW5cbiAgICAgKiB7QGxpbmsgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5NYXJrdXBzQ29yZSNnZW5lcmF0ZURhdGF8Z2VuZXJhdGVEYXRhKCl9XG4gICAgICogQHJldHVybnMge251bGx8RWxlbWVudH0gLSBFaXRoZXIgbnVsbCAoZGVmYXVsdCkgb3IgdGhlIG1ldGFkYXRhIFN2ZyBub2RlXG4gICAgICovXG4gICAgcHJvdG8uc2V0TWV0YWRhdGEgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4gbnVsbDsgLy8gTm8gbWV0YWRhdGEgaXMgaW5qZWN0ZWQgYnkgZGVmYXVsdC5cbiAgICB9O1xuXG4gICAgcHJvdG8uc2V0TW91c2VEaXNhYmxlZFdoZW5Ub3VjaGluZyA9IGZ1bmN0aW9uKGV2ZW50KSB7XG5cbiAgICAgICAgaWYgKGV2ZW50LmlzRmlyc3QpIHtcbiAgICAgICAgICAgIHRoaXMuc2hhcGUucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5vbk1vdXNlRG93bkJpbmRlZCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZXZlbnQuaXNGaW5hbCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2hhcGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgX3RoaXMub25Nb3VzZURvd25CaW5kZWQpO1xuICAgICAgICAgICAgfSwgMTApO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHByb3RvLmJpbmREb21FdmVudHMgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICBpZiAoaXNUb3VjaERldmljZSgpKSB7XG5cbiAgICAgICAgICAgIHRoaXMuaGFtbWVyID0gbmV3IGF2LkhhbW1lci5NYW5hZ2VyKHRoaXMuc2hhcGUsIHtcbiAgICAgICAgICAgICAgICByZWNvZ25pemVyczogW1xuICAgICAgICAgICAgICAgICAgICBhdi5HZXN0dXJlUmVjb2duaXplcnMuc2luZ2xldGFwXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBoYW5kbGVQb2ludGVyRXZlbnRNb3VzZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgaW5wdXRDbGFzczogYXYuSGFtbWVyLlRvdWNoSW5wdXRcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB0aGlzLm9uU2luZ2xlVGFwQmluZGVkID0gZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgICAgICAgICAgICAgIHRoaXMub25Nb3VzZURvd24oZXZlbnQpO1xuICAgICAgICAgICAgfS5iaW5kKHRoaXMpO1xuXG4gICAgICAgICAgICB0aGlzLm9uSGFtbWVySW5wdXRCaW5kZWQgPSBmdW5jdGlvbihldmVudCkge1xuXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRNb3VzZURpc2FibGVkV2hlblRvdWNoaW5nKGV2ZW50KTtcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKTtcblxuICAgICAgICAgICAgdGhpcy5oYW1tZXIub24oJ3NpbmdsZXRhcCcsIHRoaXMub25TaW5nbGVUYXBCaW5kZWQpO1xuICAgICAgICAgICAgdGhpcy5oYW1tZXIub24oJ2hhbW1lci5pbnB1dCcsIHRoaXMub25IYW1tZXJJbnB1dEJpbmRlZCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm9uTW91c2VEb3duQmluZGVkID0gdGhpcy5vbk1vdXNlRG93bi5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLm9uTW91c2VPdXRCaW5kZWQgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgdGhpcy5oaWdobGlnaHQoZmFsc2UpO1xuICAgICAgICB9LmJpbmQodGhpcyk7XG5cbiAgICAgICAgdGhpcy5vbk1vdXNlT3ZlckJpbmRlZCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICB0aGlzLmhpZ2hsaWdodCh0cnVlKTtcbiAgICAgICAgfS5iaW5kKHRoaXMpO1xuXG4gICAgICAgIHRoaXMuc2hhcGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5vbk1vdXNlRG93bkJpbmRlZCk7XG4gICAgICAgIHRoaXMuc2hhcGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCB0aGlzLm9uTW91c2VPdXRCaW5kZWQpO1xuICAgICAgICB0aGlzLnNoYXBlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIHRoaXMub25Nb3VzZU92ZXJCaW5kZWQpO1xuICAgIH07XG5cbiAgICBwcm90by5yZW5kZXJUb0NhbnZhcyA9IGZ1bmN0aW9uKGN0eCwgdmlld0JveCwgd2lkdGgsIGhlaWdodCwgY2FsbGJhY2spIHtcblxuICAgICAgICB0aGlzLnJlbmRlclRvQ2FudmFzWCh0aGlzLnNoYXBlLCB2aWV3Qm94LCB3aWR0aCwgaGVpZ2h0LCBjdHgsIGNhbGxiYWNrKTtcbiAgICB9O1xuXG4gICAgcHJvdG8uZ2V0UGF0aCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgfTtcblxuICAgIHByb3RvLmdldFRyYW5zZm9ybSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAndHJhbnNsYXRlKCcsIHRoaXMucG9zaXRpb24ueCwgJywnLCB0aGlzLnBvc2l0aW9uLnksICcpJyxcbiAgICAgICAgICAgICdyb3RhdGUoJywgcmFkaWFuc1RvRGVncmVlcygtdGhpcy5yb3RhdGlvbiksICcpJ1xuICAgICAgICBdLmpvaW4oJyAnKTtcbiAgICB9O1xuXG4iXSwibmFtZXMiOlsiYWRkVHJhaXRFdmVudERpc3BhdGNoZXIiLCJyZW5kZXJUb0NhbnZhcyIsInJhZGlhbnNUb0RlZ3JlZXMiLCJjaGVja1BvbHlnb24iLCJjaGVja0xpbmVTZWdtZW50IiwiaXNUb3VjaERldmljZSIsImNyZWF0ZVN0eWxlIiwiY29weVN0eWxlIiwiY2xvbmVTdHlsZSIsIk1hcmt1cEV2ZW50cyIsImF2IiwiQXV0b2Rlc2siLCJWaWV3aW5nIiwiTWFya3VwIiwiaWQiLCJlZGl0b3IiLCJzdHlsZUF0dHJpYnV0ZXMiLCJ0eXBlIiwidmlld2VyIiwic2V0R2xvYmFsTWFuYWdlciIsImdsb2JhbE1hbmFnZXIiLCJwb3NpdGlvbiIsIngiLCJ5Iiwic2l6ZSIsInJvdGF0aW9uIiwic3R5bGUiLCJnZXREZWZhdWx0U3R5bGUiLCJoaWdobGlnaHRDb2xvciIsImNvbnN0cmFpbnRXaWR0aCIsImNvbnN0cmFpbnRIZWlnaHQiLCJjb25zdHJhaW50Um90YXRpb24iLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsImhpZ2hsaWdodGVkIiwic2VsZWN0ZWQiLCJiaW5kIiwicmVuZGVyVG9DYW52YXNYIiwiR2xvYmFsTWFuYWdlck1peGluIiwiY2FsbCIsInByb3RvdHlwZSIsInByb3RvIiwiZGVzdHJveSIsInVuc2VsZWN0Iiwic2V0UGFyZW50IiwicGFyZW50IiwiZGl2Iiwic2hhcGUiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsImNsb25lIiwiT2JqZWN0IiwiY3JlYXRlIiwiX19wcm90b19fIiwib3ZlcnJpZGVzIiwiZ2V0Q2xvbmVPdmVycmlkZXMiLCJuYW1lIiwiaGFzT3duUHJvcGVydHkiLCJtZW1iZXIiLCJ1bmRlZmluZWQiLCJGdW5jdGlvbiIsIm5vZGVUeXBlIiwiY2xvbmVOb2RlIiwiR2xvYmFsTWFuYWdlciIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsImNsb25lU2hhcGUiLCJtYXJrdXAiLCJjaGlsZE5vZGVzIiwiaXRlbSIsImhpdGFyZWEiLCJiaW5kRG9tRXZlbnRzIiwiaGFtbWVyIiwibGlzdGVuZXJzIiwic2VsZWN0IiwidXBkYXRlU3R5bGUiLCJkaXNwYXRjaEV2ZW50IiwiRVZFTlRfTUFSS1VQX1NFTEVDVEVEIiwiaGlnaGxpZ2h0IiwiaW50ZXJhY3Rpb25zRGlzYWJsZWQiLCJnZXRTdHlsZSIsInNldFN0eWxlIiwiZWRpdCIsIkVWRU5UX01BUktVUF9FTlRFUl9FRElUSU9OIiwiY2FuY2VsIiwiRVZFTlRfTUFSS1VQX0NBTkNFTF9FRElUSU9OIiwiZGVsZXRlTWFya3VwIiwiRVZFTlRfTUFSS1VQX0RFTEVURV9FRElUSU9OIiwiZ2V0RWRpdE1vZGUiLCJjb25zb2xlIiwid2FybiIsImdldENsaWVudFBvc2l0aW9uIiwicG9zaXRpb25Gcm9tTWFya3Vwc1RvQ2xpZW50IiwiZ2V0Q2xpZW50U2l6ZSIsInNpemVGcm9tTWFya3Vwc1RvQ2xpZW50IiwiZ2V0Qm91bmRpbmdSZWN0Iiwic2V0Um90YXRpb24iLCJwYXJlbnRSZWN0IiwiaW1wbCIsImdldENhbnZhc0JvdW5kaW5nQ2xpZW50UmVjdCIsImJvdW5kUmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsInN0cm9rZVdpZHRoIiwib2Zmc2V0IiwibGVmdCIsIndpZHRoIiwiaGVpZ2h0IiwiYW5nbGUiLCJnZXRSb3RhdGlvbiIsInNldFBvc2l0aW9uIiwic2V0U2l6ZSIsImlzV2lkdGhDb25zdHJhaW5lZCIsImlzSGVpZ2h0Q29uc3RyYWluZWQiLCJpc1JvdGF0aW9uQ29uc3RyYWluZWQiLCJzZXRNaW5XaWR0aCIsInNldE1pbkhlaWdodCIsImdldE1pbldpZHRoIiwiZ2V0TWluSGVpZ2h0IiwiZGlzYWJsZUludGVyYWN0aW9ucyIsImRpc2FibGUiLCJzZXRTdHJva2VXaWR0aCIsImNvbnN0cmFpbnNUb0JvdW5kcyIsImJvdW5kcyIsIm9uTW91c2VEb3duIiwiZXZlbnQiLCJlZGl0RnJhbWUiLCJzdGFydERyYWciLCJnZW5lcmF0ZVBvaW50M2QiLCJpZFRhcmdldCIsInBvbHlnb24iLCJnZW5lcmF0ZUJvdW5kaW5nUG9seWdvbiIsInNlbGYiLCJjaGVja0xpbmVTZWdtZW50QXV4IiwiYSIsImIiLCJwb2ludDJkIiwicG9pbnQzZCIsImNsaWVudFRvV29ybGQiLCJwb2ludCIsImNoZWNrUG9seWdvbkF1eCIsInhWZXJ0aWNlcyIsInlWZXJ0aWNlcyIsIm1pZEFCIiwiVEhSRUUiLCJWZWN0b3IyIiwibXVsdGlwbHlTY2FsYXIiLCJtaWRBQyIsIm1pZERCIiwibWlkREMiLCJjZW50ZXIiLCJhZGQiLCJnZW5lcmF0ZUJvdW5kaW5nQm94IiwiYm91bmRpbmdCb3giLCJtaW4iLCJtYXgiLCJ2ZXJ0ZXhDb3VudCIsImJiWDAiLCJOdW1iZXIiLCJQT1NJVElWRV9JTkZJTklUWSIsImJiWTAiLCJiYlgxIiwiTkVHQVRJVkVfSU5GSU5JVFkiLCJiYlkxIiwiaSIsImJiWCIsImJiWSIsIk1hdGgiLCJoYWxmU2l6ZSIsImx0IiwiVmVjdG9yMyIsInJ0IiwicmIiLCJsYiIsIm0xIiwiTWF0cml4NCIsIm1ha2VUcmFuc2xhdGlvbiIsIm0yIiwibWFrZVJvdGF0aW9uWiIsIm0zIiwidHJhbnNmb3JtIiwibXVsdGlwbHkiLCJhcHBseU1hdHJpeDQiLCJGbG9hdDMyQXJyYXkiLCJzZXRNZXRhZGF0YSIsInNldE1vdXNlRGlzYWJsZWRXaGVuVG91Y2hpbmciLCJpc0ZpcnN0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm9uTW91c2VEb3duQmluZGVkIiwiaXNGaW5hbCIsIl90aGlzIiwic2V0VGltZW91dCIsImFkZEV2ZW50TGlzdGVuZXIiLCJIYW1tZXIiLCJNYW5hZ2VyIiwicmVjb2duaXplcnMiLCJHZXN0dXJlUmVjb2duaXplcnMiLCJzaW5nbGV0YXAiLCJoYW5kbGVQb2ludGVyRXZlbnRNb3VzZSIsImlucHV0Q2xhc3MiLCJUb3VjaElucHV0Iiwib25TaW5nbGVUYXBCaW5kZWQiLCJvbkhhbW1lcklucHV0QmluZGVkIiwib24iLCJvbk1vdXNlT3V0QmluZGVkIiwib25Nb3VzZU92ZXJCaW5kZWQiLCJjdHgiLCJ2aWV3Qm94IiwiY2FsbGJhY2siLCJnZXRQYXRoIiwiZ2V0VHJhbnNmb3JtIiwiam9pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/Markup.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupArrow.js":
/*!***********************************************!*\
  !*** ./extensions/Markup/core/MarkupArrow.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupArrow: () => (/* binding */ MarkupArrow)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModeArrow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModeArrow */ \"./extensions/Markup/core/edit-modes/EditModeArrow.js\");\n\n\n\n\n\n\n\n\n/**\n *\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupArrow(id, editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n  this.checkLineSegment = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.checkLineSegment.bind(this);\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_ARROW;\n  this.constraintHeight = true;\n\n  // Create head and tail.\n  this.head = new THREE.Vector3();\n  this.tail = new THREE.Vector3();\n  this.size.y = this.style['stroke-width'] * 3;\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n\n  this.bindDomEvents();\n}\n\nMarkupArrow.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupArrow.prototype.constructor = MarkupArrow;\n\nvar proto = MarkupArrow.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeArrow__WEBPACK_IMPORTED_MODULE_4__.EditModeArrow(this.editor);\n};\n\n/**\n * Sets top-left and bottom-right values in client space coordinates (2d).\n * Notice that for the arrow, the top left is the \"tail\" of the arrow and\n * the bottom right is the \"head\" of it.\n *\n * @param {Number} xO - tail\n * @param {Number} yO - tail\n * @param {Number} xF - head\n * @param {Number} yF - head\n */\nproto.set = function (xO, yO, xF, yF) {\n\n  var vO = new THREE.Vector2(xO, yO);\n  var vF = new THREE.Vector2(xF, yF);\n  var vDir = vF.clone().sub(vO).normalize();\n\n  this.size.x = vO.distanceTo(vF); // TODO: Clamp min length\n  this.rotation = Math.acos(vDir.dot(new THREE.Vector2(1, 0)));\n  this.rotation = yF > yO ? Math.PI * 2 - this.rotation : this.rotation;\n\n  var head = this.head;\n  var tail = this.tail;\n\n  head.set(xF, yF, 0);\n  tail.set(xO, yO, 0);\n\n  this.position.x = tail.x + (head.x - tail.x) * 0.5;\n  this.position.y = tail.y + (head.y - tail.y) * 0.5;\n\n  this.updateStyle();\n};\n\n/**\n * Changes the rotation of the markup to the given angle.\n * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetRotation edit action\n *\n * @param {Number} angle\n */\nproto.setRotation = function (angle) {\n\n  this.rotation = angle;\n\n  var xF = Math.cos(-angle);\n  var yF = Math.sin(-angle);\n  var vFDir = new THREE.Vector2(xF, yF); // already normalized\n  vFDir.multiplyScalar(this.size.x * 0.5);\n\n  var vCenter = new THREE.Vector2(this.position.x, this.position.y);\n  var vO = vCenter.clone().sub(vFDir);\n  var vF = vCenter.clone().add(vFDir);\n\n  this.head.set(vF.x, vF.y, 0);\n  this.tail.set(vO.x, vO.y, 0);\n\n  this.updateStyle();\n};\n\n/**\n * Changes the position and size of the markup.\n * This gets called by the namespace.SetSize edit action\n * @param {{x: Number, y: Number}} position - arrow's center\n * @param {Number} width - Arrow's length\n * @param {Number} height - We ignore this one because we use the arrow's stroke width instead\n */\nproto.setSize = function (position, width, height) {\n\n  var xF = Math.cos(-this.rotation);\n  var yF = Math.sin(-this.rotation);\n  var vFDir = new THREE.Vector2(xF, yF); // already normalized\n  vFDir.multiplyScalar(width * 0.5);\n\n  var vCenter = new THREE.Vector2(position.x, position.y);\n  var vO = vCenter.clone().sub(vFDir);\n  var vF = vCenter.clone().add(vFDir);\n\n  this.head.set(vF.x, vF.y, 0);\n  this.tail.set(vO.x, vO.y, 0);\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n  this.size.x = width;\n\n  this.updateStyle();\n};\n\nproto.updateStyle = function () {\n\n  var style = this.style;\n  var shape = this.shape;\n  var strokeWidth = style['stroke-width'];\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var transform = this.getTransform();\n\n  this.size.y = strokeWidth * 3;\n  this.style['fill-color'] = style['stroke-color'];\n  this.style['fill-opacity'] = style['stroke-opacity'];\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'd', this.getPath().join(' '));\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke-width', strokeWidth);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\n/**\n * Used by the EditFrame to move the markup in Client Space coordinates\n * @param {Number} x - New X location for the markup. Notice that markups are centered on this value.\n * @param {Number} y - New Y location for the markup. Notice that markups are centered on this value.\n */\nproto.setPosition = function (x, y) {\n\n  var head = this.head;\n  var tail = this.tail;\n\n  var dx = head.x - tail.x;\n  var dy = head.y - tail.y;\n\n  var xo = x + dx * 0.5;\n  var yo = y + dy * 0.5;\n\n  head.x = xo;\n  head.y = yo;\n\n  tail.x = xo - dx;\n  tail.y = yo - dy;\n\n  this.position.x = tail.x + (head.x - tail.x) * 0.5;\n  this.position.y = tail.y + (head.y - tail.y) * 0.5;\n\n  this.updateStyle();\n};\n\nproto.generatePoint3d = function (idTarget) {\n\n  var head = this.editor.positionFromMarkupsToClient(this.head.x, this.head.y);\n  var tail = this.editor.positionFromMarkupsToClient(this.tail.x, this.tail.y);\n\n  var direction = head.clone().sub(tail).normalize();\n\n  var point2d = this.checkLineSegment(head.x, head.y, head.x + direction.x * 200, head.y + direction.y * 200, idTarget);\n  var point3d = point2d && this.viewer.clientToWorld(point2d.x, point2d.y);\n\n  return point3d && point3d.point;\n};\n\nproto.setMetadata = function () {\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.head = [this.head.x, this.head.y].join(\" \");\n  metadata.tail = [this.tail.x, this.tail.y].join(\" \");\n  metadata.rotation = String(this.rotation);\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\nproto.getPath = function () {\n\n  // To build the arrow we need 7 points in total\n  // The 'default' arrow built here has the following characteristics:\n  //\n  // 1. It is built horizontally facing right\n  // 2. It's bounding rectangle has length: this.size.x\n  // 3. It's bounding rectangle has height: 2 * this.strokeWidth\n  // 4. The arrow tail's thickness is: this.strokeWidth\n  // 5. The arrow head's length is: 2/3 of (point 3)\n  // 6. The arrow head's thickness is: (point 3)\n  // 7. The arrow generated is centered in its local (0,0), meaning that\n  //    two points are placed with negative x values, and all other have\n  //    positive x values:\n  //\n  //                            (3)\\\n  //                              \\  \\\n  //             (1)-------------(2)   \\\n  //              |         (0)        (4)\n  //             (7)-------------(6)   /\n  //                              /  /\n  //                            (5)/\n  //\n\n  var sizeX = this.size.x;\n  var sizeY = this.size.y;\n  var sizeYOver3 = sizeY / 3;\n  var strokeWidth = this.style['stroke-width'];\n  var tailW = sizeX - strokeWidth * 3;\n  var headW = sizeX - tailW;\n  var spikeOffset = strokeWidth * 0.3;\n\n  return [\n  'M', -sizeX * 0.5, -sizeY * 0.5 + sizeYOver3, // (1)\n  'l', tailW, 0, // (2)\n  'l', -spikeOffset, -sizeYOver3, // (3)\n  'l', headW + spikeOffset, sizeYOver3 * 1.5, // (4)\n  'l', -headW - spikeOffset, sizeYOver3 * 1.5, // (5)\n  'l', spikeOffset, -sizeYOver3, // (6)\n  'l', -tailW, 0, // (7)\n  'z'];\n\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupArrow.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupCallout.js":
/*!*************************************************!*\
  !*** ./extensions/Markup/core/MarkupCallout.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupCallout: () => (/* binding */ MarkupCallout)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModeCallout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModeCallout */ \"./extensions/Markup/core/edit-modes/EditModeCallout.js\");\n\n\n\n\n\n\n\n\n// LMV ViewerLMV-2170 [Markup] [PDF] Text markup missing/cutoff for normal sized text.\n// If the font size of an SVG text is too small, the text is not rendered independently of its final screen size.\n// To solve the issue we multiply font size by 100 and scale down the text in its transform.\nvar FONT_SIZE_SCALE = 100;\n\nvar STARTING_WIDTH_FACTOR = 6;\n\n/**\n * Callout Markup.\n * @constructor\n */\nfunction MarkupCallout(id, editor, size) {\n\n  var styleAttributes = [\n  'font-size',\n  'stroke-width',\n  'stroke-color',\n  'stroke-opacity',\n  'fill-color',\n  'fill-opacity',\n  'font-family',\n  'font-style',\n  'font-weight'];\n\n\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n  this.createSvgElement = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createSvgElement.bind(this);\n\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_CALLOUT;\n  this.textShape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupTextSvg)();\n  this.rectShape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupGroupSvg)([this.rectShape, this.textShape]);\n  this.isFrameUsed = true;\n  this.constraintRotation = true;\n  this.constraintHeight = true;\n  this.constraintWidth = false;\n  this.size.x = size.x;\n  this.size.y = size.y;\n  this.currentText = \"\";\n  this.currentTextLines = [\"\"];\n  this.prevHighlight = false;\n  this.isHelperTextActive = false;\n\n  // Note: We could have this property be a style property.\n  // However, there is no need for this property to be exposed to the user for alteration\n  // This value is a percentage of the font size used to offset vertically 2 text lines\n  // of the same paragraph.\n  // Notice that this value is used by EditorTextInput.js\n  this.lineHeight = 130;\n\n  this.minWidth = this.getClientFontSize() * STARTING_WIDTH_FACTOR;\n\n  this.bindDomEvents();\n}\n\nMarkupCallout.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupCallout.prototype.constructor = MarkupCallout;\n\nvar proto = MarkupCallout.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeCallout__WEBPACK_IMPORTED_MODULE_4__.EditModeCallout(this.editor);\n};\n\n/**\n *\n * @param {Object} position\n * @param {Object} size\n * @param {String} textString\n */\nproto.set = function (position, size, textString, isFrameUsed) {\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n  this.size.x = size.x;\n  this.size.y = size.y;\n  this.setIsFilledFrameUsed(isFrameUsed);\n  this.setText(textString);\n};\n\nproto.setSize = function (position, width, height) {\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n  this.size.x = width;\n  this.size.y = height;\n\n  var sizeUpdateRequired = true;\n\n  if (this.isHelperTextActive) {\n    this.updateTextBoxStyle();\n  } else {\n    this.updateStyle(sizeUpdateRequired);\n  }\n};\n\nproto.setPosition = function (x, y) {\n\n  this.position.x = x;\n  this.position.y = y;\n\n  if (this.isHelperTextActive) {\n    this.updateTextBoxStyle();\n  } else {\n    this.updateStyle();\n  }\n};\n\nproto.setStyle = function (style) {\n  var stylesEqual = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.isStyleEqual)(style, this.style);\n\n  if (!stylesEqual) {\n    (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.copyStyle)(style, this.style);\n  }\n\n  this.updateStyle(!stylesEqual);\n};\n\nproto.setText = function (text) {\n\n  this.currentText = text;\n};\n\n/**\n * Returns the raw string value\n * @returns {String}\n */\nproto.getText = function () {\n\n  return this.currentText;\n};\n\n/**\n * Returns a shallow copy of the text lines used for rendering SVG text\n * @returns {Array.<String>}\n */\nproto.getTextLines = function () {\n\n  return this.currentTextLines.concat();\n};\n\nproto.highlightChanged = function () {\n\n  if (this.highlighted && this.highlighted !== this.prevHighlight) {\n    var rect = this.rectShape;\n    var text = this.textShape;\n    var strokeColor = this.highlightColor;\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'fill', strokeColor);\n\n    if (this.isFrameUsed) {\n      (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(rect, 'stroke', strokeColor);\n    }\n\n    this.prevHighlight = true;\n    return false;\n  }\n\n  return true;\n};\n\nproto.updateTextBoxStyle = function () {\n  var editMode = this.editor.duringEditMode && this.editor.editMode;\n\n  if (!editMode || editMode.type !== this.type) {\n    editMode = this.getEditMode();\n  }\n\n  editMode.updateTextBoxStyle();\n};\n\nproto.setIsHelperTextActive = function (isActive) {\n  this.isHelperTextActive = isActive;\n};\n\n/**\n * Applies data values into DOM element style/attribute(s)\n *\n */\nproto.updateStyle = function (sizeUpdateRequired) {\n\n  if (this.highlightChanged()) {\n    this.prevHighlight = false;\n    var style = this.style;\n    var rect = this.rectShape;\n    var text = this.textShape;\n    var fontSize = this.style['font-size'];\n    var fontFamily = this.style['font-family'];\n    var fontWeight = this.style['font-weight'];\n    var fontStyle = this.style['font-style'];\n    var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n    var strokeWidth = this.style['stroke-width'];\n\n    // FONT_SIZE_SCALE is used to scale up fontSize, but it is only needed in cases where the font size is too small\n    FONT_SIZE_SCALE = fontSize > 1 ? 1 : 100;\n\n    this.rebuildTextSvg(sizeUpdateRequired);\n\n    var editor = this.editor;\n    var textContainerTransform = this.getTextContainerTransform();\n    var textTransform = this.getTextTransform();\n\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'font-family', fontFamily);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'font-size', fontSize * FONT_SIZE_SCALE);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'fill', strokeColor);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'font-weight', fontWeight);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'font-style', fontStyle);\n\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setMarkupTextSvgTransform)(text, textContainerTransform, textTransform);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupTextSvgClipper)(text, this.size.x, this.size.y);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupTextSvgHitarea)(text, this.size.x, this.size.y, editor);\n\n    var path = this.getPath().join(' ');\n    var transform = this.getTransform();\n    var fillColor = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['fill-color'], style['fill-opacity']);\n\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(rect, 'd', path);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(rect, 'stroke-width', strokeWidth);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(rect, 'stroke', strokeColor);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(rect, 'transform', transform);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(rect, 'fill', fillColor);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupPathSvgHitarea)(rect, editor);\n  }\n};\n\n/**\n * Re-creates SVG tags that render SVG text.\n * Each line is placed around tspan tags which are vertically offset to each other.\n */\nproto.rebuildTextSvg = function (sizeUpdateRequired) {\n\n  // TODO: Remove the need to get text values from an object in edit mode, should be a function.\n  // editMode needs to be set to load markups in view mode\n  var editMode = this.editor.duringEditMode && this.editor.editMode;\n\n  if (!editMode || editMode.type !== this.type) {\n    editMode = this.getEditMode();\n    editMode.textInputHelper.textArea.value = this.currentText;\n    editMode.textInputHelper.setStyle(this.style);\n  }\n\n  if (editMode.textInputHelper.textMarkup && editMode.textInputHelper.textMarkup !== this) {\n    return;\n  }\n\n  var style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(editMode.textInputHelper.style);\n  var text = editMode.textInputHelper.textArea.value;\n\n  var textHelperValues = editMode.textInputHelper.getTextValuesForMarkup(this, sizeUpdateRequired);\n\n  this.currentTextLines = textHelperValues.textValues.lines;\n\n  if (textHelperValues.newPos) {\n    var position = this.editor.positionFromClientToMarkups(textHelperValues.newPos.x, textHelperValues.newPos.y);\n    var size = this.editor.sizeFromClientToMarkups(textHelperValues.width, textHelperValues.height);\n\n    this.position.x = position.x;\n    this.position.y = position.y;\n    this.size.x = size.x;\n    this.size.y = size.y;\n  }\n\n  if (editMode.selectedMarkup !== this && !editMode.textInputHelper.firstEdit) {\n    editMode.textInputHelper.textArea.value = text;\n    editMode.textInputHelper.setStyle(style);\n  }\n\n  var markup = this.createSvgElement('text');\n  markup.setAttribute('id', 'markup');\n  markup.setAttribute('alignment-baseline', 'middle');\n\n  this.textShape.childNodes[0].removeChild(this.textShape.markup);\n  this.textShape.childNodes[0].appendChild(markup);\n  this.textShape.markup = markup;\n\n  // For each line, create a tspan, add as child and offset it vertically.\n  var yOffset = this.getLineHeight() * FONT_SIZE_SCALE * (this.lineHeight / 100);\n\n  var padding = this.getLineHeight() * FONT_SIZE_SCALE / 2;\n  var dx = padding;\n  var dy = padding;\n\n  this.currentTextLines.forEach(function (line) {\n\n    var tspan = this.createSvgElement('tspan');\n\n    tspan.setAttribute('x', dx);\n    tspan.setAttribute('y', dy);\n    tspan.textContent = line;\n\n    markup.appendChild(tspan);\n    dy += yOffset;\n  }.bind(this));\n};\n\nproto.setIsFilledFrameUsed = function (isFrameUsed) {\n\n  this.isFrameUsed = isFrameUsed;\n\n  var hasRectShape = this.rectShape.parentNode === this.shape;\n  if (isFrameUsed && !hasRectShape) {\n    this.shape.insertBefore(this.rectShape, this.shape.firstChild);\n  } else if (!isFrameUsed && hasRectShape) {\n    this.shape.removeChild(this.rectShape);\n  }\n};\n\nproto.setIsFilledFrameVisible = function (isVisible) {\n\n  this.rectShape.markup.style.display = isVisible && this.isFrameUsed ? 'block' : 'none';\n};\n\nproto.setIsShapeVisible = function (isVisible) {\n\n  this.shape.style.display = isVisible ? 'block' : 'none';\n};\n\nproto.setMetadata = function () {\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.position = [this.position.x, this.position.y].join(\" \");\n  metadata.size = [this.size.x, this.size.y].join(\" \");\n  metadata.text = String(this.currentText);\n  metadata.isframeused = this.isFrameUsed ? 1 : 0;\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\n/**\n * Helper method that returns the font size in client space coords.\n * @returns {Number}\n */\nproto.getClientFontSize = function () {\n\n  return this.editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n};\n\nproto.getLineHeight = function () {\n  return this.style['font-size'];\n};\n\nproto.getTextContainerTransform = function () {\n\n  var x = this.position.x - this.size.x * 0.5;\n  var y = this.position.y + this.size.y * 0.5;\n\n  return [\n  'translate(', x, ',', y, ')',\n  'rotate(', (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.radiansToDegrees)(-this.rotation), ')',\n  'scale(1,-1)'].\n  join(' ');\n};\n\nproto.getTextTransform = function () {\n\n  var lineHeight = this.getLineHeight();\n\n  var x = this.position.x - this.size.x * 0.5;\n  var y = this.position.y + this.size.y * 0.5 - lineHeight;\n\n  return [\n  'translate(', x, ',', y, ')',\n  'rotate(', (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.radiansToDegrees)(-this.rotation), ')',\n  'scale(' + 1 / FONT_SIZE_SCALE + ',' + -1 / FONT_SIZE_SCALE + ')'].\n  join(' ');\n};\n\nproto.cloneShape = function (clone) {\n\n  clone.textShape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupTextSvg)();\n  clone.rectShape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n  clone.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupGroupSvg)([clone.rectShape, clone.textShape]);\n  clone.bindDomEvents();\n};\n\nproto.getPath = function () {\n  var strokeWidth = this.style['stroke-width'];\n\n  var w = this.size.x + strokeWidth;\n  var h = this.size.y + strokeWidth;\n  var x = -w * 0.5;\n  var y = -h * 0.5;\n\n  var path = [];\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createRectanglePath)(x, y, w, h, false, path);\n\n  return path;\n};\n\nproto.getBoundingRect = function () {\n\n  var pos = this.getClientPosition();\n  var size = this.getClientSize();\n  var strokeWidth = this.style['stroke-width'];\n  var width = this.editor.sizeFromMarkupsToClient(strokeWidth, 0).x;\n  var margin = width + _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.EDIT_FRAME_DEFAULT_MARGIN;\n\n  return {\n    x: pos.x - size.x / 2,\n    y: pos.y - size.y / 2,\n    width: size.x,\n    height: size.y,\n    margin: margin\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupCallout.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupCircle.js":
/*!************************************************!*\
  !*** ./extensions/Markup/core/MarkupCircle.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupCircle: () => (/* binding */ MarkupCircle)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModeCircle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModeCircle */ \"./extensions/Markup/core/edit-modes/EditModeCircle.js\");\n\n\n\n\n\n\n\n\n/**\n *\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupCircle(id, editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_CIRCLE;\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n\n  this.bindDomEvents();\n}\n\nMarkupCircle.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupCircle.prototype.constructor = MarkupCircle;\n\nvar proto = MarkupCircle.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeCircle__WEBPACK_IMPORTED_MODULE_4__.EditModeCircle(this.editor);\n};\n\nproto.set = function (position, size) {\n\n  this.setSize(position, size.x, size.y);\n};\n\n/**\n * Applies data values into DOM element style/attribute(s)\n *\n */\nproto.updateStyle = function () {\n\n  var style = this.style;\n  var shape = this.shape;\n  var path = this.getPath().join(' ');\n\n  var strokeWidth = this.style['stroke-width'];\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var fillColor = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['fill-color'], style['fill-opacity']);\n  var transform = this.getTransform();\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'd', path);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke-width', strokeWidth);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', fillColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\nproto.setMetadata = function () {\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.position = [this.position.x, this.position.y].join(\" \");\n  metadata.size = [this.size.x, this.size.y].join(\" \");\n  metadata.rotation = String(this.rotation);\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\nproto.getPath = function () {\n\n  var size = this.size;\n  if (size.x === 1 || size.y === 1) {\n    return [''];\n  }\n\n  var strokeWidth = this.style['stroke-width'];\n\n  var ellipseW = size.x - strokeWidth;\n  var ellipseH = size.y - strokeWidth;\n\n  var ellipseX = -0.5 * ellipseW;\n  var ellipseY = 0;\n\n  var path = [];\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createEllipsePath)(ellipseX, ellipseY, ellipseW, ellipseH, false, path);\n\n  return path;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupCircle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupCloud.js":
/*!***********************************************!*\
  !*** ./extensions/Markup/core/MarkupCloud.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupCloud: () => (/* binding */ MarkupCloud)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModeCloud__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModeCloud */ \"./extensions/Markup/core/edit-modes/EditModeCloud.js\");\n\n\n\n\n\n\n\n\n/**\n *\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupCloud(id, editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-linejoin', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_CLOUD;\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n\n  this.bindDomEvents();\n}\n\nMarkupCloud.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupCloud.prototype.constructor = MarkupCloud;\n\nvar proto = MarkupCloud.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeCloud__WEBPACK_IMPORTED_MODULE_4__.EditModeCloud(this.editor);\n};\n\n/**\n * Sets position and size in markup space coordinates.\n * @param {Object} position\n * @param {Object} size\n */\nproto.set = function (position, size) {\n\n  this.setSize(position, size.x, size.y);\n};\n\n/**\n * Applies data values into DOM element style/attribute(s)\n *\n */\nproto.updateStyle = function () {\n\n  var style = this.style;\n  var shape = this.shape;\n  var path = this.getPath().join(' ');\n\n  var strokeWidth = this.style['stroke-width'];\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var fillColor = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['fill-color'], style['fill-opacity']);\n  var transform = this.getTransform();\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'd', path);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke-width', strokeWidth);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', fillColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\nproto.setMetadata = function () {\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.position = [this.position.x, this.position.y].join(\" \");\n  metadata.size = [this.size.x, this.size.y].join(\" \");\n  metadata.rotation = String(this.rotation);\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\n/**\n * Helper function that creates intermediate points given the\n * current position and size.\n * @returns {Array}\n */\nproto.getPath = function () {\n\n  var position = this.position;\n  var size = this.size;\n  var strokeWidth = this.style['stroke-width'];\n  var radius = strokeWidth * 2;\n\n  function createArcTo(x, y, xRadius, yRadius, path) {\n\n    path.push('a');\n    path.push(xRadius);\n    path.push(yRadius);\n    path.push(0);\n    path.push(1);\n    path.push(1);\n    path.push(x);\n    path.push(y);\n\n    return path;\n  }\n\n  function createCorner(corner, xRadius, yRadius, strokeWidth, path) {\n\n    switch (corner) {\n\n      case 'LT':\n        return createArcTo(xRadius, -yRadius, xRadius, yRadius, path);\n\n      case 'RT':\n        return createArcTo(xRadius, yRadius, xRadius, yRadius, path);\n\n      case 'RB':\n        return createArcTo(-xRadius, yRadius, xRadius, yRadius, path);\n\n      case 'LB':\n        return createArcTo(-xRadius, -yRadius, xRadius, yRadius, path);\n    }\n  }\n\n  function getSideParameters(x1, x2, radius, strokeWidth) {\n\n    var diameter = radius * 2;\n    var length = Math.abs(x2 - x1 - strokeWidth);\n    var count = Math.round(length / diameter);\n\n    diameter += (length - diameter * count) / count;\n    radius = diameter * 0.5;\n\n    var xValueInset = diameter * 0.05;\n    var yValueOffset = radius * 3.5 / 3.0;\n\n    return {\n      count: count,\n      radius: radius,\n      diameter: diameter,\n      p1: { x: xValueInset, y: -yValueOffset },\n      p2: { x: diameter - xValueInset, y: -yValueOffset },\n      p3: { x: diameter, y: 0 }\n    };\n  }\n\n  function createTSide(hSidesParameters, path) {\n\n    var sp = hSidesParameters;\n    for (var i = 0; i < sp.count; ++i) {\n\n      path.push('c');\n      path.push(sp.p1.x);\n      path.push(sp.p1.y);\n      path.push(sp.p2.x);\n      path.push(sp.p2.y);\n      path.push(sp.p3.x);\n      path.push(sp.p3.y);\n    }\n\n    return path;\n  }\n\n  function createRSide(vSidesParameters, path) {\n\n    var sp = vSidesParameters;\n    for (var i = 0; i < sp.count; ++i) {\n      path.push('c');\n      path.push(-sp.p1.y);\n      path.push(sp.p1.x);\n      path.push(-sp.p2.y);\n      path.push(sp.p2.x);\n      path.push(-sp.p3.y);\n      path.push(sp.p3.x);\n    }\n\n    return path;\n  }\n\n  function createBSide(hSidesParameters, path) {\n\n    var sp = hSidesParameters;\n    for (var i = 0; i < sp.count; ++i) {\n      path.push('c');\n      path.push(-sp.p1.x);\n      path.push(-sp.p1.y);\n      path.push(-sp.p2.x);\n      path.push(-sp.p2.y);\n      path.push(-sp.p3.x);\n      path.push(-sp.p3.y);\n    }\n\n    return path;\n  }\n\n  function createLSide(vSidesParameters, path) {\n\n    var sp = vSidesParameters;\n    for (var i = 0; i < sp.count; ++i) {\n      path.push('c');\n      path.push(sp.p1.y);\n      path.push(-sp.p1.x);\n      path.push(sp.p2.y);\n      path.push(-sp.p2.x);\n      path.push(sp.p3.y);\n      path.push(-sp.p3.x);\n    }\n\n    return path;\n  }\n\n  var l = position.x;\n  var t = position.y;\n  var r = position.x + size.x;\n  var b = position.y + size.y;\n\n  var minSize = radius * 5;\n  var path = [];\n\n  if (size.x < minSize || size.y < minSize) {\n\n    var w = size.x - strokeWidth;\n    var h = size.y - strokeWidth;\n    var x = -w * 0.5;\n    var y = 0;\n\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createEllipsePath)(x, y, w, h, false, path);\n  } else {\n\n    var hSidesParameters = getSideParameters(l, r, radius, strokeWidth);\n    var vSidesParameters = getSideParameters(t, b, radius, strokeWidth);\n\n    var cornerSizeX = hSidesParameters.diameter;\n    var cornerSizeY = vSidesParameters.diameter;\n    var cornerRadiusX = hSidesParameters.radius;\n    var cornerRadiusY = vSidesParameters.radius;\n\n    hSidesParameters = getSideParameters(l + cornerSizeX, r - cornerSizeX, radius, strokeWidth);\n    vSidesParameters = getSideParameters(t + cornerSizeY, b - cornerSizeY, radius, strokeWidth);\n\n    var halfStrokeWidth = strokeWidth * 0.5;\n    let x = -size.x * 0.5 + halfStrokeWidth + cornerRadiusX;\n    let y = -size.y * 0.5 + halfStrokeWidth + cornerRadiusY * 2;\n\n    path.push('M');\n    path.push(x);\n    path.push(y);\n\n    createCorner('LT', cornerRadiusX, cornerRadiusY, strokeWidth, path);\n    createTSide(hSidesParameters, path);\n    createCorner('RT', cornerRadiusX, cornerRadiusY, strokeWidth, path);\n    createRSide(vSidesParameters, path);\n    createCorner('RB', cornerRadiusX, cornerRadiusY, strokeWidth, path);\n    createBSide(hSidesParameters, path);\n    createCorner('LB', cornerRadiusX, cornerRadiusY, strokeWidth, path);\n    createLSide(vSidesParameters, path);\n  }\n\n  path.push('z');\n  return path;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupCloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupDimension.js":
/*!***************************************************!*\
  !*** ./extensions/Markup/core/MarkupDimension.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupDimension: () => (/* binding */ MarkupDimension)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModeDimension__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModeDimension */ \"./extensions/Markup/core/edit-modes/EditModeDimension.js\");\n\n\n\n\n\n\n\n\nvar DIMENSION_MARKUP_HEIGHT = 10;\nvar TEXT_OFFSET = 2;\nvar DEFAULT_TEXT = 'Add Length';\nvar BACKGROUND_COLOR = 'none'; //'#ffffff';\n\n/**\n *\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupDimension(id, editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'font-size', 'font-family', 'font-style', 'font-weight'];\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_DIMENSION;\n  this.constraintHeight = true;\n  this.constraintWidth = true;\n\n  // bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n  this.createSvgElement = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createSvgElement.bind(this);\n  this.checkLineSegment = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.checkLineSegment.bind(this);\n  this.measureTextLines = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.measureTextLines.bind(this);\n\n\n  this.firstAnchor = new THREE.Vector3();\n  this.secondAnchor = new THREE.Vector3();\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n  this.text = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupTextSvg)();\n  this.shape.appendChild(this.text);\n  this.textSize = { x: 0, y: 0 };\n  this.initialText = DEFAULT_TEXT;\n  this.currentText = ' ';\n\n  if (!this.viewer.model.is2d()) {\n    this.preventReposition = true;\n    this.constraintRotation = true;\n  }\n\n  this.bindDomEvents();\n}\n\nMarkupDimension.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupDimension.prototype.constructor = MarkupDimension;\n\nvar proto = MarkupDimension.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeDimension__WEBPACK_IMPORTED_MODULE_4__.EditModeDimension(this.editor);\n};\n\n/**\n * Sets top-left and bottom-right values in client space coordinates (2d).\n * Notice that for the Dimension, the top left is the \"secondAnchor\" of the Dimension and\n * the bottom right is the \"firstAnchor\" of it.\n *\n * @param {Number} xO - secondAnchor\n * @param {Number} yO - secondAnchor\n * @param {Number} xF - firstAnchor\n * @param {Number} yF - firstAnchor\n */\nproto.set = function (xO, yO, xF, yF, text) {\n\n  var vO = new THREE.Vector2(xO, yO);\n  var vF = new THREE.Vector2(xF, yF);\n  var vDir = vF.clone().sub(vO).normalize();\n\n  this.size.x = vO.distanceTo(vF); // TODO: Clamp min length\n  this.rotation = Math.acos(vDir.dot(new THREE.Vector2(1, 0)));\n  this.rotation = yF > yO ? Math.PI * 2 - this.rotation : this.rotation;\n\n  var firstAnchor = this.firstAnchor;\n  var secondAnchor = this.secondAnchor;\n\n  firstAnchor.set(xF, yF, 0);\n  secondAnchor.set(xO, yO, 0);\n\n  this.position.x = secondAnchor.x + (firstAnchor.x - secondAnchor.x) * 0.5;\n  this.position.y = secondAnchor.y + (firstAnchor.y - secondAnchor.y) * 0.5;\n\n  this.currentText = text;\n  this.updateStyle();\n};\n\n/**\n * Changes the rotation of the markup to the given angle.\n * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetRotation edit action\n *\n * @param {Number} angle\n */\nproto.setRotation = function (angle) {\n\n  if ((0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.radiansToDegrees)(angle) === 90) {\n    angle = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.degreesToRadians)(-90);\n  }\n\n  this.rotation = angle;\n\n  var xF = Math.cos(-angle);\n  var yF = Math.sin(-angle);\n  var vFDir = new THREE.Vector2(xF, yF); // already normalized\n  vFDir.multiplyScalar(this.size.x * 0.5);\n\n  var vCenter = new THREE.Vector2(this.position.x, this.position.y);\n  var vO = vCenter.clone().sub(vFDir);\n  var vF = vCenter.clone().add(vFDir);\n\n  this.firstAnchor.set(vF.x, vF.y, 0);\n  this.secondAnchor.set(vO.x, vO.y, 0);\n\n  this.updateStyle();\n};\n\n/**\n * Changes the position and size of the markup.\n * This gets called by the namespace.SetSize edit action\n * @param {{x: Number, y: Number}} position - Dimension's center\n * @param {Number} width - Dimension's length\n * @param {Number} height - We ignore this one because we use the Dimension's stroke width instead\n */\nproto.setSize = function (position, width, height) {\n\n  var xF = Math.cos(-this.rotation);\n  var yF = Math.sin(-this.rotation);\n  var vFDir = new THREE.Vector2(xF, yF); // already normalized\n  vFDir.multiplyScalar(width * 0.5);\n\n  var vCenter = new THREE.Vector2(position.x, position.y);\n  var vO = vCenter.clone().sub(vFDir);\n  var vF = vCenter.clone().add(vFDir);\n\n  this.firstAnchor.set(vF.x, vF.y, 0);\n  this.secondAnchor.set(vO.x, vO.y, 0);\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n  this.size.x = width;\n\n  this.updateStyle();\n};\n\n/**\n * Helper method that returns the font size in client space coords.\n * @returns {Number}\n */\nproto.getClientFontSize = function () {\n\n  return this.editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n};\n\nproto.updateStyle = function () {\n\n  var style = this.style;\n  var shape = this.shape;\n  var strokeWidth = style['stroke-width'];\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var transform = this.getTransform();\n\n  this.rebuildTextSvg(this.currentText);\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'd', this.getPath().join(' '));\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke-width', strokeWidth / 2);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\nproto.rebuildTextSvg = function (value) {\n  var style = this.style;\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var strokeWidth = style['stroke-width'];\n  var backgroundColor = value === ' ' ? 'none' : BACKGROUND_COLOR;\n\n  var markup = this.createSvgElement('text');\n  markup.setAttribute('id', 'markup');\n  markup.setAttribute('alignment-baseline', 'middle');\n\n  var text = this.text;\n  var editor = this.editor;\n\n  text.childNodes[0].removeChild(text.markup);\n  text.childNodes[0].appendChild(markup);\n  text.markup = markup;\n\n  var tspan = this.createSvgElement('tspan');\n  tspan.textContent = value;\n  markup.appendChild(tspan);\n\n  var lineSize = this.measureTextLines([value], style, editor)[0]; // Only one line for measurement\n  var textSize = this.textSize = editor.sizeFromClientToMarkups(lineSize.width, lineSize.height);\n\n  var edgeH = DIMENSION_MARKUP_HEIGHT * strokeWidth / 2;\n  var textOffset = TEXT_OFFSET * strokeWidth / 2;\n  var offset = textSize.x + 2 * strokeWidth >= this.size.x ? textOffset + edgeH / 2 : textOffset; // If the line is too short for the given text, put it under.\n\n  this.size.y = edgeH + textSize.y + offset;\n\n  var textTransform = this.getTextTransform(4 / 5 * textSize.y + offset, true); // Text height is Always 4/5 of the entire label height.\n  var backgroundTransform = this.getTextTransform(textSize.y + offset, false);\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'font-family', style['font-family']);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'font-size', style['font-size']);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'font-weight', style['font-weight']);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'font-style', style['font-style']);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'text-rendering', 'auto');\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(text, 'fill', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setMarkupTextSvgTransform)(text, backgroundTransform, textTransform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupTextSvgBackground)(text, textSize.x, textSize.y, backgroundColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupTextSvgClipper)(text, textSize.x, textSize.y);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupTextSvgHitarea)(text, textSize.x, textSize.y, editor);\n};\n\nproto.shouldFlip = function () {\n  return this.firstAnchor.x < this.secondAnchor.x;\n};\n\nproto.getTextTransform = function (offset, inverse) {\n\n  var flip = this.shouldFlip() ? -1 : 1;\n\n  inverse = inverse ? -1 : 1;\n\n  if ((0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.radiansToDegrees)(this.rotation) === 90) {\n    this.rotation = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.degreesToRadians)(-90);\n  }\n\n  return [\n  'translate(', this.position.x, ',', this.position.y, ')',\n  'rotate(', (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.radiansToDegrees)(-this.rotation), ')',\n  'translate(', -flip * this.textSize.x / 2, ',', -flip * offset, ')',\n  'scale(' + flip + ',' + flip * inverse + ')'].\n  join(' ');\n};\n\n/**\n * Used by the EditFrame to move the markup in Client Space coordinates\n * @param {Number} x - New X location for the markup. Notice that markups are centered on this value.\n * @param {Number} y - New Y location for the markup. Notice that markups are centered on this value.\n */\nproto.setPosition = function (x, y) {\n\n  var firstAnchor = this.firstAnchor;\n  var secondAnchor = this.secondAnchor;\n\n  var dx = firstAnchor.x - secondAnchor.x;\n  var dy = firstAnchor.y - secondAnchor.y;\n\n  var xo = x + dx * 0.5;\n  var yo = y + dy * 0.5;\n\n  firstAnchor.x = xo;\n  firstAnchor.y = yo;\n\n  secondAnchor.x = xo - dx;\n  secondAnchor.y = yo - dy;\n\n  this.position.x = secondAnchor.x + (firstAnchor.x - secondAnchor.x) * 0.5;\n  this.position.y = secondAnchor.y + (firstAnchor.y - secondAnchor.y) * 0.5;\n\n  this.updateStyle();\n};\n\nproto.generatePoint3d = function (idTarget) {\n\n  var firstAnchor = this.editor.positionFromMarkupsToClient(this.firstAnchor.x, this.firstAnchor.y);\n  var secondAnchor = this.editor.positionFromMarkupsToClient(this.secondAnchor.x, this.secondAnchor.y);\n\n  var direction = firstAnchor.clone().sub(secondAnchor).normalize();\n\n  var point2d = this.checkLineSegment(firstAnchor.x, firstAnchor.y, firstAnchor.x + direction.x * 200, firstAnchor.y + direction.y * 200, idTarget);\n  var point3d = point2d && this.viewer.clientToWorld(point2d.x, point2d.y);\n\n  return point3d && point3d.point;\n};\n\nproto.setMetadata = function () {\n\n  this.text.setAttribute('pointer-events', 'none');\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.firstAnchor = [this.firstAnchor.x, this.firstAnchor.y].join(\" \");\n  metadata.secondAnchor = [this.secondAnchor.x, this.secondAnchor.y].join(\" \");\n  metadata.text = String(this.currentText);\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\n\n/**\n * Returns the raw string value\n * @returns {String}\n */\nproto.getText = function () {\n\n  // if the current text is 'Add Length', you want the textbox will be empty when the user open it.\n  return this.currentText === this.initialText ? '' : this.currentText;\n};\n\nproto.getPath = function () {\n\n  //   1_                            _4\n  //   | |                          | |\n  //   | |2                        3| |\n  //  0|  --------------------------  |\n  //   |  --------------------------  |\n  //   | |7                       6 | |\n  //   |_|          TEXT            |_|\n  //   8                             5\n\n  var strokeWidth = this.style['stroke-width'];\n  var segmentLength = this.size.x - strokeWidth / 2; // segment length (p2 to p3 length)\n  var edgeH = DIMENSION_MARKUP_HEIGHT * strokeWidth / 2; // Edge height (p1 to p8 length)\n\n  return [\n  'M', -segmentLength * 0.5, 0, // 0\n  'l', 0, edgeH / 2, // 1\n  'l', 0, -edgeH / 2, // 2\n  'l', segmentLength, 0, // 3\n  'l', 0, edgeH / 2, // 4\n  'l', 0, -edgeH, // 5\n  'l', 0, edgeH / 2, // 6\n  'l', -segmentLength, 0, // 7\n  'l', 0, -edgeH / 2, // 8\n  'z'];\n\n};\n\nproto.cloneShape = function (clone) {\n\n  clone.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n  clone.text = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupTextSvg)();\n  clone.shape.appendChild(clone.text);\n  clone.bindDomEvents();\n};\n\nproto.getBoundingRect = function () {\n  var pos = this.getClientPosition();\n  var size = this.getClientSize();\n  return {\n    x: pos.x - size.x / 2,\n    y: pos.y - size.y / 2,\n    width: size.x,\n    height: size.y\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupDimension.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupEvents.js":
/*!************************************************!*\
  !*** ./extensions/Markup/core/MarkupEvents.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EVENT_EDITFRAME_EDITION_END: () => (/* binding */ EVENT_EDITFRAME_EDITION_END),\n/* harmony export */   EVENT_EDITFRAME_EDITION_START: () => (/* binding */ EVENT_EDITFRAME_EDITION_START),\n/* harmony export */   EVENT_EDITMODE_CHANGED: () => (/* binding */ EVENT_EDITMODE_CHANGED),\n/* harmony export */   EVENT_EDITMODE_CREATION_BEGIN: () => (/* binding */ EVENT_EDITMODE_CREATION_BEGIN),\n/* harmony export */   EVENT_EDITMODE_CREATION_END: () => (/* binding */ EVENT_EDITMODE_CREATION_END),\n/* harmony export */   EVENT_EDITMODE_ENTER: () => (/* binding */ EVENT_EDITMODE_ENTER),\n/* harmony export */   EVENT_EDITMODE_LEAVE: () => (/* binding */ EVENT_EDITMODE_LEAVE),\n/* harmony export */   EVENT_HISTORY_CHANGED: () => (/* binding */ EVENT_HISTORY_CHANGED),\n/* harmony export */   EVENT_MARKUP_CANCEL_EDITION: () => (/* binding */ EVENT_MARKUP_CANCEL_EDITION),\n/* harmony export */   EVENT_MARKUP_DELETE_EDITION: () => (/* binding */ EVENT_MARKUP_DELETE_EDITION),\n/* harmony export */   EVENT_MARKUP_DESELECT: () => (/* binding */ EVENT_MARKUP_DESELECT),\n/* harmony export */   EVENT_MARKUP_DRAGGING: () => (/* binding */ EVENT_MARKUP_DRAGGING),\n/* harmony export */   EVENT_MARKUP_ENTER_EDITION: () => (/* binding */ EVENT_MARKUP_ENTER_EDITION),\n/* harmony export */   EVENT_MARKUP_SELECTED: () => (/* binding */ EVENT_MARKUP_SELECTED)\n/* harmony export */ });\n\n\n/**\n * Fired whenever the drawing tool changes. For example, when the Arrow drawing\n * tool changes into the Rectangle drawing tool.\n *\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_EDITMODE_CHANGED\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n */\nconst EVENT_EDITMODE_CHANGED = \"EVENT_EDITMODE_CHANGED\";\n\n/**\n * Fired when Edit mode has been enabled, which allows the end user to start\n * drawing markups over the Viewer canvas.\n *\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_EDITMODE_ENTER\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n */\nconst EVENT_EDITMODE_ENTER = \"EVENT_EDITMODE_ENTER\";\n\n/**\n * Fired when Edit mode has been disabled, preventing the end user from\n * drawing markups over the Viewer canvas.\n *\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_EDITMODE_LEAVE\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n */\nconst EVENT_EDITMODE_LEAVE = \"EVENT_EDITMODE_LEAVE\";\n\n/**\n * Fired when a drawn markup has been selected by the end user with a click command.\n *\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_MARKUP_SELECTED\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {object}\n * @property {Markup} markup The selected markup\n */\nconst EVENT_MARKUP_SELECTED = \"EVENT_MARKUP_SELECTED\";\n\n/**\n * Fired when a drawn markup is being dragged over the Viewer canvas.\n *\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_MARKUP_DRAGGING\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n */\nconst EVENT_MARKUP_DRAGGING = \"EVENT_MARKUP_DRAGGING\";\n\n/**\n * Internal usage only.\n *\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_MARKUP_ENTER_EDITION\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n * @private\n */\nconst EVENT_MARKUP_ENTER_EDITION = \"EVENT_MARKUP_ENTER_EDITION\";\n\n/**\n * Internal usage only.\n *\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_MARKUP_CANCEL_EDITION\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n * @private\n */\nconst EVENT_MARKUP_CANCEL_EDITION = \"EVENT_MARKUP_CANCEL_EDITION\";\n\n/**\n * Internal usage only.\n *\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_MARKUP_DELETE_EDITION\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n * @private\n */\nconst EVENT_MARKUP_DELETE_EDITION = \"EVENT_MARKUP_DELETE_EDITION\";\n\n/**\n * @typedef {object} EventHistoryChangedData\n The event data to identify the action and target for MarkupCore.EVENT_HISTORY_CHANGED event.\n * @property {string} action A string identifier for the action taken, like redo, undo, cancel, execute, clear\n * @property {number} targetId A number targetId based on the action.\n */\n\n/**\n * Fired whenever a new undo or redo action is available.\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_HISTORY_CHANGED\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {object}\n * @property {EventHistoryChangedData} data The event data to identify the action and target\n *\n */\nconst EVENT_HISTORY_CHANGED = \"EVENT_HISTORY_CHANGED\";\n\n/**\n * Fired when a markup creation begins.\n * For example, as soon as the user starts dragging with the mouse\n * to draw an arrow on the screen.\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_EDITMODE_CREATION_BEGIN\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n */\nconst EVENT_EDITMODE_CREATION_BEGIN = \"EVENT_EDITMODE_CREATION_BEGIN\";\n\n/**\n * Fired when a markup has been created.\n * For example, as soon as the user stops dragging and releases the\n * mouse button to finish drawing an arrow on the screen\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_EDITMODE_CREATION_END\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n */\nconst EVENT_EDITMODE_CREATION_END = \"EVENT_EDITMODE_CREATION_END\";\n\n/**\n * Fired when a markup is no longer selected.\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_MARKUP_DESELECT\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {object}\n * @property {number} markupId The id of the selected markup\n */\nconst EVENT_MARKUP_DESELECT = \"EVENT_MARKUP_DESELECT\";\n\n/**\n * The selected markup is being modified, i.e, resizing, rotating, moving around\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_EDITFRAME_EDITION_START\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n */\nconst EVENT_EDITFRAME_EDITION_START = \"EVENT_EDITFRAME_EDITION_START\";\n\n/**\n * The selected markup is no longer being modified\n * @event Autodesk.Viewing.Extensions.MarkupsCore#EVENT_EDITFRAME_EDITION_END\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @type {string}\n */\nconst EVENT_EDITFRAME_EDITION_END = \"EVENT_EDITFRAME_EDITION_END\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupEvents.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupFreehand.js":
/*!**************************************************!*\
  !*** ./extensions/Markup/core/MarkupFreehand.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupFreehand: () => (/* binding */ MarkupFreehand)\n/* harmony export */ });\n/* harmony import */ var _MarkupPen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MarkupPen */ \"./extensions/Markup/core/MarkupPen.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _edit_modes_EditModeFreehand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./edit-modes/EditModeFreehand */ \"./extensions/Markup/core/edit-modes/EditModeFreehand.js\");\n\n\n\n\n\n\n\n/**\n *\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupFreehand(id, editor) {\n\n  _MarkupPen__WEBPACK_IMPORTED_MODULE_0__.MarkupPen.call(this, id, editor);\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_FREEHAND;\n}\n\nMarkupFreehand.prototype = Object.create(_MarkupPen__WEBPACK_IMPORTED_MODULE_0__.MarkupPen.prototype);\nMarkupFreehand.prototype.constructor = MarkupFreehand;\n\nvar proto = MarkupFreehand.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeFreehand__WEBPACK_IMPORTED_MODULE_2__.EditModeFreehand(this.editor);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL01hcmt1cEZyZWVoYW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTs7QUFFMkI7QUFDSztBQUNvQjs7O0FBRzdEO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNHLGNBQWNBLENBQUNDLEVBQUUsRUFBRUMsTUFBTSxFQUFFOztFQUV2Q0wsaURBQVMsQ0FBQ00sSUFBSSxDQUFDLElBQUksRUFBRUYsRUFBRSxFQUFFQyxNQUFNLENBQUM7RUFDaEMsSUFBSSxDQUFDRSxJQUFJLEdBQUdOLDhEQUFnQztBQUNoRDs7QUFFQUUsY0FBYyxDQUFDTSxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDWCxpREFBUyxDQUFDUyxTQUFTLENBQUM7QUFDN0ROLGNBQWMsQ0FBQ00sU0FBUyxDQUFDRyxXQUFXLEdBQUdULGNBQWM7O0FBRXJELElBQUlVLEtBQUssR0FBR1YsY0FBYyxDQUFDTSxTQUFTOztBQUVwQ0ksS0FBSyxDQUFDQyxXQUFXLEdBQUcsWUFBVzs7RUFFM0IsT0FBTyxJQUFJWiwwRUFBZ0IsQ0FBQyxJQUFJLENBQUNHLE1BQU0sQ0FBQztBQUM1QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvTWFya3VwRnJlZWhhbmQuanM/NjUzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IE1hcmt1cFBlbiB9IGZyb20gJy4vTWFya3VwUGVuJztcbmltcG9ydCAqIGFzIE1hcmt1cFR5cGVzIGZyb20gJy4vTWFya3VwVHlwZXMnO1xuaW1wb3J0IHsgRWRpdE1vZGVGcmVlaGFuZCB9IGZyb20gJy4vZWRpdC1tb2Rlcy9FZGl0TW9kZUZyZWVoYW5kJztcblxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWRcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIE1hcmt1cEZyZWVoYW5kKGlkLCBlZGl0b3IpIHtcblxuICAgICAgICBNYXJrdXBQZW4uY2FsbCh0aGlzLCBpZCwgZWRpdG9yKTtcbiAgICAgICAgdGhpcy50eXBlID0gTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfRlJFRUhBTkQ7XG4gICAgfVxuXG4gICAgTWFya3VwRnJlZWhhbmQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShNYXJrdXBQZW4ucHJvdG90eXBlKTtcbiAgICBNYXJrdXBGcmVlaGFuZC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBNYXJrdXBGcmVlaGFuZDtcblxuICAgIHZhciBwcm90byA9IE1hcmt1cEZyZWVoYW5kLnByb3RvdHlwZTtcblxuICAgIHByb3RvLmdldEVkaXRNb2RlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBFZGl0TW9kZUZyZWVoYW5kKHRoaXMuZWRpdG9yKTtcbiAgICB9O1xuXG4iXSwibmFtZXMiOlsiTWFya3VwUGVuIiwiTWFya3VwVHlwZXMiLCJFZGl0TW9kZUZyZWVoYW5kIiwiTWFya3VwRnJlZWhhbmQiLCJpZCIsImVkaXRvciIsImNhbGwiLCJ0eXBlIiwiTUFSS1VQX1RZUEVfRlJFRUhBTkQiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwiZ2V0RWRpdE1vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupFreehand.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupHighlight.js":
/*!***************************************************!*\
  !*** ./extensions/Markup/core/MarkupHighlight.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupHighlight: () => (/* binding */ MarkupHighlight)\n/* harmony export */ });\n/* harmony import */ var _MarkupPen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MarkupPen */ \"./extensions/Markup/core/MarkupPen.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _edit_modes_EditModeHighlight__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./edit-modes/EditModeHighlight */ \"./extensions/Markup/core/edit-modes/EditModeHighlight.js\");\n\n\n\n\n\n\n/**\n *\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupHighlight(id, editor) {\n\n  _MarkupPen__WEBPACK_IMPORTED_MODULE_0__.MarkupPen.call(this, id, editor);\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_HIGHLIGHT;\n}\n\nMarkupHighlight.prototype = Object.create(_MarkupPen__WEBPACK_IMPORTED_MODULE_0__.MarkupPen.prototype);\nMarkupHighlight.prototype.constructor = MarkupHighlight;\n\nvar proto = MarkupHighlight.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeHighlight__WEBPACK_IMPORTED_MODULE_2__.EditModeHighlight(this.editor);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL01hcmt1cEhpZ2hsaWdodC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRTJCO0FBQ0s7QUFDc0I7O0FBRS9EO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNHLGVBQWVBLENBQUNDLEVBQUUsRUFBRUMsTUFBTSxFQUFFOztFQUV4Q0wsaURBQVMsQ0FBQ00sSUFBSSxDQUFDLElBQUksRUFBRUYsRUFBRSxFQUFFQyxNQUFNLENBQUM7RUFDaEMsSUFBSSxDQUFDRSxJQUFJLEdBQUdOLCtEQUFpQztBQUNqRDs7QUFFQUUsZUFBZSxDQUFDTSxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDWCxpREFBUyxDQUFDUyxTQUFTLENBQUM7QUFDOUROLGVBQWUsQ0FBQ00sU0FBUyxDQUFDRyxXQUFXLEdBQUdULGVBQWU7O0FBRXZELElBQUlVLEtBQUssR0FBR1YsZUFBZSxDQUFDTSxTQUFTOztBQUVyQ0ksS0FBSyxDQUFDQyxXQUFXLEdBQUcsWUFBVzs7RUFFM0IsT0FBTyxJQUFJWiw0RUFBaUIsQ0FBQyxJQUFJLENBQUNHLE1BQU0sQ0FBQztBQUM3QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvTWFya3VwSGlnaGxpZ2h0LmpzPzY2ODgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBNYXJrdXBQZW4gfSBmcm9tICcuL01hcmt1cFBlbic7XG5pbXBvcnQgKiBhcyBNYXJrdXBUeXBlcyBmcm9tICcuL01hcmt1cFR5cGVzJztcbmltcG9ydCB7IEVkaXRNb2RlSGlnaGxpZ2h0IH0gZnJvbSAnLi9lZGl0LW1vZGVzL0VkaXRNb2RlSGlnaGxpZ2h0JztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBNYXJrdXBIaWdobGlnaHQoaWQsIGVkaXRvcikge1xuXG4gICAgICAgIE1hcmt1cFBlbi5jYWxsKHRoaXMsIGlkLCBlZGl0b3IpO1xuICAgICAgICB0aGlzLnR5cGUgPSBNYXJrdXBUeXBlcy5NQVJLVVBfVFlQRV9ISUdITElHSFQ7XG4gICAgfVxuXG4gICAgTWFya3VwSGlnaGxpZ2h0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoTWFya3VwUGVuLnByb3RvdHlwZSk7XG4gICAgTWFya3VwSGlnaGxpZ2h0LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IE1hcmt1cEhpZ2hsaWdodDtcblxuICAgIHZhciBwcm90byA9IE1hcmt1cEhpZ2hsaWdodC5wcm90b3R5cGU7XG5cbiAgICBwcm90by5nZXRFZGl0TW9kZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHJldHVybiBuZXcgRWRpdE1vZGVIaWdobGlnaHQodGhpcy5lZGl0b3IpO1xuICAgIH07XG5cbiJdLCJuYW1lcyI6WyJNYXJrdXBQZW4iLCJNYXJrdXBUeXBlcyIsIkVkaXRNb2RlSGlnaGxpZ2h0IiwiTWFya3VwSGlnaGxpZ2h0IiwiaWQiLCJlZGl0b3IiLCJjYWxsIiwidHlwZSIsIk1BUktVUF9UWVBFX0hJR0hMSUdIVCIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJnZXRFZGl0TW9kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupHighlight.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupPen.js":
/*!*********************************************!*\
  !*** ./extensions/Markup/core/MarkupPen.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupPen: () => (/* binding */ MarkupPen)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n * Base class for Pen Markup rendering (currently freehand and highlighter)\n *\n * Derived classes must implement getEditMode()\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupPen(id, editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.addMarkupMetadata.bind(this);\n\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.createMarkupPathSvg)();\n\n  this.bindDomEvents();\n}\n\nMarkupPen.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupPen.prototype.constructor = MarkupPen;\n\nvar proto = MarkupPen.prototype;\n\n/**\n * Sets top-left and bottom-right values in client space coordinates (2d).\n *\n * @param position\n * @param size\n * @param locations\n */\nproto.set = function (position, size, locations, isAbsoluteCoords) {\n\n  this.rotation = 0; // Reset angle //\n  this.isAbsoluteCoords = isAbsoluteCoords;\n  if (this.isAbsoluteCoords) {\n    this.updatePath(locations);\n  } else {\n    this.locations = locations.slice(0);\n\n    this.size.x = size.x === 0 ? 1 : size.x;\n    this.size.y = size.y === 0 ? 1 : size.y;\n\n    this.setSize(position, size.x, size.y);\n    this.updateStyle();\n  }\n};\n\nproto.setPosition = function (x, y) {\n\n  this.position.x = x;\n  this.position.y = y;\n\n  var shape = this.shape;\n  var transform = this.getTransform();\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\n/**\n * Applies data values into DOM element style/attribute(s)\n *\n */\nproto.updateStyle = function () {\n\n  var style = this.style;\n  var shape = this.shape;\n  var path = this.getPath().join(' ');\n\n  var strokeWidth = this.style['stroke-width'];\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var fillColor = 'none';\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.setAttributeToMarkupSvg)(shape, 'stroke-width', strokeWidth);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.setAttributeToMarkupSvg)(shape, 'stroke-linejoin', 'round');\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.setAttributeToMarkupSvg)(shape, 'stroke-linecap', 'round');\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.setAttributeToMarkupSvg)(shape, 'stroke', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.setAttributeToMarkupSvg)(shape, 'fill', fillColor);\n\n  this.updatePath(path);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\nproto.updatePath = function (path) {\n  var shape = this.shape;\n  var transform = this.isAbsoluteCoords ? 'scale(1)' : this.getTransform();\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.setAttributeToMarkupSvg)(shape, 'd', path);\n};\n\n/**\n * Changes the position and size of the markup.\n * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetSize edit action\n * @param {{x: Number, y: Number}} position\n * @param {Number} width\n * @param {Number} height\n */\nproto.setSize = function (position, width, height) {\n\n  width = width === 0 ? 1 : width;\n  height = height === 0 ? 1 : height;\n\n  var locations = this.locations;\n  var locationsCount = locations.length;\n\n  var scaleX = width / this.size.x;\n  var scaleY = height / this.size.y;\n\n  for (var i = 0; i < locationsCount; ++i) {\n\n    var point = locations[i];\n\n    point.x *= scaleX;\n    point.y *= scaleY;\n  }\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n\n  this.size.x = width;\n  this.size.y = height;\n\n  this.updateStyle();\n};\n\nproto.setMetadata = function () {\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.position = [this.position.x, this.position.y].join(\" \");\n  metadata.size = [this.size.x, this.size.y].join(\" \");\n  metadata.rotation = String(this.rotation);\n  metadata.locations = this.locations.map(function (point) {\n    return [point.x, point.y].join(\" \");\n  }).join(\" \");\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\nproto.getPath = function () {\n\n  var path = [];\n  var locations = this.locations;\n  var locationsCount = locations.length;\n\n  if (locationsCount > 1) {\n\n    path.push('M');\n    path.push(+locations[0].x.toFixed(6));\n    path.push(+locations[0].y.toFixed(6));\n\n    for (var i = 1; i < locationsCount; ++i) {\n\n      var locationA = locations[i - 1];\n      var locationB = locations[i];\n\n      path.push('l');\n      path.push(+(locationB.x - locationA.x).toFixed(6));\n      path.push(+(locationB.y - locationA.y).toFixed(6));\n    }\n  }\n\n  return path;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupPen.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupPolyLine.js":
/*!**************************************************!*\
  !*** ./extensions/Markup/core/MarkupPolyLine.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupPolyline: () => (/* binding */ MarkupPolyline)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModePolyline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModePolyline */ \"./extensions/Markup/core/edit-modes/EditModePolyline.js\");\n\n\n\n\n\n\n\n\n/**\n *\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupPolyline(id, editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_POLYLINE;\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)('path');\n\n  this.bindDomEvents();\n}\n\nMarkupPolyline.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupPolyline.prototype.constructor = MarkupPolyline;\n\nvar proto = MarkupPolyline.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModePolyline__WEBPACK_IMPORTED_MODULE_4__.EditModePolyline(this.editor);\n};\n\n/**\n * Sets top-left and bottom-right values in client space coordinates (2d).\n *\n * @param position\n * @param size\n * @param locations\n * @param closed\n */\nproto.set = function (position, size, locations, closed) {\n\n  this.rotation = 0; // Reset angle //\n  this.locations = locations.concat();\n\n  this.size.x = size.x === 0 ? 1 : size.x;\n  this.size.y = size.y === 0 ? 1 : size.y;\n\n  this.closed = closed;\n\n  this.setSize(position, size.x, size.y);\n  this.updateStyle();\n};\n\n\n/**\n * Applies data values into DOM element style/attribute(s)\n *\n */\nproto.updateStyle = function () {\n\n  var style = this.style;\n  var shape = this.shape;\n\n  var strokeWidth = this.style['stroke-width'];\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var fillColor = this.closed ? (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['fill-color'], style['fill-opacity']) : 'none';\n  var transform = this.getTransform();\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'd', this.getPath().join(' '));\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke-width', strokeWidth);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', fillColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\n/**\n * Changes the position and size of the markup.\n * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetSize edit action\n * @param {{x: Number, y: Number}} position\n * @param {Number} width\n * @param {Number} height\n */\nproto.setSize = function (position, width, height) {\n\n  width = width === 0 ? 1 : width;\n  height = height === 0 ? 1 : height;\n\n  var locations = this.locations;\n  var locationsCount = locations.length;\n\n  var scaleX = width / this.size.x;\n  var scaleY = height / this.size.y;\n\n  for (var i = 0; i < locationsCount; ++i) {\n\n    var point = locations[i];\n\n    point.x *= scaleX;\n    point.y *= scaleY;\n  }\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n\n  this.size.x = width;\n  this.size.y = height;\n\n  this.updateStyle();\n};\n\nproto.setMetadata = function () {\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.position = [this.position.x, this.position.y].join(\" \");\n  metadata.size = [this.size.x, this.size.y].join(\" \");\n  metadata.rotation = String(this.rotation);\n  metadata.locations = this.locations.map(function (point) {\n    return [point.x, point.y].join(\" \");\n  }).join(\" \");\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\nproto.getPath = function () {\n\n  var path = [];\n  var locations = this.locations;\n  var locationsCount = locations.length;\n\n  if (locationsCount === 0) {\n    return ' ';\n  }\n\n  path.push('M');\n  path.push(locations[0].x);\n  path.push(locations[0].y);\n\n  for (var i = 1; i < locationsCount; ++i) {\n\n    var locationA = locations[i - 1];\n    var locationB = locations[i];\n\n    path.push('l');\n    path.push(locationB.x - locationA.x);\n    path.push(locationB.y - locationA.y);\n  }\n\n  this.closed && path.push('z');\n  return path;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupPolyLine.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupPolycloud.js":
/*!***************************************************!*\
  !*** ./extensions/Markup/core/MarkupPolycloud.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupPolycloud: () => (/* binding */ MarkupPolycloud)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModePolycloud__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModePolycloud */ \"./extensions/Markup/core/edit-modes/EditModePolycloud.js\");\n\n\n\n\n\n\n\n\n/**\n *\n * @param id\n * @param editor\n * @constructor\n */\nfunction MarkupPolycloud(id, editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_POLYCLOUD;\n  this.locations = [];\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n\n  this.bindDomEvents();\n}\n\nMarkupPolycloud.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupPolycloud.prototype.constructor = MarkupPolycloud;\n\nvar proto = MarkupPolycloud.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModePolycloud__WEBPACK_IMPORTED_MODULE_4__.EditModePolycloud(this.editor);\n};\n\n/**\n *\n * Sets top-left and bottom-right values in client space coordinates (2d).\n * @param position\n * @param size\n * @param locations\n * @param closed\n */\nproto.set = function (position, size, locations, closed) {\n\n  this.rotation = 0; // Reset angle //\n  this.locations = locations.concat();\n\n  this.size.x = size.x === 0 ? 1 : size.x;\n  this.size.y = size.y === 0 ? 1 : size.y;\n\n  this.closed = closed;\n\n  this.setSize(position, size.x, size.y);\n  this.updateStyle();\n};\n\n/**\n * Applies data values into DOM element style/attribute(s)\n *\n */\nproto.updateStyle = function () {\n\n  var style = this.style;\n  var shape = this.shape;\n  var path = this.getPath().join(' ');\n\n  var strokeWidth = this.style['stroke-width'];\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var fillColor = this.closed ? (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['fill-color'], style['fill-opacity']) : 'none';\n  var transform = this.getTransform();\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'd', path);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke-width', strokeWidth);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', fillColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\n/**\n * Changes the position and size of the markup.\n * This gets called by the Autodesk.Viewing.Extensions.Markups.Core.SetSize edit action\n * @param {{x: Number, y: Number}} position\n * @param {Number} width\n * @param {Number} height\n */\nproto.setSize = function (position, width, height) {\n\n  width = width === 0 ? 1 : width;\n  height = height === 0 ? 1 : height;\n\n  var locations = this.locations;\n  var locationsCount = locations.length;\n\n  var scaleX = width / this.size.x;\n  var scaleY = height / this.size.y;\n\n  for (var i = 0; i < locationsCount; ++i) {\n\n    var point = locations[i];\n\n    point.x *= scaleX;\n    point.y *= scaleY;\n  }\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n\n  this.size.x = width;\n  this.size.y = height;\n\n  this.updateStyle();\n};\n\nproto.setMetadata = function () {\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.position = [this.position.x, this.position.y].join(\" \");\n  metadata.size = [this.size.x, this.size.y].join(\" \");\n  metadata.rotation = String(this.rotation);\n  metadata.locations = this.locations.map(function (point) {\n    return [point.x, point.y].join(\" \");\n  }).join(\" \");\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\nproto.getPath = function () {\n\n  function getOrientation(locations) {\n\n    switch (locations.length) {\n\n      case 0:\n      case 1:\n        return 1;\n      case 2:\n\n        var fstPoint = locations[0];\n        var sndPoint = locations[1];\n\n        return fstPoint.y > sndPoint.y ? 1 : -1;\n      default:\n\n        var pointA = locations[0];\n        var pointB = locations[1];\n        var pointC = locations[2];\n\n        var orientation =\n        (pointB.x - pointA.x) * (pointB.y + pointA.y) +\n        (pointC.x - pointB.x) * (pointC.y + pointB.y);\n\n        return orientation < 0 ? 1 : -1;\n    }\n  }\n\n  function getSides(locations, closed) {\n\n    var locationsCount = locations.length;\n\n    var sides = [];\n    var sidesCount = locationsCount - (closed ? 0 : 1);\n\n    for (var i = 0; i < sidesCount; ++i) {\n\n      var locationA = locations[i];\n      var locationB = locations[(i + 1) % locationsCount];\n\n      var dx = locationB.x - locationA.x;\n      var dy = locationB.y - locationA.y;\n\n      var length = Math.sqrt(dx * dx + dy * dy);\n\n      sides.push({\n        index: i,\n        pointA: new THREE.Vector3(locationA.x, locationA.y, 0),\n        pointB: new THREE.Vector3(locationB.x, locationB.y, 0),\n        vecAB: new THREE.Vector3(dx / length, dy / length, 0),\n        vecBA: new THREE.Vector3(-dx / length, -dy / length, 0),\n        length: length\n      });\n    }\n\n    return sides;\n  }\n\n  function updateCorners(side, cornerA, cornerB, orientation) {\n    var rA = cornerA.radius;\n    var rB = cornerB.radius;\n    var D = side.length;\n\n    if (rA > 0 && rB > 0 && rA + rB > D && Math.abs(rA - rB) < D) {\n      // Corner arcs overlap, so correct them by finding the circle-circle intersection\n      var a = side.pointA.x;\n      var b = side.pointA.y;\n      var c = side.pointB.x;\n      var d = side.pointB.y;\n\n      var delta = 0.25 * Math.sqrt((D + rA + rB) * (D + rA - rB) * (D - rA + rB) * (-D + rA + rB));\n      var xS = (a + c) / 2 + (c - a) * (rA * rA - rB * rB) / (2 * D * D);\n      var xT = 2 * (b - d) / (D * D) * delta;\n      var yS = (b + d) / 2 + (d - b) * (rA * rA - rB * rB) / (2 * D * D);\n      var yT = 2 * (a - c) / (D * D) * delta;\n      var x1 = xS + xT;\n      var x2 = xS - xT;\n      var y1 = yS - yT;\n      var y2 = yS + yT;\n      var testPointOnCircle = Math.abs((x1 - a) * (x1 - a) + (y1 - b) * (y1 - b) - rA * rA);\n      if (testPointOnCircle > 0.0000001) {\n        var tmp = y1;\n        y1 = y2;\n        y2 = tmp;\n      }\n\n      var intersec = new THREE.Vector3(x1, y1, 0);\n      var intersecSide = Math.sign(intersec.clone().sub(side.pointA).cross(side.vecAB).z);\n      if (intersecSide !== orientation) {\n        intersec.set(x2, y2, 0);\n      }\n\n      cornerA.pointB = intersec.clone();\n      cornerB.pointA = intersec.clone();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function updateSides(sides, corners, radius, orientation) {\n\n    var diameter = radius * 2;\n    var sidesCount = sides.length;\n\n    for (var i = 0; i < sidesCount; ++i) {\n\n      var side = sides[i];\n      var cornerA = corners[i];\n      var cornerB = corners[(i + 1) % sidesCount];\n\n      side.bodyA = side.vecAB.clone().multiplyScalar(cornerA.radius).add(side.pointA);\n      side.bodyB = side.vecBA.clone().multiplyScalar(cornerB.radius).add(side.pointB);\n\n      if (updateCorners(side, cornerA, cornerB, orientation)) {\n        side.body = 0;\n        side.bodyDiameter = side.bodyCount = 0;\n      } else {\n        side.body = side.bodyB.clone().sub(side.bodyA).length();\n        side.bodyCount = Math.round(side.body / diameter);\n        if (side.bodyCount === 0 && side.body > 0.5 * radius) {\n          side.bodyCount = 1;\n        }\n        side.bodyDiameter = diameter + (side.body - diameter * side.bodyCount) / side.bodyCount;\n      }\n\n      side.bodyRadius = side.bodyDiameter * 0.5;\n    }\n  }\n\n  function getCorners(sides, radius, closed) {\n\n    var corners = [];\n    var sidesCount = sides.length;\n\n    for (var i = 0; i < sidesCount; ++i) {\n\n      var sideA = sides[i !== 0 ? i - 1 : sidesCount - 1];\n      var sideB = sides[i];\n      var large = sideA.vecBA.clone().cross(sideB.vecAB).z < 0;\n\n      var sidesTooShort = sideA.length < radius || sideB.length < radius;\n      if (sidesTooShort || i === 0 && !closed) {\n\n        corners.push({\n          pointA: sideB.pointA.clone(),\n          pointB: sideB.pointA.clone(),\n          radius: 0,\n          large: false\n        });\n      } else {\n\n        corners.push({\n          pointA: sideB.pointA.clone().add(sideA.vecBA.clone().multiplyScalar(radius)),\n          pointB: sideB.pointA.clone().add(sideB.vecAB.clone().multiplyScalar(radius)),\n          radius: radius,\n          large: large\n        });\n      }\n    }\n\n    return corners;\n  }\n\n  function createSidePath(side, orientation, path) {\n\n    var count = side.bodyCount;\n    if (count === 0) {\n      return;\n    }\n\n    var radius = side.bodyRadius;\n    var diameter = side.bodyDiameter;\n\n    var xValueInset = diameter * 0.05;\n    var yValueOffset = radius * 3.5 / 3.0;\n\n    var p1 = new THREE.Vector3(xValueInset, orientation * -yValueOffset);\n    var p2 = new THREE.Vector3(diameter - xValueInset, orientation * -yValueOffset);\n    var p3 = new THREE.Vector3(diameter, 0);\n\n    var angle = Math.acos(side.vecAB.x) * (side.vecAB.y < 0 ? -1 : 1);\n    var rotation = new THREE.Matrix4().makeRotationZ(angle);\n\n    p1.applyMatrix4(rotation);\n    p2.applyMatrix4(rotation);\n    p3.applyMatrix4(rotation);\n\n    for (var i = 0; i < count; ++i) {\n\n      path.push('c');\n      path.push(p1.x);\n      path.push(p1.y);\n      path.push(p2.x);\n      path.push(p2.y);\n      path.push(p3.x);\n      path.push(p3.y);\n    }\n  }\n\n  function createCornerPath(corner, first, orientation, path) {\n\n    if (first) {\n\n      path.push('M');\n      path.push(corner.pointA.x);\n      path.push(corner.pointA.y);\n    }\n\n    var large = orientation === 1 ? corner.large : !corner.large;\n\n    if (corner.radius !== 0) {\n\n      path.push('a');\n      path.push(corner.radius);\n      path.push(corner.radius);\n      path.push(0);\n      path.push(large ? 1 : 0);\n      path.push(orientation === 1 ? 1 : 0);\n      path.push(corner.pointB.x - corner.pointA.x);\n      path.push(corner.pointB.y - corner.pointA.y);\n    }\n    return path;\n  }\n\n\n  var strokeWidth = this.style['stroke-width'];\n  var radius = strokeWidth * 2;\n  var orientation = getOrientation(this.locations);\n  var closed = this.closed;\n  var path = [];\n\n  var sides = getSides(this.locations, closed);\n  var corners = getCorners(sides, radius, closed);\n  var cornersCount = corners.length;\n\n  updateSides(sides, corners, radius, orientation);\n\n  for (var i = 0; i < cornersCount; ++i) {\n\n    createCornerPath(corners[i], i === 0, orientation, path);\n    createSidePath(sides[i], orientation, path);\n  }\n\n  closed && path.push('z');\n  return path;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL01hcmt1cFBvbHljbG91ZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTs7QUFFcUI7QUFDVztBQUVpQztBQUNwQztBQUN5Qjs7QUFFL0Q7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU1MsZUFBZUEsQ0FBQ0MsRUFBRSxFQUFFQyxNQUFNLEVBQUU7O0VBRXhDLElBQUlDLGVBQWUsR0FBRyxDQUFDLGNBQWMsRUFBRSxjQUFjLEVBQUMsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLGNBQWMsQ0FBQztFQUNyR1osMkNBQU0sQ0FBQ2EsSUFBSSxDQUFDLElBQUksRUFBRUgsRUFBRSxFQUFFQyxNQUFNLEVBQUVDLGVBQWUsQ0FBQzs7RUFFOUM7RUFDQSxJQUFJLENBQUNOLGlCQUFpQixHQUFHQSxnRUFBaUIsQ0FBQ1EsSUFBSSxDQUFDLElBQUksQ0FBQzs7RUFFckQsSUFBSSxDQUFDQyxJQUFJLEdBQUdkLCtEQUFpQztFQUM3QyxJQUFJLENBQUNnQixTQUFTLEdBQUcsRUFBRTtFQUNuQixJQUFJLENBQUNDLEtBQUssR0FBR2hCLHNFQUFtQixDQUFDLENBQUM7O0VBRWxDLElBQUksQ0FBQ2lCLGFBQWEsQ0FBQyxDQUFDO0FBQ3hCOztBQUVBVixlQUFlLENBQUNXLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUN0QiwyQ0FBTSxDQUFDb0IsU0FBUyxDQUFDO0FBQzNEWCxlQUFlLENBQUNXLFNBQVMsQ0FBQ0csV0FBVyxHQUFHZCxlQUFlOztBQUV2RCxJQUFJZSxLQUFLLEdBQUdmLGVBQWUsQ0FBQ1csU0FBUzs7QUFFckNJLEtBQUssQ0FBQ0MsV0FBVyxHQUFHLFlBQVc7O0VBRTNCLE9BQU8sSUFBSWpCLDRFQUFpQixDQUFDLElBQUksQ0FBQ0csTUFBTSxDQUFDO0FBQzdDLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNJYSxLQUFLLENBQUNFLEdBQUcsR0FBRyxV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QUFFOEMsT0FBTyxFQUFFM0IsTUFBTSxFQUFFckIsV0FBVyxDQUFDOztFQUVoRCxLQUFJLElBQUlaLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRzJGLFlBQVksRUFBRSxFQUFFM0YsQ0FBQyxFQUFFOztJQUVsQ3dGLGdCQUFnQixDQUFDNUIsT0FBTyxDQUFDNUQsQ0FBQyxDQUFDLEVBQUVBLENBQUMsS0FBSyxDQUFDLEVBQUVZLFdBQVcsRUFBRTVCLElBQUksQ0FBQztJQUN4RDRGLGNBQWMsQ0FBQzlELEtBQUssQ0FBQ2QsQ0FBQyxDQUFDLEVBQUVZLFdBQVcsRUFBRTVCLElBQUksQ0FBQztFQUMvQzs7RUFFQVIsTUFBTSxJQUFJUSxJQUFJLENBQUNzQyxJQUFJLENBQUMsR0FBRyxDQUFDO0VBQ3hCLE9BQU90QyxJQUFJO0FBQ2YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL01hcmt1cFBvbHljbG91ZC5qcz9iYTE1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgTWFya3VwIH0gZnJvbSAnLi9NYXJrdXAnO1xuaW1wb3J0ICogYXMgTWFya3VwVHlwZXMgZnJvbSAnLi9NYXJrdXBUeXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVNYXJrdXBQYXRoU3ZnLCBjb21wb3NlUkdCQVN0cmluZywgc2V0QXR0cmlidXRlVG9NYXJrdXBTdmcsXG4gICAgdXBkYXRlTWFya3VwUGF0aFN2Z0hpdGFyZWEsIGFkZE1hcmt1cE1ldGFkYXRhIH0gZnJvbSAnLi9NYXJrdXBzQ29yZVV0aWxzJztcbmltcG9ydCB7IGNsb25lU3R5bGUgfSBmcm9tICcuL1N0eWxlVXRpbHMnO1xuaW1wb3J0IHsgRWRpdE1vZGVQb2x5Y2xvdWQgfSBmcm9tICcuL2VkaXQtbW9kZXMvRWRpdE1vZGVQb2x5Y2xvdWQnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWRcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIE1hcmt1cFBvbHljbG91ZChpZCwgZWRpdG9yKSB7XG5cbiAgICAgICAgdmFyIHN0eWxlQXR0cmlidXRlcyA9IFsnc3Ryb2tlLXdpZHRoJywgJ3N0cm9rZS1jb2xvcicsJ3N0cm9rZS1vcGFjaXR5JywgJ2ZpbGwtY29sb3InLCAnZmlsbC1vcGFjaXR5J107XG4gICAgICAgIE1hcmt1cC5jYWxsKHRoaXMsIGlkLCBlZGl0b3IsIHN0eWxlQXR0cmlidXRlcyk7XG5cbiAgICAgICAgLy8gYmluZCB0byB0aGlzIHRvIHBhc3MgdGhpcy5nbG9iYWxNYW5hZ2VyXG4gICAgICAgIHRoaXMuYWRkTWFya3VwTWV0YWRhdGEgPSBhZGRNYXJrdXBNZXRhZGF0YS5iaW5kKHRoaXMpO1xuXG4gICAgICAgIHRoaXMudHlwZSA9IE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX1BPTFlDTE9VRDtcbiAgICAgICAgdGhpcy5sb2NhdGlvbnMgPSBbXTtcbiAgICAgICAgdGhpcy5zaGFwZSA9IGNyZWF0ZU1hcmt1cFBhdGhTdmcoKTtcblxuICAgICAgICB0aGlzLmJpbmREb21FdmVudHMoKTtcbiAgICB9XG5cbiAgICBNYXJrdXBQb2x5Y2xvdWQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShNYXJrdXAucHJvdG90eXBlKTtcbiAgICBNYXJrdXBQb2x5Y2xvdWQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gTWFya3VwUG9seWNsb3VkO1xuXG4gICAgdmFyIHByb3RvID0gTWFya3VwUG9seWNsb3VkLnByb3RvdHlwZTtcblxuICAgIHByb3RvLmdldEVkaXRNb2RlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBFZGl0TW9kZVBvbHljbG91ZCh0aGlzLmVkaXRvcik7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogU2V0cyB0b3AtbGVmdCBhbmQgYm90dG9tLXJpZ2h0IHZhbHVlcyBpbiBjbGllbnQgc3BhY2UgY29vcmRpbmF0ZXMgKDJkKS5cbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0gc2l6ZVxuICAgICAqIEBwYXJhbSBsb2NhdGlvbnNcbiAgICAgKiBAcGFyYW0gY2xvc2VkXG4gICAgICovXG4gICAgcHJvdG8uc2V0ID0gZnVuY3Rpb24ocG9zaXRpb24sIHNpemUsIGxvY2F0aW9ucywgY2xvc2VkKSB7XG5cbiAgICAgICAgdGhpcy5yb3RhdGlvbiA9IDA7IC8vIFJlc2V0IGFuZ2xlIC8vXG4gICAgICAgIHRoaXMubG9jYXRpb25zID0gbG9jYXRpb25zLmNvbmNhdCgpO1xuXG4gICAgICAgIHRoaXMuc2l6ZS54ID0gKHNpemUueCA9PT0gMCkgPyAxIDogc2l6ZS54O1xuICAgICAgICB0aGlzLnNpemUueSA9IChzaXplLnkgPT09IDApID8gMSA6IHNpemUueTtcblxuICAgICAgICB0aGlzLmNsb3NlZCA9IGNsb3NlZDtcblxuICAgICAgICB0aGlzLnNldFNpemUocG9zaXRpb24sIHNpemUueCwgc2l6ZS55KTtcbiAgICAgICAgdGhpcy51cGRhdGVTdHlsZSgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBcHBsaWVzIGRhdGEgdmFsdWVzIGludG8gRE9NIGVsZW1lbnQgc3R5bGUvYXR0cmlidXRlKHMpXG4gICAgICpcbiAgICAgKi9cbiAgICBwcm90by51cGRhdGVTdHlsZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBzdHlsZSA9IHRoaXMuc3R5bGU7XG4gICAgICAgIHZhciBzaGFwZSA9IHRoaXMuc2hhcGU7XG4gICAgICAgIHZhciBwYXRoID0gdGhpcy5nZXRQYXRoKCkuam9pbignICcpO1xuXG4gICAgICAgIHZhciBzdHJva2VXaWR0aCA9IHRoaXMuc3R5bGVbJ3N0cm9rZS13aWR0aCddO1xuICAgICAgICB2YXIgc3Ryb2tlQ29sb3IgPSB0aGlzLmhpZ2hsaWdodGVkID8gdGhpcy5oaWdobGlnaHRDb2xvciA6IGNvbXBvc2VSR0JBU3RyaW5nKHN0eWxlWydzdHJva2UtY29sb3InXSwgc3R5bGVbJ3N0cm9rZS1vcGFjaXR5J10pO1xuICAgICAgICB2YXIgZmlsbENvbG9yID0gdGhpcy5jbG9zZWQgPyBjb21wb3NlUkdCQVN0cmluZyhzdHlsZVsnZmlsbC1jb2xvciddLCBzdHlsZVsnZmlsbC1vcGFjaXR5J10pIDogJ25vbmUnO1xuICAgICAgICB2YXIgdHJhbnNmb3JtID0gdGhpcy5nZXRUcmFuc2Zvcm0oKTtcblxuICAgICAgICBzZXRBdHRyaWJ1dGVUb01hcmt1cFN2ZyhzaGFwZSwgJ2QnLCBwYXRoKTtcbiAgICAgICAgc2V0QXR0cmlidXRlVG9NYXJrdXBTdmcoc2hhcGUsICdzdHJva2Utd2lkdGgnLCBzdHJva2VXaWR0aCk7XG4gICAgICAgIHNldEF0dHJpYnV0ZVRvTWFya3VwU3ZnKHNoYXBlLCAnc3Ryb2tlJywgc3Ryb2tlQ29sb3IpO1xuICAgICAgICBzZXRBdHRyaWJ1dGVUb01hcmt1cFN2ZyhzaGFwZSwgJ2ZpbGwnLCBmaWxsQ29sb3IpO1xuICAgICAgICBzZXRBdHRyaWJ1dGVUb01hcmt1cFN2ZyhzaGFwZSwgJ3RyYW5zZm9ybScsIHRyYW5zZm9ybSk7XG4gICAgICAgIHVwZGF0ZU1hcmt1cFBhdGhTdmdIaXRhcmVhKHNoYXBlLCB0aGlzLmVkaXRvcik7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENoYW5nZXMgdGhlIHBvc2l0aW9uIGFuZCBzaXplIG9mIHRoZSBtYXJrdXAuXG4gICAgICogVGhpcyBnZXRzIGNhbGxlZCBieSB0aGUgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5TZXRTaXplIGVkaXQgYWN0aW9uXG4gICAgICogQHBhcmFtIHt7eDogTnVtYmVyLCB5OiBOdW1iZXJ9fSBwb3NpdGlvblxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSB3aWR0aFxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBoZWlnaHRcbiAgICAgKi9cbiAgICBwcm90by5zZXRTaXplID0gZnVuY3Rpb24gKHBvc2l0aW9uLCB3aWR0aCwgaGVpZ2h0KSB7XG5cbiAgICAgICAgd2lkdGggPSAod2lkdGggPT09IDAgPyAxIDogd2lkdGgpO1xuICAgICAgICBoZWlnaHQgPSAoaGVpZ2h0ID09PSAwID8gMSA6IGhlaWdodCk7XG5cbiAgICAgICAgdmFyIGxvY2F0aW9ucyA9IHRoaXMubG9jYXRpb25zO1xuICAgICAgICB2YXIgbG9jYXRpb25zQ291bnQgPSBsb2NhdGlvbnMubGVuZ3RoO1xuXG4gICAgICAgIHZhciBzY2FsZVggPSB3aWR0aCAvIHRoaXMuc2l6ZS54O1xuICAgICAgICB2YXIgc2NhbGVZID0gaGVpZ2h0IC8gdGhpcy5zaXplLnk7XG5cbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGxvY2F0aW9uc0NvdW50OyArK2kpIHtcblxuICAgICAgICAgICAgdmFyIHBvaW50ID0gbG9jYXRpb25zW2ldO1xuXG4gICAgICAgICAgICBwb2ludC54ICo9IHNjYWxlWDtcbiAgICAgICAgICAgIHBvaW50LnkgKj0gc2NhbGVZO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5wb3NpdGlvbi54ID0gcG9zaXRpb24ueDtcbiAgICAgICAgdGhpcy5wb3NpdGlvbi55ID0gcG9zaXRpb24ueTtcblxuICAgICAgICB0aGlzLnNpemUueCA9IHdpZHRoO1xuICAgICAgICB0aGlzLnNpemUueSA9IGhlaWdodDtcblxuICAgICAgICB0aGlzLnVwZGF0ZVN0eWxlKCk7XG4gICAgfTtcblxuICAgIHByb3RvLnNldE1ldGFkYXRhID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1ldGFkYXRhID0gY2xvbmVTdHlsZSh0aGlzLnN0eWxlKTtcblxuICAgICAgICBtZXRhZGF0YS50eXBlID0gdGhpcy50eXBlO1xuICAgICAgICBtZXRhZGF0YS5wb3NpdGlvbiA9IFt0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueV0uam9pbihcIiBcIik7XG4gICAgICAgIG1ldGFkYXRhLnNpemUgPSBbdGhpcy5zaXplLngsIHRoaXMuc2l6ZS55XS5qb2luKFwiIFwiKTtcbiAgICAgICAgbWV0YWRhdGEucm90YXRpb24gPSBTdHJpbmcodGhpcy5yb3RhdGlvbik7XG4gICAgICAgIG1ldGFkYXRhLmxvY2F0aW9ucyA9IHRoaXMubG9jYXRpb25zLm1hcChmdW5jdGlvbihwb2ludCl7XG4gICAgICAgICAgICByZXR1cm4gW3BvaW50LngsIHBvaW50LnldLmpvaW4oXCIgXCIpO1xuICAgICAgICB9KS5qb2luKFwiIFwiKTtcblxuICAgICAgICByZXR1cm4gdGhpcy5hZGRNYXJrdXBNZXRhZGF0YSh0aGlzLnNoYXBlLCBtZXRhZGF0YSk7XG4gICAgfTtcblxuICAgIHByb3RvLmdldFBhdGggPSBmdW5jdGlvbigpIHtcblxuICAgICAgICBmdW5jdGlvbiBnZXRPcmllbnRhdGlvbihsb2NhdGlvbnMpIHtcblxuICAgICAgICAgICAgc3dpdGNoIChsb2NhdGlvbnMubGVuZ3RoKSB7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGZzdFBvaW50ID0gbG9jYXRpb25zWzBdO1xuICAgICAgICAgICAgICAgICAgICB2YXIgc25kUG9pbnQgPSBsb2NhdGlvbnNbMV07XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZzdFBvaW50LnkgPiBzbmRQb2ludC55ID8gMSA6IC0xO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvaW50QSA9IGxvY2F0aW9uc1swXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvaW50QiA9IGxvY2F0aW9uc1sxXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvaW50QyA9IGxvY2F0aW9uc1syXTtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgb3JpZW50YXRpb24gPVxuICAgICAgICAgICAgICAgICAgICAgICAgKHBvaW50Qi54IC0gcG9pbnRBLngpICogKHBvaW50Qi55ICsgcG9pbnRBLnkpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChwb2ludEMueCAtIHBvaW50Qi54KSAqIChwb2ludEMueSArIHBvaW50Qi55KTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZW50YXRpb24gPCAwID8gMSA6IC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0U2lkZXMobG9jYXRpb25zLCBjbG9zZWQpIHtcblxuICAgICAgICAgICAgdmFyIGxvY2F0aW9uc0NvdW50ID0gbG9jYXRpb25zLmxlbmd0aDtcblxuICAgICAgICAgICAgdmFyIHNpZGVzID0gW107XG4gICAgICAgICAgICB2YXIgc2lkZXNDb3VudCA9IGxvY2F0aW9uc0NvdW50IC0gKGNsb3NlZCA/IDAgOiAxKTtcblxuICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHNpZGVzQ291bnQ7ICsraSkge1xuXG4gICAgICAgICAgICAgICAgdmFyIGxvY2F0aW9uQSA9IGxvY2F0aW9uc1tpXTtcbiAgICAgICAgICAgICAgICB2YXIgbG9jYXRpb25CID0gbG9jYXRpb25zWyhpKzEpJWxvY2F0aW9uc0NvdW50XTtcblxuICAgICAgICAgICAgICAgIHZhciBkeCA9IGxvY2F0aW9uQi54IC0gbG9jYXRpb25BLng7XG4gICAgICAgICAgICAgICAgdmFyIGR5ID0gbG9jYXRpb25CLnkgLSBsb2NhdGlvbkEueTtcblxuICAgICAgICAgICAgICAgIHZhciBsZW5ndGggPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xuXG4gICAgICAgICAgICAgICAgc2lkZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4OiBpLFxuICAgICAgICAgICAgICAgICAgICBwb2ludEE6IG5ldyBUSFJFRS5WZWN0b3IzKGxvY2F0aW9uQS54LCBsb2NhdGlvbkEueSwgMCksXG4gICAgICAgICAgICAgICAgICAgIHBvaW50QjogbmV3IFRIUkVFLlZlY3RvcjMobG9jYXRpb25CLngsIGxvY2F0aW9uQi55LCAwKSxcbiAgICAgICAgICAgICAgICAgICAgdmVjQUI6ICBuZXcgVEhSRUUuVmVjdG9yMyhkeCAvIGxlbmd0aCwgZHkgLyBsZW5ndGgsIDApLFxuICAgICAgICAgICAgICAgICAgICB2ZWNCQTogIG5ldyBUSFJFRS5WZWN0b3IzKC1keCAvIGxlbmd0aCwgLWR5IC8gbGVuZ3RoLCAwKSxcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiBsZW5ndGhcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHNpZGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlQ29ybmVycyhzaWRlLCBjb3JuZXJBLCBjb3JuZXJCLCBvcmllbnRhdGlvbikge1xuICAgICAgICAgICAgdmFyIHJBID0gY29ybmVyQS5yYWRpdXM7XG4gICAgICAgICAgICB2YXIgckIgPSBjb3JuZXJCLnJhZGl1cztcbiAgICAgICAgICAgIHZhciBEID0gc2lkZS5sZW5ndGg7XG5cbiAgICAgICAgICAgIGlmIChyQSA+IDAgJiYgckIgPiAwICYmIHJBICsgckIgPiBEICYmIE1hdGguYWJzKHJBIC0gckIpIDwgRCkge1xuICAgICAgICAgICAgICAgIC8vIENvcm5lciBhcmNzIG92ZXJsYXAsIHNvIGNvcnJlY3QgdGhlbSBieSBmaW5kaW5nIHRoZSBjaXJjbGUtY2lyY2xlIGludGVyc2VjdGlvblxuICAgICAgICAgICAgICAgIHZhciBhID0gc2lkZS5wb2ludEEueDtcbiAgICAgICAgICAgICAgICB2YXIgYiA9IHNpZGUucG9pbnRBLnk7XG4gICAgICAgICAgICAgICAgdmFyIGMgPSBzaWRlLnBvaW50Qi54O1xuICAgICAgICAgICAgICAgIHZhciBkID0gc2lkZS5wb2ludEIueTtcblxuICAgICAgICAgICAgICAgIHZhciBkZWx0YSA9IDAuMjUgKiBNYXRoLnNxcnQoKEQgKyByQSArIHJCKSAqIChEICsgckEgLSByQikgKiAoRCAtIHJBICsgckIpICogKC1EICsgckEgKyByQikpO1xuICAgICAgICAgICAgICAgIHZhciB4UyA9IChhICsgYykgLyAyICsgKGMgLSBhKSAqIChyQSpyQSAtIHJCKnJCKSAvICgyKkQqRCk7XG4gICAgICAgICAgICAgICAgdmFyIHhUID0gMiooYiAtIGQpIC8gKEQqRCkgKiBkZWx0YTtcbiAgICAgICAgICAgICAgICB2YXIgeVMgPSAoYiArIGQpIC8gMiArIChkIC0gYikgKiAockEqckEgLSByQipyQikgLyAoMipEKkQpO1xuICAgICAgICAgICAgICAgIHZhciB5VCA9IDIqKGEgLSBjKSAvIChEKkQpICogZGVsdGE7XG4gICAgICAgICAgICAgICAgdmFyIHgxID0geFMgKyB4VDtcbiAgICAgICAgICAgICAgICB2YXIgeDIgPSB4UyAtIHhUO1xuICAgICAgICAgICAgICAgIHZhciB5MSA9IHlTIC0geVQ7XG4gICAgICAgICAgICAgICAgdmFyIHkyID0geVMgKyB5VDtcbiAgICAgICAgICAgICAgICB2YXIgdGVzdFBvaW50T25DaXJjbGUgPSBNYXRoLmFicygoeDEgLSBhKSAqICh4MSAtIGEpICsgKHkxIC0gYikgKiAoeTEgLSBiKSAtIHJBICogckEpO1xuICAgICAgICAgICAgICAgIGlmICh0ZXN0UG9pbnRPbkNpcmNsZSA+IDAuMDAwMDAwMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdG1wID0geTE7XG4gICAgICAgICAgICAgICAgICAgIHkxID0geTI7XG4gICAgICAgICAgICAgICAgICAgIHkyID0gdG1wO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBpbnRlcnNlYyA9IG5ldyBUSFJFRS5WZWN0b3IzKHgxLCB5MSwgMCk7XG4gICAgICAgICAgICAgICAgdmFyIGludGVyc2VjU2lkZSA9IE1hdGguc2lnbihpbnRlcnNlYy5jbG9uZSgpLnN1YihzaWRlLnBvaW50QSkuY3Jvc3Moc2lkZS52ZWNBQikueik7XG4gICAgICAgICAgICAgICAgaWYgKGludGVyc2VjU2lkZSAhPT0gb3JpZW50YXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWMuc2V0KHgyLCB5MiwgMCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29ybmVyQS5wb2ludEIgPSBpbnRlcnNlYy5jbG9uZSgpO1xuICAgICAgICAgICAgICAgIGNvcm5lckIucG9pbnRBID0gaW50ZXJzZWMuY2xvbmUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiB1cGRhdGVTaWRlcyhzaWRlcywgY29ybmVycywgcmFkaXVzLCBvcmllbnRhdGlvbikge1xuXG4gICAgICAgICAgICB2YXIgZGlhbWV0ZXIgPSByYWRpdXMgKiAyO1xuICAgICAgICAgICAgdmFyIHNpZGVzQ291bnQgPSBzaWRlcy5sZW5ndGg7XG5cbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBzaWRlc0NvdW50OyArK2kpIHtcblxuICAgICAgICAgICAgICAgIHZhciBzaWRlID0gc2lkZXNbaV07XG4gICAgICAgICAgICAgICAgdmFyIGNvcm5lckEgPSBjb3JuZXJzW2ldO1xuICAgICAgICAgICAgICAgIHZhciBjb3JuZXJCID0gY29ybmVyc1soaSsxKSVzaWRlc0NvdW50XTtcblxuICAgICAgICAgICAgICAgIHNpZGUuYm9keUEgPSBzaWRlLnZlY0FCLmNsb25lKCkubXVsdGlwbHlTY2FsYXIoY29ybmVyQS5yYWRpdXMpLmFkZChzaWRlLnBvaW50QSk7XG4gICAgICAgICAgICAgICAgc2lkZS5ib2R5QiA9IHNpZGUudmVjQkEuY2xvbmUoKS5tdWx0aXBseVNjYWxhcihjb3JuZXJCLnJhZGl1cykuYWRkKHNpZGUucG9pbnRCKTtcblxuICAgICAgICAgICAgICAgIGlmICh1cGRhdGVDb3JuZXJzKHNpZGUsIGNvcm5lckEsIGNvcm5lckIsIG9yaWVudGF0aW9uKSkge1xuICAgICAgICAgICAgICAgICAgICBzaWRlLmJvZHkgPSAwO1xuICAgICAgICAgICAgICAgICAgICBzaWRlLmJvZHlEaWFtZXRlciA9IHNpZGUuYm9keUNvdW50ID0gMDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzaWRlLmJvZHkgPSBzaWRlLmJvZHlCLmNsb25lKCkuc3ViKHNpZGUuYm9keUEpLmxlbmd0aCgpO1xuICAgICAgICAgICAgICAgICAgICBzaWRlLmJvZHlDb3VudCA9IE1hdGgucm91bmQoc2lkZS5ib2R5IC8gZGlhbWV0ZXIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2lkZS5ib2R5Q291bnQgPT09IDAgJiYgc2lkZS5ib2R5ID4gMC41KnJhZGl1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2lkZS5ib2R5Q291bnQgPSAxO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNpZGUuYm9keURpYW1ldGVyID0gZGlhbWV0ZXIgKyAoc2lkZS5ib2R5IC0gZGlhbWV0ZXIgKiBzaWRlLmJvZHlDb3VudCkgLyBzaWRlLmJvZHlDb3VudDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBzaWRlLmJvZHlSYWRpdXMgPSBzaWRlLmJvZHlEaWFtZXRlciAqIDAuNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldENvcm5lcnMoc2lkZXMsIHJhZGl1cywgY2xvc2VkKSB7XG5cbiAgICAgICAgICAgIHZhciBjb3JuZXJzID0gW107XG4gICAgICAgICAgICB2YXIgc2lkZXNDb3VudCA9IHNpZGVzLmxlbmd0aDtcblxuICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHNpZGVzQ291bnQ7ICsraSkge1xuXG4gICAgICAgICAgICAgICAgdmFyIHNpZGVBID0gc2lkZXNbaSAhPT0gMCA/IGktMSA6IHNpZGVzQ291bnQtMV07XG4gICAgICAgICAgICAgICAgdmFyIHNpZGVCID0gc2lkZXNbaV07XG4gICAgICAgICAgICAgICAgdmFyIGxhcmdlID0gc2lkZUEudmVjQkEuY2xvbmUoKS5jcm9zcyhzaWRlQi52ZWNBQikueiA8IDA7XG5cbiAgICAgICAgICAgICAgICB2YXIgc2lkZXNUb29TaG9ydCA9IHNpZGVBLmxlbmd0aCA8IHJhZGl1cyB8fCBzaWRlQi5sZW5ndGggPCByYWRpdXM7XG4gICAgICAgICAgICAgICAgaWYgKHNpZGVzVG9vU2hvcnQgfHwgKGkgPT09IDAgJiYgIWNsb3NlZCkpIHtcblxuICAgICAgICAgICAgICAgICAgICBjb3JuZXJzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRBOiBzaWRlQi5wb2ludEEuY2xvbmUoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50Qjogc2lkZUIucG9pbnRBLmNsb25lKCksXG4gICAgICAgICAgICAgICAgICAgICAgICByYWRpdXM6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYXJnZTogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICBjb3JuZXJzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRBOiBzaWRlQi5wb2ludEEuY2xvbmUoKS5hZGQoc2lkZUEudmVjQkEuY2xvbmUoKS5tdWx0aXBseVNjYWxhcihyYWRpdXMpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50Qjogc2lkZUIucG9pbnRBLmNsb25lKCkuYWRkKHNpZGVCLnZlY0FCLmNsb25lKCkubXVsdGlwbHlTY2FsYXIocmFkaXVzKSksXG4gICAgICAgICAgICAgICAgICAgICAgICByYWRpdXM6IHJhZGl1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhcmdlOiBsYXJnZVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjb3JuZXJzO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlU2lkZVBhdGgoc2lkZSwgb3JpZW50YXRpb24sIHBhdGgpIHtcblxuICAgICAgICAgICAgdmFyIGNvdW50ID0gc2lkZS5ib2R5Q291bnQ7XG4gICAgICAgICAgICBpZiAoY291bnQgPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciByYWRpdXMgPSBzaWRlLmJvZHlSYWRpdXM7XG4gICAgICAgICAgICB2YXIgZGlhbWV0ZXIgPSBzaWRlLmJvZHlEaWFtZXRlcjtcblxuICAgICAgICAgICAgdmFyIHhWYWx1ZUluc2V0ID0gZGlhbWV0ZXIgKiAwLjA1O1xuICAgICAgICAgICAgdmFyIHlWYWx1ZU9mZnNldCA9IHJhZGl1cyAqIDMuNSAvIDMuMDtcblxuICAgICAgICAgICAgdmFyIHAxID0gbmV3IFRIUkVFLlZlY3RvcjMoeFZhbHVlSW5zZXQsIG9yaWVudGF0aW9uICogLXlWYWx1ZU9mZnNldCk7XG4gICAgICAgICAgICB2YXIgcDIgPSBuZXcgVEhSRUUuVmVjdG9yMyhkaWFtZXRlciAtIHhWYWx1ZUluc2V0LCBvcmllbnRhdGlvbiAqIC15VmFsdWVPZmZzZXQpO1xuICAgICAgICAgICAgdmFyIHAzID0gbmV3IFRIUkVFLlZlY3RvcjMoZGlhbWV0ZXIsIDApO1xuXG4gICAgICAgICAgICB2YXIgYW5nbGUgPSBNYXRoLmFjb3Moc2lkZS52ZWNBQi54KSAqIChzaWRlLnZlY0FCLnkgPCAwID8gLTEgOiAxKTtcbiAgICAgICAgICAgIHZhciByb3RhdGlvbiA9IG5ldyBUSFJFRS5NYXRyaXg0KCkubWFrZVJvdGF0aW9uWihhbmdsZSk7XG5cbiAgICAgICAgICAgIHAxLmFwcGx5TWF0cml4NChyb3RhdGlvbik7XG4gICAgICAgICAgICBwMi5hcHBseU1hdHJpeDQocm90YXRpb24pO1xuICAgICAgICAgICAgcDMuYXBwbHlNYXRyaXg0KHJvdGF0aW9uKTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb3VudDsgKytpKSB7XG5cbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goJ2MnKTtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2gocDEueCk7XG4gICAgICAgICAgICAgICAgcGF0aC5wdXNoKHAxLnkpO1xuICAgICAgICAgICAgICAgIHBhdGgucHVzaChwMi54KTtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2gocDIueSk7XG4gICAgICAgICAgICAgICAgcGF0aC5wdXNoKHAzLngpO1xuICAgICAgICAgICAgICAgIHBhdGgucHVzaChwMy55KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUNvcm5lclBhdGgoY29ybmVyLCBmaXJzdCwgb3JpZW50YXRpb24sIHBhdGgpIHtcblxuICAgICAgICAgICAgaWYgKGZpcnN0KSB7XG5cbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goJ00nKTtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goY29ybmVyLnBvaW50QS54KTtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goY29ybmVyLnBvaW50QS55KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGxhcmdlID0gb3JpZW50YXRpb24gPT09IDEgPyBjb3JuZXIubGFyZ2UgOiAhY29ybmVyLmxhcmdlO1xuXG4gICAgICAgICAgICBpZiAoY29ybmVyLnJhZGl1cyAhPT0gMCkge1xuXG4gICAgICAgICAgICAgICAgcGF0aC5wdXNoKCdhJyk7XG4gICAgICAgICAgICAgICAgcGF0aC5wdXNoKGNvcm5lci5yYWRpdXMpO1xuICAgICAgICAgICAgICAgIHBhdGgucHVzaChjb3JuZXIucmFkaXVzKTtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goMCk7XG4gICAgICAgICAgICAgICAgcGF0aC5wdXNoKGxhcmdlID8gMSA6IDApO1xuICAgICAgICAgICAgICAgIHBhdGgucHVzaChvcmllbnRhdGlvbiA9PT0gMSA/IDEgOiAwKTtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goY29ybmVyLnBvaW50Qi54IC0gY29ybmVyLnBvaW50QS54KTtcbiAgICAgICAgICAgICAgICBwYXRoLnB1c2goY29ybmVyLnBvaW50Qi55IC0gY29ybmVyLnBvaW50QS55KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwYXRoO1xuICAgICAgICB9XG5cblxuICAgICAgICB2YXIgc3Ryb2tlV2lkdGggPSB0aGlzLnN0eWxlWydzdHJva2Utd2lkdGgnXTtcbiAgICAgICAgdmFyIHJhZGl1cyA9IHN0cm9rZVdpZHRoICogMjtcbiAgICAgICAgdmFyIG9yaWVudGF0aW9uID0gZ2V0T3JpZW50YXRpb24odGhpcy5sb2NhdGlvbnMpO1xuICAgICAgICB2YXIgY2xvc2VkID0gdGhpcy5jbG9zZWQ7XG4gICAgICAgIHZhciBwYXRoID0gW107XG5cbiAgICAgICAgdmFyIHNpZGVzID0gZ2V0U2lkZXModGhpcy5sb2NhdGlvbnMsIGNsb3NlZCk7XG4gICAgICAgIHZhciBjb3JuZXJzID0gZ2V0Q29ybmVycyhzaWRlcywgcmFkaXVzLCBjbG9zZWQpO1xuICAgICAgICB2YXIgY29ybmVyc0NvdW50ID0gY29ybmVycy5sZW5ndGg7XG5cbiAgICAgICAgdXBkYXRlU2lkZXMoc2lkZXMsIGNvcm5lcnMsIHJhZGl1cywgb3JpZW50YXRpb24pO1xuXG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBjb3JuZXJzQ291bnQ7ICsraSkge1xuXG4gICAgICAgICAgICBjcmVhdGVDb3JuZXJQYXRoKGNvcm5lcnNbaV0sIGkgPT09IDAsIG9yaWVudGF0aW9uLCBwYXRoKTtcbiAgICAgICAgICAgIGNyZWF0ZVNpZGVQYXRoKHNpZGVzW2ldLCBvcmllbnRhdGlvbiwgcGF0aCk7XG4gICAgICAgIH1cblxuICAgICAgICBjbG9zZWQgJiYgcGF0aC5wdXNoKCd6Jyk7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH07XG4iXSwibmFtZXMiOlsiTWFya3VwIiwiTWFya3VwVHlwZXMiLCJjcmVhdGVNYXJrdXBQYXRoU3ZnIiwiY29tcG9zZVJHQkFTdHJpbmciLCJzZXRBdHRyaWJ1dGVUb01hcmt1cFN2ZyIsInVwZGF0ZU1hcmt1cFBhdGhTdmdIaXRhcmVhIiwiYWRkTWFya3VwTWV0YWRhdGEiLCJjbG9uZVN0eWxlIiwiRWRpdE1vZGVQb2x5Y2xvdWQiLCJNYXJrdXBQb2x5Y2xvdWQiLCJpZCIsImVkaXRvciIsInN0eWxlQXR0cmlidXRlcyIsImNhbGwiLCJiaW5kIiwidHlwZSIsIk1BUktVUF9UWVBFX1BPTFlDTE9VRCIsImxvY2F0aW9ucyIsInNoYXBlIiwiYmluZERvbUV2ZW50cyIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJnZXRFZGl0TW9kZSIsInNldCIsInBvc2l0aW9uIiwic2l6ZSIsImNsb3NlZCIsInJvdGF0aW9uIiwiY29uY2F0IiwieCIsInkiLCJzZXRTaXplIiwidXBkYXRlU3R5bGUiLCJzdHlsZSIsInBhdGgiLCJnZXRQYXRoIiwiam9pbiIsInN0cm9rZVdpZHRoIiwic3Ryb2tlQ29sb3IiLCJoaWdobGlnaHRlZCIsImhpZ2hsaWdodENvbG9yIiwiZmlsbENvbG9yIiwidHJhbnNmb3JtIiwiZ2V0VHJhbnNmb3JtIiwid2lkdGgiLCJoZWlnaHQiLCJsb2NhdGlvbnNDb3VudCIsImxlbmd0aCIsInNjYWxlWCIsInNjYWxlWSIsImkiLCJwb2ludCIsInNldE1ldGFkYXRhIiwibWV0YWRhdGEiLCJTdHJpbmciLCJtYXAiLCJnZXRPcmllbnRhdGlvbiIsImZzdFBvaW50Iiwic25kUG9pbnQiLCJwb2ludEEiLCJwb2ludEIiLCJwb2ludEMiLCJvcmllbnRhdGlvbiIsImdldFNpZGVzIiwic2lkZXMiLCJzaWRlc0NvdW50IiwibG9jYXRpb25BIiwibG9jYXRpb25CIiwiZHgiLCJkeSIsIk1hdGgiLCJzcXJ0IiwicHVzaCIsImluZGV4IiwiVEhSRUUiLCJWZWN0b3IzIiwidmVjQUIiLCJ2ZWNCQSIsInVwZGF0ZUNvcm5lcnMiLCJzaWRlIiwiY29ybmVyQSIsImNvcm5lckIiLCJyQSIsInJhZGl1cyIsInJCIiwiRCIsImFicyIsImEiLCJiIiwiYyIsImQiLCJkZWx0YSIsInhTIiwieFQiLCJ5UyIsInlUIiwieDEiLCJ4MiIsInkxIiwieTIiLCJ0ZXN0UG9pbnRPbkNpcmNsZSIsInRtcCIsImludGVyc2VjIiwiaW50ZXJzZWNTaWRlIiwic2lnbiIsImNsb25lIiwic3ViIiwiY3Jvc3MiLCJ6IiwidXBkYXRlU2lkZXMiLCJjb3JuZXJzIiwiZGlhbWV0ZXIiLCJib2R5QSIsIm11bHRpcGx5U2NhbGFyIiwiYWRkIiwiYm9keUIiLCJib2R5IiwiYm9keURpYW1ldGVyIiwiYm9keUNvdW50Iiwicm91bmQiLCJib2R5UmFkaXVzIiwiZ2V0Q29ybmVycyIsInNpZGVBIiwic2lkZUIiLCJsYXJnZSIsInNpZGVzVG9vU2hvcnQiLCJjcmVhdGVTaWRlUGF0aCIsImNvdW50IiwieFZhbHVlSW5zZXQiLCJ5VmFsdWVPZmZzZXQiLCJwMSIsInAyIiwicDMiLCJhbmdsZSIsImFjb3MiLCJNYXRyaXg0IiwibWFrZVJvdGF0aW9uWiIsImFwcGx5TWF0cml4NCIsImNyZWF0ZUNvcm5lclBhdGgiLCJjb3JuZXIiLCJmaXJzdCIsImNvcm5lcnNDb3VudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupPolycloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupRectangle.js":
/*!***************************************************!*\
  !*** ./extensions/Markup/core/MarkupRectangle.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupRectangle: () => (/* binding */ MarkupRectangle)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModeRectangle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModeRectangle */ \"./extensions/Markup/core/edit-modes/EditModeRectangle.js\");\n\n\n\n\n\n\n\n\n/**\n * Rectangle markup.\n *\n * Implements a Rectangle {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n * Included in documentation as an example of how to create\n * a specific markup type. Developers are encourage to look into this class's source code and copy\n * as much code as they need. Find link to source code below.\n *\n * @tutorial feature_markup\n * @constructor\n * @memberof Autodesk.Viewing.Extensions.Markups.Core\n * @extends Autodesk.Viewing.Extensions.Markups.Core.Markup\n *\n * @param {number} id\n * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor\n * @constructor\n */\nfunction MarkupRectangle(id, editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // Bind to this to pass this.globalManager\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_RECTANGLE;\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupPathSvg)();\n\n  this.bindDomEvents();\n}\n\nMarkupRectangle.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupRectangle.prototype.constructor = MarkupRectangle;\n\nvar proto = MarkupRectangle.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeRectangle__WEBPACK_IMPORTED_MODULE_4__.EditModeRectangle(this.editor);\n};\n\n/**\n * Sets position and size in markup space coordinates\n * @param {Object} position\n * @param {Object} size\n */\nproto.set = function (position, size) {\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n  this.size.x = size.x;\n  this.size.y = size.y;\n\n  this.updateStyle();\n};\n\n/**\n * Applies data values into DOM element style/attribute(s)\n *\n */\nproto.updateStyle = function () {\n\n  var style = this.style;\n  var shape = this.shape;\n  var path = this.getPath().join(' ');\n\n  var strokeWidth = this.style['stroke-width'];\n  var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n  var fillColor = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['fill-color'], style['fill-opacity']);\n  var transform = this.getTransform();\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'd', path);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke-width', strokeWidth);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'stroke', strokeColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', fillColor);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'transform', transform);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupPathSvgHitarea)(shape, this.editor);\n};\n\nproto.setMetadata = function () {\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.position = [this.position.x, this.position.y].join(\" \");\n  metadata.size = [this.size.x, this.size.y].join(\" \");\n  metadata.rotation = String(this.rotation);\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\nproto.getPath = function () {\n\n  var strokeWidth = this.style['stroke-width'];\n\n  var w = this.size.x - strokeWidth;\n  var h = this.size.y - strokeWidth;\n  var x = -w * 0.5;\n  var y = -h * 0.5;\n\n  var path = [];\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createRectanglePath)(x, y, w, h, false, path);\n\n  return path;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupRectangle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupStamp.js":
/*!***********************************************!*\
  !*** ./extensions/Markup/core/MarkupStamp.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupStamp: () => (/* binding */ MarkupStamp)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModeStamp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModeStamp */ \"./extensions/Markup/core/edit-modes/EditModeStamp.js\");\n\n\n\n\n\n\n\n\n\n\nclass MarkupStamp extends _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup {\n  /**\n   * @param {number} id\n   * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor\n   */\n  constructor(id, editor, svgData) {\n    const styleAttributes = [\n    'text-data'];\n\n    super(id, editor, styleAttributes);\n    this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_STAMP;\n    this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n\n    this.createShapeGroup();\n\n    this.scriptSvgData = svgData;\n    this.loadSvgData();\n\n    this.bindDomEvents();\n  }\n\n  createShapeGroup() {\n    /*\n    * shape\n    *    group\n    *      customSvg\n    *    hitarea (aka markup)\n    */\n    this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createSvgElement)('g');\n    this.shape.group = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createSvgElement)('g');\n    this.shape.appendChild(this.shape.group);\n\n    let hitarea = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createSvgElement)('path');\n    hitarea.setAttribute('id', \"hitarea\");\n    hitarea.setAttribute('fill', \"none\");\n    this.shape.appendChild(hitarea);\n\n    this.shape.hitarea = hitarea;\n    this.shape.markup = hitarea;\n  }\n\n  loadSvgData() {\n    let svgString = this.scriptSvgData || this.style['text-data'];\n    let svgNode = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.stringToSvgNode)(svgString);\n\n    // null if parsing fails, so exit\n    if (svgNode === null) {\n      console.warn(\"SVG data \" + svgString + \" is invalid, skipping shape update\");\n      return;\n    }\n\n    let [width, height] = this.getDimensions(svgNode);\n\n    // update the bounding box when the SVG is changed\n    let path = `M 0 0 l ${width} 0 l 0 ${height} l ${-width} 0 z`;\n    this.shape.hitarea.setAttribute('d', path);\n\n    this.shape.group.innerHTML = svgNode.innerHTML;\n\n    // This is to standardize things:\n    // width and height are 1 unit\n    // position is in the centre\n    // have to flip things because of y axis going upwards\n    this.shape.group.setAttribute('transform', `translate( -0.5 , 0.5 ) scale( ${1 / width} , ${-1 / height} )`);\n    // then copy to the hitarea because it's outside the SVG\n    this.shape.hitarea.setAttribute('transform', this.shape.group.getAttribute('transform'));\n  }\n\n  getEditMode() {\n    return new _edit_modes_EditModeStamp__WEBPACK_IMPORTED_MODULE_4__.EditModeStamp(this.editor);\n  }\n\n  set(position, size) {\n    this.setSize(position, size.x, size.y);\n    this.updateStyle();\n  }\n\n  updateStyle(styleChanged) {\n    const strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(this.style['stroke-color'], this.style['stroke-opacity']);\n    this.shape.hitarea.setAttribute('stroke', strokeColor);\n\n    // This only provides translation and rotation, not scale\n    const transform = this.getTransform() + ` scale( ${this.size.x} , ${this.size.y} )`;\n    this.shape.setAttribute('transform', transform);\n\n    if (styleChanged) {\n      this.loadSvgData();\n    }\n  }\n\n  getDimensions(customSvg) {\n    let vb = customSvg.getAttribute('viewBox');\n    if (!vb) {\n      // if no viewbox is specified, check for width and height\n      let width = customSvg.getAttribute('width') || 100;\n      let height = customSvg.getAttribute('height') || 100;\n      return [width, height];\n    }\n    let strings = vb.split(' ');\n    let width = parseInt(strings[2]);\n    let height = parseInt(strings[3]);\n\n    return [width, height];\n  }\n\n  setMetadata() {\n\n    var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n    metadata.type = this.type;\n    metadata.position = [this.position.x, this.position.y].join(\" \");\n    metadata.size = [this.size.x, this.size.y].join(\" \");\n    metadata.rotation = String(this.rotation);\n\n    return this.addMarkupMetadata(this.shape, metadata);\n  }\n\n  setStyle(style) {\n    let stylesEqual = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.isStyleEqual)(style, this.style);\n    if (!stylesEqual) {\n      (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.copyStyle)(style, this.style);\n    }\n\n    this.updateStyle(!stylesEqual);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupStamp.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupText.js":
/*!**********************************************!*\
  !*** ./extensions/Markup/core/MarkupText.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupText: () => (/* binding */ MarkupText)\n/* harmony export */ });\n/* harmony import */ var _Markup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Markup */ \"./extensions/Markup/core/Markup.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_modes_EditModeText__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-modes/EditModeText */ \"./extensions/Markup/core/edit-modes/EditModeText.js\");\n\n\n\n\n\n\n\n\n// LMV ViewerLMV-2170 [Markup] [PDF] Text markup missing/cutoff for normal sized text.\n// If the font size of an SVG text is too small, the text is not rendered independently of its final screen size.\n// To solve the issue we multiply font size by 100 and scale down the text in its transform.\nvar FONT_SIZE_SCALE = 100;\n\nvar STARTING_WIDTH_FACTOR = 6;\n\n/**\n * Text Markup.\n * @constructor\n */\nfunction MarkupText(id, editor, size) {\n\n  var styleAttributes = [\n  'font-size',\n  'stroke-color',\n  'stroke-opacity',\n  'fill-color',\n  'fill-opacity',\n  'font-family',\n  'font-style',\n  'font-weight'];\n\n\n  _Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.call(this, id, editor, styleAttributes);\n\n  // Bind to this to pass globalManager\n  this.createSvgElement = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createSvgElement.bind(this);\n  this.addMarkupMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addMarkupMetadata.bind(this);\n\n  this.type = _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_TEXT;\n  this.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupTextSvg)();\n  this.constraintRotation = true;\n  this.constraintHeight = true;\n  this.constraintWidth = false;\n  this.size.x = size.x;\n  this.size.y = size.y;\n  this.currentText = \"\";\n  this.currentTextLines = [\"\"];\n  this.textDirty = true;\n  this.textSize = { x: 0, y: 0 };\n  this.prevHighlight = false;\n  this.isHelperTextActive = false;\n\n  // Note: We could have this property be a style property.\n  // However, there is no need for this property to be exposed to the user for alteration\n  // This value is a percentage of the font size used to offset vertically 2 text lines\n  // of the same paragraph.\n  // Notice that this value is used by EditorTextInput.js\n  this.lineHeight = 130;\n\n  this.minWidth = this.getClientFontSize() * STARTING_WIDTH_FACTOR;\n\n  this.bindDomEvents();\n}\n\nMarkupText.prototype = Object.create(_Markup__WEBPACK_IMPORTED_MODULE_0__.Markup.prototype);\nMarkupText.prototype.constructor = MarkupText;\n\nvar proto = MarkupText.prototype;\n\nproto.getEditMode = function () {\n\n  return new _edit_modes_EditModeText__WEBPACK_IMPORTED_MODULE_4__.EditModeText(this.editor);\n};\n\n/**\n *\n * @param {String} position\n * @param {String} size\n * @param {String} textString\n */\nproto.set = function (position, size, textString) {\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n  this.size.x = size.x;\n  this.size.y = size.y;\n\n  this.setText(textString);\n};\n\nproto.setSize = function (position, width, height) {\n\n  this.position.x = position.x;\n  this.position.y = position.y;\n  this.size.x = width;\n  this.size.y = height;\n\n  var sizeUpdateRequired = true;\n\n  if (this.isHelperTextActive) {\n    this.updateTextBoxStyle();\n  } else {\n    this.updateStyle(sizeUpdateRequired);\n  }\n};\n\nproto.setPosition = function (x, y) {\n\n  this.position.x = x;\n  this.position.y = y;\n\n  if (this.isHelperTextActive) {\n    this.updateTextBoxStyle();\n  } else {\n    this.updateStyle();\n  }\n};\n\nproto.setStyle = function (style) {\n\n  var stylesEqual = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.isStyleEqual)(style, this.style);\n\n  if (!stylesEqual) {\n    (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.copyStyle)(style, this.style);\n  }\n\n  this.updateStyle(!stylesEqual);\n};\n\n/**\n *\n * @param {String} text\n */\nproto.setText = function (text) {\n\n  this.currentText = text;\n};\n\n/**\n * Returns the raw string value\n * @returns {String}\n */\nproto.getText = function () {\n\n  return this.currentText;\n};\n\n/**\n * Returns a shallow copy of the text lines used for rendering SVG text\n * @returns {Array.<String>}\n */\nproto.getTextLines = function () {\n\n  return this.currentTextLines.concat();\n};\n\nproto.highlightChanged = function () {\n\n  if (this.highlighted && this.highlighted !== this.prevHighlight) {\n    var shape = this.shape;\n    var strokeColor = this.highlightColor;\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', strokeColor);\n\n    this.prevHighlight = true;\n    return false;\n  }\n\n  return true;\n};\n\nproto.updateTextBoxStyle = function () {\n  var editMode = this.editor.duringEditMode && this.editor.editMode;\n\n  if (!editMode || editMode.type !== this.type) {\n    editMode = this.getEditMode();\n  }\n\n  editMode.updateTextBoxStyle();\n};\n\nproto.setIsHelperTextActive = function (isActive) {\n  this.isHelperTextActive = isActive;\n};\n\n/**\n * Applies data values into DOM element style/attribute(s)\n *\n */\nproto.updateStyle = function (sizeUpdateRequired) {\n\n  if (this.highlightChanged()) {\n    this.prevHighlight = false;\n    var style = this.style;\n    var shape = this.shape;\n    var fontSize = this.style['font-size'];\n    var fontFamily = this.style['font-family'];\n    var fontWeight = this.style['font-weight'];\n    var fontStyle = this.style['font-style'];\n    var strokeColor = this.highlighted ? this.highlightColor : (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['stroke-color'], style['stroke-opacity']);\n    var fillColor = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.composeRGBAString)(style['fill-color'], style['fill-opacity']);\n\n    // FONT_SIZE_SCALE is used to scale up fontSize, but it is only needed in cases where the font size is too small\n    FONT_SIZE_SCALE = fontSize > 1 ? 1 : 100;\n\n    this.rebuildTextSvg(sizeUpdateRequired);\n\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'font-family', fontFamily);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'font-size', fontSize * FONT_SIZE_SCALE);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'fill', strokeColor);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'font-weight', fontWeight);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setAttributeToMarkupSvg)(shape, 'font-style', fontStyle);\n\n    var editor = this.editor;\n    var transform = this.getTransform();\n    var textTransform = this.getTextTransform();\n\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.setMarkupTextSvgTransform)(shape, transform, textTransform);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupTextSvgBackground)(shape, this.size.x, this.size.y, fillColor);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupTextSvgClipper)(shape, this.size.x, this.size.y);\n    (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.updateMarkupTextSvgHitarea)(shape, this.size.x, this.size.y, editor);\n  }\n};\n\n/**\n * Re-creates SVG tags that render SVG text.\n * Each line is placed around tspan tags which are vertically offset to each other.\n */\nproto.rebuildTextSvg = function (sizeUpdateRequired) {\n\n  // TODO: Remove the need to get text values from an object in edit mode, should be a function.\n  // editMode needs to be set to load markups in view mode\n  var editMode = this.editor.duringEditMode && this.editor.editMode;\n\n  if (!editMode || editMode.type !== this.type) {\n    editMode = this.getEditMode();\n    editMode.textInputHelper.textArea.value = this.currentText;\n    editMode.textInputHelper.setStyle(this.style);\n  }\n\n  if (editMode.textInputHelper.textMarkup && editMode.textInputHelper.textMarkup !== this) {\n    return;\n  }\n\n  var style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(editMode.textInputHelper.style);\n  var text = editMode.textInputHelper.textArea.value;\n\n  var textHelperValues = editMode.textInputHelper.getTextValuesForMarkup(this, sizeUpdateRequired);\n\n  this.currentTextLines = textHelperValues.textValues.lines;\n\n  if (textHelperValues.newPos) {\n    var position = this.editor.positionFromClientToMarkups(textHelperValues.newPos.x, textHelperValues.newPos.y);\n    var size = this.editor.sizeFromClientToMarkups(textHelperValues.width, textHelperValues.height);\n\n    this.position.x = position.x;\n    this.position.y = position.y;\n    this.size.x = size.x;\n    this.size.y = size.y;\n  }\n\n  if (editMode.selectedMarkup !== this && !editMode.textInputHelper.firstEdit) {\n    editMode.textInputHelper.textArea.value = text;\n    editMode.textInputHelper.setStyle(style);\n  }\n\n  var markup = this.createSvgElement('text');\n  markup.setAttribute('id', 'markup');\n  markup.setAttribute('alignment-baseline', 'middle');\n\n  this.shape.childNodes[0].removeChild(this.shape.markup);\n  this.shape.childNodes[0].appendChild(markup);\n  this.shape.markup = markup;\n\n  // For each line, create a tspan, add as child and offset it vertically.\n  var yOffset = this.getLineHeight() * FONT_SIZE_SCALE * (this.lineHeight / 100);\n\n  var padding = this.getLineHeight() * FONT_SIZE_SCALE / 2;\n  var dx = padding;\n  var dy = padding;\n\n  this.currentTextLines.forEach(function (line) {\n\n    var tspan = this.createSvgElement('tspan');\n\n    tspan.setAttribute('x', dx);\n    tspan.setAttribute('y', dy);\n    tspan.textContent = line;\n\n    markup.appendChild(tspan);\n    dy += yOffset;\n  }.bind(this));\n};\n\nproto.setIsShapeVisible = function (isVisible) {\n\n  this.shape.style.display = isVisible ? 'block' : 'none';\n};\n\nproto.setMetadata = function () {\n\n  var metadata = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_3__.cloneStyle)(this.style);\n\n  metadata.type = this.type;\n  metadata.position = [this.position.x, this.position.y].join(\" \");\n  metadata.size = [this.size.x, this.size.y].join(\" \");\n  metadata.text = String(this.currentText);\n\n  return this.addMarkupMetadata(this.shape, metadata);\n};\n\n/**\n * Helper method that returns the font size in client space coords.\n * @returns {Number}\n */\nproto.getClientFontSize = function () {\n\n  return this.editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n};\n\nproto.getLineHeight = function () {\n\n  return this.style['font-size'];\n};\n\nproto.getTransform = function () {\n\n  var x = this.position.x - this.size.x * 0.5;\n  var y = this.position.y + this.size.y * 0.5;\n\n  return [\n  'translate(', x, ',', y, ')',\n  'rotate(', (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.radiansToDegrees)(-this.rotation), ')',\n  'scale(1,-1)'].\n  join(' ');\n};\n\nproto.getTextTransform = function () {\n\n  var lineHeight = this.getLineHeight();\n\n  var x = this.position.x - this.size.x * 0.5;\n  var y = this.position.y + this.size.y * 0.5 - lineHeight;\n\n  return [\n  'translate(', x, ',', y, ')',\n  'rotate(', (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.radiansToDegrees)(-this.rotation), ')',\n  'scale(' + 1 / FONT_SIZE_SCALE + ',' + -1 / FONT_SIZE_SCALE + ')'].\n  join(' ');\n};\n\nproto.cloneShape = function (clone) {\n\n  clone.shape = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.createMarkupTextSvg)();\n  clone.bindDomEvents();\n};\n\nproto.getBoundingRect = function () {\n  var pos = this.getClientPosition();\n  var size = this.getClientSize();\n  return {\n    x: pos.x - size.x / 2,\n    y: pos.y - size.y / 2,\n    width: size.x,\n    height: size.y\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupText.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupTool.js":
/*!**********************************************!*\
  !*** ./extensions/Markup/core/MarkupTool.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupTool: () => (/* binding */ MarkupTool)\n/* harmony export */ });\n\n\nvar avp = Autodesk.Viewing.Private;\n\nfunction MarkupTool() {\n\n  Autodesk.Viewing.ToolInterface.call(this);\n  this.names = [\"markups.core\"];\n  this.panTool = null;\n  this.allowNav = false;\n  this.is2d = false;\n\n  this.coreExt = null;\n  this.hotkeysEnabled = true;\n\n  var _ctrlDown = false;\n  var _shiftDown = false;\n\n  // Non-ToolInterface methods //\n\n  this.allowNavigation = function (allow) {\n    this.allowNav = allow;\n  };\n  this.setCoreExtension = function (coreExt) {\n    this.coreExt = coreExt;\n  };\n  this.setHotkeysEnabled = function (enabled) {\n    this.hotkeysEnabled = enabled;\n  };\n\n\n  // ToolInterface methods //\n\n  this.activate = function (name, viewerApi) {\n    this.panTool = viewerApi.toolController.getTool(\"pan\");\n    if (this.panTool) {\n      this.panTool.activate(\"pan\"); // TODO: What if we want \"zoom\" here?\n    }\n\n    this.is2d = viewerApi.model.is2d();\n    this.viewer = viewerApi;\n  };\n\n  this.deactivate = function (name) {\n    if (this.panTool) {\n      this.panTool.deactivate(\"pan\");\n    }\n  };\n\n  this.handleKeyDown = function (event, keyCode) {\n\n    if (!this.coreExt.editMode) {\n      return false;\n    }\n\n    if (!this.hotkeysEnabled) {\n      return true; // Consume event\n    }\n\n    // Don't propagate key handling down to tool //\n\n    switch (keyCode) {\n      case Autodesk.Viewing.KeyCode.CONTROL:_ctrlDown = true;break;\n      case Autodesk.Viewing.KeyCode.SHIFT:_shiftDown = true;break;\n\n      case Autodesk.Viewing.KeyCode.x:_ctrlDown && !this.allowNav && this.coreExt.cut();break;\n      case Autodesk.Viewing.KeyCode.c:_ctrlDown && !this.allowNav && this.coreExt.copy();break;\n      case Autodesk.Viewing.KeyCode.v:_ctrlDown && !this.allowNav && this.coreExt.paste();break;\n      case Autodesk.Viewing.KeyCode.d:\n        if (_ctrlDown && !this.allowNav) {\n          // Duplicate\n          this.coreExt.copy();\n          this.coreExt.paste();\n        }\n        break;\n      case Autodesk.Viewing.KeyCode.z:\n        if (_ctrlDown && !_shiftDown && !this.allowNav) {\n          this.coreExt.undo();\n        } else\n        if (_ctrlDown && _shiftDown && !this.allowNav) {\n          this.coreExt.redo(); // Also support Ctrl+Y\n        }\n        break;\n      case Autodesk.Viewing.KeyCode.y:_ctrlDown && !this.allowNav && this.coreExt.redo();break; // Also support ctrl+shift+z\n      case Autodesk.Viewing.KeyCode.ESCAPE:this.coreExt.onUserCancel();break;\n\n      case Autodesk.Viewing.KeyCode.BACKSPACE: // Fall through\n      case Autodesk.Viewing.KeyCode.DELETE:\n        var selectedMarkup = this.coreExt.getSelection();\n        if (selectedMarkup) {\n          this.coreExt.deleteMarkup(selectedMarkup);\n        }\n        break;\n      case Autodesk.Viewing.KeyCode.F12:\n        return false; // To allow opening developer console.\n      default:break;\n    }\n\n    return true; // Consume event\n  };\n  this.handleKeyUp = function (event, keyCode) {\n\n    if (!this.coreExt.editMode) {\n      return false;\n    }\n\n    if (!this.hotkeysEnabled) {\n      return true; // Consume event\n    }\n\n    // Don't propagate key handling down to tool\n\n    switch (keyCode) {\n      case Autodesk.Viewing.KeyCode.CONTROL:_ctrlDown = false;break;\n      case Autodesk.Viewing.KeyCode.SHIFT:_shiftDown = false;break;\n      default:break;\n    }\n\n    return true; // Consume event ONLY\n  };\n\n  this.update = function () {\n    if (this.allowNav && this.panTool && this.panTool.update) {\n      return this.panTool.update();\n    }\n    return false;\n  };\n\n  this.handleSingleClick = function (event, button) {\n    if (this.allowNav) {\n      // If pan tool won't handle single click, then pass over the event.\n      if (this.panTool && this.panTool.handleSingleClick)\n      return this.panTool.handleSingleClick(event, button);else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleDoubleClick = function (event, button) {\n    if (this.allowNav) {\n      // If pan tool won't handle double click, then pass over the event\n      if (this.panTool && this.panTool.handleDoubleClick) {\n        return this.panTool.handleDoubleClick(event, button);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleSingleTap = function (event) {\n    if (this.allowNav) {\n      // If pan tool won't handle single tap, then pass over the event\n      if (this.panTool && this.panTool.handleSingleTap) {\n        return this.panTool.handleSingleTap(event);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleDoubleTap = function (event) {\n    if (this.allowNav) {\n      // If pan tool won't handle double tap, then pass over the event\n      if (this.panTool && this.panTool.handleDoubleTap) {\n        return this.panTool.handleDoubleTap(event);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleWheelInput = function (delta, event) {\n    if (this.allowNav || this.is2d) {\n      // If pan tool won't handle wheel input, then pass over the event\n      if (this.panTool && this.panTool.handleWheelInput) {\n        this.coreExt.callSnapperMouseMove();\n        return this.panTool.handleWheelInput(delta, event);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleButtonDown = function (event, button) {\n    if (this.allowNav || this.is2d && (avp.isRightClick(event, this.viewer.navigation) || avp.isMiddleClick(event))) {\n      // If pan tool won't handle button down, then pass over the event\n      if (this.panTool && this.panTool.handleButtonDown) {\n        return this.panTool.handleButtonDown(event, button);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleButtonUp = function (event, button) {\n    if (this.allowNav || this.is2d && (avp.isRightClick(event, this.viewer.navigation) || avp.isMiddleClick(event))) {\n      // If pan tool won't handle button up, then pass over the event\n      if (this.panTool && this.panTool.handleButtonUp) {\n        return this.panTool.handleButtonUp(event, button);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleMouseMove = function (event) {\n    if (this.allowNav || this.is2d) {\n      // If pan tool won't handle button move, then pass over the event\n      if (this.panTool && this.panTool.handleMouseMove) {\n        return this.panTool.handleMouseMove(event);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleGesture = function (event) {\n    if (this.allowNav || this.is2d) {\n      // If pan tool won't handle gesture, then pass over the event\n      if (this.panTool && this.panTool.handleGesture) {\n        return this.panTool.handleGesture(event);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n  this.handleBlur = function (event) {\n    if (this.allowNav) {\n      // If pan tool won't handle blur, then pass over the event\n      if (this.panTool && this.panTool.handleBlur) {\n        return this.panTool.handleBlur(event);\n      } else\n\n      return false;\n    }\n    return true; // Consume event\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupTool.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupTypes.js":
/*!***********************************************!*\
  !*** ./extensions/Markup/core/MarkupTypes.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MARKUP_TYPE_ARROW: () => (/* binding */ MARKUP_TYPE_ARROW),\n/* harmony export */   MARKUP_TYPE_CALLOUT: () => (/* binding */ MARKUP_TYPE_CALLOUT),\n/* harmony export */   MARKUP_TYPE_CIRCLE: () => (/* binding */ MARKUP_TYPE_CIRCLE),\n/* harmony export */   MARKUP_TYPE_CLOUD: () => (/* binding */ MARKUP_TYPE_CLOUD),\n/* harmony export */   MARKUP_TYPE_DIMENSION: () => (/* binding */ MARKUP_TYPE_DIMENSION),\n/* harmony export */   MARKUP_TYPE_FREEHAND: () => (/* binding */ MARKUP_TYPE_FREEHAND),\n/* harmony export */   MARKUP_TYPE_HIGHLIGHT: () => (/* binding */ MARKUP_TYPE_HIGHLIGHT),\n/* harmony export */   MARKUP_TYPE_POLYCLOUD: () => (/* binding */ MARKUP_TYPE_POLYCLOUD),\n/* harmony export */   MARKUP_TYPE_POLYLINE: () => (/* binding */ MARKUP_TYPE_POLYLINE),\n/* harmony export */   MARKUP_TYPE_RECTANGLE: () => (/* binding */ MARKUP_TYPE_RECTANGLE),\n/* harmony export */   MARKUP_TYPE_STAMP: () => (/* binding */ MARKUP_TYPE_STAMP),\n/* harmony export */   MARKUP_TYPE_TEXT: () => (/* binding */ MARKUP_TYPE_TEXT)\n/* harmony export */ });\n\n// These are all the supported markup types.\n\nconst MARKUP_TYPE_ARROW = \"arrow\";\nconst MARKUP_TYPE_TEXT = \"label\";\nconst MARKUP_TYPE_RECTANGLE = \"rectangle\";\nconst MARKUP_TYPE_CIRCLE = \"ellipse\";\nconst MARKUP_TYPE_CLOUD = \"cloud\";\nconst MARKUP_TYPE_FREEHAND = \"freehand\";\nconst MARKUP_TYPE_HIGHLIGHT = \"highlight\";\nconst MARKUP_TYPE_POLYLINE = \"polyline\";\nconst MARKUP_TYPE_POLYCLOUD = \"polycloud\";\nconst MARKUP_TYPE_CALLOUT = \"callout\";\nconst MARKUP_TYPE_DIMENSION = \"dimension\";\nconst MARKUP_TYPE_STAMP = \"stamp\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL01hcmt1cFR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTs7QUFFVyxNQUFNQSxpQkFBaUIsR0FBRyxPQUFPO0FBQ2pDLE1BQU1DLGdCQUFnQixHQUFHLE9BQU87QUFDaEMsTUFBTUMscUJBQXFCLEdBQUcsV0FBVztBQUN6QyxNQUFNQyxrQkFBa0IsR0FBRyxTQUFTO0FBQ3BDLE1BQU1DLGlCQUFpQixHQUFHLE9BQU87QUFDakMsTUFBTUMsb0JBQW9CLEdBQUcsVUFBVTtBQUN2QyxNQUFNQyxxQkFBcUIsR0FBRyxXQUFXO0FBQ3pDLE1BQU1DLG9CQUFvQixHQUFHLFVBQVU7QUFDdkMsTUFBTUMscUJBQXFCLEdBQUcsV0FBVztBQUN6QyxNQUFNQyxtQkFBbUIsR0FBRyxTQUFTO0FBQ3JDLE1BQU1DLHFCQUFxQixHQUFHLFdBQVc7QUFDekMsTUFBTUMsaUJBQWlCLEdBQUcsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL01hcmt1cFR5cGVzLmpzP2E5MmEiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBUaGVzZSBhcmUgYWxsIHRoZSBzdXBwb3J0ZWQgbWFya3VwIHR5cGVzLlxuXG4gICAgZXhwb3J0IGNvbnN0IE1BUktVUF9UWVBFX0FSUk9XID0gXCJhcnJvd1wiO1xuICAgIGV4cG9ydCBjb25zdCBNQVJLVVBfVFlQRV9URVhUID0gXCJsYWJlbFwiO1xuICAgIGV4cG9ydCBjb25zdCBNQVJLVVBfVFlQRV9SRUNUQU5HTEUgPSBcInJlY3RhbmdsZVwiO1xuICAgIGV4cG9ydCBjb25zdCBNQVJLVVBfVFlQRV9DSVJDTEUgPSBcImVsbGlwc2VcIjtcbiAgICBleHBvcnQgY29uc3QgTUFSS1VQX1RZUEVfQ0xPVUQgPSBcImNsb3VkXCI7XG4gICAgZXhwb3J0IGNvbnN0IE1BUktVUF9UWVBFX0ZSRUVIQU5EID0gXCJmcmVlaGFuZFwiO1xuICAgIGV4cG9ydCBjb25zdCBNQVJLVVBfVFlQRV9ISUdITElHSFQgPSBcImhpZ2hsaWdodFwiO1xuICAgIGV4cG9ydCBjb25zdCBNQVJLVVBfVFlQRV9QT0xZTElORSA9IFwicG9seWxpbmVcIjtcbiAgICBleHBvcnQgY29uc3QgTUFSS1VQX1RZUEVfUE9MWUNMT1VEID0gXCJwb2x5Y2xvdWRcIjtcbiAgICBleHBvcnQgY29uc3QgTUFSS1VQX1RZUEVfQ0FMTE9VVCA9IFwiY2FsbG91dFwiO1xuICAgIGV4cG9ydCBjb25zdCBNQVJLVVBfVFlQRV9ESU1FTlNJT04gPSBcImRpbWVuc2lvblwiO1xuICAgIGV4cG9ydCBjb25zdCBNQVJLVVBfVFlQRV9TVEFNUCA9IFwic3RhbXBcIjsiXSwibmFtZXMiOlsiTUFSS1VQX1RZUEVfQVJST1ciLCJNQVJLVVBfVFlQRV9URVhUIiwiTUFSS1VQX1RZUEVfUkVDVEFOR0xFIiwiTUFSS1VQX1RZUEVfQ0lSQ0xFIiwiTUFSS1VQX1RZUEVfQ0xPVUQiLCJNQVJLVVBfVFlQRV9GUkVFSEFORCIsIk1BUktVUF9UWVBFX0hJR0hMSUdIVCIsIk1BUktVUF9UWVBFX1BPTFlMSU5FIiwiTUFSS1VQX1RZUEVfUE9MWUNMT1VEIiwiTUFSS1VQX1RZUEVfQ0FMTE9VVCIsIk1BUktVUF9UWVBFX0RJTUVOU0lPTiIsIk1BUktVUF9UWVBFX1NUQU1QIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupTypes.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupsCore.js":
/*!***********************************************!*\
  !*** ./extensions/Markup/core/MarkupsCore.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupsCore: () => (/* binding */ MarkupsCore)\n/* harmony export */ });\n/* harmony import */ var _edit_actions_EditActionManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./edit-actions/EditActionManager */ \"./extensions/Markup/core/edit-actions/EditActionManager.js\");\n/* harmony import */ var _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _edit_clipboard_Clipboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edit-clipboard/Clipboard */ \"./extensions/Markup/core/edit-clipboard/Clipboard.js\");\n/* harmony import */ var _edit_input_InputHandler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./edit-input/InputHandler */ \"./extensions/Markup/core/edit-input/InputHandler.js\");\n/* harmony import */ var _EditFrame__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EditFrame */ \"./extensions/Markup/core/EditFrame.js\");\n/* harmony import */ var _MarkupTool__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MarkupTool */ \"./extensions/Markup/core/MarkupTool.js\");\n/* harmony import */ var _edit_modes_EditModeArrow__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./edit-modes/EditModeArrow */ \"./extensions/Markup/core/edit-modes/EditModeArrow.js\");\n/* harmony import */ var _edit_modes_BuiltinEditModes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./edit-modes/BuiltinEditModes */ \"./extensions/Markup/core/edit-modes/BuiltinEditModes.js\");\n/* harmony import */ var _Markups_css__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Markups.css */ \"./extensions/Markup/core/Markups.css\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n // IMPORTANT!! HAS SIDE EFFECTS\n // IMPORTANT!!\n\n\nvar MeasureCommon = Autodesk.Viewing.MeasureCommon;\n\nvar PERSPECTIVE_MODE_SCALE = 1000;\n\n\n/**\n * Extension that allows end users to draw 2D markups on top of 2D and 3D models.\n *\n * @tutorial feature_markup\n * @param {Autodesk.Viewing.Viewer3D} viewer - Viewer instance used to operate on.\n * @param {object} options - Same Dictionary object passed into {@link Autodesk.Viewing.Viewer3D|Viewer3D}'s constructor.\n * @param {boolean} [options.markupDisableHotkeys] - Disables hotkeys for copy, cut, paste, duplicate, undo, redo and deselect.\n * @param {Autodesk.Viewing.ToolInterface} [options.markupToolClass] - Class override for input handling.\n * Use it to override/extend default hotkeys and/or mouse/gesture input.\n * @memberof Autodesk.Viewing.Extensions\n * @alias Autodesk.Viewing.Extensions.MarkupsCore\n * @see {@link Autodesk.Viewing.Extension} for common inherited methods.\n * @class\n */\nfunction MarkupsCore(viewer, options) {\n\n  Autodesk.Viewing.Extension.call(this, viewer, options);\n\n  this.options = this.options || {};\n  this.markups = [];\n  this.styles = {};\n\n  this.activeLayer = '';\n  this.duringViewMode = false;\n  this.duringEditMode = false;\n\n  this.svgLayersMap = {};\n\n  // Add action manager.\n  this.actionManager = new _edit_actions_EditActionManager__WEBPACK_IMPORTED_MODULE_0__.EditActionManager(50); // history of 50 actions.\n  this.actionManager.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_HISTORY_CHANGED, this.onEditActionHistoryChanged.bind(this));\n\n  this.nextId = 0; // Used to identify markups by id during an edit session.\n\n  // Clipboard.\n  this.clipboard = new _edit_clipboard_Clipboard__WEBPACK_IMPORTED_MODULE_5__.Clipboard(this);\n\n  // Default Input handler.\n  this.input = new _edit_input_InputHandler__WEBPACK_IMPORTED_MODULE_6__.InputHandler();\n  this.input.setGlobalManager(this.globalManager);\n\n  // Bind functions so they have access to globalManager\n  this.createSvgElement = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.createSvgElement.bind(this);\n  this.addSvgMetadata = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.addSvgMetadata.bind(this);\n  this.checkPolygon = _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.checkPolygon.bind(this);\n\n  // Extension will dispatch events.\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.addTraitEventDispatcher)(this);\n\n  const initStrokeAndFontWidths = (model) => {\n    // For 2d, set these widths once, and not recalculate again\n    if (model.is2d()) {\n      this.getStrokeWidth();\n      this.getFontWidth();\n    }\n  };\n\n  if (viewer.model) {\n    initStrokeAndFontWidths(viewer.model);\n  } else {\n    // Camera is reset right after a model load\n    // This is the right camera to use for widths initialization\n    viewer.addEventListener(Autodesk.Viewing.MODEL_ADDED_EVENT, (_ref) => {let { model } = _ref;\n      viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, () => {\n        initStrokeAndFontWidths(model);\n      }, { once: true });\n    }, { once: true });\n  }\n\n  // Handled events.\n  this.onCameraChangeBinded = this.onCameraChange.bind(this);\n  this.onViewerResizeBinded = function (event) {\n    // This is ugly, but we need to do this twice\n    var self = this;\n    // First usage is to avoid a blinking scenario\n    self.onViewerResize(event);\n    requestAnimationFrame(function () {\n      // Second one is to actually make it work on some resize scenarios.\n      // Check the unlikely scenario that we are no longer in view mode.\n      if (self.duringViewMode) {\n        self.onViewerResize(event);\n      }\n    });\n  }.bind(this);\n\n  this.onMarkupSelectedBinded = this.onMarkupSelected.bind(this);\n  this.onMarkupEnterEditionBinded = this.onMarkupEnterEdition.bind(this);\n  this.onMarkupCancelEditionBinded = this.onMarkupCancelEdition.bind(this);\n  this.onMarkupDeleteEditionBinded = this.onMarkupDeleteEdition.bind(this);\n  this.onToolChangeBinded = this.onToolChange.bind(this);\n  this.onUnitsCalibrationStartsBinded = this.onUnitsCalibrationStarts.bind(this);\n\n  viewer.addEventListener(MeasureCommon.Events.UNITS_CALIBRATION_STARTS_EVENT, this.onUnitsCalibrationStartsBinded);\n}\n\nMarkupsCore.prototype = Object.create(Autodesk.Viewing.Extension.prototype);\nMarkupsCore.prototype.constructor = MarkupsCore;\n\nvar proto = MarkupsCore.prototype;\n\nproto.load = async function () {\n\n  // Add layer where annotations will actually live\n  var svg = this.svg = this.createSvgElement('svg');\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.setSvgParentAttributes)(svg);\n\n  // NOTE: Required since LMV renders Y coordinates upwards,\n  // while browser's Y coordinates goes downwards.\n  // SVG has 0 0 as default transform-origin: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform-origin\n  const svgStyle = svg.style;\n  svgStyle.position = 'absolute';\n  svgStyle.left = '0';\n  svgStyle.top = '0';\n  svgStyle.transform = 'scale(1, -1)';\n  svgStyle.transformOrigin = 'center center';\n\n  this.bounds = { x: 0, y: 0, width: 0, height: 0 };\n\n  this.input.attachTo(this);\n\n  //Instantiate edit frame.\n  this.editFrame = new _EditFrame__WEBPACK_IMPORTED_MODULE_7__.EditFrame(this.viewer.container, this);\n  this.editFrame.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITFRAME_EDITION_START, function () {this.disableMarkupInteractions(true);}.bind(this));\n  this.editFrame.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITFRAME_EDITION_END, function () {this.disableMarkupInteractions(false);}.bind(this));\n\n  // Register tool\n  var toolClass = this.options.markupToolClass || _MarkupTool__WEBPACK_IMPORTED_MODULE_8__.MarkupTool;\n  this.changeMarkupTool(toolClass, !this.options.markupDisableHotkeys);\n\n  await this.viewer.loadExtension('Autodesk.Snapping');\n\n  this.snapper = new Autodesk.Viewing.Extensions.Snapping.Snapper(this.viewer, { markupMode: true });\n  this.viewer.toolController.registerTool(this.snapper);\n\n  return true;\n};\n\n/**\n * Change the markup tool's class in order to implement a different behaviour to the UI.\n *\n * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupTool} toolClass - Implementation or extension of MarkupTool's class.\n * @param {boolean} enableHotKeys - Whether to enable markup's hot-keys or not.\n */\nproto.changeMarkupTool = function (toolClass, enableHotKeys) {\n  if (this.markupTool) {\n    this.viewer.toolController.deregisterTool(this.markupTool);\n    this.markupTool = null;\n  }\n\n  this.markupTool = new toolClass();\n  this.markupTool.setCoreExtension(this);\n  this.markupTool.setHotkeysEnabled(enableHotKeys);\n  this.viewer.toolController.registerTool(this.markupTool);\n};\n\nproto.unload = function () {\n\n  this.hide();\n\n  this.input.detachFrom(this);\n\n  this.editFrame.unload();\n\n  if (this.markupTool) {\n    this.viewer.toolController.deregisterTool(this.markupTool);\n    this.markupTool = null;\n  }\n\n  if (this.snapper) {\n    this.viewer.toolController.deregisterTool(this.snapper);\n    this.snapper = null;\n  }\n\n  var svg = this.svg;\n  if (svg && this.onMouseDownBinded) {\n    svg.removeEventListener(\"mousedown\", this.onMouseDownBinded);\n    this.onMouseDownBinded = null;\n  }\n  if (svg.parentNode) {\n    svg.parentNode.removeChild(svg);\n  }\n  this.editModeSvgLayerNode = null;\n  this.svg = null;\n\n  return true;\n};\n\nMarkupsCore.prototype.getStrokeWidth = function () {\n\n  if (!this.initialStrokeWidth || this.viewer.model && !this.viewer.model.is2d()) {\n    this.initialStrokeWidth = this.sizeFromClientToMarkups(0, _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.MARKUP_DEFAULT_STROKE_WIDTH_IN_PIXELS).y;\n  }\n\n  return this.initialStrokeWidth;\n};\n\nMarkupsCore.prototype.getFontWidth = function () {\n\n  if (!this.initialFontWidth || this.viewer.model && !this.viewer.model.is2d()) {\n    this.initialFontWidth = this.sizeFromClientToMarkups(0, _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.MARKUP_DEFAULT_FONT_WIDTH_IN_PIXELS).y;\n  }\n\n  return this.initialFontWidth;\n};\n\n/**\n * Toggle in and out of Edit mode. In Edit mode the user is able to draw markups on the canvas.\n *\n * See also\n * {@link Autodesk.Viewing.Extensions.MarkupsCore/#enterEditMode|enterEditMode()} and\n * {@link Autodesk.Viewing.Extensions.MarkupsCore/#leaveEditMode|leaveEditMode()}\n */\nMarkupsCore.prototype.toggleEditMode = function () {\n\n  if (this.duringEditMode) {\n    this.leaveEditMode();\n  } else {\n    this.enterEditMode();\n  }\n};\n\n/**\n * Enables mouse interactions and mobile device gestures over the Viewer canvas to create or draw markups.\n *\n * Exit Edit mode by calling {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#leaveeditmode-1|leaveEditMode()}.\n *\n * See also\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#show|show()}\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#enterEditMode\n * @param {string} layerId - [optional] Identifier for the layer of markups to be edited. Example \"Layer1\".\n * @returns {boolean} Returns true if editMode is active\n */\nMarkupsCore.prototype.enterEditMode = function (layerId) {\n\n  /**\n   * @param layer\n   * @param disable\n   * @private\n   */\n  function disableLayerMarkups(layer, disable) {\n    if (layer) {\n      var layerMarkups = layer.markups;\n      for (var k = 0; k < layerMarkups.length; k++) {\n        var m = layerMarkups[k];\n        m.disableInteractions(disable);\n      }\n    }\n  }\n  if (layerId) {\n    if (!this.svgLayersMap[layerId]) {\n      // if layerId is supplied but it does not exist in the svgLayerMap then create the new layer\n      console.warn(\"No such layer exists.\");\n      return false;\n    }\n  }\n\n  // If not currently shown, then show\n  if (!this.duringViewMode) {\n    if (!this.show()) {\n      return false; // Failed to enter view mode.\n    }\n  }\n\n  // Initialize the edit mode layer if it does not exist\n  if (!this.editModeSvgLayerNode) {\n    var parSvg = this.createSvgElement('g');\n    this.editModeSvgLayerNode = {\n      markups: [],\n      svg: parSvg\n    };\n    this.editModeSvgLayerNode.svg.setAttribute('cursor', 'default');\n  }\n\n\n  if (this.editModeSvgLayerNode.svg.parentNode != this.svg || !layerId) {\n    this.svg.appendChild(this.editModeSvgLayerNode.svg);\n  }\n  this.svg.setAttribute('cursor', 'crosshair');\n\n\n  if (layerId) {\n    var layer = this.svgLayersMap[layerId];\n    // If the layer exists in the layer map, use the information stored for that specific layer.\n    if (layer) {\n      // Remove the edit layer when entering edit mode of a specific edit mode.\n      var editModeLayerParentNode = this.editModeSvgLayerNode.svg.parentNode;\n      editModeLayerParentNode && editModeLayerParentNode.removeChild(this.editModeSvgLayerNode.svg);\n\n      // disable the markups in the editModeLayer\n      disableLayerMarkups(this.editModeSvgLayerNode, true);\n\n      // Enable interactions for markups in the current edit layer and disable interactions for markups in\n      // the other layers.\n      for (var key in this.svgLayersMap) {\n        var markups = this.svgLayersMap[key].markups;\n        for (var i = 0; i < markups.length; i++) {\n          var markup = markups[i];\n          if (key !== layerId.toString()) {\n            // disable all not in the current layer.\n            markup.disableInteractions(true);\n          } else {\n            // enable all markups in current layer.\n            markup.disableInteractions(false);\n          }\n        }\n      }\n\n      // assign the current layer to the global active layer\n      this.activeLayer = layerId;\n      this.editingLayer = layerId;\n      var svgParent = layer.svg;\n\n      // remove previous svg layer child from svg\n      svgParent.parentNode && this.svg.removeChild(svgParent);\n\n      // reassign the markups in that layer to the global markups list\n      this.markups = layer.markups.slice();\n\n      // re-append svg layer child to svg to make it the top most layer\n      this.svg.appendChild(svgParent);\n    }\n  } else {\n    // disable interactions for the previous markups\n    // Example: enterEditMode(layer) -> enterEditMode()\n    if (this.editingLayer) {\n      for (var k = 0; k < this.markups.length; k++) {\n        var m = this.markups[k];\n        m.disableInteractions(true);\n      }\n      disableLayerMarkups(this.editModeSvgLayerNode, false);\n    }\n    this.editingLayer = '';\n    if (!this.editModeSvgLayerNode) {\n      this.markups = [];\n    } else {\n      this.markups = this.editModeSvgLayerNode.markups.slice();\n    }\n    this.activeLayer = '';\n  }\n\n  this.input.enterEditMode();\n  this.activateTool(true);\n  this.styles = {}; // Clear EditMode styles.\n  this.defaultStyle = null;\n  this.duringEditMode = true;\n  this.changeEditMode(new _edit_modes_EditModeArrow__WEBPACK_IMPORTED_MODULE_9__.EditModeArrow(this));\n  this.actionManager.clear();\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_ENTER });\n  this.allowNavigation(false);\n  return true;\n};\n\n/**\n * Exits Edit mode.\n *\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|enterEditMode()}.\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#leaveEditMode\n *\n * @returns {boolean} Returns true if Edit mode has been deactivated\n */\nMarkupsCore.prototype.leaveEditMode = function () {\n\n  var NOT_IN_EDIT_MODE = true;\n  var WE_ARE_STILL_IN_EDIT_MODE = false;\n\n  if (!this.duringEditMode || !this.duringViewMode) {\n    return NOT_IN_EDIT_MODE;\n  }\n\n  var viewer = this.viewer;\n  if (!viewer) {\n    return WE_ARE_STILL_IN_EDIT_MODE; // something is very wrong...\n  }\n\n  this.editMode.destroy();\n  this.editMode = null;\n  this.duringEditMode = false;\n\n  if (this.snapper) {\n    this.snapper.indicator.clearOverlays();\n    this.snapper.clearSnapped();\n  }\n\n  // Remove the edit layer\n  if (this.editModeSvgLayerNode && this.editModeSvgLayerNode.svg.parentNode) {\n    this.svg.removeChild(this.editModeSvgLayerNode.svg);\n  }\n  this.svg.setAttribute('cursor', 'default');\n\n  this.input.leaveEditMode();\n  this.editFrame.setMarkup(null);\n  this.activateTool(true);\n\n  this.allowNavigation(true);\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_LEAVE });\n  return NOT_IN_EDIT_MODE;\n};\n\n/**\n * Toggle between visible markups, i.e., show() and hidden markups, i.e., hide().\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.toggle\n * @method toggle\n */\nMarkupsCore.prototype.toggle = function () {\n\n  if (this.duringViewMode) {\n    this.hide();\n  } else {\n    this.show();\n  }\n};\n\n/**\n * Enables loading of previously saved markups.\n * Exit Edit mode by calling {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#hide|hide()}.\n *\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|enterEditMode()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#show\n * @method show\n *\n * @returns {boolean} Whether it successfully entered view mode or not.\n */\nMarkupsCore.prototype.show = function () {\n\n  var viewer = this.viewer;\n  if (!viewer || !viewer.model || !this.svg) {\n    return false;\n  }\n\n  // Return if already showing or in edit-mode.\n  // Notice that edit mode requires that we are currently show()-ing.\n  if (this.duringViewMode || this.duringEditMode) {\n    return true;\n  }\n\n  viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onCameraChangeBinded);\n  viewer.addEventListener(Autodesk.Viewing.VIEWER_RESIZE_EVENT, this.onViewerResizeBinded);\n\n  // Add parent svg of all markups.\n  viewer.container.appendChild(this.svg);\n  viewer.reorderElements(this.svg);\n\n  this.input.enterViewMode();\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.hideLmvUi)(viewer);\n\n  // TODO: Nasty hack, currently there is no API to disable mouse highlighting in 3d models.\n  // TODO: We nuke rollover function in viewer, for now, public api will be added soon.\n  this.onViewerRolloverObject = viewer.impl.rolloverObject;\n  viewer.impl.rolloverObject = function () {};\n\n  this.activateTool(true);\n  var camera = viewer.impl.camera;\n  this.onViewerResize({ width: camera.clientWidth, height: camera.clientHeight });\n\n  // See function loadMarkups() for when the actual SVG gets added onstage //\n  this.svgLayersMap = {};\n  this.duringViewMode = true;\n  this.allowNavigation(true);\n  return true;\n};\n\n/**\n * Removes any markup currently overlaid on the viewer. It exits Edit mode if it is active.\n *\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#show|show()}\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#hide\n * @method hide\n *\n * @returns {boolean} Whether it successfully left view mode or not.\n */\nMarkupsCore.prototype.hide = function () {\n\n  var RESULT_HIDE_OK = true;\n  var RESULT_HIDE_FAIL = false;\n\n  var viewer = this.viewer;\n  if (!viewer || !this.duringViewMode) {\n    return RESULT_HIDE_OK;\n  }\n\n  if (this.duringEditMode) {\n    if (!this.leaveEditMode()) {\n      return RESULT_HIDE_FAIL;\n    }\n  }\n\n  viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onCameraChangeBinded);\n  viewer.removeEventListener(Autodesk.Viewing.VIEWER_RESIZE_EVENT, this.onViewerResizeBinded);\n\n  var svg = this.svg;\n  svg.parentNode && svg.parentNode.removeChild(svg);\n\n  // Remove all Markups and metadata (if any)\n  this.unloadMarkupsAllLayers();\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.removeAllMetadata)(svg);\n\n  this.input.leaveViewMode();\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.restoreLmvUi)(viewer);\n  this.viewer.impl.rolloverObject = this.onViewerRolloverObject;\n\n  this.activateTool(false);\n  this.duringViewMode = false;\n  return RESULT_HIDE_OK;\n};\n\n/**\n * Removes newly created markups in the current editing layer.\n * Markups that were created in a specific layer will not be removed.\n *\n * Markups should have been added while in\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|enterEditMode()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.clear\n * @method clear\n */\nMarkupsCore.prototype.clear = function () {\n  // Can only clear specific layers when in the edit mode of that layer.\n  if (!this.duringEditMode) {\n    console.warn(\"Clear only removes markups when in Edit Mode.\");\n    return;\n  }\n  var editModeLayer = this.editingLayer ? this.svgLayersMap[this.editingLayer] : this.editModeSvgLayerNode;\n  if (editModeLayer) {\n    var markups = editModeLayer.markups;\n    var svg = editModeLayer.svg;\n    if (svg && svg.childNodes.length > 0) {\n      while (svg.childNodes.length) {\n        svg.removeChild(svg.childNodes[0]);\n      }\n    }\n    while (markups.length > 0) {\n      var markup = markups[0];\n      this.removeMarkup(markup);\n      markup.destroy();\n    }\n  }\n};\n\n/**\n * Returns an SVG string with the markups created so far.\n * The SVG string can be reloaded using {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#loadmarkups-markupstring-layerid|loadMarkups()}.\n *\n * Markups should have been added while in {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|enterEditMode()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.generateData\n * @method generateData\n *\n * @returns {string} Returns an SVG element with all of the created markups in a string format.\n */\nMarkupsCore.prototype.generateData = function () {\n\n  var defaultLayer = this.editModeSvgLayerNode.svg;\n\n  if (this.editMode) {\n    this.editMode.onSave();\n  }\n\n  // Sanity check, remove any lingering metadata nodes\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.removeAllMetadata)(this.svg);\n\n  if (this.activeLayer) {\n    defaultLayer = this.svgLayersMap[this.activeLayer].svg;\n  }\n\n  var tmpNode = this.createSvgElement(\"svg\");\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.transferChildNodes)(this.svg, tmpNode); // Transfer includes this.editModeSvgLayerNode\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.transferChildNodes)(defaultLayer, this.svg);\n\n  // version 1: first implementation.\n  // version 2: added global offset to markup positions.\n  // version 3: change node structure to include hitareas, hit areas are not exported.\n  // version 4: scale perspective markups space by PERSPECTIVE_MODE_SCALE because bug in firefox. LMV-1150\n  var metadataObject = {\n    \"data-model-version\": \"4\"\n  };\n  var metadataNode = this.addSvgMetadata(this.svg, metadataObject);\n  var metadataNodes = [metadataNode];\n\n  // Notify each markup to inject metadata\n  this.markups.forEach(function (markup) {\n    var addedNode = markup.setMetadata();\n    if (addedNode) {\n      metadataNodes.push(addedNode);\n    }\n  });\n\n  // Generate the data!\n  var data = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.svgNodeToString)(this.svg);\n\n  // Remove metadataObject before returning\n  metadataNodes.forEach(function (metadataNode) {\n    metadataNode.parentNode.removeChild(metadataNode);\n  });\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.transferChildNodes)(this.svg, defaultLayer);\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.transferChildNodes)(tmpNode, this.svg);\n  tmpNode = null; // get rid of it.\n\n  return data;\n};\n\n/**\n * @private\n */\nMarkupsCore.prototype.generatePoints3d = function () {\n\n  var result = { markups: [], main: null };\n  var markups = this.markups;\n  var markupsCount = markups.length;\n\n  if (markupsCount === 0) {\n    return result;\n  }\n\n  // Gather a 3d point for markup.\n  var idTarget = this.viewer.impl.renderer().readbackTargetId();\n  for (let i = 0; i < markupsCount; ++i) {\n\n    var markup = markups[i];\n    var point = markup.generatePoint3d(idTarget) || null;\n    result.markups.push(\n      {\n        id: markup.id,\n        type: markup.type,\n        point: point || null\n      });\n  }\n\n\n  // If there is 3d point associated with an arrow, we use that as main point.\n  if (markupsCount === 1) {\n\n    var main = result.markups[0].point;\n    result.main = main && main.clone();\n    return result;\n  }\n\n  for (let i = 0; i < markupsCount; ++i) {\n\n    var collision = result.markups[i];\n    if (collision.type === _MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_ARROW && collision.point !== null) {\n\n      result.main = collision.point.clone();\n      return result;\n    }\n  }\n\n  // If there is no arrows, we average bounding boxes and get a 3d point inside it.\n  var bbX0 = Number.POSITIVE_INFINITY;\n  var bbY0 = Number.POSITIVE_INFINITY;\n  var bbX1 = Number.NEGATIVE_INFINITY;\n  var bbY1 = Number.NEGATIVE_INFINITY;\n\n  for (let i = 0; i < markupsCount; ++i) {\n\n    var boundingBox = markups[i].generateBoundingBox();\n\n    bbX0 = Math.min(bbX0, boundingBox.min.x);\n    bbY0 = Math.min(bbY0, boundingBox.min.y);\n    bbX1 = Math.max(bbX1, boundingBox.max.x);\n    bbY1 = Math.max(bbY1, boundingBox.max.y);\n  }\n\n  var polygon = {};\n\n  polygon.vertexCount = 4;\n  polygon.xVertices = new Float32Array([bbX0, bbX1, bbX1, bbX0]);\n  polygon.yVertices = new Float32Array([bbY0, bbY0, bbY1, bbY1]);\n\n  var point2d = this.checkPolygon(polygon, idTarget);\n  var point3d = point2d && this.viewer.clientToWorld(point2d.x, point2d.y);\n  result.main = point3d && point3d.point;\n\n  return result;\n};\n\n/**\n * Renders the markups onto a 2D canvas context to generate an image.\n *\n * @param {CanvasRenderingContext2D} context - Markups are drawn using the context provided\n * @param callback\n * @param renderAllMarkups\n * @private\n */\nMarkupsCore.prototype.renderToCanvas = function (context, callback, renderAllMarkups) {\n\n  var width = this.bounds.width;\n  var height = this.bounds.height;\n  var viewBox = this.getSvgViewBox(width, height);\n  var numberOfScreenshotsTaken = 0;\n  var markups = [];\n  var layer;\n\n  var onMarkupScreenshotTaken = function () {\n    if (callback && ++numberOfScreenshotsTaken === markups.length) {\n      callback();\n    }\n  }.bind(this);\n\n  if (renderAllMarkups) {\n    var svgKeys = Object.keys(this.svg.childNodes);\n    var layersKeys = Object.keys(this.svgLayersMap);\n\n    // Append only markups that their parent layer is contained inside the svg main container.\n    for (var i = 0; i < svgKeys.length; i++) {\n      for (var j = 0; j < layersKeys.length; j++) {\n        layer = this.svgLayersMap[layersKeys[j]];\n        if (this.svg.childNodes[svgKeys[i]] === layer.svg) {\n          markups = markups.concat(layer.markups);\n        }\n      }\n    }\n  } else {\n    layer = this.svgLayersMap[this.activeLayer] || this.editModeSvgLayerNode;\n    markups = layer.markups;\n  }\n\n  if (markups.length === 0) {\n    callback();\n  } else {\n    markups.forEach(function (markup) {\n      markup.renderToCanvas(context, viewBox, width, height, onMarkupScreenshotTaken);\n    });\n  }\n};\n\n/**\n * Changes the active drawing tool. For example, from the Arrow drawing tool to the Rectangle drawing tool.\n * Only applicable while in {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|Edit Mode}.\n *\n * Supported values are:\n * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeArrow(MarkupsCoreInstance)`\n * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeRectangle(MarkupsCoreInstance)`\n * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeCircle(MarkupsCoreInstance)`\n * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeCloud(MarkupsCoreInstance)`\n * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeText(MarkupsCoreInstance)`\n * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModeFreehand(MarkupsCoreInstance)`\n * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModePolyline(MarkupsCoreInstance)`\n * - `new Autodesk.Viewing.Extensions.Markups.Core.EditModePolycloud(MarkupsCoreInstance)`\n *\n * This function fires event `Autodesk.Viewing.Extensions.MarkupsCore.EVENT_EDITMODE_CHANGED`.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#changeEditMode\n * @method changeEditMode\n *\n * @param {object} editMode - Object instance for the drawing tool\n * @fires Autodesk.Viewing.Extensions.MarkupsCore.EVENT_EDITMODE_CHANGED\n */\nMarkupsCore.prototype.changeEditMode = function (editMode) {\n\n  var oldEditMode = this.editMode;\n  oldEditMode && oldEditMode.destroy();\n\n  editMode.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_CREATION_BEGIN, function () {this.disableMarkupInteractions(true);}.bind(this));\n  editMode.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_CREATION_END, function () {this.disableMarkupInteractions(false);}.bind(this));\n  editMode.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_DESELECT, function (event) {this.dispatchEvent(event);}.bind(this));\n\n  this.editMode = editMode;\n  this.styles[editMode.type] = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_4__.cloneStyle)(editMode.getStyle());\n\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_CHANGED, target: editMode });\n};\n\n/**\n * Check whether a user can perform camera navigation operations on the current loaded model.\n * While the extension is active, the user can still draw markups.\n * Panning and zooming are only supported for orthographic cameras.\n *\n * @returns {boolean} Whether {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#allownavigation-allow|allowNavigation()} can succeed.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.isNavigationAllowed\n * @method isNavigationAllowed\n */\nMarkupsCore.prototype.isNavigationAllowed = function () {\n\n  return !this.viewer.impl.camera.isPerspective;\n};\n\n/**\n * Enables click, tap, and swipe behavior to allow camera zoom and panning operations. It is only available in\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|Edit mode}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.allowNavigation\n * @method allowNavigation\n *\n * @param {boolean} allow - Whether camera navigation interactions are active or not.\n */\nMarkupsCore.prototype.allowNavigation = function (allow) {\n\n  //we will still need to update the markup styles even if in perspective mode\n  var editMode = this.editMode;\n  this.navigating = allow;\n\n  if (allow) {\n    this.svg.setAttribute(\"pointer-events\", \"none\");\n    editMode && this.selectMarkup(null);\n  } else {\n    this.svg.setAttribute(\"pointer-events\", \"painted\");\n  }\n\n  // Update pointer events for all markups.\n  var markups = this.markups;\n  var markupsCount = markups.length;\n\n  for (var i = 0; i < markupsCount; ++i) {\n    markups[i].updateStyle();\n  }\n  editMode && editMode.notifyAllowNavigation(allow);\n\n  // Navigation is not allowed while in perspective mode.\n  if (allow && (this.duringEditMode || this.duringViewMode) && !this.isNavigationAllowed()) {\n    return false;\n  }\n\n  // Clear snapper.\n  if (allow && this.snapper) {\n    this.snapper.indicator.clearOverlays();\n    this.snapper.clearSnapped();\n  }\n\n  this.markupTool.allowNavigation(allow);\n\n};\n\n/**\n * Sets mouse interactions and mobile device gestures with markups. Only applicable in\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|Edit mode}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.disableMarkupInteractions\n * @method disableMarkupInteractions\n *\n * @param {boolean} disable - true to disable interactions with markups; false to enable interactions with markups; default false.\n */\nMarkupsCore.prototype.disableMarkupInteractions = function (disable) {\n\n  if (this.editModeSvgLayerNode) {\n    this.editModeSvgLayerNode.svg.setAttribute('cursor', disable ? 'inherit' : 'default');\n  }\n  this.markups.forEach(function (markup) {markup.disableInteractions(disable);});\n};\n\n/**\n *\n * @param isActive\n * @private\n */\nMarkupsCore.prototype.activateTool = function (isActive) {\n  if (isActive) {\n    if (!this.cachedNavigationTool) {\n      this.cachedNavigationTool = this.viewer.getActiveNavigationTool();\n      this.viewer.addEventListener(Autodesk.Viewing.TOOL_CHANGE_EVENT, this.onToolChangeBinded);\n    }\n    this.viewer.setActiveNavigationTool(this.markupTool.getName());\n  } else {\n\n    if (this.cachedNavigationTool) {\n      this.viewer.setActiveNavigationTool(this.cachedNavigationTool);\n      this.cachedNavigationTool = null;\n    } else {\n      var defaultToolName = this.viewer.getDefaultNavigationToolName();\n      this.viewer.setActiveNavigationTool(defaultToolName);\n    }\n\n    this.viewer.removeEventListener(Autodesk.Viewing.TOOL_CHANGE_EVENT, this.onToolChangeBinded);\n  }\n};\n\n/**\n *\n * @param event\n * @private\n */\nMarkupsCore.prototype.onToolChange = function (event) {\n\n  if (event.toolName !== this.markupTool.getName())\n  return;\n\n  if (event.active) {\n    var navAllowed = this.isNavigationAllowed();\n    this.viewer.setNavigationLockSettings({\n      pan: navAllowed,\n      zoom: navAllowed,\n      orbit: false,\n      roll: false,\n      fov: false,\n      walk: false,\n      gotoview: false\n    });\n  }\n  this.viewer.setNavigationLock(event.active);\n};\n\nMarkupsCore.prototype.onUnitsCalibrationStarts = function () {\n  if (this.duringEditMode) {\n    this.hide();\n  }\n};\n\n//// Input /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nproto.changeInputHandler = function (inputHandler) {\n\n  this.input.detachFrom(this);\n  inputHandler.attachTo(this);\n  this.input = inputHandler;\n\n  if (this.duringEditMode) {\n    inputHandler.enterEditMode();\n  }\n\n  if (this.duringViewMode) {\n    inputHandler.enterViewMode();\n  }\n};\n\n//// Copy and Paste System /////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Standard copy operation. Applies to any selected markup.<br>\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#cut-1|cut()} and\n *{@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#paste-2|paste()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#copy\n * @method copy\n */\nMarkupsCore.prototype.copy = function () {\n\n  this.clipboard.copy();\n};\n\n/**\n * Standard cut operation. Applies to any selected markup, which gets removed from the screen at call time.<br>\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#copy|copy()} and\n *{@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#paste-2|paste()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#cut\n * @method cut\n */\nMarkupsCore.prototype.cut = function () {\n\n  this.clipboard.cut();\n};\n\n/**\n * Standard paste operation. This function will paste any previously copied or cut markup.\n * Can be called repeatedly after a single copy or cut operation.<br>\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#copy|copy()} and\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#cut-1|cut()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#paste\n * @method paste\n */\nMarkupsCore.prototype.paste = function () {\n\n  this.clipboard.paste();\n};\n\n//// Undo and Redo System //////////////////////////////////////////////////////////////////////////////////////////\n/**\n * Will undo the previous operation.<br>\n * The Undo/Redo stacks will track any change done to the existing markups.<br>\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#redo-1|redo()} and\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#isUndoStackEmpty|isUndoStackEmpty()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#undo\n * @method undo\n */\nMarkupsCore.prototype.undo = function () {\n\n  this.actionManager.undo();\n};\n\n/**\n * Will redo any previously undo operation.<br>\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#undo|undo()},\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#isRedoStackEmpty|isRedoStackEmpty()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#redo\n * @method redo\n */\nMarkupsCore.prototype.redo = function () {\n\n  this.actionManager.redo();\n};\n\n/**\n * Returns true when {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#undo|undo()} produces no changes.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#isUndoStackEmpty\n * @method isUndoStackEmpty\n *\n * @returns {boolean} true if there are no changes to undo; false if there are changes to undo.\n */\nMarkupsCore.prototype.isUndoStackEmpty = function () {\n\n  return this.actionManager.isUndoStackEmpty();\n};\n\n/**\n * Returns true when {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#redo-1|redo()} produces no changes.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#isRedoStackEmpty\n * @method isRedoStackEmpty\n *\n * @returns {boolean} true if there are no changes to redo; false if there are changes to redo.\n */\nMarkupsCore.prototype.isRedoStackEmpty = function () {\n\n  return this.actionManager.isRedoStackEmpty();\n};\n\nproto.beginActionGroup = function () {\n\n  this.actionManager.beginActionGroup();\n};\n\nproto.closeActionGroup = function () {\n\n  this.actionManager.closeActionGroup();\n};\n\nproto.cancelActionGroup = function () {\n\n  this.actionManager.cancelActionGroup();\n};\n\n/**\n * Helper function for generating unique markup ids.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#getId\n * @method getId\n *\n * @returns {number}\n */\nproto.getId = function () {\n\n  return ++this.nextId;\n};\n\n/**\n * @param event\n * @private\n */\nproto.onEditActionHistoryChanged = function (event) {\n\n  var data = event.data;\n  if (data.action !== 'undo' && data.targetId !== -1) {\n\n    // Markup can be null when deleting, that's ok, we unselect in that case.\n    let markup = this.getMarkup(data.targetId);\n    this.selectMarkup(markup);\n  }\n  if (data.action === 'undo' && !this.isUndoStackEmpty()) {\n\n    let markup = this.getMarkup(this.actionManager.getLastElementInUndoStack().getTargetId());\n    this.selectMarkup(markup);\n  }\n\n  this.dispatchEvent(event);\n};\n\n/**\n * Returns a markup with the specified ID. Returns null when not found.\n * The ID can be retrieved from the return value of getSelection(). <br>\n * See also\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#getselection-1|getSelection()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#getMarkup\n * @method getMarkup\n *\n * @param {string} id Markup identifier.\n * @returns {Autodesk.Viewing.Extensions.Markups.Core.Markup} Returns markup object.\n */\nMarkupsCore.prototype.getMarkup = function (id) {\n\n  var markups = this.markups;\n  var markupsCount = markups.length;\n\n  for (var i = 0; i < markupsCount; ++i) {\n    if (markups[i].id == id) {\n      return markups[i];\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Selects or deselects a markup. A selected markup gets an overlayed UI that allows you to perform transformations\n * such as resizing, rotations, and translations. To deselect a markup, send a null value. <br>\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#getmarkup-id|getMarkup()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#selectMarkup\n * @method selectMarkup\n *\n * @param {Autodesk.Viewing.Extensions.Markups.Core.Markup|null} markup The markup instance to select. Set the value to null to deselect a markup.\n */\nMarkupsCore.prototype.selectMarkup = function (markup) {\n\n  if (markup) {\n\n    if (this.editMode.type === markup.type) {\n      this.editMode.setSelection(markup);\n    } else {\n\n      var editMode = markup.getEditMode();\n      editMode.setSelection(null);\n\n      this.changeEditMode(editMode);\n      this.setStyle(markup.getStyle());\n      this.editMode.setSelection(markup);\n    }\n  } else {\n    // fix for text markup in view mode\n    if (this.editMode) {\n      this.editMode.setSelection(null);\n    }\n  }\n};\n\n/**\n * Returns the currently selected markup. A selected markup has a custom UI overlayed that allows you to perform\n * resizing, rotations and translations.<br>\n * See also\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#selectmarkup-markup|selectMarkup()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#getSelection\n * @method getSelection\n *\n * @returns {Autodesk.Viewing.Extensions.Markups.Core.Markup|null} Returns selected markup object; null if no markup is selected.\n */\nMarkupsCore.prototype.getSelection = function () {\n\n  return this.editMode.getSelection();\n};\n\n/**\n * Deletes a markup from the canvas. Only applies while in\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|Edit mode}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore#deleteMarkup\n * @method deleteMarkup\n *\n * @param {Autodesk.Viewing.Extensions.Markups.Core.Markup} markup - Markup object.\n * @param {boolean} [dontAddToHistory] Whether delete action can be {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#undo|undone}.\n */\nMarkupsCore.prototype.deleteMarkup = function (markup, dontAddToHistory) {\n\n  if (!this.editMode || this.editMode && this.editMode.selectedMarkup.id !== markup.id) {\n    this.editMode = markup.getEditMode();\n  }\n  this.editMode.deleteMarkup(markup, dontAddToHistory);\n};\n\nproto.addMarkup = function (markup) {\n\n  var markups;\n  var layer = this.activeLayer;\n  var layerObject = this.svgLayersMap[layer] || '';\n\n  if (layerObject) {\n    var svgParent = layerObject.svg;\n    // append markup svg to layer svg\n    markup.setParent(svgParent);\n    // Add markup to layer markups if it does not exist\n    layerObject.markups.push(markup);\n    markups = layerObject.markups.slice();\n  } else {\n    // if layer is undefined create a edit mode svg layer\n    markup.setParent(this.editModeSvgLayerNode.svg);\n    this.editModeSvgLayerNode.markups.push(markup);\n    markups = this.editModeSvgLayerNode.markups.slice();\n  }\n\n  markup.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_SELECTED, this.onMarkupSelectedBinded);\n  markup.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_ENTER_EDITION, this.onMarkupEnterEditionBinded);\n  markup.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_CANCEL_EDITION, this.onMarkupCancelEditionBinded);\n  markup.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_DELETE_EDITION, this.onMarkupDeleteEditionBinded);\n  // Only set the global markups array when in edit mode\n  if (this.duringEditMode) {\n    this.markups = markups;\n  }\n};\n\n/**\n *\n * @param markup\n * @private\n */\nproto.removeMarkup = function (markup) {\n\n  if (!markup) {\n    return false;\n  }\n  var self = this;\n\n  /**\n   * Get the layer markups in which the markup exists.\n   * This function will remove the markup if it exists in the corresponding layer markups array.\n   *\n   * @param markup\n   * @returns {number} returns -1 if the markup does not exist in a layer markups array\n   */\n  function removeMarkupIfExists(markup) {\n    var markupIndex;\n    var layerMarkups = -1;\n    // check if the markup exists in the edit layer\n    if (self.editModeSvgLayerNode) {\n      var editLayerMarkups = self.editModeSvgLayerNode.markups;\n      markupIndex = editLayerMarkups.indexOf(markup);\n      if (markupIndex !== -1) {\n        // remove the markup from the corresponding markup array\n        editLayerMarkups.splice(markupIndex, 1);\n        layerMarkups = editLayerMarkups.slice();\n        // update the global markups array if the markup is in the active layer\n        if (self.activeLayer === '') {\n          self.markups = layerMarkups;\n        }\n        return layerMarkups;\n      }\n    }\n    // check if the markup exists in a layer\n    if (self.svgLayersMap) {\n      for (var layer in self.svgLayersMap) {\n        var markups = self.svgLayersMap[layer].markups;\n        markupIndex = markups.indexOf(markup);\n        if (markupIndex !== -1) {\n          // remove the markup from the corresponding markup array\n          markups.splice(markupIndex, 1);\n          layerMarkups = markups.slice();\n          // update the global markups array if the markup is in the active layer\n          if (self.activeLayer === layer) {\n            self.markups = layerMarkups;\n          }\n          return layerMarkups;\n        }\n      }\n    }\n    return layerMarkups;\n  }\n\n  var layerMarkups = removeMarkupIfExists(markup);\n  if (layerMarkups === -1)\n  return false;\n\n  markup.setParent(null);\n\n  markup.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_SELECTED, this.onMarkupSelectedBinded);\n  markup.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_ENTER_EDITION, this.onMarkupEnterEditionBinded);\n  markup.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_CANCEL_EDITION, this.onMarkupCancelEditionBinded);\n  markup.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_DELETE_EDITION, this.onMarkupDeleteEditionBinded);\n\n  var editMode = this.editMode;\n  if (editMode) {\n    var selectedMarkup = editMode.getSelection();\n    if (selectedMarkup === markup) {\n      this.selectMarkup(null);\n    }\n  }\n};\n\n//// Markups style /////////////////////////////////////////////////////////////////////////////////////////////////\n\nMarkupsCore.prototype.setStyle = function (style) {\n\n  var styles = this.styles;\n  var editMode = this.editMode;\n\n  (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_4__.copyStyle)(style, styles[editMode.type]);\n  // copyStyle(styles[editMode.type], style);\n  editMode.setStyle(styles[editMode.type]);\n};\n\nMarkupsCore.prototype.getStyle = function () {\n\n  return (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_4__.cloneStyle)(this.styles[this.editMode.type]);\n};\n\nMarkupsCore.prototype.getDefaultStyle = function () {\n\n  var defaultStyleAttributes = [\n  'stroke-width',\n  'font-size',\n  'font-family',\n  'font-style',\n  'font-weight',\n  'stroke-color',\n  'stroke-opacity',\n  'fill-color',\n  'text-data',\n  'fill-opacity'];\n  this.defaultStyle = this.defaultStyle || (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_4__.createStyle)(defaultStyleAttributes, this);\n\n  return this.defaultStyle;\n};\n\n//// Markups depth order ///////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param markup\n * @private\n */\nproto.bringToFront = function (markup) {\n\n  this.sendMarkupTo(markup, this.markups.length - 1);\n};\n\n/**\n *\n * @param markup\n * @private\n */\nproto.sendToBack = function (markup) {\n\n  this.sendMarkupTo(markup, 0);\n};\n\n/**\n *\n * @param markup\n * @private\n */\nproto.bringForward = function (markup) {\n\n  var markupIndex = this.markups.indexOf(markup);\n  this.sendMarkupTo(markup, markupIndex + 1);\n};\n\n/**\n *\n * @param markup\n * @private\n */\nproto.bringBackward = function (markup) {\n\n  var markupIndex = this.markups.indexOf(markup);\n  this.sendMarkupTo(markup, markupIndex - 1);\n};\n\n/**\n *\n * @param markup\n * @param index\n * @private\n */\nproto.sendMarkupTo = function (markup, index) {\n\n  var markups = this.markups;\n  var markupIndex = markups.indexOf(markup);\n\n  if (markupIndex === -1 || index < 0 || index >= markups.length) {\n    return;\n  }\n\n  markups.splice(markupIndex, 1);\n  index = markupIndex > index ? index - 1 : index;\n  markups.splice(index, 0, markup);\n\n  // TODO: Add markup in right position not always at the end.\n  markup.setParent(null);\n  if (this.activeLayer) {\n    var parent = this.svgLayersMap[this.activeLayer].svg;\n    markup.setParent(parent);\n  } else {\n    markup.setParent(this.editModeSvgLayerNode.svg);\n  }\n};\n\n\n/**\n * Loads data (SVG string) for all markups in a specified layer (layerId) to the Viewer's canvas.<br>\n *\n * See also\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#unloadmarkups-layerid|unloadMarkups()}, and\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#hidemarkups-layerid|hideMarkups()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.loadMarkups\n * @method loadMarkups\n *\n * @param {string} markupString - SVG string with markups. See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#generatedata|generateData()}.\n * @param {string} layerId - Identifier for the layer where the markup should be loaded to. Example \"Layer1\".\n * @returns {boolean} Whether the markup string was able to be loaded successfully\n */\nMarkupsCore.prototype.loadMarkups = function (markupString, layerId) {\n\n  if (this.duringEditMode) {\n    console.warn(\"Markups will not be loaded during the edit mode\");\n    return false;\n  }\n\n  if (!this.duringViewMode) {\n    return false;\n  }\n\n  if (!layerId) {\n    console.warn(\"loadMarkups failed; missing 2nd argument 'layerId'\");\n    return false;\n  }\n\n  // Can it be parsed into SVG?\n  var parent = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.stringToSvgNode)(markupString);\n  if (!parent) {\n    return false;\n  }\n\n  // If the supplied layerId exists in the svg layers map and there are children in the svg then return false.\n  if (layerId in this.svgLayersMap && this.svg.childNodes.length > 0) {\n    console.warn(\"This layer is already loaded, will not load again.\");\n    return false;\n  }\n  this.activeLayer = layerId;\n  var svgLayerNode = this.svgLayersMap[layerId];\n\n  // if the layer exists, delete it\n  if (svgLayerNode)\n  delete this.svgLayersMap[layerId];\n\n  // create an empty parent svg layer node for layerId\n  // Child markups will get added to th parent svg layer node in the addMarkup function\n  var newSvg = this.createLayerNode();\n\n  svgLayerNode = {\n    markups: [],\n    svgString: markupString,\n    svg: newSvg\n  };\n  this.svgLayersMap[layerId] = svgLayerNode;\n\n  var children = parent.childNodes;\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    var markup = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.createMarkupFromSVG)(child, this);\n    // Disable markups if already in edit mode and the active layer is different\n    if (markup && this.duringEditMode && this.editingLayer !== this.activeLayer) {\n      markup.disableInteractions(true);\n    }\n\n    if (!markup && child.localName !== \"metadata\") {\n      // Append child removes it from parent and copies it over to the new svg layer node,\n      // so we need to reduce index by 1 to continue proper iteration\n      svgLayerNode.svg.appendChild(child);\n      i--;\n      if (typeof child.setAttribute === 'function') {\n        child.setAttribute(\"pointer-events\", \"none\");\n      }\n    }\n  }\n\n  var svgParentNode = this.svgLayersMap[this.activeLayer].svg;\n\n  this.svg.appendChild(svgParentNode);\n  // If already in an edit mode layer then reassign active layer to edit layer\n  if (this.duringEditMode && this.editingLayer !== this.activeLayer) {\n    this.activeLayer = this.editingLayer;\n    if (this.editingLayer)\n    this.markups = this.svgLayersMap[this.activeLayer].markups.slice();\n  }\n  return true;\n};\n\n/**\n * TODO: Probably this function needs to be moved to MarkupCoreUtils.js\n * Creates a new layer node\n * */\n\nproto.createLayerNode = function () {\n\n  var newSvgLayerNode = this.createSvgElement('g');\n  newSvgLayerNode.setAttribute('cursor', 'default');\n  return newSvgLayerNode;\n};\n\n/**\n * Revert any changes made to the specific layer.\n *\n * See also {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#loadmarkups-markupstring-layerid|loadMarkups()} and\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#entereditmode-layerid|enterEditMode()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.revertLayer\n * @method revertLayer\n *\n * @param {string} layerId - ID of the layer to revert any changes that were made to it.\n * @returns {boolean} true if the layer was unloaded, false if the layer was not unloaded.\n */\nMarkupsCore.prototype.revertLayer = function (layerId) {\n  if (!layerId) {\n    console.warn(\"revertLayer failed because no layerId was supplied.\");\n    return false;\n  }\n  var svgLayerNode = this.svgLayersMap[layerId];\n  if (!svgLayerNode) {\n    console.warn(\"The supplied layer does not exist.\");\n    return false;\n  }\n  var inEditMode = this.duringEditMode;\n  // Leave editMode to revert a layer\n  if (inEditMode)\n  this.leaveEditMode();\n\n  // keep track of previous global markups.\n  var currentMarkups = this.markups.slice();\n  // Set the global markups to the markups in the current layer. These ones get removed in the unloadMarkups\n  this.markups = svgLayerNode.markups;\n  var layerSvg = svgLayerNode.svgString;\n  this.unloadMarkups(layerId);\n  this.loadMarkups(layerSvg, layerId);\n  // Assign markups\n  if (this.editingLayer) {\n    if (this.editingLayer !== layerId) {\n      this.markups = currentMarkups;\n      var layerObject = this.svgLayersMap[this.editingLayer];\n      if (layerObject) {\n        layerObject.markups = currentMarkups;\n      }\n    }\n  } else {\n    if (this.editModeSvgLayerNode) {\n      this.editModeSvgLayerNode.markups = currentMarkups;\n    }\n  }\n\n  if (this.editingLayer || this.editingLayer.length === 0) {\n    var svg = this.editingLayer.length === 0 ? this.editModeSvgLayerNode.svg : this.svgLayersMap[this.editingLayer].svg;\n    if (svg.parentNode == this.svg) {\n      this.svg.removeChild(svg);\n      this.svg.appendChild(svg);\n    }\n  }\n  return true;\n};\n\n/**\n * Removes markups from the DOM (Document Object Model). This is helpful for freeing up memory.<br>\n *\n * See also\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#loadmarkups-markupstring-layerid|loadMarkups()},\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#unloadmarkupsalllayers-1|unloadMarkupsAllLayers()},\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#clear|clear()},\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#hide-1|hide()}, and\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#hidemarkups-layerid|hideMarkups()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.unloadMarkups\n * @method unloadMarkups\n *\n * @param {string} layerId - ID of the layer containing all markups to unload (from the DOM).\n * @returns {boolean} Whether the operation succeeded or not.\n */\nMarkupsCore.prototype.unloadMarkups = function (layerId) {\n\n  if (!layerId) {\n    console.warn(\"unloadMarkups failed; No layerId provided.\");\n    return false;\n  }\n\n  var svgLayerNode = this.svgLayersMap[layerId];\n  if (!svgLayerNode) {\n    // TODO: Do we need to log anything here?\n    console.warn('No such layer exists to unload.');\n    return false;\n  }\n\n  var layerMarkups = svgLayerNode.markups.slice();\n  var numMarkups = layerMarkups.length;\n  for (var i = 0; i < numMarkups; i++) {\n    var markup = layerMarkups[i];\n    this.removeMarkup(markup);\n    markup.destroy();\n  }\n\n  // Remove the markups in the layer from the svg canvas\n  if (svgLayerNode.svg.parentNode === this.svg)\n  this.svg.removeChild(svgLayerNode.svg);\n\n  // Delete the layer from the layer map.\n  delete this.svgLayersMap[layerId];\n  // Reset the active layer if the supplied layer id is the same as the active layer\n  if (this.activeLayer.toString() === layerId.toString()) {\n    this.activeLayer = '';\n  }\n  // Leave edit mode and reset the editing layer if the supplied layer is the same as the current editing layer\n  if (this.editingLayer && this.editingLayer.toString() === layerId.toString()) {\n    this.editingLayer = '';\n    this.duringEditMode && this.leaveEditMode();\n  }\n\n  return true;\n};\n\n/**\n * Removes all markups loaded so far. Great for freeing up memory.\n *\n * See also\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#loadmarkups-markupstring-layerid|loadMarkups()},\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#unloadmarkups-layerid|unloadMarkups()},\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#clear|clear()},\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#hide-1|hide()}, and\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#hidemarkups-layerid|hideMarkups()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.unloadMarkupsAllLayers\n * @method unloadMarkupsAllLayers\n */\nMarkupsCore.prototype.unloadMarkupsAllLayers = function () {\n  this.activeLayer = '';\n  var self = this;\n\n  //this is specific to the editModeSvgLayerNode, enterEditMode().\n  var unloadSvgLayerNode = function () {\n    if (self.editModeSvgLayerNode) {\n      var layerMarkups = self.editModeSvgLayerNode.markups.slice();\n      var numMarkups = layerMarkups.length;\n      for (var i = 0; i < numMarkups; i++) {\n        var markup = layerMarkups[i];\n        self.removeMarkup(markup);\n        markup.destroy();\n      }\n    }\n  };\n\n  // Unload the markups in the editModeSvgLayerNode\n  unloadSvgLayerNode();\n  var layerId;\n  for (layerId in this.svgLayersMap) {\n    this.unloadMarkups(layerId);\n  }\n};\n\n/**\n * Hides all markups in a specified layer. Note that hidden markups will not be unloaded.\n * Use the {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#showmarkups-layerid|showMarkups()} method to make\n * them visible again; no additional parsing is required.\n *\n * See also\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#showmarkups-layerid|showMarkups()},\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#unloadmarkups-layerid|unloadMarkups()}, and\n * {@link /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#loadmarkups-markupstring-layerid|loadMarkups()}.\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.hideMarkups\n * @method hideMarkups\n *\n * @param {string} layerId - ID of the layer containing all markups that should be hidden (in the DOM).\n * @returns {boolean} Whether the operation succeeded or not.\n */\nMarkupsCore.prototype.hideMarkups = function (layerId) {\n\n  if (!layerId) {\n    console.warn(\"hideMarkups failed; No layerId provided.\");\n    return false;\n  }\n\n  var svgLayerNode = this.svgLayersMap[layerId];\n  if (!svgLayerNode) {\n    // TODO: Do we need to log anything here?\n    return false;\n  }\n  var layerSvg = svgLayerNode.svg;\n\n  // Return false if the layer svg is not present in the main svg\n  if (layerSvg.parentNode != this.svg) {\n    console.warn(\"Layer is already hidden.\");\n    return false;\n  }\n  // remove the layer svg from the main svg\n  this.svg.removeChild(layerSvg);\n  return true;\n};\n\n/**\n * Unhides a layer of hidden markups\n * ({@link  /en/docs/viewer/v7/reference/Extensions/MarkupsCore/#hidemarkups-layerid|hideMarkups()}).\n *\n * @memberof Autodesk.Viewing.Extensions.MarkupsCore\n * @alias Autodesk.Viewing.Extensions.MarkupsCore.showMarkups\n * @method showMarkups\n *\n * @param {string} layerId - ID of the layer containing all markups to unload (from the DOM).\n * @returns {boolean} Whether the operation succeeded or not.\n */\nMarkupsCore.prototype.showMarkups = function (layerId) {\n\n  if (!layerId) {\n    console.warn(\"showMarkups failed; No layerId provided.\");\n    return false;\n  }\n\n  var svgLayerNode = this.svgLayersMap[layerId];\n  if (!svgLayerNode) {\n    // TODO: Do we need to log anything here?\n    return false;\n  }\n  // Append the layer svg to the main svg\n  var layerSvg = svgLayerNode.svg;\n  this.svg.appendChild(layerSvg);\n};\n\n//// Client Space <-> Markup Space /////////////////////////////////////////////////////////////////////////////////\n\nproto.positionFromClientToMarkups = function (x, y) {\n\n  return this.clientToMarkups(x, y);\n};\n\nproto.positionFromMarkupsToClient = function (x, y) {\n\n  return this.markupsToClient(x, y);\n};\n\nproto.vectorFromClientToMarkups = function (x, y) {\n\n  var a = this.clientToMarkups(0, 0);\n  var b = this.clientToMarkups(x, y);\n\n  return { x: b.x - a.x, y: b.y - a.y };\n};\n\nproto.vectorFromMarkupsToClient = function (x, y) {\n\n  var a = this.markupsToClient(0, 0);\n  var b = this.markupsToClient(x, y);\n\n  return { x: b.x - a.x, y: b.y - a.y };\n};\n\nproto.sizeFromClientToMarkups = function (w, h) {\n\n  var a = this.clientToMarkups(0, 0);\n  var b = this.clientToMarkups(w, h);\n\n  return { x: Math.abs(b.x - a.x), y: Math.abs(b.y - a.y) };\n};\n\nproto.sizeFromMarkupsToClient = function (w, h) {\n\n  var a = this.markupsToClient(0, 0);\n  var b = this.markupsToClient(w, h);\n\n  return { x: Math.abs(b.x - a.x), y: Math.abs(b.y - a.y) };\n};\n\nproto.markupsToClient = function (x, y) {\n\n  var camera = this.viewer.impl.camera;\n  var point = new THREE.Vector3(x, y, 0);\n\n  if (camera.isPerspective) {\n\n    var bb = this.viewer.impl.getCanvasBoundingClientRect();\n\n    point.x = point.x / PERSPECTIVE_MODE_SCALE * (bb.height * 0.5) + bb.width * 0.5;\n    point.y = -point.y / PERSPECTIVE_MODE_SCALE * (bb.height * 0.5) + bb.height * 0.5;\n  } else {\n\n    point.applyMatrix4(camera.matrixWorld);\n    point.sub(camera.position);\n\n    // In LMV model is offset by a global offset, we correct this offset when transforming to markups space, so\n    // exported markups don't have the offset.\n    var globalOffset = this.viewer.model && this.viewer.model.getData().globalOffset;\n    if (globalOffset) {\n      point.sub(globalOffset);\n    }\n\n    point = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.worldToClient)(point, this.viewer, false);\n    point.z = 0;\n  }\n\n  return point;\n};\n\nproto.clientToMarkups = function (x, y) {\n\n  var camera = this.viewer.impl.camera;\n  var point = new THREE.Vector3(x, y, 0);\n\n  if (camera.isPerspective) {\n\n    var bb = this.viewer.impl.getCanvasBoundingClientRect();\n\n    // Multiply by PERSPECTIVE_MODE_SCALE because Firfox on Windows machines have problems to deal with very small paths.\n    point.x = (point.x - bb.width * 0.5) / (bb.height * 0.5) * PERSPECTIVE_MODE_SCALE;\n    point.y = -(point.y - bb.height * 0.5) / (bb.height * 0.5) * PERSPECTIVE_MODE_SCALE;\n  } else {\n\n    point = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.clientToWorld)(point.x, point.y, 0, this.viewer);\n\n    // In LMV model is offset by a global offset, we correct this offset when transforming to markups space, so\n    // exported markups don't have the offset.\n    var globalOffset = this.viewer.model && this.viewer.model.getData().globalOffset;\n    if (globalOffset) {\n      point.add(globalOffset);\n    }\n\n    point.add(camera.position);\n    point.applyMatrix4(camera.matrixWorldInverse);\n    point.z = 0;\n  }\n\n  return point;\n};\n\nproto.getSvgViewBox = function (clientWidth, clientHeight) {\n\n  // Get pan offset.\n  var lt = this.clientToMarkups(0, 0);\n  var rb = this.clientToMarkups(clientWidth, clientHeight);\n\n  var l = Math.min(lt.x, rb.x);\n  var t = Math.min(lt.y, rb.y);\n  var r = Math.max(lt.x, rb.x);\n  var b = Math.max(lt.y, rb.y);\n\n  return [l, t, r - l, b - t].join(' ');\n};\n\nproto.getBounds = function () {\n\n  return this.bounds;\n};\n\nproto.getMousePosition = function () {\n\n  // When snapping, use the snap position instead of the mouse position\n  // as the start point of the markup drawing.\n  // For now only works for 2D.\n  if (this.editMode.useWithSnapping() && this.snapper && this.snapper.isSnapped()) {\n    return this.getSnapPosition();\n  }\n  return this.input.getMousePosition();\n};\n\nproto.getSnapPosition = function () {\n\n  var point = MeasureCommon.getSnapResultPosition(this.snapper.getSnapResult(), this.viewer);\n  var p = this.project(point);\n  return { x: p.x, y: p.y };\n};\n\nproto.project = function (position) {\n  var camera = this.viewer.navigation.getCamera();\n  var containerBounds = this.viewer.navigation.getScreenViewport();\n\n  var p = new THREE.Vector3().copy(position);\n  p.project(camera);\n\n  return new THREE.Vector3(Math.round((p.x + 1) / 2 * containerBounds.width),\n  Math.round((-p.y + 1) / 2 * containerBounds.height), p.z);\n};\n\n//// Handled Events ////////////////////////////////////////////////////////////////////////////////////////////////\n\nproto.onCameraChange = function () {\n\n  // Update annotations' parent transform.\n  var viewBox = this.getSvgViewBox(this.bounds.width, this.bounds.height);\n\n  // HACK, for some reason the 2nd frame returns an empty canvas.\n  // The reason why this happens is that the code above calls into the viewer\n  // and a division by zero occurs due to LMV canvas having zero width and height\n  // When we detect this case, avoid setting the viewBox value and rely on one\n  // previously set.\n  if (viewBox === \"NaN NaN NaN NaN\") {\n    return;\n  }\n\n  if (this.svg) {\n    this.svg.setAttribute('viewBox', viewBox);\n  }\n\n\n  var editMode = this.editMode;\n\n  if (editMode) {\n    // Edit frame has to be updated, re-setting the selected markup does the job.\n    if (this.editFrame.isActive()) {\n      var selectedMarkup = editMode.getSelection();\n      this.editFrame.setMarkup(selectedMarkup);\n    }\n\n    if (editMode.updateTextBoxStyle) {\n      editMode.updateTextBoxStyle();\n    }\n\n    if (this.snapper && editMode.useWithSnapping()) {\n      this.snapper.indicator.render();\n    }\n  }\n};\n\nproto.onViewerResize = function (event) {\n\n  this.bounds.x = 0;\n  this.bounds.y = 0;\n  this.bounds.width = event.width;\n  this.bounds.height = event.height;\n\n  if (this.svg) {\n    this.svg.setAttribute('width', this.bounds.width);\n    this.svg.setAttribute('height', this.bounds.height);\n  }\n\n  this.onCameraChange();\n};\n\nproto.callSnapperMouseDown = function () {\n\n  // Disable snapper in freehand mode\n  if (this.editMode && this.editMode.useWithSnapping()) {\n    var mousePosition = this.input.getMousePosition();\n    if (this.snapper) {\n      this.snapper.onMouseDown(mousePosition);\n      this.snapper.indicator.render();\n    }\n  } else {\n    // Clear the snapper when selecting a markup that does not allow snapping.\n    if (this.snapper) {\n      this.snapper.clearSnapped();\n      this.snapper.indicator.clearOverlays();\n    }\n  }\n};\n\nproto.callSnapperMouseMove = function () {\n\n  if (this.editMode && this.editMode.useWithSnapping()) {\n    var mousePosition = this.input.getMousePosition();\n    if (this.snapper) {\n      this.snapper.onMouseMove(mousePosition);\n      this.snapper.indicator.render();\n    }\n  }\n};\n\n/**\n * Handler to mouse move events, used to create markups.\n *\n * @param event\n * @returns {boolean} - if the event was handed by the editor\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  if (this.navigating) {\n    return false;\n  }\n\n  let eventHandled = false;\n  if (this.editFrame.isActive() && event.type === 'mousemove') {\n    eventHandled = this.editFrame.onMouseMove(event);\n  }\n\n  this.callSnapperMouseMove();\n\n  eventHandled = this.editMode && this.editMode.onMouseMove(event) || eventHandled;\n\n  return eventHandled;\n};\n\n/**\n * Handler to mouse down events, used to start creation markups.\n *\n * @param event\n * @private\n */\nproto.onMouseDown = function (event) {\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_3__.dismissLmvHudMessage)();\n\n  this.callSnapperMouseDown();\n\n  var bounds = this.getBounds();\n  var mousePosition = this.getMousePosition();\n\n  if (mousePosition.x >= bounds.x && mousePosition.x <= bounds.x + bounds.width &&\n  mousePosition.y >= bounds.y && mousePosition.y <= bounds.y + bounds.height) {\n    this.editMode.onMouseDown(event);\n  }\n\n  // TODO: There is a better way to do this, implement when undo/redo group.\n  if (!this.editMode.creating && event.target === this.svg) {\n    this.selectMarkup(null);\n  }\n  this.ignoreNextMouseUp = false;\n};\n\n/**\n *\n * @param {*} event\n * @returns {boolean} - true / false means the editor did / didn't handle the event\n * @private\n */\nproto.onMouseUp = function (event) {\n\n  if (this.navigating) {\n    return false;\n  }\n\n  if (this.editFrame.isActive()) {\n    this.editFrame.onMouseUp(event);\n    return true;\n  }\n\n  if (!this.ignoreNextMouseUp) {\n    return this.editMode.onMouseUp(event);\n  }\n};\n\nproto.onMouseDoubleClick = function (event) {\n\n  if (this.navigating) {\n    return;\n  }\n\n  if (this.editFrame.isActive()) {\n    return;\n  }\n\n  this.editMode.onMouseDoubleClick(event);\n};\n\nproto.onUserCancel = function () {\n  if (!this.editMode) {\n    return;\n  } else\n  if (this.editMode.creating) {\n    this.editMode.creationCancel();\n  } else {\n    this.editMode.unselect();\n  }\n};\n\n/**\n *\n * @param event\n * @private\n */\nproto.onMarkupSelected = function (event) {\n\n  this.selectMarkup(event.markup);\n  this.dispatchEvent(event);\n};\n\nproto.onMarkupEnterEdition = function () {\n\n};\n\nproto.onMarkupCancelEdition = function () {\n\n  this.onUserCancel();\n};\n\nproto.onMarkupDeleteEdition = function (event) {\n\n  this.removeMarkup(event.markup);\n  this.editMode.deleteMarkup();\n};\n\nAutodesk.Viewing.theExtensionManager.registerExtension('Autodesk.Viewing.MarkupsCore', MarkupsCore);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupsCore.js\n");

/***/ }),

/***/ "./extensions/Markup/core/MarkupsCoreUtils.js":
/*!****************************************************!*\
  !*** ./extensions/Markup/core/MarkupsCoreUtils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EDIT_FRAME_DEFAULT_MARGIN: () => (/* binding */ EDIT_FRAME_DEFAULT_MARGIN),\n/* harmony export */   MARKUP_DEFAULT_FONT_WIDTH_IN_PIXELS: () => (/* binding */ MARKUP_DEFAULT_FONT_WIDTH_IN_PIXELS),\n/* harmony export */   MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS: () => (/* binding */ MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS),\n/* harmony export */   MARKUP_DEFAULT_STROKE_WIDTH_IN_PIXELS: () => (/* binding */ MARKUP_DEFAULT_STROKE_WIDTH_IN_PIXELS),\n/* harmony export */   addMarkupMetadata: () => (/* binding */ addMarkupMetadata),\n/* harmony export */   addRuleToStyleSheet: () => (/* binding */ addRuleToStyleSheet),\n/* harmony export */   addSvgMetadata: () => (/* binding */ addSvgMetadata),\n/* harmony export */   addTraitEventDispatcher: () => (/* binding */ addTraitEventDispatcher),\n/* harmony export */   areMarkupsPointsInClientRange: () => (/* binding */ areMarkupsPointsInClientRange),\n/* harmony export */   checkLineSegment: () => (/* binding */ checkLineSegment),\n/* harmony export */   checkPolygon: () => (/* binding */ checkPolygon),\n/* harmony export */   clientToViewport: () => (/* binding */ clientToViewport),\n/* harmony export */   clientToWorld: () => (/* binding */ clientToWorld),\n/* harmony export */   composeRGBAString: () => (/* binding */ composeRGBAString),\n/* harmony export */   createArcTo: () => (/* binding */ createArcTo),\n/* harmony export */   createEllipsePath: () => (/* binding */ createEllipsePath),\n/* harmony export */   createMarkupFromSVG: () => (/* binding */ createMarkupFromSVG),\n/* harmony export */   createMarkupGroupSvg: () => (/* binding */ createMarkupGroupSvg),\n/* harmony export */   createMarkupPathSvg: () => (/* binding */ createMarkupPathSvg),\n/* harmony export */   createMarkupTextSvg: () => (/* binding */ createMarkupTextSvg),\n/* harmony export */   createRectanglePath: () => (/* binding */ createRectanglePath),\n/* harmony export */   createStyleSheet: () => (/* binding */ createStyleSheet),\n/* harmony export */   createSvgElement: () => (/* binding */ createSvgElement),\n/* harmony export */   degreesToRadians: () => (/* binding */ degreesToRadians),\n/* harmony export */   dismissLmvHudMessage: () => (/* binding */ dismissLmvHudMessage),\n/* harmony export */   getStrokeWidth: () => (/* binding */ getStrokeWidth),\n/* harmony export */   getUniqueID: () => (/* binding */ getUniqueID),\n/* harmony export */   hideLmvPanels: () => (/* binding */ hideLmvPanels),\n/* harmony export */   hideLmvToolsAndPanels: () => (/* binding */ hideLmvToolsAndPanels),\n/* harmony export */   hideLmvUi: () => (/* binding */ hideLmvUi),\n/* harmony export */   isTouchDevice: () => (/* binding */ isTouchDevice),\n/* harmony export */   measureTextLines: () => (/* binding */ measureTextLines),\n/* harmony export */   metersToModel: () => (/* binding */ metersToModel),\n/* harmony export */   radiansToDegrees: () => (/* binding */ radiansToDegrees),\n/* harmony export */   removeAllMetadata: () => (/* binding */ removeAllMetadata),\n/* harmony export */   removeTraitEventDispatcher: () => (/* binding */ removeTraitEventDispatcher),\n/* harmony export */   renderToCanvas: () => (/* binding */ renderToCanvas),\n/* harmony export */   restoreLmvUi: () => (/* binding */ restoreLmvUi),\n/* harmony export */   setAttributeToMarkupSvg: () => (/* binding */ setAttributeToMarkupSvg),\n/* harmony export */   setMarkupTextSvgTransform: () => (/* binding */ setMarkupTextSvgTransform),\n/* harmony export */   setSvgParentAttributes: () => (/* binding */ setSvgParentAttributes),\n/* harmony export */   showLmvToolsAndPanels: () => (/* binding */ showLmvToolsAndPanels),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   simplify: () => (/* binding */ simplify),\n/* harmony export */   stringToSvgNode: () => (/* binding */ stringToSvgNode),\n/* harmony export */   svgNodeToString: () => (/* binding */ svgNodeToString),\n/* harmony export */   transferChildNodes: () => (/* binding */ transferChildNodes),\n/* harmony export */   updateMarkupPathSvgHitarea: () => (/* binding */ updateMarkupPathSvgHitarea),\n/* harmony export */   updateMarkupTextSvgBackground: () => (/* binding */ updateMarkupTextSvgBackground),\n/* harmony export */   updateMarkupTextSvgClipper: () => (/* binding */ updateMarkupTextSvgClipper),\n/* harmony export */   updateMarkupTextSvgHitarea: () => (/* binding */ updateMarkupTextSvgHitarea),\n/* harmony export */   viewportToClient: () => (/* binding */ viewportToClient),\n/* harmony export */   worldToClient: () => (/* binding */ worldToClient),\n/* harmony export */   worldToViewport: () => (/* binding */ worldToViewport)\n/* harmony export */ });\n/* harmony import */ var _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _edit_actions_CreateArrow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./edit-actions/CreateArrow */ \"./extensions/Markup/core/edit-actions/CreateArrow.js\");\n/* harmony import */ var _edit_actions_CreateRectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./edit-actions/CreateRectangle */ \"./extensions/Markup/core/edit-actions/CreateRectangle.js\");\n/* harmony import */ var _edit_actions_CreateText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./edit-actions/CreateText */ \"./extensions/Markup/core/edit-actions/CreateText.js\");\n/* harmony import */ var _edit_actions_CreateCallout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./edit-actions/CreateCallout */ \"./extensions/Markup/core/edit-actions/CreateCallout.js\");\n/* harmony import */ var _edit_actions_CreateCircle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edit-actions/CreateCircle */ \"./extensions/Markup/core/edit-actions/CreateCircle.js\");\n/* harmony import */ var _edit_actions_CreateCloud__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./edit-actions/CreateCloud */ \"./extensions/Markup/core/edit-actions/CreateCloud.js\");\n/* harmony import */ var _edit_actions_CreateFreehand__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./edit-actions/CreateFreehand */ \"./extensions/Markup/core/edit-actions/CreateFreehand.js\");\n/* harmony import */ var _edit_actions_CreatePolyline__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./edit-actions/CreatePolyline */ \"./extensions/Markup/core/edit-actions/CreatePolyline.js\");\n/* harmony import */ var _edit_actions_CreatePolycloud__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./edit-actions/CreatePolycloud */ \"./extensions/Markup/core/edit-actions/CreatePolycloud.js\");\n/* harmony import */ var _edit_actions_CreateHighlight__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./edit-actions/CreateHighlight */ \"./extensions/Markup/core/edit-actions/CreateHighlight.js\");\n/* harmony import */ var _edit_actions_CreateDimension__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./edit-actions/CreateDimension */ \"./extensions/Markup/core/edit-actions/CreateDimension.js\");\n/* harmony import */ var _DomElementStyle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./DomElementStyle */ \"./extensions/Markup/core/DomElementStyle.js\");\n/* harmony import */ var _edit_actions_CreateStamp__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./edit-actions/CreateStamp */ \"./extensions/Markup/core/edit-actions/CreateStamp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar av = Autodesk.Viewing;\nvar avp = Autodesk.Viewing.Private;\n\nconst _gWindow = av.getGlobal();\nconst _gDocument = _gWindow.document;\n\n// Change these constants to alter the default sizes in pixels of strokes and fonts.\nvar MARKUP_DEFAULT_STROKE_WIDTH_IN_PIXELS = 1;\nvar MARKUP_DEFAULT_FONT_WIDTH_IN_PIXELS = 10;\nvar MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS = 15;\nvar EDIT_FRAME_DEFAULT_MARGIN = 7;\n\n/**\n * // isTouchDevice is an LMV function. Hammer is included by LMV as well\n * @returns {boolean}\n */\nvar isTouchDevice = function () {\n  // isTouchDevice() is an LMV function.\n  // Hammer (a touch detection lib) is packaged with LMV as well\n  if (av.isTouchDevice && typeof Hammer === \"function\") {\n    return av.isTouchDevice();\n  }\n  return false;\n};\n\n//// SVG  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param type\n * @returns {Element}\n */\nvar createSvgElement = function (type) {\n\n  const _document = this && this.getDocument && this.getDocument() || _gDocument;\n  // See https://developer.mozilla.org/en-US/docs/Web/API/Document/createElementNS\n  var namespace = 'http://www.w3.org/2000/svg';\n  return _document.createElementNS(namespace, type);\n};\n\n/**\n *\n * @param {Element} svg - an SVGElement\n * @returns {Element} svg param is returned back\n */\nvar setSvgParentAttributes = function (svg) {\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/SVG/Namespaces_Crash_Course\n  svg.setAttribute('version', '1.1'); // Notice that this is the SVG version, not the \"MARKUP DATA VERSION\"!\n  svg.setAttribute('baseProfile', 'full');\n  svg.setAttribute('layer-order-id', 'markups-svg');\n  return svg;\n};\n\nvar createMarkupGroupSvg = function (children) {\n  children = children || [];\n  var svg = createSvgElement('g');\n  svg.setAttribute('cursor', 'default');\n  svg.setAttribute('pointer-events', 'none');\n\n  for (var i = 0; i < children.length; i++) {\n    svg.appendChild(children[i]);\n  }\n\n  return svg;\n};\n\nvar createMarkupPathSvg = function () {\n\n  var svg = createSvgElement('g');\n  svg.setAttribute('cursor', 'inherit');\n  svg.setAttribute('pointer-events', 'none');\n\n  var markup = createSvgElement('path');\n  markup.setAttribute('id', 'markup');\n\n  var hitarea = createSvgElement('path');\n  hitarea.setAttribute('id', 'hitarea');\n  hitarea.setAttribute('fill', 'transparent');\n  hitarea.setAttribute('stroke', 'transparent');\n\n  svg.markup = markup;\n  svg.hitarea = hitarea;\n\n  svg.appendChild(markup);\n  svg.appendChild(hitarea);\n\n  return svg;\n};\n\nvar setAttributeToMarkupSvg = function (svg, attribute, value) {\n\n  svg.markup.setAttribute(attribute, value);\n};\n\nvar updateMarkupPathSvgHitarea = function (svg, editor) {\n\n  var markup = svg.markup;\n  var hitarea = svg.hitarea;\n\n  var hitareaMargin = editor.sizeFromClientToMarkups(0, MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS).y;\n  hitareaMargin += parseFloat(markup.getAttribute('stroke-width')) + hitareaMargin;\n\n  var markupFill = markup.getAttribute('fill');\n  var markupStroke = markup.getAttribute('stroke');\n  var strokeEnabled = markupStroke !== '' && markupStroke !== 'none';\n  var fillEnabled = markupFill !== '' && markupFill !== 'none';\n\n  hitarea.setAttribute('d', markup.getAttribute('d'));\n  hitarea.setAttribute('stroke-width', hitareaMargin);\n  hitarea.setAttribute('transform', markup.getAttribute('transform'));\n\n  if (editor.duringEditMode && !editor.navigating) {\n    if (strokeEnabled && fillEnabled) {\n      svg.setAttribute('pointer-events', 'painted');\n      return;\n    }\n\n    if (strokeEnabled) {\n      svg.setAttribute('pointer-events', 'stroke');\n      return;\n    }\n\n    if (fillEnabled) {\n      svg.setAttribute('pointer-events', 'fill');\n      return;\n    }\n  }\n\n  svg.setAttribute('pointer-events', 'none');\n};\n\nvar createMarkupTextSvg = function () {\n\n  var svg = createSvgElement('g');\n  svg.setAttribute('cursor', 'default');\n\n  var clipperId = 'markup-clipper-' + getUniqueID();\n  var clipperUrl = 'url(#' + clipperId + ')';\n\n  var clipper = createSvgElement('clipPath');\n  clipper.setAttribute('id', clipperId);\n  clipper.removeAttribute('pointer-events');\n  clipper.rect = createSvgElement('rect');\n  clipper.appendChild(clipper.rect);\n\n  var background = createSvgElement('rect');\n  background.setAttribute('id', 'markup-background');\n  background.removeAttribute('pointer-events');\n\n  var markup = createSvgElement('text');\n  markup.setAttribute('id', 'markup');\n\n  var hitarea = createSvgElement('rect');\n  hitarea.setAttribute('id', 'hitarea');\n  hitarea.setAttribute('fill', 'transparent');\n  hitarea.setAttribute('stroke', 'none');\n  hitarea.setAttribute('stroke-width', '0');\n\n  var clippedArea = createSvgElement('g');\n  clippedArea.setAttribute('clip-path', clipperUrl);\n  clippedArea.appendChild(clipper);\n  clippedArea.appendChild(background);\n  clippedArea.appendChild(markup);\n\n  svg.appendChild(clippedArea);\n  svg.appendChild(hitarea);\n\n  svg.clipper = clipper;\n  svg.background = background;\n  svg.markup = markup;\n  svg.hitarea = hitarea;\n\n  return svg;\n};\n\nvar setMarkupTextSvgTransform = function (svg, transform, textTransform) {\n\n  svg.clipper.rect.setAttribute('transform', transform);\n  svg.background.setAttribute('transform', transform);\n  svg.markup.setAttribute('transform', textTransform);\n  svg.hitarea.setAttribute('transform', transform);\n};\n\nvar updateMarkupTextSvgHitarea = function (svg, w, h, editor) {\n\n  var hitarea = svg.hitarea;\n  var hitareaMargin = editor.sizeFromClientToMarkups(0, MARKUP_DEFAULT_HITAREAS_MARGIN_IN_PIXELS).y;\n\n  hitarea.setAttribute('x', -hitareaMargin);\n  hitarea.setAttribute('y', -hitareaMargin);\n  hitarea.setAttribute('width', w + hitareaMargin * 2);\n  hitarea.setAttribute('height', h + hitareaMargin * 2);\n  svg.setAttribute(\"pointer-events\", editor.navigating ? \"none\" : \"painted\");\n};\n\nvar updateMarkupTextSvgBackground = function (svg, w, h, color) {\n\n  var background = svg.background;\n\n  background.setAttribute('x', 0);\n  background.setAttribute('y', 0);\n  background.setAttribute('width', w);\n  background.setAttribute('height', h);\n  background.setAttribute('fill', color);\n};\n\nvar updateMarkupTextSvgClipper = function (svg, w, h) {\n\n  var clipper = svg.clipper;\n\n  clipper.rect.setAttribute('x', 0);\n  clipper.rect.setAttribute('y', 0);\n  clipper.rect.setAttribute('width', w);\n  clipper.rect.setAttribute('height', h);\n};\n\n/**\n * Helper function that injects metadata for the whole Markup document.\n * Metadata includes: version.\n * @param {Element} svg - an SVGElement\n * @param {Object} metadata - Dictionary with attributes\n */\nvar addSvgMetadata = function (svg, metadata) {\n\n  const _document = this && this.getDocument && this.getDocument() || _gDocument;\n\n  var metadataNode = _document.createElementNS('http://www.w3.org/2000/svg', 'metadata');\n  var dataVersionNode = _document.createElement('markup_document');\n\n  metadataNode.appendChild(dataVersionNode);\n\n  // NOTE: We could iterate over the properties, but we don't because these are the only ones supported\n  dataVersionNode.setAttribute(\"data-model-version\", metadata[\"data-model-version\"]); // Version. For example: \"1\"\n\n  svg.insertBefore(metadataNode, svg.firstChild);\n  return metadataNode;\n};\n\n/**\n * Helper function that injects metadata for specific markup svg nodes.\n * @param {Element} markupNode - an SVGElement for the markup\n * @param {Object} metadata - Dictionary where all key/value pairs are added as metadata entries.\n * @returns {Element}\n */\nvar addMarkupMetadata = function (markupNode, metadata) {\n\n  const _document = this && this.getDocument && this.getDocument() || _gDocument;\n\n  var metadataNode = _document.createElementNS('http://www.w3.org/2000/svg', 'metadata');\n  var dataVersionNode = _document.createElement('markup_element');\n\n  metadataNode.appendChild(dataVersionNode);\n  for (var key in metadata) {\n    if (Object.prototype.hasOwnProperty.call(metadata, key)) {\n      dataVersionNode.setAttribute(key, metadata[key]);\n    }\n  }\n\n  markupNode.insertBefore(metadataNode, markupNode.firstChild);\n  return metadataNode;\n};\n\n/**\n * Removes al metadata nodes from an Svg node structure.\n * Method will remove all metadata nodes from children nodes as well.\n * @param svgNode\n */\nvar removeAllMetadata = function (svgNode) {\n\n  if (svgNode.getElementsByTagName) {\n    var nodes = svgNode.getElementsByTagName(\"metadata\");\n    for (var i = 0; i < nodes.length; ++i) {\n      var metadataNode = nodes[i];\n      metadataNode.parentNode && metadataNode.parentNode.removeChild(metadataNode);\n    }\n  }\n\n  // Transverse children nodes\n  var svgChildren = svgNode.children || svgNode.childNodes;\n  if (svgChildren) {\n    for (i = 0; i < svgChildren.length; ++i) {\n      removeAllMetadata(svgChildren[i]);\n    }\n  }\n};\n\n/**\n * Utility function that transfers children from an Html/Svg node into another one.\n * @param nodeFrom - The node instance from where children will be taken.\n * @param nodeInto - The node that's going to parent the transferred children.\n */\nvar transferChildNodes = function (nodeFrom, nodeInto) {\n\n  var svgChildren = nodeFrom.children || nodeFrom.childNodes;\n  var tmpArray = [];\n  for (var i = 0; i < svgChildren.length; ++i) {\n    tmpArray.push(svgChildren[i]); // Avoid appendChild\n  }\n  tmpArray.forEach(function (node) {\n    nodeInto.appendChild(node);\n  });\n};\n\n/**\n * Generate a unique id.\n * @returns {string}\n */\nvar getUniqueID = function () {\n  return THREE.Math.generateUUID();\n};\n\n\n/**\n * Serializes an SVG node into a String.\n * @param domNode\n * @returns {string}\n */\nvar svgNodeToString = function (domNode) {\n\n  function removeHitareas(svg, hitareas) {\n\n    var hitarea = svg.hitarea;\n    var hitareaParent = hitarea && hitarea.parentNode;\n\n    if (hitareaParent) {\n\n      hitareas.push({ hitarea: hitarea, parent: hitareaParent });\n      hitareaParent.removeChild(hitarea);\n    }\n\n    var children = svg.childNodes;\n    var childrenCount = children.length;\n\n    for (var i = 0; i < childrenCount; ++i) {\n      removeHitareas(children.item(i), hitareas);\n    }\n  }\n\n  function addHitareas(hitareas) {\n\n    var hitareasCount = hitareas.length;\n    for (var i = 0; i < hitareasCount; ++i) {\n\n      var hitarea = hitareas[i];\n      hitarea.parent.appendChild(hitarea.hitarea);\n    }\n  }\n\n  var result;\n  try {\n    var hitareas = [];\n    removeHitareas(domNode, hitareas);\n\n    var xmlSerializer = new XMLSerializer();\n    result = xmlSerializer.serializeToString(domNode);\n\n    addHitareas(hitareas);\n\n  } catch (err) {\n    result = '';\n    console.warn('svgNodeToString failed to generate string representation of domNode.');\n  }\n  return result;\n};\n\nvar stringToSvgNode = function (stringNode) {\n\n  var node = null;\n  try {\n    var domParser = new DOMParser();\n    var doc = domParser.parseFromString(stringNode, \"text/xml\");\n    node = doc.firstChild; // We should only be getting 1 child anyway.\n  } catch (err) {\n    node = null;\n    console.warn('stringToSvgNode failed to generate an HTMLElement from its string representation.');\n  }\n  return node;\n};\n\n/**\n * Injects functions and members to a client object which will\n * receive the ability to dispatch events.\n * Mechanism is the same as in Autodesk.Viewing.Viewer.\n *\n * Note: All of the code here comes from Autodesk.Viewing.Viewer\n *\n * @param {Object} client - Object that will become an event dispatcher.\n */\nvar addTraitEventDispatcher = function (client) {\n\n  // Inject member variable\n  client.listeners = {};\n\n  // Inject functions\n  client.addEventListener = function (type, listener) {\n    if (typeof this.listeners[type] == \"undefined\") {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n  client.hasEventListener = function (type, listener) {\n    if (this.listeners === undefined) return false;\n    var listeners = this.listeners;\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n    return false;\n  };\n  client.removeEventListener = function (type, listener) {\n    if (this.listeners[type] instanceof Array) {\n      var li = this.listeners[type];\n      for (var i = 0, len = li.length; i < len; i++) {\n        if (li[i] === listener) {\n          li.splice(i, 1);\n          break;\n        }\n      }\n    }\n  };\n  client.dispatchEvent = function (event) {\n    if (typeof event == \"string\") {\n      event = { type: event };\n    }\n    if (!event.target) {\n      event.target = this;\n    }\n\n    if (!event.type) {\n      throw new Error(\"event type unknown.\");\n    }\n\n    if (this.listeners[event.type] instanceof Array) {\n      var typeListeners = this.listeners[event.type].slice();\n      for (var i = 0; i < typeListeners.length; i++) {\n        typeListeners[i].call(this, event);\n      }\n    }\n  };\n};\n\n/**\n * Removes the EventDispatcher trait\n *\n * @param {Object} client\n */\nvar removeTraitEventDispatcher = function (client) {\n\n  try {\n    delete client.listeners;\n    delete client.addEventListener;\n    delete client.hasEventListener;\n    delete client.removeEventListener;\n    delete client.dispatchEvent;\n  } catch (e) {\n\n    // nothing\n  }};\n\n//// Math  /////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Calculates the pixel position in client space coordinates of a point in world space.\n * @param {THREE.Vector3} point Point in world space coordinates.\n * @param viewer\n * @param snap Round values to closest pixel center.\n * @returns {THREE.Vector3} Point transformed and projected into client space coordinates.\n */\nvar worldToClient = function (point, viewer, snap) {\n\n  var p = worldToViewport(point, viewer);\n  var result = viewportToClient(p.x, p.y, viewer);\n  result.z = 0;\n\n  // snap to the center of the\n  if (snap) {\n    result.x = Math.floor(result.x) + 0.5;\n    result.y = Math.floor(result.y) + 0.5;\n  }\n\n  return result;\n};\n\nvar clientToWorld = function (clientX, clientY, depth, viewer) {\n\n  var point = clientToViewport(clientX, clientY, viewer);\n  point.z = depth;\n\n  point.unproject(viewer.impl.camera);\n  return point;\n};\n\nvar clientToViewport = function (clientX, clientY, viewer) {\n\n  return viewer.impl.clientToViewport(clientX, clientY);\n};\n\nvar viewportToClient = function (viewportX, viewportY, viewer) {\n\n  return viewer.impl.viewportToClient(viewportX, viewportY);\n};\n\n/**\n * Calculates the world position of a point in client space coordinates.\n * @param {Object} point - { x:Number, y:Number, z:Number }\n * @param {Object} viewer - LMV instance\n * @returns {THREE.Vector3}\n */\nvar worldToViewport = function (point, viewer) {\n\n  var p = new THREE.Vector3();\n\n  p.x = point.x;\n  p.y = point.y;\n  p.z = point.z;\n\n  p.project(viewer.impl.camera);\n  return p;\n};\n\nvar metersToModel = function (meters, viewer) {\n\n  var modelToMeter = viewer.model.getUnitScale();\n  var meterToModel = 1 / modelToMeter;\n\n  return meterToModel * meters;\n};\n\nvar radiansToDegrees = function (radians) {\n\n  return radians * (180 / Math.PI);\n};\n\nvar degreesToRadians = function (degrees) {\n\n  return degrees * (Math.PI / 180);\n};\n\n/**\n *\n * @param value\n * @returns {number}\n */\nvar sign = function (value) {\n\n  return value >= 0 ? 1 : -1;\n};\n\n/**\n *\n * @param pointA\n * @param pointB\n * @param range\n * @param editor\n * @returns {boolean}\n */\nvar areMarkupsPointsInClientRange = function (pointA, pointB, range, editor) {\n\n  range = editor.sizeFromClientToMarkups(0, range).y;\n\n  var dx = pointA.x - pointB.x;\n  var dy = pointA.y - pointB.y;\n\n  return range * range >= dx * dx + dy * dy;\n};\n\n//// LMV ui ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nvar hideLmvUi = function (viewer) {\n\n  // If the viewer is no gui, then there is nothing to hide\n  if (!viewer.toolbar) {\n    return;\n  }\n\n  // Exit other tools and hide HudMessages.\n  viewer.setActiveNavigationTool();\n\n  dismissLmvHudMessage();\n  hideLmvPanels(true, viewer);\n  hideLmvToolsAndPanels(viewer);\n};\n\nvar restoreLmvUi = function (viewer) {\n\n  // If the viewer is no gui, then there is nothing to hide\n  if (!viewer.toolbar) {\n    return;\n  }\n\n  dismissLmvHudMessage();\n  hideLmvPanels(false, viewer);\n  showLmvToolsAndPanels(viewer);\n};\n\n/**\n *\n * @param hide\n * @param viewer\n */\nvar hideLmvPanels = function (hide, viewer) {\n\n  var dockingPanels = viewer.dockingPanels;\n\n  // Panels may not be present when dealing with an instance of Viewer3D.js\n  // (as opposed to an instance of GuiViewer3D.js)\n  if (!dockingPanels) return;\n\n  for (var i = 0; i < dockingPanels.length; ++i) {\n\n    var panel = dockingPanels[i];\n    var panelContainer = panel.container;\n\n    if (panelContainer.classList.contains(\"dockingPanelVisible\")) {\n      panelContainer.style.display = hide ? \"none\" : \"block\";\n\n      // Call the visibility changed notification if any additional\n      // stuff needs to be done (update the date i.e. PropertyPanel, etc).\n      panel.visibilityChanged();\n    }\n  }\n};\n\n/**\n * Shows panels and tools in the viewer.\n * @param viewer\n */\nvar showLmvToolsAndPanels = function (viewer) {\n\n  // Restore view cube.\n  if (viewer && viewer.model && !viewer.model.is2d()) {\n    viewer.getExtension(\"Autodesk.ViewCubeUi\", function (ext) {\n      ext.displayViewCube(true, false);\n      ext.displayHomeButton(true);\n    });\n  }\n\n  // TODO: Find or ask for a better way to restore this buttons.\n  const _document = viewer.getDocument();\n  var anim = _document.getElementsByClassName('toolbar-animation-subtoolbar');\n\n  if (anim.length > 0) {\n    anim[0].style.display = '';\n  }\n\n  // toolbar is absent when dealing with an instance of Viewer3D (instead of GuiViewer3D)\n  if (viewer.toolbar) {\n    var viewerContainer = viewer.toolbar.container;\n    var viewerContainerChildrenCount = viewerContainer.children.length;\n    for (var i = 0; i < viewerContainerChildrenCount; ++i) {\n      viewerContainer.children[i].style.display = \"\";\n    }\n  }\n};\n\n/**\n * Hides panels and tools in the viewer.\n * @param viewer\n */\nvar hideLmvToolsAndPanels = function (viewer) {\n\n  // Hide Panels and tools.\n  if (viewer && viewer.model && !viewer.model.is2d()) {\n    viewer.getExtension(\"Autodesk.ViewCubeUi\", function (ext) {\n      ext.displayViewCube(false, false);\n      ext.displayHomeButton(false);\n    });\n\n  }\n\n  const _document = viewer.getDocument();\n  // TODO: Find or ask for a better way to hide this buttons.\n  var anim = _document.getElementsByClassName('toolbar-animation-subtoolbar');\n\n  if (anim.length > 0) {\n    anim[0].style.display = 'none';\n\n    var animator = viewer.impl.keyFrameAnimator;\n    if (animator && !animator.isPaused) {\n      animator.pauseCameraAnimations();\n      animator.pause();\n\n      var playButton = viewer.modelTools.getControl('toolbar-animationPlay');\n      if (playButton) {\n        playButton.setIcon('toolbar-animation-pause-icon');\n        playButton.setToolTip('Pause');\n      }\n    }\n  }\n\n  // toolbar is absent when dealing with an instance of Viewer3D (instead of GuiViewer3D)\n  if (viewer.toolbar) {\n    var viewerContainer = viewer.toolbar.container;\n    var viewerContainerChildrenCount = viewerContainer.children.length;\n    for (var i = 0; i < viewerContainerChildrenCount; ++i) {\n      viewerContainer.children[i].style.display = \"none\";\n    }\n  }\n};\n\n/**\n * Dismisses all LMV HudMessages\n */\nvar dismissLmvHudMessage = function () {\n\n  // Using try/catch block since we are accessing the Private namespace of LMV.\n  try {\n    var keepDismissing = true;\n    while (keepDismissing) {\n      keepDismissing = Autodesk.Viewing.Private.HudMessage.dismiss();\n    }\n  } catch (ignore) {\n    // Failing to show the message is an okay fallback scenario\n    console.warn(\"[CO2]Failed to dismiss LMV HudMessage\");\n  }\n};\n\n//// Styles ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nvar getStrokeWidth = function (widthInPixels, editor) {\n\n  var size = editor.sizeFromClientToMarkups(0, widthInPixels);\n  return size.y;\n};\n\n/**\n * Creates markups from a parsed svg string child\n * @param child - child of a parsed SVG string\n * @param editor - MarkupsCore\n * @returns {*} Markup Object\n */\nvar createMarkupFromSVG = function (child, editor) {\n  // var self = this;\n  if (!child.childNodes[0]) {\n    return null;\n  }\n\n  var meta = child.childNodes[0].childNodes[0] || '';\n\n  var getCurrentStyle = function (editor, metadata) {\n\n    var source = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity',\n    'font-family', 'font-size', 'font-style', 'font-weight', 'stroke-linejoin'];\n    var style = {};\n    for (var i = 0; i < source.length; i++) {\n      var value = metadata.getAttribute(source[i]);\n      if (value == null) {\n        continue;\n      }\n      switch (source[i]) {\n        case 'font-size':\n        case 'stroke-width':\n        case 'stroke-opacity':\n        case 'fill-opacity':\n          style[source[i]] = parseFloat(value);\n          break;\n        case 'stroke-linejoin':\n          break;\n        case 'font-family':\n        case 'font-style':\n        case 'font-weight':\n        case 'stroke-color':\n        case 'text-data':\n        case 'fill-color':\n          style[source[i]] = value;\n          break;\n        default:\n          avp.logger.warn('Style not recognized.');\n          break;\n      }\n    }\n    return style;\n  };\n\n  var isClosed = function () {\n    var path = child.childNodes[1] || '';\n    var closed = false;\n    if (typeof path !== 'string') {\n      var d = path.getAttribute('d').split(' ');\n      if (d[d.length - 1].toLowerCase() === 'z') {\n        closed = true;\n      }\n    }\n    return closed;\n  };\n\n  var getLocations = function () {\n    var locations = [];\n    var locStr = meta.getAttribute('locations').split(\" \") || '';\n\n    for (var i = 0; i < locStr.length; i += 2) {\n      var pointPair = { x: parseFloat(locStr[i]), y: parseFloat(locStr[i + 1]) };\n      locations.push(pointPair);\n    }\n    return locations;\n  };\n\n  var getAttributeVector = function (attribute) {\n    var posVec = new THREE.Vector3();\n    var value = meta.getAttribute(attribute) || meta.getAttribute(attribute.toLowerCase());\n    var strPos = value.split(\" \");\n    posVec.x = parseFloat(strPos[0]);\n    posVec.y = parseFloat(strPos[1]);\n    return posVec;\n  };\n\n  var getPosition = function () {\n    return getAttributeVector('position');\n  };\n\n  var getSize = function () {\n    return getAttributeVector('size');\n  };\n\n  var getRotation = function () {\n    var strRot = meta.getAttribute('rotation') || '';\n    return parseFloat(strRot);\n  };\n\n  var getText = function () {\n    return meta.getAttribute('text') || '';\n  };\n\n  var getIsFrameUsed = function () {\n    return !!parseInt(meta.getAttribute('isframeused'));\n  };\n\n  if (typeof meta !== 'string') {\n    // get the type of the child\n    var position, size, rotation, locations, tail, head, closed, text, firstAnchor, secondAnchor;\n    var id = editor.getId();\n    var style = getCurrentStyle(editor, meta);\n    var type = meta.getAttribute('type') || '';\n    var createMarkup;\n    switch (type) {\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_ARROW:\n        tail = getAttributeVector('tail');\n        head = getAttributeVector('head');\n        createMarkup = new _edit_actions_CreateArrow__WEBPACK_IMPORTED_MODULE_1__.CreateArrow(editor, id, tail, head, style);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_RECTANGLE:\n        position = getPosition();\n        size = getSize();\n        rotation = getRotation();\n        createMarkup = new _edit_actions_CreateRectangle__WEBPACK_IMPORTED_MODULE_2__.CreateRectangle(editor, id, position, size, rotation, style);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_TEXT:\n        position = getPosition();\n        size = getSize();\n        text = getText();\n        createMarkup = new _edit_actions_CreateText__WEBPACK_IMPORTED_MODULE_3__.CreateText(editor, id, position, size, text, style);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_CALLOUT:\n        position = getPosition();\n        size = getSize();\n        text = getText();\n        var isFrameUsed = getIsFrameUsed();\n        createMarkup = new _edit_actions_CreateCallout__WEBPACK_IMPORTED_MODULE_4__.CreateCallout(editor, id, position, size, text, style, isFrameUsed);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_CIRCLE:\n        position = getPosition();\n        size = getSize();\n        rotation = getRotation();\n        createMarkup = new _edit_actions_CreateCircle__WEBPACK_IMPORTED_MODULE_5__.CreateCircle(editor, id, position, size, rotation, style);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_CLOUD:\n        position = getPosition();\n        size = getSize();\n        rotation = getRotation();\n        createMarkup = new _edit_actions_CreateCloud__WEBPACK_IMPORTED_MODULE_6__.CreateCloud(editor, id, position, size, rotation, style);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_FREEHAND:\n        position = getPosition();\n        size = getSize();\n        rotation = getRotation();\n        locations = getLocations();\n        createMarkup = new _edit_actions_CreateFreehand__WEBPACK_IMPORTED_MODULE_7__.CreateFreehand(editor, id, position, size, rotation, locations, style);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_POLYLINE:\n        position = getPosition();\n        size = getSize();\n        rotation = getRotation();\n        locations = getLocations();\n        closed = isClosed();\n        createMarkup = new _edit_actions_CreatePolyline__WEBPACK_IMPORTED_MODULE_8__.CreatePolyline(editor, id, position, size, rotation, locations, style, closed);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_POLYCLOUD:\n        position = getPosition();\n        size = getSize();\n        rotation = getRotation();\n        locations = getLocations();\n        closed = isClosed();\n        createMarkup = new _edit_actions_CreatePolycloud__WEBPACK_IMPORTED_MODULE_9__.CreatePolycloud(editor, id, position, size, rotation, locations, style, closed);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_HIGHLIGHT:\n        position = getPosition();\n        size = getSize();\n        rotation = getRotation();\n        locations = getLocations();\n        createMarkup = new _edit_actions_CreateHighlight__WEBPACK_IMPORTED_MODULE_10__.CreateHighlight(editor, id, position, size, rotation, locations, style);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_DIMENSION:\n        firstAnchor = getAttributeVector('firstAnchor');\n        secondAnchor = getAttributeVector('secondAnchor');\n        text = getText();\n        createMarkup = new _edit_actions_CreateDimension__WEBPACK_IMPORTED_MODULE_11__.CreateDimension(editor, id, firstAnchor, secondAnchor, text, style);\n        break;\n\n      case _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_0__.MARKUP_TYPE_STAMP:\n        position = getPosition();\n        size = getSize();\n        rotation = getRotation();\n        createMarkup = new _edit_actions_CreateStamp__WEBPACK_IMPORTED_MODULE_13__.CreateStamp(editor, id, position, size, rotation, style, child);\n        break;\n\n      default:\n        createMarkup = null;\n        break;\n    }\n    if (createMarkup) {\n      createMarkup.addToHistory = false;\n      createMarkup.execute();\n      var markupList = editor.svgLayersMap[editor.activeLayer].markups;\n\n      for (var i = 0; i < markupList.length; ++i) {\n        if (markupList[i].id === id) {\n          return markupList[i];\n        }\n      }\n    }\n    return null;\n  }\n};\n\n\nvar composeRGBAString = function (hexRGBString, opacity) {\n\n  if (!hexRGBString || !opacity || opacity <= 0) {\n    return 'none';\n  }\n\n  return ['rgba(' +\n  parseInt('0x' + hexRGBString.substr(1, 2)), ',',\n  parseInt('0x' + hexRGBString.substr(3, 2)), ',',\n  parseInt('0x' + hexRGBString.substr(5, 2)), ',', opacity, ')'].join('');\n};\n\n//// Id Target Collision ///////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param x0\n * @param y0\n * @param x1\n * @param y1\n * @param idTarget\n */\nvar checkLineSegment = function (x0, y0, x1, y1, idTarget) {\n\n  const _window = this && this.getWindow && this.getWindow() || _gWindow;\n  var deviceRatio = _window.devicePixelRatio || 1;\n\n  x0 *= deviceRatio;\n  y0 *= deviceRatio;\n  x1 *= deviceRatio;\n  y1 *= deviceRatio;\n\n  var idTargetWidth = idTarget.width;\n  var idTargetHeight = idTarget.height;\n  var idTargetBuffer = idTarget.buffer;\n\n  x0 = Math.round(x0);\n  x1 = Math.round(x1);\n  y0 = Math.round(idTargetHeight - y0);\n  y1 = Math.round(idTargetHeight - y1);\n\n  function point(x, y) {\n\n    x = Math.round(x);\n    y = Math.round(y);\n\n    var dx = 0;\n    var dy = 0;\n\n    for (var j = -deviceRatio; j <= deviceRatio; j += deviceRatio * 2) {\n      dy += check(x, y + j) ? j : 0;\n    }\n\n    for (var i = -deviceRatio; i <= deviceRatio; i += deviceRatio * 2) {\n      dx += check(x + i, y) ? i : 0;\n    }\n\n    return {\n      x: Math.round(x / deviceRatio + dx),\n      y: Math.round((idTargetHeight - y) / deviceRatio - dy) };\n  }\n\n  function check(x, y) {\n\n    // Probably better to clip line at the beginning.\n    if (x < 0 || x >= idTargetWidth ||\n    y < 0 || y >= idTargetHeight) {\n      return false;\n    }\n\n    var index = (y * idTargetWidth + x) * 4;\n    return (\n      idTargetBuffer[index] !== 0xFF ||\n      idTargetBuffer[index + 1] !== 0xFF ||\n      idTargetBuffer[index + 2] !== 0xFF);\n  }\n\n  // DDA Line algorithm\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n\n  var m = dx !== 0 ? dy / dx : 1;\n  var x = x0;\n  var y = y0;\n\n  if (dx !== 0 && Math.abs(m) <= 1) {\n\n    if (x0 <= x1) {\n      for (; x <= x1; ++x, y += m) {\n        if (check(x, Math.round(y))) {\n          return point(x, y);\n        }\n      }\n    } else {\n      for (; x >= x1; --x, y -= m) {\n        if (check(x, Math.round(y))) {\n          return point(x, y);\n        }\n      }\n    }\n  } else {\n\n    m = dx !== 0 ? 1 / m : 0;\n    if (y0 <= y1) {\n      for (; y <= y1; ++y, x += m) {\n        if (check(Math.round(x), y)) {\n          return point(x, y);\n        }\n      }\n    } else {\n      for (; y >= y1; --y, x -= m) {\n        if (check(Math.round(x), y)) {\n          return point(x, y);\n        }\n      }\n    }\n  }\n};\n\n/**\n *\n * @param polygon\n * @param idTarget\n */\nvar checkPolygon = function (polygon, idTarget) {\n\n  // Return if incorrect parameters.\n  if (!polygon || polygon.verxtexCount < 3 || !idTarget) {\n    return null;\n  }\n\n  const _window = this && this.getWindow && this.getWindow() || _gWindow;\n  var deviceRatio = _window.devicePixelRatio || 1;\n\n  var idTargetWidth = idTarget.width;\n  var idTargetHeight = idTarget.height;\n  var idTargetBuffer = idTarget.buffer;\n\n  var vertexCount = polygon.vertexCount;\n  var xVertices = Float32Array.from(polygon.xVertices); // Clone to scale by device pixel ratio and to\n  var yVertices = Float32Array.from(polygon.yVertices); // change y coordinates to OpenGL style.\n\n  function point(x, y) {\n\n    var dx = 0;\n    var dy = 0;\n\n    for (var j = -deviceRatio; j <= deviceRatio; j += deviceRatio * 2) {\n      dy += check(x, y + j) ? j : 0;\n    }\n\n    for (var i = -deviceRatio; i <= deviceRatio; i += deviceRatio * 2) {\n      dx += check(x + i, y) ? i : 0;\n    }\n\n    return {\n      x: Math.round(x / deviceRatio) + dx,\n      y: Math.round((idTargetHeight - y) / deviceRatio - dy) };\n  }\n\n  function check(x, y) {\n\n    if (x < 0 || x >= idTargetWidth ||\n    y < 0 || y >= idTargetHeight) {\n      return false;\n    }\n\n    var index = (y * idTargetWidth + x) * 4;\n    return (\n    idTargetBuffer[index] !== 0xFF ||\n    idTargetBuffer[index + 1] !== 0xFF ||\n    idTargetBuffer[index + 2] !== 0xFF) && isInsidePolygon(x, y);\n  }\n\n  function isInsidePolygon(x, y) {\n\n    var result = false;\n    var vertexCount = polygon.vertexCount;\n    for (var i = 0, j = vertexCount - 1; i < vertexCount; j = i++) {\n\n      if (yVertices[i] > y != yVertices[j] > y &&\n      x < (xVertices[j] - xVertices[i]) * (y - yVertices[i]) / (yVertices[j] - yVertices[i]) + xVertices[i]) {\n        result = !result;\n      }\n    }\n    return result;\n  }\n\n  // Change coordinates to OpenGL style and calculate polygon's bounding box.\n  var bbX0 = Number.POSITIVE_INFINITY;\n  var bbY0 = Number.POSITIVE_INFINITY;\n  var bbX1 = Number.NEGATIVE_INFINITY;\n  var bbY1 = Number.NEGATIVE_INFINITY;\n\n  for (var i = 0; i < vertexCount; ++i) {\n\n    var bbX = xVertices[i] = xVertices[i] * deviceRatio;\n    var bbY = yVertices[i] = idTargetHeight - yVertices[i] * deviceRatio;\n\n    bbX0 = Math.min(bbX0, bbX);\n    bbY0 = Math.min(bbY0, bbY);\n    bbX1 = Math.max(bbX1, bbX);\n    bbY1 = Math.max(bbY1, bbY);\n  }\n\n  if (bbX1 < 0 || bbX0 > idTargetWidth ||\n  bbY1 < 0 || bbY0 > idTargetHeight) {\n    return null;\n  }\n\n  var bbW = Math.round(bbX1 - bbX0);\n  var bbH = Math.round(bbY1 - bbY0);\n\n  var bbCenterX = Math.round((bbX0 + bbX1) * 0.5);\n  var bbCenterY = Math.round((bbY0 + bbY1) * 0.5);\n\n  // Check\n  var x = bbCenterX;\n  var y = bbCenterY;\n\n  var w = 1;\n  var h = 1;\n\n  do {\n\n    var endX = x + w;\n    var endY = y + h;\n\n    for (; x < endX; ++x) {\n      if (check(x, y)) {\n        return point(x, y);\n      }\n    }\n\n    for (; y < endY; ++y) {\n      if (check(x, y)) {\n        return point(x, y);\n      }\n    }\n\n    if (w < bbW) {\n      endX = x - ++w;++w;\n    } else {\n      endX = x - w;\n    }\n\n    if (h < bbH) {\n      endY = y - ++h;++h;\n    } else {\n      endY = y - h;\n    }\n\n    for (; x > endX; --x) {\n      if (check(x, y)) {\n        return point(x, y);\n      }\n    }\n\n    for (; y > endY; --y) {\n      if (check(x, y)) {\n        return point(x, y);\n      }\n    }\n  } while (w < bbW || h < bbH);\n};\n\n//// CSS ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @returns {*}\n */\nvar createStyleSheet = function () {\n\n  const _document = this && this.getDocument && this.getDocument() || _gDocument;\n  var style = _document.createElement(\"style\");\n\n  // This is WebKit hack.\n  style.appendChild(_document.createTextNode(\"\"));\n  _document.head.appendChild(style);\n\n  return style.sheet;\n};\n\n/**\n *\n * @param styleSheet\n * @param selector\n * @param styles\n * @param index\n */\nvar addRuleToStyleSheet = function (styleSheet, selector, styles, index) {\n\n  if (\"insertRule\" in styleSheet) {\n    styleSheet.insertRule(selector + \"{\" + styles + \"}\", index);\n  } else\n  if (\"addRule\" in styleSheet) {\n    styleSheet.addRule(selector, styles, index);\n  }\n};\n\n//// SVG ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param lines\n * @param style\n * @param editor\n */\nvar measureTextLines = function (lines, style, editor) {\n\n  // Measure div style is line style with some custom layout properties.\n  var fontSize = editor.sizeFromMarkupsToClient(0, style['font-size']).y;\n\n  var measureStyle = new _DomElementStyle__WEBPACK_IMPORTED_MODULE_12__.DomElementStyle().\n  setAttribute('font-family', style['font-family']).\n  setAttribute('font-size', fontSize + 'px').\n  setAttribute('font-weight', style['font-weight'] ? 'bold' : '').\n  setAttribute('font-style', style['font-style'] ? 'italic' : '').\n\n  removeAttribute(['top', 'left', 'width', 'height', 'overflow-y']).\n  setAttribute('position', 'absolute').\n  setAttribute('white-space', 'nowrap').\n  setAttribute('float', 'left').\n  setAttribute('visibility', 'hidden').\n  getStyleString();\n\n  const _document = this && this.getDocument && this.getDocument() || _gDocument;\n  // Create measure div.\n  var measure = _document.createElement('div');\n\n  measure.setAttribute('style', measureStyle);\n  editor.viewer.container.appendChild(measure);\n\n  // Measure.\n  var result = [];\n\n  var linesCount = lines.length;\n  for (var i = 0; i < linesCount; ++i) {\n\n    measure.innerText = lines[i];\n    result.push({\n      line: lines[i],\n      width: measure.clientWidth,\n      height: measure.clientHeight\n    });\n  }\n\n  // Remove measure div and return result.\n  editor.viewer.container.removeChild(measure);\n  return result;\n};\n\nvar createArcTo = function (x, y, xRadius, yRadius, relative, path) {\n\n  path.push(relative ? 'a' : 'A');\n  path.push(xRadius);\n  path.push(yRadius);\n  path.push(0);\n  path.push(1);\n  path.push(1);\n  path.push(x);\n  path.push(y);\n\n  return path;\n};\n\nvar createEllipsePath = function (x, y, w, h, relative, path) {\n\n  var halfW = w * 0.5;\n  var halfH = h * 0.5;\n\n  path.push(relative ? 'm' : 'M');\n  path.push(x);\n  path.push(y);\n\n  createArcTo(w, 0, halfW, halfH, true, path);\n  createArcTo(-w, 0, halfW, halfH, true, path);\n\n  path.push('z');\n};\n\nvar createRectanglePath = function (x, y, w, h, relative, path) {\n\n  path.push(relative ? 'm' : 'M');\n  path.push(x);\n  path.push(y);\n  path.push('l');\n  path.push(w);\n  path.push(0);\n  path.push('l');\n  path.push(0);\n  path.push(h);\n  path.push('l');\n  path.push(-w);\n  path.push(0);\n  path.push('z');\n};\n\nvar renderToCanvas = function (svg, viewBox, width, height, ctx, callback) {\n\n  const svgMarkup = svg.outerHTML;\n\n  // Apply y-invert due to markups being defined in the LMV coordinate system. CSS is used here due to\n  // poor Safari support: https://bugs.webkit.org/show_bug.cgi?id=201854\n  const style = 'transform: scale(1, -1); transform-origin: center center';\n\n  // Creating a new svg element, that will be drawn into the canvas.\n  const tmpSvg = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"${viewBox}\" style=\"${style}\">\n          ${svgMarkup}\n        </svg>\n        `;\n\n  const blob = new Blob([tmpSvg], { type: 'image/svg+xml' });\n  const url = URL.createObjectURL(blob);\n\n  const img = new Image();\n\n  img.onload = function () {\n    ctx.drawImage(img, 0, 0);\n    callback();\n  };\n\n  img.src = url;\n};\n\n/*\n Taken from Simplify.js, a high-performance JS polyline simplification library\n (c) 2013, Vladimir Agafonkin\n mourner.github.io/simplify-js\n*/\nvar simplify = function (points, tolerance, highestQuality) {\n\n  if (points.length <= 2) return points;\n\n  // square distance between 2 points\n  function getSqDist(p1, p2) {\n\n    var dx = p1.x - p2.x,\n      dy = p1.y - p2.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  // square distance from a point to a segment\n  function getSqSegDist(p, p1, p2) {\n\n    var x = p1.x,\n      y = p1.y,\n      dx = p2.x - x,\n      dy = p2.y - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n      var t = ((p.x - x) * dx + (p.y - y) * dy) / (dx * dx + dy * dy);\n\n      if (t > 1) {\n        x = p2.x;\n        y = p2.y;\n\n      } else if (t > 0) {\n        x += dx * t;\n        y += dy * t;\n      }\n    }\n\n    dx = p.x - x;\n    dy = p.y - y;\n\n    return dx * dx + dy * dy;\n  }\n  // rest of the code doesn't care about point format\n\n  // basic distance-based simplification\n  function simplifyRadialDist(points, sqTolerance) {\n\n    var prevPoint = points[0],\n      newPoints = [prevPoint],\n      point;\n\n    for (var i = 1, len = points.length; i < len; i++) {\n      point = points[i];\n\n      if (getSqDist(point, prevPoint) > sqTolerance) {\n        newPoints.push(point);\n        prevPoint = point;\n      }\n    }\n\n    if (prevPoint !== point) newPoints.push(point);\n\n    return newPoints;\n  }\n\n  function simplifyDPStep(points, first, last, sqTolerance, simplified) {\n    var maxSqDist = sqTolerance,\n      index;\n\n    for (var i = first + 1; i < last; i++) {\n      var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n      if (sqDist > maxSqDist) {\n        index = i;\n        maxSqDist = sqDist;\n      }\n    }\n\n    if (maxSqDist > sqTolerance) {\n      if (index - first > 1) simplifyDPStep(points, first, index, sqTolerance, simplified);\n      simplified.push(points[index]);\n      if (last - index > 1) simplifyDPStep(points, index, last, sqTolerance, simplified);\n    }\n  }\n\n  // simplification using Ramer-Douglas-Peucker algorithm\n  function simplifyDouglasPeucker(points, sqTolerance) {\n    var last = points.length - 1;\n\n    var simplified = [points[0]];\n    simplifyDPStep(points, 0, last, sqTolerance, simplified);\n    simplified.push(points[last]);\n\n    return simplified;\n  }\n\n  // both algorithms combined for awesome performance\n  var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n  points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n  points = simplifyDouglasPeucker(points, sqTolerance);\n\n  return points;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/MarkupsCoreUtils.js\n");

/***/ }),

/***/ "./extensions/Markup/core/StyleUtils.js":
/*!**********************************************!*\
  !*** ./extensions/Markup/core/StyleUtils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneStyle: () => (/* binding */ cloneStyle),\n/* harmony export */   copyStyle: () => (/* binding */ copyStyle),\n/* harmony export */   createStyle: () => (/* binding */ createStyle),\n/* harmony export */   getStyleDefaultValues: () => (/* binding */ getStyleDefaultValues),\n/* harmony export */   isStyleEqual: () => (/* binding */ isStyleEqual)\n/* harmony export */ });\n\n/**\n *\n * @param {*} attributes\n * @param {*} editor\n */\nvar createStyle = function (attributes, editor) {\n\n  var style = {};\n\n  for (var i = 0; i < attributes.length; ++i) {\n\n    style[attributes[i]] = null;\n  }\n\n  var defaults = getStyleDefaultValues(style, editor);\n\n  for (let i = 0; i < attributes.length; ++i) {\n\n    var attribute = attributes[i];\n    style[attribute] = defaults[attribute].values[defaults[attribute].default].value;\n  }\n\n  return style;\n};\n\n/**\n *\n * @param source\n * @param destination\n * @returns {*}\n */\nvar copyStyle = function (source, destination) {\n\n  for (var attribute in destination) {\n    if (Object.prototype.hasOwnProperty.call(source, attribute)) {\n      destination[attribute] = source[attribute];\n    }\n  }\n\n  return destination;\n};\n\n/**\n *\n * @param source\n * @param destination\n * @returns {*}\n */\nvar isStyleEqual = function (source, destination) {\n\n  for (var attribute in destination) {\n    if (Object.prototype.hasOwnProperty.call(source, attribute) && source[attribute] !== destination[attribute]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n *\n * @param source\n * @returns {{}}\n */\nvar cloneStyle = function (source) {\n\n  var clone = {};\n\n  for (var attribute in source) {\n    clone[attribute] = source[attribute];\n  }\n\n  return clone;\n};\n\n/**\n *\n * @param style\n * @param editor\n * @returns {{}}\n */\nvar getStyleDefaultValues = function (style, editor) {\n\n  function getWidths(normalWidth) {\n\n    return {\n      values: [\n      { name: 'Thin', value: normalWidth / 3 },\n      { name: 'Normal', value: normalWidth },\n      { name: 'Thick', value: normalWidth * 3 },\n      { name: 'Very Thick', value: normalWidth * 9 }],\n      default: 1\n    };\n  }\n\n  function getLineJoins() {\n\n    return {\n      values: [\n      { name: 'Miter', value: 'miter' },\n      { name: 'Round', value: 'round' },\n      { name: 'Bevel', value: 'bevel' }],\n      default: 0\n    };\n  }\n\n  function getFontSizes(normalWidth) {\n\n    return {\n      values: [\n      { name: 'Thin', value: normalWidth / 2 },\n      { name: 'Normal', value: normalWidth },\n      { name: 'Thick', value: normalWidth * 4 }],\n      default: 1\n    };\n  }\n\n  function getColors() {\n\n    return {\n      values: [\n      { name: 'red', value: '#ff0000' },\n      { name: 'green', value: '#00ff00' },\n      { name: 'blue', value: '#0000ff' },\n      { name: 'white', value: '#ffffff' },\n      { name: 'black', value: '#000000' },\n      { name: 'yellow', value: '#ffff00' }],\n      default: 0\n    };\n  }\n\n  function getOpacities(defaultTransparent) {\n\n    return {\n      values: [\n      { name: '100%', value: 1.00 },\n      { name: '75%', value: 0.75 },\n      { name: '50%', value: 0.50 },\n      { name: '25%', value: 0.25 },\n      { name: '0%', value: 0.00 }],\n      default: defaultTransparent ? 4 : 0\n    };\n  }\n\n  function getFontFamilies() {\n\n    // TODO: Localize?\n    // TODO: Validate fonts with design\n    // Source: http://www.webdesigndev.com/web-development/16-gorgeous-web-safe-fonts-to-use-with-css\n    return {\n      values: [\n      { name: 'Arial', value: 'Arial' },\n      { name: 'Arial Black', value: 'Arial Black' },\n      { name: 'Arial Narrow', value: 'Arial Narrow' },\n      { name: 'Century Gothic', value: 'Century Gothic' },\n      { name: 'Courier New', value: 'Courier New' },\n      { name: 'Georgia', value: 'Georgia' },\n      { name: 'Impact', value: 'Impact' },\n      { name: 'Lucida Console', value: 'Lucida Console' },\n      { name: 'Tahoma', value: 'Tahoma' },\n      { name: 'Verdana', value: 'Verdana' }],\n\n      default: 0\n    };\n  }\n\n  function getFontStyles() {\n    return {\n      values: [\n      { name: 'Normal', value: 'normal' },\n      { name: 'Italic', value: 'italic' }],\n      default: 0\n    };\n  }\n\n  function getFontWeights() {\n    return {\n      values: [\n      { name: 'Normal', value: 'normal' },\n      { name: 'Bold', value: 'bold' }],\n      default: 0 };\n  }\n\n  function getSvgString() {\n    return {\n      values: [\n      {\n        name: 'DefaultValue',\n        value: '<svg height=\"100\" width=\"100\" viewBox=\"0 0 100 100\"><circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" /></svg>'\n      }],\n\n      default: 0\n    };\n  }\n\n  var values = cloneStyle(style);\n  var normaStrokeWidth = editor.getStrokeWidth();\n  var normaFontWidth = editor.getFontWidth();\n\n  for (var attribute in values) {\n\n    switch (attribute) {\n      case 'stroke-width':\n        values[attribute] = getWidths(normaStrokeWidth);\n        break;\n\n      case 'stroke-linejoin':\n        values[attribute] = getLineJoins();\n        break;\n\n      case 'font-size':\n        values[attribute] = getFontSizes(normaFontWidth);\n        break;\n\n      case 'font-family':\n        values[attribute] = getFontFamilies();\n        break;\n\n      case 'font-style':\n        values[attribute] = getFontStyles();\n        break;\n\n      case 'font-weight':\n        values[attribute] = getFontWeights();\n        break;\n\n      case 'stroke-color':\n      case 'fill-color':\n        values[attribute] = getColors();\n        break;\n\n      case 'stroke-opacity':{\n          let defaultTransparent = false;\n          values[attribute] = getOpacities(defaultTransparent);\n          break;\n        }\n\n      case 'fill-opacity':{\n          let defaultTransparent = true;\n          values[attribute] = getOpacities(defaultTransparent);\n          break;\n        }\n\n      case 'text-data':\n        values[attribute] = getSvgString();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return values;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL1N0eWxlVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLElBQUlBLFdBQVcsR0FBRyxTQUFBQSxDQUFTQyxVQUFVLEVBQUVDLE1BQU0sRUFBRTs7RUFFbEQsSUFBSUMsS0FBSyxHQUFHLENBQUMsQ0FBQzs7RUFFZCxLQUFJLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0gsVUFBVSxDQUFDSSxNQUFNLEVBQUUsRUFBRUQsQ0FBQyxFQUFFOztJQUV2Q0QsS0FBSyxDQUFDRixVQUFVLENBQUNHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSTtFQUMvQjs7RUFFQSxJQUFJRSxRQUFRLEdBQUdDLHFCQUFxQixDQUFDSixLQUFLLEVBQUVELE1BQU0sQ0FBQzs7RUFFbkQsS0FBSSxJQUFJRSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdILFVBQVUsQ0FBQ0ksTUFBTSxFQUFFLEVBQUVELENBQUMsRUFBRTs7SUFFdkMsSUFBSUksU0FBUyxHQUFHUCxVQUFVLENBQUNHLENBQUMsQ0FBQztJQUM3QkQsS0FBSyxDQUFDSyxTQUFTLENBQUMsR0FBR0YsUUFBUSxDQUFDRSxTQUFTLENBQUMsQ0FBQ0MsTUFBTSxDQUFDSCxRQUFRLENBQUNFLFNBQVMsQ0FBQyxDQUFDRSxPQUFPLENBQUMsQ0FBQ0MsS0FBSztFQUNwRjs7RUFFQSxPQUFPUixLQUFLO0FBQ2hCLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sSUFBSVMsU0FBUyxHQUFHLFNBQUFBLENBQVNDLE1BQU0sRUFBRUMsV0FBVyxFQUFFOztFQUVqRCxLQUFJLElBQUlOLFNBQVMsSUFBSU0sV0FBVyxFQUFFO0lBQzlCLElBQUlDLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0wsTUFBTSxFQUFFTCxTQUFTLENBQUMsRUFBRTtNQUN6RE0sV0FB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QUk7VUFDN0JwQixNQUFNLENBQUNELFNBQVMsQ0FBQyxHQUFHb0IsWUFBWSxDQUFDQyxrQkFBa0IsQ0FBQztVQUNwRDtRQUNKOztNQUVBLEtBQUssV0FBVztRQUNacEIsTUFBTSxDQUFDRCxTQUFTLENBQUMsR0FBR3lCLFlBQVksQ0FBQyxDQUFDO1FBQ2xDOztNQUVKO1FBQ0k7SUFDUjtFQUNKOztFQUVBLE9BQU94QixNQUFNO0FBQ2pCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9TdHlsZVV0aWxzLmpzPzM5MjIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqXG4gKiBAcGFyYW0geyp9IGF0dHJpYnV0ZXNcbiAqIEBwYXJhbSB7Kn0gZWRpdG9yXG4gKi9cbmV4cG9ydCB2YXIgY3JlYXRlU3R5bGUgPSBmdW5jdGlvbihhdHRyaWJ1dGVzLCBlZGl0b3IpIHtcblxuICAgIHZhciBzdHlsZSA9IHt9O1xuXG4gICAgZm9yKHZhciBpID0gMDsgaSA8IGF0dHJpYnV0ZXMubGVuZ3RoOyArK2kpIHtcblxuICAgICAgICBzdHlsZVthdHRyaWJ1dGVzW2ldXSA9IG51bGw7XG4gICAgfVxuXG4gICAgdmFyIGRlZmF1bHRzID0gZ2V0U3R5bGVEZWZhdWx0VmFsdWVzKHN0eWxlLCBlZGl0b3IpO1xuXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IGF0dHJpYnV0ZXMubGVuZ3RoOyArK2kpIHtcblxuICAgICAgICB2YXIgYXR0cmlidXRlID0gYXR0cmlidXRlc1tpXTtcbiAgICAgICAgc3R5bGVbYXR0cmlidXRlXSA9IGRlZmF1bHRzW2F0dHJpYnV0ZV0udmFsdWVzW2RlZmF1bHRzW2F0dHJpYnV0ZV0uZGVmYXVsdF0udmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlO1xufTtcblxuLyoqXG4gKlxuICogQHBhcmFtIHNvdXJjZVxuICogQHBhcmFtIGRlc3RpbmF0aW9uXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuZXhwb3J0IHZhciBjb3B5U3R5bGUgPSBmdW5jdGlvbihzb3VyY2UsIGRlc3RpbmF0aW9uKSB7XG5cbiAgICBmb3IodmFyIGF0dHJpYnV0ZSBpbiBkZXN0aW5hdGlvbikge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwgYXR0cmlidXRlKSkge1xuICAgICAgICAgICAgZGVzdGluYXRpb25bYXR0cmlidXRlXSA9IHNvdXJjZVthdHRyaWJ1dGVdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRlc3RpbmF0aW9uO1xufTtcblxuLyoqXG4gKlxuICogQHBhcmFtIHNvdXJjZVxuICogQHBhcmFtIGRlc3RpbmF0aW9uXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuZXhwb3J0IHZhciBpc1N0eWxlRXF1YWwgPSBmdW5jdGlvbihzb3VyY2UsIGRlc3RpbmF0aW9uKSB7XG5cbiAgICBmb3IodmFyIGF0dHJpYnV0ZSBpbiBkZXN0aW5hdGlvbikge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwgYXR0cmlidXRlKSAgJiYgc291cmNlW2F0dHJpYnV0ZV0gIT09IGRlc3RpbmF0aW9uW2F0dHJpYnV0ZV0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKlxuICogQHBhcmFtIHNvdXJjZVxuICogQHJldHVybnMge3t9fVxuICovXG5leHBvcnQgdmFyIGNsb25lU3R5bGUgPSBmdW5jdGlvbihzb3VyY2UpIHtcblxuICAgIHZhciBjbG9uZSA9IHt9O1xuXG4gICAgZm9yKHZhciBhdHRyaWJ1dGUgaW4gc291cmNlKSB7XG4gICAgICAgIGNsb25lW2F0dHJpYnV0ZV0gPSBzb3VyY2VbYXR0cmlidXRlXTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2xvbmU7XG59O1xuXG4vKipcbiAqXG4gKiBAcGFyYW0gc3R5bGVcbiAqIEBwYXJhbSBlZGl0b3JcbiAqIEByZXR1cm5zIHt7fX1cbiAqL1xuZXhwb3J0IHZhciBnZXRTdHlsZURlZmF1bHRWYWx1ZXMgPSBmdW5jdGlvbihzdHlsZSwgZWRpdG9yKSB7XG5cbiAgICBmdW5jdGlvbiBnZXRXaWR0aHMobm9ybWFsV2lkdGgpIHtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWVzOiBbXG4gICAgICAgICAgICAgICAge25hbWU6J1RoaW4nLCB2YWx1ZTogbm9ybWFsV2lkdGggLyAzfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonTm9ybWFsJywgdmFsdWU6IG5vcm1hbFdpZHRofSxcbiAgICAgICAgICAgICAgICB7bmFtZTonVGhpY2snLCB2YWx1ZTogbm9ybWFsV2lkdGggKiAzfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonVmVyeSBUaGljaycsIHZhbHVlOiBub3JtYWxXaWR0aCAqIDl9XSxcbiAgICAgICAgICAgIGRlZmF1bHQ6IDFcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRMaW5lSm9pbnMoKSB7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlczogW1xuICAgICAgICAgICAgICAgIHtuYW1lOidNaXRlcicsIHZhbHVlOiAnbWl0ZXInfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonUm91bmQnLCB2YWx1ZTogJ3JvdW5kJ30sXG4gICAgICAgICAgICAgICAge25hbWU6J0JldmVsJywgdmFsdWU6ICdiZXZlbCd9XSxcbiAgICAgICAgICAgIGRlZmF1bHQ6IDBcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRGb250U2l6ZXMobm9ybWFsV2lkdGgpIHtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWVzOiBbXG4gICAgICAgICAgICAgICAge25hbWU6J1RoaW4nLCB2YWx1ZTogbm9ybWFsV2lkdGggLyAyfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonTm9ybWFsJywgdmFsdWU6IG5vcm1hbFdpZHRofSxcbiAgICAgICAgICAgICAgICB7bmFtZTonVGhpY2snLCB2YWx1ZTogbm9ybWFsV2lkdGggKiA0fV0sXG4gICAgICAgICAgICBkZWZhdWx0OiAxXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Q29sb3JzKCkge1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZXM6IFtcbiAgICAgICAgICAgICAgICB7bmFtZToncmVkJywgdmFsdWU6ICcjZmYwMDAwJ30sXG4gICAgICAgICAgICAgICAge25hbWU6J2dyZWVuJywgdmFsdWU6ICcjMDBmZjAwJ30sXG4gICAgICAgICAgICAgICAge25hbWU6J2JsdWUnLCB2YWx1ZTogJyMwMDAwZmYnfSxcbiAgICAgICAgICAgICAgICB7bmFtZTond2hpdGUnLCB2YWx1ZTogJyNmZmZmZmYnfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonYmxhY2snLCB2YWx1ZTogJyMwMDAwMDAnfSxcbiAgICAgICAgICAgICAgICB7bmFtZToneWVsbG93JywgdmFsdWU6ICcjZmZmZjAwJ31dLFxuICAgICAgICAgICAgZGVmYXVsdDogMFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldE9wYWNpdGllcyhkZWZhdWx0VHJhbnNwYXJlbnQpIHtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWVzOiBbXG4gICAgICAgICAgICAgICAge25hbWU6JzEwMCUnLCB2YWx1ZTogMS4wMH0sXG4gICAgICAgICAgICAgICAge25hbWU6Jzc1JScsIHZhbHVlOiAgMC43NX0sXG4gICAgICAgICAgICAgICAge25hbWU6JzUwJScsIHZhbHVlOiAwLjUwfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonMjUlJywgdmFsdWU6IDAuMjV9LFxuICAgICAgICAgICAgICAgIHtuYW1lOicwJScsIHZhbHVlOiAwLjAwfV0sXG4gICAgICAgICAgICBkZWZhdWx0OiAoZGVmYXVsdFRyYW5zcGFyZW50ID8gNCA6IDApXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Rm9udEZhbWlsaWVzKCkge1xuXG4gICAgICAgIC8vIFRPRE86IExvY2FsaXplP1xuICAgICAgICAvLyBUT0RPOiBWYWxpZGF0ZSBmb250cyB3aXRoIGRlc2lnblxuICAgICAgICAvLyBTb3VyY2U6IGh0dHA6Ly93d3cud2ViZGVzaWduZGV2LmNvbS93ZWItZGV2ZWxvcG1lbnQvMTYtZ29yZ2VvdXMtd2ViLXNhZmUtZm9udHMtdG8tdXNlLXdpdGgtY3NzXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZXM6W1xuICAgICAgICAgICAgICAgIHtuYW1lOidBcmlhbCcsIHZhbHVlOiAnQXJpYWwnfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonQXJpYWwgQmxhY2snLCB2YWx1ZTogJ0FyaWFsIEJsYWNrJ30sXG4gICAgICAgICAgICAgICAge25hbWU6J0FyaWFsIE5hcnJvdycsIHZhbHVlOiAnQXJpYWwgTmFycm93J30sXG4gICAgICAgICAgICAgICAge25hbWU6J0NlbnR1cnkgR290aGljJywgdmFsdWU6ICdDZW50dXJ5IEdvdGhpYyd9LFxuICAgICAgICAgICAgICAgIHtuYW1lOidDb3VyaWVyIE5ldycsIHZhbHVlOiAnQ291cmllciBOZXcnfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonR2VvcmdpYScsIHZhbHVlOiAnR2VvcmdpYSd9LFxuICAgICAgICAgICAgICAgIHtuYW1lOidJbXBhY3QnLCB2YWx1ZTogJ0ltcGFjdCd9LFxuICAgICAgICAgICAgICAgIHtuYW1lOidMdWNpZGEgQ29uc29sZScsIHZhbHVlOiAnTHVjaWRhIENvbnNvbGUnfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonVGFob21hJywgdmFsdWU6ICdUYWhvbWEnfSxcbiAgICAgICAgICAgICAgICB7bmFtZTonVmVyZGFuYScsIHZhbHVlOiAnVmVyZGFuYSd9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZGVmYXVsdDogMFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldEZvbnRTdHlsZXMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZXM6W1xuICAgICAgICAgICAgICAgIHtuYW1lOidOb3JtYWwnLCB2YWx1ZTogJ25vcm1hbCd9LFxuICAgICAgICAgICAgICAgIHtuYW1lOidJdGFsaWMnLCB2YWx1ZTogJ2l0YWxpYyd9XSxcbiAgICAgICAgICAgIGRlZmF1bHQ6IDBcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRGb250V2VpZ2h0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlczpbXG4gICAgICAgICAgICAgICAge25hbWU6J05vcm1hbCcsIHZhbHVlOiAnbm9ybWFsJ30sXG4gICAgICAgICAgICAgICAge25hbWU6J0JvbGQnLCB2YWx1ZTogJ2JvbGQnfV0sXG4gICAgICAgICAgICBkZWZhdWx0OiAwfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRTdmdTdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdEZWZhdWx0VmFsdWUnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJzxzdmcgaGVpZ2h0PVwiMTAwXCIgd2lkdGg9XCIxMDBcIiB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIj48Y2lyY2xlIGN4PVwiNTBcIiBjeT1cIjUwXCIgcj1cIjQwXCIgc3Ryb2tlPVwiYmxhY2tcIiBzdHJva2Utd2lkdGg9XCIzXCIgZmlsbD1cInJlZFwiIC8+PC9zdmc+J1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBkZWZhdWx0OiAwXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIHZhbHVlcyA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgIHZhciBub3JtYVN0cm9rZVdpZHRoID0gZWRpdG9yLmdldFN0cm9rZVdpZHRoKCk7XG4gICAgdmFyIG5vcm1hRm9udFdpZHRoID0gZWRpdG9yLmdldEZvbnRXaWR0aCgpO1xuXG4gICAgZm9yKHZhciBhdHRyaWJ1dGUgaW4gdmFsdWVzKSB7XG5cbiAgICAgICAgc3dpdGNoKGF0dHJpYnV0ZSkge1xuICAgICAgICAgICAgY2FzZSAnc3Ryb2tlLXdpZHRoJzpcbiAgICAgICAgICAgICAgICB2YWx1ZXNbYXR0cmlidXRlXSA9IGdldFdpZHRocyhub3JtYVN0cm9rZVdpZHRoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAnc3Ryb2tlLWxpbmVqb2luJzpcbiAgICAgICAgICAgICAgICB2YWx1ZXNbYXR0cmlidXRlXSA9IGdldExpbmVKb2lucygpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlICdmb250LXNpemUnOlxuICAgICAgICAgICAgICAgIHZhbHVlc1thdHRyaWJ1dGVdID0gZ2V0Rm9udFNpemVzKG5vcm1hRm9udFdpZHRoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAnZm9udC1mYW1pbHknOlxuICAgICAgICAgICAgICAgIHZhbHVlc1thdHRyaWJ1dGVdID0gZ2V0Rm9udEZhbWlsaWVzKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgJ2ZvbnQtc3R5bGUnOlxuICAgICAgICAgICAgICAgIHZhbHVlc1thdHRyaWJ1dGVdID0gZ2V0Rm9udFN0eWxlcygpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlICdmb250LXdlaWdodCc6XG4gICAgICAgICAgICAgICAgdmFsdWVzW2F0dHJpYnV0ZV0gPSBnZXRGb250V2VpZ2h0cygpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlICdzdHJva2UtY29sb3InOlxuICAgICAgICAgICAgY2FzZSAnZmlsbC1jb2xvcic6XG4gICAgICAgICAgICAgICAgdmFsdWVzW2F0dHJpYnV0ZV0gPSBnZXRDb2xvcnMoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAnc3Ryb2tlLW9wYWNpdHknOiB7XG4gICAgICAgICAgICAgICAgbGV0IGRlZmF1bHRUcmFuc3BhcmVudCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHZhbHVlc1thdHRyaWJ1dGVdID0gZ2V0T3BhY2l0aWVzKGRlZmF1bHRUcmFuc3BhcmVudCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNhc2UgJ2ZpbGwtb3BhY2l0eSc6IHtcbiAgICAgICAgICAgICAgICBsZXQgZGVmYXVsdFRyYW5zcGFyZW50ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB2YWx1ZXNbYXR0cmlidXRlXSA9IGdldE9wYWNpdGllcyhkZWZhdWx0VHJhbnNwYXJlbnQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjYXNlICd0ZXh0LWRhdGEnOlxuICAgICAgICAgICAgICAgIHZhbHVlc1thdHRyaWJ1dGVdID0gZ2V0U3ZnU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWVzO1xufTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVTdHlsZSIsImF0dHJpYnV0ZXMiLCJlZGl0b3IiLCJzdHlsZSIsImkiLCJsZW5ndGgiLCJkZWZhdWx0cyIsImdldFN0eWxlRGVmYXVsdFZhbHVlcyIsImF0dHJpYnV0ZSIsInZhbHVlcyIsImRlZmF1bHQiLCJ2YWx1ZSIsImNvcHlTdHlsZSIsInNvdXJjZSIsImRlc3RpbmF0aW9uIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaXNTdHlsZUVxdWFsIiwiY2xvbmVTdHlsZSIsImNsb25lIiwiZ2V0V2lkdGhzIiwibm9ybWFsV2lkdGgiLCJuYW1lIiwiZ2V0TGluZUpvaW5zIiwiZ2V0Rm9udFNpemVzIiwiZ2V0Q29sb3JzIiwiZ2V0T3BhY2l0aWVzIiwiZGVmYXVsdFRyYW5zcGFyZW50IiwiZ2V0Rm9udEZhbWlsaWVzIiwiZ2V0Rm9udFN0eWxlcyIsImdldEZvbnRXZWlnaHRzIiwiZ2V0U3ZnU3RyaW5nIiwibm9ybWFTdHJva2VXaWR0aCIsImdldFN0cm9rZVdpZHRoIiwibm9ybWFGb250V2lkdGgiLCJnZXRGb250V2lkdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/StyleUtils.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CloneMarkup.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CloneMarkup.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CloneMarkup: () => (/* binding */ CloneMarkup)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param markup\n * @param position\n * @constructor\n */\nfunction CloneMarkup(editor, id, markup, position) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CLONE-MARKUP', id);\n\n  this.clone = markup.clone();\n  this.clone.id = id;\n  this.position = { x: position.x, y: position.y };\n}\n\nCloneMarkup.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCloneMarkup.prototype.constructor = CloneMarkup;\n\nvar proto = CloneMarkup.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var clone = this.clone;\n  var position = this.position;\n\n  if (editor.getMarkup(this.targetId)) {\n    return;\n  }\n\n  var markup = clone.clone();\n  markup.setPosition(position.x, position.y);\n\n  editor.addMarkup(markup);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DbG9uZU1hcmt1cC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU2Qjs7QUFFdEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNDLFdBQVdBLENBQUNDLE1BQU0sRUFBRUMsRUFBRSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRTs7RUFFdERMLG1EQUFVLENBQUNNLElBQUksQ0FBQyxJQUFJLEVBQUVKLE1BQU0sRUFBRSxjQUFjLEVBQUVDLEVBQUUsQ0FBQzs7RUFFakQsSUFBSSxDQUFDSSxLQUFLLEdBQUdILE1BQU0sQ0FBQ0csS0FBSyxDQUFDLENBQUM7RUFDM0IsSUFBSSxDQUFDQSxLQUFLLENBQUNKLEVBQUUsR0FBR0EsRUFBRTtFQUNsQixJQUFJLENBQUNFLFFBQVEsR0FBRyxFQUFDRyxDQUFDLEVBQUVILFFBQVEsQ0FBQ0csQ0FBQyxFQUFFQyxDQUFDLEVBQUVKLFFBQVEsQ0FBQ0ksQ0FBQyxFQUFDO0FBQ2xEOztBQUVBUixXQUFXLENBQUNTLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNaLG1EQUFVLENBQUNVLFNBQVMsQ0FBQztBQUMzRFQsV0FBVyxDQUFDUyxTQUFTLENBQUNHLFdBQVcsR0FBR1osV0FBVzs7QUFFL0MsSUFBSWEsS0FBSyxHQUFHYixXQUFXLENBQUNTLFNBQVM7O0FBRWpDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJYixNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNO0VBQ3hCLElBQUlLLEtBQUssR0FBRyxJQUFJLENBQUNBLEtBQUs7RUFDdEIsSUFBSUYsUUFBUSxHQUFHLElBQUksQ0FBQ0EsUUFBUTs7RUFFNUIsSUFBSUgsTUFBTSxDQUFDYyxTQUFTLENBQUMsSUFBSSxDQUFDQyxRQUFRLENBQUMsRUFBRTtJQUNqQztFQUNKOztFQUVBLElBQUliLE1BQU0sR0FBR0csS0FBSyxDQUFDQSxLQUFLLENBQUMsQ0FBQztFQUMxQkgsTUFBTSxDQUFDYyxXQUFXLENBQUNiLFFBQVEsQ0FBQ0csQ0FBQyxFQUFFSCxRQUFRLENBQUNJLENBQUMsQ0FBQzs7RUFFMUNQLE1BQU0sQ0FBQ2lCLFNBQVMsQ0FBQ2YsTUFBTSxDQUFDO0FBQzVCLENBQUM7O0FBRURVLEtBQUssQ0FBQ00sSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUloQixNQUFNLEdBQUcsSUFBSSxDQUFDRixNQUFNLENBQUNjLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNqRGIsTUFBTSxJQUFJLElBQUksQ0FBQ0YsTUFBTSxDQUFDbUIsWUFBWSxDQUFDakIsTUFBTSxDQUFDO0FBQzlDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvQ2xvbmVNYXJrdXAuanM/ZjU2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIG1hcmt1cFxuICAgICAqIEBwYXJhbSBwb3NpdGlvblxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBDbG9uZU1hcmt1cChlZGl0b3IsIGlkLCBtYXJrdXAsIHBvc2l0aW9uKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0NMT05FLU1BUktVUCcsIGlkKTtcblxuICAgICAgICB0aGlzLmNsb25lID0gbWFya3VwLmNsb25lKCk7XG4gICAgICAgIHRoaXMuY2xvbmUuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHt4OiBwb3NpdGlvbi54LCB5OiBwb3NpdGlvbi55fTtcbiAgICB9XG5cbiAgICBDbG9uZU1hcmt1cC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBDbG9uZU1hcmt1cC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBDbG9uZU1hcmt1cDtcblxuICAgIHZhciBwcm90byA9IENsb25lTWFya3VwLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgIHZhciBjbG9uZSA9IHRoaXMuY2xvbmU7XG4gICAgICAgIHZhciBwb3NpdGlvbiA9IHRoaXMucG9zaXRpb247XG5cbiAgICAgICAgaWYgKGVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBtYXJrdXAgPSBjbG9uZS5jbG9uZSgpO1xuICAgICAgICBtYXJrdXAuc2V0UG9zaXRpb24ocG9zaXRpb24ueCwgcG9zaXRpb24ueSk7XG5cbiAgICAgICAgZWRpdG9yLmFkZE1hcmt1cChtYXJrdXApO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIHRoaXMuZWRpdG9yLnJlbW92ZU1hcmt1cChtYXJrdXApO1xuICAgIH07XG5cblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJDbG9uZU1hcmt1cCIsImVkaXRvciIsImlkIiwibWFya3VwIiwicG9zaXRpb24iLCJjYWxsIiwiY2xvbmUiLCJ4IiwieSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwiZ2V0TWFya3VwIiwidGFyZ2V0SWQiLCJzZXRQb3NpdGlvbiIsImFkZE1hcmt1cCIsInVuZG8iLCJyZW1vdmVNYXJrdXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CloneMarkup.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateArrow.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateArrow.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateArrow: () => (/* binding */ CreateArrow)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupArrow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupArrow */ \"./extensions/Markup/core/MarkupArrow.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n * @constructor\n */\nfunction CreateArrow(editor, id, head, tail, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-ARROW', id);\n\n  this.selectOnExecution = false;\n  this.tail = tail;\n  this.head = head;\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreateArrow.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateArrow.prototype.constructor = CreateArrow;\n\nvar proto = CreateArrow.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var arrow = new _MarkupArrow__WEBPACK_IMPORTED_MODULE_1__.MarkupArrow(this.targetId, editor);\n\n  editor.addMarkup(arrow);\n\n  // Confusing naming here. in arrow.set the first two numbers are\n  // the point you drag from and the second two are the point you\n  // drag to. So the head point is actually where the tail of the\n  // arrow is positioned and the tail point is the head is positioned.\n\n  //TODO: In MarkupArrow \"set\" function has tail x, tail y, head x, head y but used here in the opposite way\n  arrow.set(this.head.x, this.head.y, this.tail.x, this.tail.y);\n  arrow.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVBcnJvdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRTZCO0FBQ0c7QUFDRjs7QUFFdkM7QUFDSjtBQUNBO0FBQ1csU0FBU0csV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxFQUFFLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUU7O0VBRXZEUixtREFBVSxDQUFDUyxJQUFJLENBQUMsSUFBSSxFQUFFTCxNQUFNLEVBQUUsY0FBYyxFQUFFQyxFQUFFLENBQUM7O0VBRWpELElBQUksQ0FBQ0ssaUJBQWlCLEdBQUcsS0FBSztFQUM5QixJQUFJLENBQUNILElBQUksR0FBR0EsSUFBSTtFQUNoQixJQUFJLENBQUNELElBQUksR0FBR0EsSUFBSTtFQUNoQixJQUFJLENBQUNFLEtBQUssR0FBR04sdURBQVUsQ0FBQ00sS0FBSyxDQUFDO0FBQ2xDOztBQUVBTCxXQUFXLENBQUNRLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNiLG1EQUFVLENBQUNXLFNBQVMsQ0FBQztBQUMzRFIsV0FBVyxDQUFDUSxTQUFTLENBQUNHLFdBQVcsR0FBR1gsV0FBVzs7QUFFL0MsSUFBSVksS0FBSyxHQUFHWixXQUFXLENBQUNRLFNBQVM7O0FBRWpDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJWixNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNO0VBQ3hCLElBQUlhLEtBQUssR0FBRyxJQUFJaEIscURBQVcsQ0FBQyxJQUFJLENBQUNpQixRQUFRLEVBQUVkLE1BQU0sQ0FBQzs7RUFFbERBLE1BQU0sQ0FBQ2UsU0FBUyxDQUFDRixLQUFLLENBQUM7O0VBRXZCO0VBQ0E7RUFDQTtFQUNBOztFQUVBO0VBQ0FBLEtBQUssQ0FBQ0csR0FBRyxDQUFDLElBQUksQ0FBQ2QsSUFBSSxDQUFDZSxDQUFDLEVBQUUsSUFBSSxDQUFDZixJQUFJLENBQUNnQixDQUFDLEVBQUUsSUFBSSxDQUFDZixJQUFJLENBQUNjLENBQUMsRUFBRSxJQUFJLENBQUNkLElBQUksQ0FBQ2UsQ0FBQyxDQUFDO0VBQzdETCxLQUFLLENBQUNNLFFBQVEsQ0FBQyxJQUFJLENBQUNmLEtBQUssQ0FBQztBQUM5QixDQUFDOztBQUVETyxLQUFLLENBQUNTLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJQyxNQUFNLEdBQUcsSUFBSSxDQUFDckIsTUFBTSxDQUFDc0IsU0FBUyxDQUFDLElBQUksQ0FBQ1IsUUFBUSxDQUFDO0VBQ2pETyxNQUFNLElBQUksSUFBSSxDQUFDckIsTUFBTSxDQUFDdUIsWUFBWSxDQUFDRixNQUFNLENBQUM7QUFDOUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVBcnJvdy5qcz81OTNlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBNYXJrdXBBcnJvdyB9IGZyb20gJy4uL01hcmt1cEFycm93JztcbmltcG9ydCB7IGNsb25lU3R5bGUgfSBmcm9tICcuLi9TdHlsZVV0aWxzJztcblxuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBDcmVhdGVBcnJvdyhlZGl0b3IsIGlkLCBoZWFkLCB0YWlsLCBzdHlsZSkge1xuXG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdDUkVBVEUtQVJST1cnLCBpZCk7XG5cbiAgICAgICAgdGhpcy5zZWxlY3RPbkV4ZWN1dGlvbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRhaWwgPSB0YWlsO1xuICAgICAgICB0aGlzLmhlYWQgPSBoZWFkO1xuICAgICAgICB0aGlzLnN0eWxlID0gY2xvbmVTdHlsZShzdHlsZSk7XG4gICAgfVxuXG4gICAgQ3JlYXRlQXJyb3cucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgQ3JlYXRlQXJyb3cucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ3JlYXRlQXJyb3c7XG5cbiAgICB2YXIgcHJvdG8gPSBDcmVhdGVBcnJvdy5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yO1xuICAgICAgICB2YXIgYXJyb3cgPSBuZXcgTWFya3VwQXJyb3codGhpcy50YXJnZXRJZCwgZWRpdG9yKTtcblxuICAgICAgICBlZGl0b3IuYWRkTWFya3VwKGFycm93KTtcblxuICAgICAgICAvLyBDb25mdXNpbmcgbmFtaW5nIGhlcmUuIGluIGFycm93LnNldCB0aGUgZmlyc3QgdHdvIG51bWJlcnMgYXJlXG4gICAgICAgIC8vIHRoZSBwb2ludCB5b3UgZHJhZyBmcm9tIGFuZCB0aGUgc2Vjb25kIHR3byBhcmUgdGhlIHBvaW50IHlvdVxuICAgICAgICAvLyBkcmFnIHRvLiBTbyB0aGUgaGVhZCBwb2ludCBpcyBhY3R1YWxseSB3aGVyZSB0aGUgdGFpbCBvZiB0aGVcbiAgICAgICAgLy8gYXJyb3cgaXMgcG9zaXRpb25lZCBhbmQgdGhlIHRhaWwgcG9pbnQgaXMgdGhlIGhlYWQgaXMgcG9zaXRpb25lZC5cblxuICAgICAgICAvL1RPRE86IEluIE1hcmt1cEFycm93IFwic2V0XCIgZnVuY3Rpb24gaGFzIHRhaWwgeCwgdGFpbCB5LCBoZWFkIHgsIGhlYWQgeSBidXQgdXNlZCBoZXJlIGluIHRoZSBvcHBvc2l0ZSB3YXlcbiAgICAgICAgYXJyb3cuc2V0KHRoaXMuaGVhZC54LCB0aGlzLmhlYWQueSwgdGhpcy50YWlsLngsIHRoaXMudGFpbC55KTtcbiAgICAgICAgYXJyb3cuc2V0U3R5bGUodGhpcy5zdHlsZSk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgbWFya3VwID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRoaXMudGFyZ2V0SWQpO1xuICAgICAgICBtYXJrdXAgJiYgdGhpcy5lZGl0b3IucmVtb3ZlTWFya3VwKG1hcmt1cCk7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJNYXJrdXBBcnJvdyIsImNsb25lU3R5bGUiLCJDcmVhdGVBcnJvdyIsImVkaXRvciIsImlkIiwiaGVhZCIsInRhaWwiLCJzdHlsZSIsImNhbGwiLCJzZWxlY3RPbkV4ZWN1dGlvbiIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwiYXJyb3ciLCJ0YXJnZXRJZCIsImFkZE1hcmt1cCIsInNldCIsIngiLCJ5Iiwic2V0U3R5bGUiLCJ1bmRvIiwibWFya3VwIiwiZ2V0TWFya3VwIiwicmVtb3ZlTWFya3VwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateArrow.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateCallout.js":
/*!**************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateCallout.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateCallout: () => (/* binding */ CreateCallout)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupCallout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupCallout */ \"./extensions/Markup/core/MarkupCallout.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param text\n * @param style\n * @constructor\n */\nfunction CreateCallout(editor, id, position, size, text, style, isFrameUsed) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-CALLOUT', id);\n\n  this.text = text;\n  this.position = { x: position.x, y: position.y };\n  this.size = { x: size.x, y: size.y };\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n  this.isFrameUsed = isFrameUsed;\n}\n\nCreateCallout.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateCallout.prototype.constructor = CreateCallout;\n\nvar proto = CreateCallout.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var position = this.position;\n  var size = this.size;\n\n  var callout = new _MarkupCallout__WEBPACK_IMPORTED_MODULE_1__.MarkupCallout(this.targetId, editor, size);\n\n  editor.addMarkup(callout);\n\n  callout.setIsFilledFrameUsed(this.isFrameUsed);\n  callout.setText(this.text);\n  callout.setSize(position, size.x, size.y);\n  callout.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  if (markup) {\n    this.editor.removeMarkup(markup);\n    markup.destroy();\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVDYWxsb3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTs7QUFFNkI7QUFDTztBQUNOOztBQUV2QztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNHLGFBQWFBLENBQUNDLE1BQU0sRUFBRUMsRUFBRSxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUVDLFdBQVcsRUFBRTs7RUFFaEZWLG1EQUFVLENBQUNXLElBQUksQ0FBQyxJQUFJLEVBQUVQLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRUMsRUFBRSxDQUFDOztFQUVuRCxJQUFJLENBQUNHLElBQUksR0FBR0EsSUFBSTtFQUNoQixJQUFJLENBQUNGLFFBQVEsR0FBRyxFQUFDTSxDQUFDLEVBQUVOLFFBQVEsQ0FBQ00sQ0FBQyxFQUFFQyxDQUFDLEVBQUVQLFFBQVEsQ0FBQ08sQ0FBQyxFQUFDO0VBQzlDLElBQUksQ0FBQ04sSUFBSSxHQUFHLEVBQUNLLENBQUMsRUFBRUwsSUFBSSxDQUFDSyxDQUFDLEVBQUVDLENBQUMsRUFBRU4sSUFBSSxDQUFDTSxDQUFDLEVBQUM7RUFDbEMsSUFBSSxDQUFDSixLQUFLLEdBQUdQLHVEQUFVLENBQUNPLEtBQUssQ0FBQztFQUM5QixJQUFJLENBQUNDLFdBQVcsR0FBR0EsV0FBVztBQUNsQzs7QUFFQVAsYUFBYSxDQUFDVyxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDaEIsbURBQVUsQ0FBQ2MsU0FBUyxDQUFDO0FBQzdEWCxhQUFhLENBQUNXLFNBQVMsQ0FBQ0csV0FBVyxHQUFHZCxhQUFhOztBQUVuRCxJQUFJZSxLQUFLLEdBQUdmLGFBQWEsQ0FBQ1csU0FBUzs7QUFFbkNJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVk7O0VBRXJCLElBQUlmLE1BQU0sR0FBRyxJQUFJLENBQUNBLE1BQU07RUFDeEIsSUFBSUUsUUFBUSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtFQUM1QixJQUFJQyxJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJOztFQUVwQixJQUFJYSxPQUFPLEdBQUcsSUFBSW5CLHlEQUFhLENBQUMsSUFBSSxDQUFDb0IsUUFBUSxFQUFFakIsTUFBTSxFQUFFRyxJQUFJLENBQUM7O0VBRTVESCxNQUFNLENBQUNrQixTQUFTLENBQUNGLE9BQU8sQ0FBQzs7RUFFekJBLE9BQU8sQ0FBQ0csb0JBQW9CLENBQUMsSUFBSSxDQUFDYixXQUFXLENBQUM7RUFDOUNVLE9BQU8sQ0FBQ0ksT0FBTyxDQUFDLElBQUksQ0FBQ2hCLElBQUksQ0FBQztFQUMxQlksT0FBTyxDQUFDSyxPQUFPLENBQUNuQixRQUFRLEVBQUVDLElBQUksQ0FBQ0ssQ0FBQyxFQUFFTCxJQUFJLENBQUNNLENBQUMsQ0FBQztFQUN6Q08sT0FBTyxDQUFDTSxRQUFRLENBQUMsSUFBSSxDQUFDakIsS0FBSyxDQUFDO0FBQ2hDLENBQUM7O0FBRURTLEtBQUssQ0FBQ1MsSUFBSSxHQUFHLFlBQVk7O0VBRXJCLElBQUlDLE1BQU0sR0FBRyxJQUFJLENBQUN4QixNQUFNLENBQUN5QixTQUFTLENBQUMsSUFBSSxDQUFDUixRQUFRLENBQUM7RUFDakQsSUFBSU8sTUFBTSxFQUFFO0lBQ1IsSUFBSSxDQUFDeEIsTUFBTSxDQUFDMEIsWUFBWSxDQUFDRixNQUFNLENBQUM7SUFDaENBLE1BQU0sQ0FBQ0csT0FBTyxDQUFDLENBQUM7RUFDcEI7QUFDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZUNhbGxvdXQuanM/Y2MwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuaW1wb3J0IHsgTWFya3VwQ2FsbG91dCB9IGZyb20gJy4uL01hcmt1cENhbGxvdXQnO1xuaW1wb3J0IHsgY2xvbmVTdHlsZSB9IGZyb20gJy4uL1N0eWxlVXRpbHMnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gdGV4dFxuICAgICAqIEBwYXJhbSBzdHlsZVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBDcmVhdGVDYWxsb3V0KGVkaXRvciwgaWQsIHBvc2l0aW9uLCBzaXplLCB0ZXh0LCBzdHlsZSwgaXNGcmFtZVVzZWQpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnQ1JFQVRFLUNBTExPVVQnLCBpZCk7XG5cbiAgICAgICAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHt4OiBwb3NpdGlvbi54LCB5OiBwb3NpdGlvbi55fTtcbiAgICAgICAgdGhpcy5zaXplID0ge3g6IHNpemUueCwgeTogc2l6ZS55fTtcbiAgICAgICAgdGhpcy5zdHlsZSA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgICAgICB0aGlzLmlzRnJhbWVVc2VkID0gaXNGcmFtZVVzZWQ7XG4gICAgfVxuXG4gICAgQ3JlYXRlQ2FsbG91dC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBDcmVhdGVDYWxsb3V0LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IENyZWF0ZUNhbGxvdXQ7XG5cbiAgICB2YXIgcHJvdG8gPSBDcmVhdGVDYWxsb3V0LnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSB0aGlzLnBvc2l0aW9uO1xuICAgICAgICB2YXIgc2l6ZSA9IHRoaXMuc2l6ZTtcblxuICAgICAgICB2YXIgY2FsbG91dCA9IG5ldyBNYXJrdXBDYWxsb3V0KHRoaXMudGFyZ2V0SWQsIGVkaXRvciwgc2l6ZSk7XG5cbiAgICAgICAgZWRpdG9yLmFkZE1hcmt1cChjYWxsb3V0KTtcblxuICAgICAgICBjYWxsb3V0LnNldElzRmlsbGVkRnJhbWVVc2VkKHRoaXMuaXNGcmFtZVVzZWQpO1xuICAgICAgICBjYWxsb3V0LnNldFRleHQodGhpcy50ZXh0KTtcbiAgICAgICAgY2FsbG91dC5zZXRTaXplKHBvc2l0aW9uLCBzaXplLngsIHNpemUueSk7XG4gICAgICAgIGNhbGxvdXQuc2V0U3R5bGUodGhpcy5zdHlsZSk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgaWYgKG1hcmt1cCkge1xuICAgICAgICAgICAgdGhpcy5lZGl0b3IucmVtb3ZlTWFya3VwKG1hcmt1cCk7XG4gICAgICAgICAgICBtYXJrdXAuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJNYXJrdXBDYWxsb3V0IiwiY2xvbmVTdHlsZSIsIkNyZWF0ZUNhbGxvdXQiLCJlZGl0b3IiLCJpZCIsInBvc2l0aW9uIiwic2l6ZSIsInRleHQiLCJzdHlsZSIsImlzRnJhbWVVc2VkIiwiY2FsbCIsIngiLCJ5IiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJjYWxsb3V0IiwidGFyZ2V0SWQiLCJhZGRNYXJrdXAiLCJzZXRJc0ZpbGxlZEZyYW1lVXNlZCIsInNldFRleHQiLCJzZXRTaXplIiwic2V0U3R5bGUiLCJ1bmRvIiwibWFya3VwIiwiZ2V0TWFya3VwIiwicmVtb3ZlTWFya3VwIiwiZGVzdHJveSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateCallout.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateCircle.js":
/*!*************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateCircle.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateCircle: () => (/* binding */ CreateCircle)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupCircle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupCircle */ \"./extensions/Markup/core/MarkupCircle.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n * Markup create circle action.\n *\n * Implements an {@link Autodesk.Viewing.Extensions.Markups.Core.EditAction|EditAction}\n * for creating a Circle {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n * Included in documentation as an example of how to create\n * a specific EditAction that deals with Markup creation.\n * Developers are encourage to look into this class's source code and copy\n * as much code as they need. Find link to source code below.\n *\n * @tutorial feature_markup\n * @constructor\n * @memberof Autodesk.Viewing.Extensions.Markups.Core\n * @extends Autodesk.Viewing.Extensions.Markups.Core.EditAction\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param rotation\n * @param style\n */\nfunction CreateCircle(editor, id, position, size, rotation, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-CIRCLE', id);\n\n  this.selectOnExecution = false;\n  this.position = { x: position.x, y: position.y };\n  this.size = { x: size.x, y: size.y };\n  this.rotation = rotation;\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreateCircle.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateCircle.prototype.constructor = CreateCircle;\n\nvar proto = CreateCircle.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var circle = new _MarkupCircle__WEBPACK_IMPORTED_MODULE_1__.MarkupCircle(this.targetId, editor);\n\n  editor.addMarkup(circle);\n\n  circle.setSize(this.position, this.size.x, this.size.y);\n  circle.setRotation(this.rotation);\n  circle.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVDaXJjbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUU2QjtBQUNLO0FBQ0o7O0FBRXZDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0csWUFBWUEsQ0FBQ0MsTUFBTSxFQUFFQyxFQUFFLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLEtBQUssRUFBRTs7RUFFdEVULG1EQUFVLENBQUNVLElBQUksQ0FBQyxJQUFJLEVBQUVOLE1BQU0sRUFBRSxlQUFlLEVBQUVDLEVBQUUsQ0FBQzs7RUFFbEQsSUFBSSxDQUFDTSxpQkFBaUIsR0FBRyxLQUFLO0VBQzlCLElBQUksQ0FBQ0wsUUFBUSxHQUFHLEVBQUNNLENBQUMsRUFBRU4sUUFBUSxDQUFDTSxDQUFDLEVBQUVDLENBQUMsRUFBRVAsUUFBUSxDQUFDTyxDQUFDLEVBQUM7RUFDOUMsSUFBSSxDQUFDTixJQUFJLEdBQUcsRUFBQ0ssQ0FBQyxFQUFFTCxJQUFJLENBQUNLLENBQUMsRUFBRUMsQ0FBQyxFQUFFTixJQUFJLENBQUNNLENBQUMsRUFBQztFQUNsQyxJQUFJLENBQUNMLFFBQVEsR0FBR0EsUUFBUTtFQUN4QixJQUFJLENBQUNDLEtBQUssR0FBR1AsdURBQVUsQ0FBQ08sS0FBSyxDQUFDO0FBQ2xDOztBQUVBTixZQUFZLENBQUNXLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNoQixtREFBVSxDQUFDYyxTQUFTLENBQUM7QUFDNURYLFlBQVksQ0FBQ1csU0FBUyxDQUFDRyxXQUFXLEdBQUdkLFlBQVk7O0FBRWpELElBQUllLEtBQUssR0FBR2YsWUFBWSxDQUFDVyxTQUFTOztBQUVsQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSWYsTUFBTSxHQUFHLElBQUksQ0FBQ0EsTUFBTTtFQUN4QixJQUFJZ0IsTUFBTSxHQUFHLElBQUluQix1REFBWSxDQUFDLElBQUksQ0FBQ29CLFFBQVEsRUFBRWpCLE1BQU0sQ0FBQzs7RUFFcERBLE1BQU0sQ0FBQ2tCLFNBQVMsQ0FBQ0YsTUFBTSxDQUFDOztFQUV4QkEsTUFBTSxDQUFDRyxPQUFPLENBQUMsSUFBSSxDQUFDakIsUUFBUSxFQUFFLElBQUksQ0FBQ0MsSUFBSSxDQUFDSyxDQUFDLEVBQUUsSUFBSSxDQUFDTCxJQUFJLENBQUNNLENBQUMsQ0FBQztFQUN2RE8sTUFBTSxDQUFDSSxXQUFXLENBQUMsSUFBSSxDQUFDaEIsUUFBUSxDQUFDO0VBQ2pDWSxNQUFNLENBQUNLLFFBQVEsQ0FBQyxJQUFJLENBQUNoQixLQUFLLENBQUM7QUFDL0IsQ0FBQzs7QUFFRFMsS0FBSyxDQUFDUSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSUMsTUFBTSxHQUFHLElBQUksQ0FBQ3ZCLE1BQU0sQ0FBQ3dCLFNBQVMsQ0FBQyxJQUFJLENBQUNQLFFBQVEsQ0FBQztFQUNqRE0sTUFBTSxJQUFJLElBQUksQ0FBQ3ZCLE1BQU0sQ0FBQ3lCLFlBQVksQ0FBQ0YsTUFBTSxDQUFDO0FBQzlDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvQ3JlYXRlQ2lyY2xlLmpzP2RkZGUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcbmltcG9ydCB7IE1hcmt1cENpcmNsZSB9IGZyb20gJy4uL01hcmt1cENpcmNsZSc7XG5pbXBvcnQgeyBjbG9uZVN0eWxlIH0gZnJvbSAnLi4vU3R5bGVVdGlscyc7XG5cbiAgICAvKipcbiAgICAgKiBNYXJrdXAgY3JlYXRlIGNpcmNsZSBhY3Rpb24uXG4gICAgICpcbiAgICAgKiBJbXBsZW1lbnRzIGFuIHtAbGluayBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLkVkaXRBY3Rpb258RWRpdEFjdGlvbn1cbiAgICAgKiBmb3IgY3JlYXRpbmcgYSBDaXJjbGUge0BsaW5rIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuTWFya3VwfE1hcmt1cH0uXG4gICAgICogSW5jbHVkZWQgaW4gZG9jdW1lbnRhdGlvbiBhcyBhbiBleGFtcGxlIG9mIGhvdyB0byBjcmVhdGVcbiAgICAgKiBhIHNwZWNpZmljIEVkaXRBY3Rpb24gdGhhdCBkZWFscyB3aXRoIE1hcmt1cCBjcmVhdGlvbi5cbiAgICAgKiBEZXZlbG9wZXJzIGFyZSBlbmNvdXJhZ2UgdG8gbG9vayBpbnRvIHRoaXMgY2xhc3MncyBzb3VyY2UgY29kZSBhbmQgY29weVxuICAgICAqIGFzIG11Y2ggY29kZSBhcyB0aGV5IG5lZWQuIEZpbmQgbGluayB0byBzb3VyY2UgY29kZSBiZWxvdy5cbiAgICAgKlxuICAgICAqIEB0dXRvcmlhbCBmZWF0dXJlX21hcmt1cFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBtZW1iZXJvZiBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlXG4gICAgICogQGV4dGVuZHMgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5FZGl0QWN0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gcm90YXRpb25cbiAgICAgKiBAcGFyYW0gc3R5bGVcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gQ3JlYXRlQ2lyY2xlKGVkaXRvciwgaWQsIHBvc2l0aW9uLCBzaXplLCByb3RhdGlvbiwgc3R5bGUpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnQ1JFQVRFLUNJUkNMRScsIGlkKTtcblxuICAgICAgICB0aGlzLnNlbGVjdE9uRXhlY3V0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7eDogcG9zaXRpb24ueCwgeTogcG9zaXRpb24ueX07XG4gICAgICAgIHRoaXMuc2l6ZSA9IHt4OiBzaXplLngsIHk6IHNpemUueX07XG4gICAgICAgIHRoaXMucm90YXRpb24gPSByb3RhdGlvbjtcbiAgICAgICAgdGhpcy5zdHlsZSA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgIH1cblxuICAgIENyZWF0ZUNpcmNsZS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBDcmVhdGVDaXJjbGUucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ3JlYXRlQ2lyY2xlO1xuXG4gICAgdmFyIHByb3RvID0gQ3JlYXRlQ2lyY2xlLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgIHZhciBjaXJjbGUgPSBuZXcgTWFya3VwQ2lyY2xlKHRoaXMudGFyZ2V0SWQsIGVkaXRvcik7XG5cbiAgICAgICAgZWRpdG9yLmFkZE1hcmt1cChjaXJjbGUpO1xuXG4gICAgICAgIGNpcmNsZS5zZXRTaXplKHRoaXMucG9zaXRpb24sIHRoaXMuc2l6ZS54LCB0aGlzLnNpemUueSk7XG4gICAgICAgIGNpcmNsZS5zZXRSb3RhdGlvbih0aGlzLnJvdGF0aW9uKTtcbiAgICAgICAgY2lyY2xlLnNldFN0eWxlKHRoaXMuc3R5bGUpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIHRoaXMuZWRpdG9yLnJlbW92ZU1hcmt1cChtYXJrdXApO1xuICAgIH07XG5cbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiTWFya3VwQ2lyY2xlIiwiY2xvbmVTdHlsZSIsIkNyZWF0ZUNpcmNsZSIsImVkaXRvciIsImlkIiwicG9zaXRpb24iLCJzaXplIiwicm90YXRpb24iLCJzdHlsZSIsImNhbGwiLCJzZWxlY3RPbkV4ZWN1dGlvbiIsIngiLCJ5IiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJjaXJjbGUiLCJ0YXJnZXRJZCIsImFkZE1hcmt1cCIsInNldFNpemUiLCJzZXRSb3RhdGlvbiIsInNldFN0eWxlIiwidW5kbyIsIm1hcmt1cCIsImdldE1hcmt1cCIsInJlbW92ZU1hcmt1cCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateCircle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateCloud.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateCloud.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateCloud: () => (/* binding */ CreateCloud)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupCloud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupCloud */ \"./extensions/Markup/core/MarkupCloud.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param rotation\n * @param style\n * @constructor\n */\nfunction CreateCloud(editor, id, position, size, rotation, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-CLOUD', id);\n\n  this.selectOnExecution = false;\n  this.position = { x: position.x, y: position.y };\n  this.size = { x: size.x, y: size.y };\n  this.rotation = rotation;\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreateCloud.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateCloud.prototype.constructor = CreateCloud;\n\nvar proto = CreateCloud.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var cloud = new _MarkupCloud__WEBPACK_IMPORTED_MODULE_1__.MarkupCloud(this.targetId, editor);\n\n  editor.addMarkup(cloud);\n\n  cloud.set(this.position, this.size);\n  cloud.setRotation(this.rotation);\n  cloud.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVDbG91ZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRTZCO0FBQ0c7QUFDRjs7QUFFdkM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTRyxXQUFXQSxDQUFDQyxNQUFNLEVBQUVDLEVBQUUsRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsS0FBSyxFQUFFOztFQUVyRVQsbURBQVUsQ0FBQ1UsSUFBSSxDQUFDLElBQUksRUFBRU4sTUFBTSxFQUFFLGNBQWMsRUFBRUMsRUFBRSxDQUFDOztFQUVqRCxJQUFJLENBQUNNLGlCQUFpQixHQUFHLEtBQUs7RUFDOUIsSUFBSSxDQUFDTCxRQUFRLEdBQUcsRUFBQ00sQ0FBQyxFQUFFTixRQUFRLENBQUNNLENBQUMsRUFBRUMsQ0FBQyxFQUFFUCxRQUFRLENBQUNPLENBQUMsRUFBQztFQUM5QyxJQUFJLENBQUNOLElBQUksR0FBRyxFQUFDSyxDQUFDLEVBQUVMLElBQUksQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVOLElBQUksQ0FBQ00sQ0FBQyxFQUFDO0VBQ2xDLElBQUksQ0FBQ0wsUUFBUSxHQUFHQSxRQUFRO0VBQ3hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHUCx1REFBVSxDQUFDTyxLQUFLLENBQUM7QUFDbEM7O0FBRUFOLFdBQVcsQ0FBQ1csU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2hCLG1EQUFVLENBQUNjLFNBQVMsQ0FBQztBQUMzRFgsV0FBVyxDQUFDVyxTQUFTLENBQUNHLFdBQVcsR0FBR2QsV0FBVzs7QUFFL0MsSUFBSWUsS0FBSyxHQUFHZixXQUFXLENBQUNXLFNBQVM7O0FBRWpDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJZixNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNO0VBQ3hCLElBQUlnQixLQUFLLEdBQUcsSUFBSW5CLHFEQUFXLENBQUMsSUFBSSxDQUFDb0IsUUFBUSxFQUFFakIsTUFBTSxDQUFDOztFQUVsREEsTUFBTSxDQUFDa0IsU0FBUyxDQUFDRixLQUFLLENBQUM7O0VBRXZCQSxLQUFLLENBQUNHLEdBQUcsQ0FBQyxJQUFJLENBQUNqQixRQUFRLEVBQUUsSUFBSSxDQUFDQyxJQUFJLENBQUM7RUFDbkNhLEtBQUssQ0FBQ0ksV0FBVyxDQUFDLElBQUksQ0FBQ2hCLFFBQVEsQ0FBQztFQUNoQ1ksS0FBSyxDQUFDSyxRQUFRLENBQUMsSUFBSSxDQUFDaEIsS0FBSyxDQUFDO0FBQzlCLENBQUM7O0FBRURTLEtBQUssQ0FBQ1EsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlDLE1BQU0sR0FBRyxJQUFJLENBQUN2QixNQUFNLENBQUN3QixTQUFTLENBQUMsSUFBSSxDQUFDUCxRQUFRLENBQUM7RUFDakRNLE1BQU0sSUFBSSxJQUFJLENBQUN2QixNQUFNLENBQUN5QixZQUFZLENBQUNGLE1BQU0sQ0FBQztBQUM5QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZUNsb3VkLmpzP2QzMmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcbmltcG9ydCB7IE1hcmt1cENsb3VkIH0gZnJvbSAnLi4vTWFya3VwQ2xvdWQnO1xuaW1wb3J0IHsgY2xvbmVTdHlsZSB9IGZyb20gJy4uL1N0eWxlVXRpbHMnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gcm90YXRpb25cbiAgICAgKiBAcGFyYW0gc3R5bGVcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gQ3JlYXRlQ2xvdWQoZWRpdG9yLCBpZCwgcG9zaXRpb24sIHNpemUsIHJvdGF0aW9uLCBzdHlsZSkge1xuXG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdDUkVBVEUtQ0xPVUQnLCBpZCk7XG5cbiAgICAgICAgdGhpcy5zZWxlY3RPbkV4ZWN1dGlvbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBvc2l0aW9uID0ge3g6IHBvc2l0aW9uLngsIHk6IHBvc2l0aW9uLnl9O1xuICAgICAgICB0aGlzLnNpemUgPSB7eDogc2l6ZS54LCB5OiBzaXplLnl9O1xuICAgICAgICB0aGlzLnJvdGF0aW9uID0gcm90YXRpb247XG4gICAgICAgIHRoaXMuc3R5bGUgPSBjbG9uZVN0eWxlKHN0eWxlKTtcbiAgICB9XG5cbiAgICBDcmVhdGVDbG91ZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBDcmVhdGVDbG91ZC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBDcmVhdGVDbG91ZDtcblxuICAgIHZhciBwcm90byA9IENyZWF0ZUNsb3VkLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgIHZhciBjbG91ZCA9IG5ldyBNYXJrdXBDbG91ZCh0aGlzLnRhcmdldElkLCBlZGl0b3IpO1xuXG4gICAgICAgIGVkaXRvci5hZGRNYXJrdXAoY2xvdWQpO1xuXG4gICAgICAgIGNsb3VkLnNldCh0aGlzLnBvc2l0aW9uLCB0aGlzLnNpemUpO1xuICAgICAgICBjbG91ZC5zZXRSb3RhdGlvbih0aGlzLnJvdGF0aW9uKTtcbiAgICAgICAgY2xvdWQuc2V0U3R5bGUodGhpcy5zdHlsZSk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgbWFya3VwID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRoaXMudGFyZ2V0SWQpO1xuICAgICAgICBtYXJrdXAgJiYgdGhpcy5lZGl0b3IucmVtb3ZlTWFya3VwKG1hcmt1cCk7XG4gICAgfTtcbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiTWFya3VwQ2xvdWQiLCJjbG9uZVN0eWxlIiwiQ3JlYXRlQ2xvdWQiLCJlZGl0b3IiLCJpZCIsInBvc2l0aW9uIiwic2l6ZSIsInJvdGF0aW9uIiwic3R5bGUiLCJjYWxsIiwic2VsZWN0T25FeGVjdXRpb24iLCJ4IiwieSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwiY2xvdWQiLCJ0YXJnZXRJZCIsImFkZE1hcmt1cCIsInNldCIsInNldFJvdGF0aW9uIiwic2V0U3R5bGUiLCJ1bmRvIiwibWFya3VwIiwiZ2V0TWFya3VwIiwicmVtb3ZlTWFya3VwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateCloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateDimension.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateDimension.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateDimension: () => (/* binding */ CreateDimension)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupDimension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupDimension */ \"./extensions/Markup/core/MarkupDimension.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n * @constructor\n */\nfunction CreateDimension(editor, id, firstAnchor, secondAnchor, text, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-DIMENSION', id);\n\n  this.selectOnExecution = false;\n  this.secondAnchor = secondAnchor;\n  this.firstAnchor = firstAnchor;\n  this.text = text;\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreateDimension.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateDimension.prototype.constructor = CreateDimension;\n\nvar proto = CreateDimension.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var dimension = new _MarkupDimension__WEBPACK_IMPORTED_MODULE_1__.MarkupDimension(this.targetId, editor);\n\n  editor.addMarkup(dimension);\n\n  // Don't display the dimension markup when there is only one Anchor (First click, before mouse move).\n  if (this.secondAnchor) {\n    dimension.set(this.firstAnchor.x, this.firstAnchor.y, this.secondAnchor.x, this.secondAnchor.y, this.text);\n    dimension.setStyle(this.style);\n  }\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVEaW1lbnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUU2QjtBQUNXO0FBQ1Y7O0FBRXZDO0FBQ0o7QUFDQTtBQUNXLFNBQVNHLGVBQWVBLENBQUNDLE1BQU0sRUFBRUMsRUFBRSxFQUFFQyxXQUFXLEVBQUVDLFlBQVksRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUU7O0VBRWhGVCxtREFBVSxDQUFDVSxJQUFJLENBQUMsSUFBSSxFQUFFTixNQUFNLEVBQUUsa0JBQWtCLEVBQUVDLEVBQUUsQ0FBQzs7RUFFckQsSUFBSSxDQUFDTSxpQkFBaUIsR0FBRyxLQUFLO0VBQzlCLElBQUksQ0FBQ0osWUFBWSxHQUFHQSxZQUFZO0VBQ2hDLElBQUksQ0FBQ0QsV0FBVyxHQUFHQSxXQUFXO0VBQzlCLElBQUksQ0FBQ0UsSUFBSSxHQUFHQSxJQUFJO0VBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHUCx1REFBVSxDQUFDTyxLQUFLLENBQUM7QUFDbEM7O0FBRUFOLGVBQWUsQ0FBQ1MsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2QsbURBQVUsQ0FBQ1ksU0FBUyxDQUFDO0FBQy9EVCxlQUFlLENBQUNTLFNBQVMsQ0FBQ0csV0FBVyxHQUFHWixlQUFlOztBQUV2RCxJQUFJYSxLQUFLLEdBQUdiLGVBQWUsQ0FBQ1MsU0FBUzs7QUFFckNJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUliLE1BQU0sR0FBRyxJQUFJLENBQUNBLE1BQU07RUFDeEIsSUFBSWMsU0FBUyxHQUFHLElBQUlqQiw2REFBZSxDQUFDLElBQUksQ0FBQ2tCLFFBQVEsRUFBRWYsTUFBTSxDQUFDOztFQUUxREEsTUFBTSxDQUFDZ0IsU0FBUyxDQUFDRixTQUFTLENBQUM7O0VBRTNCO0VBQ0EsSUFBSSxJQUFJLENBQUNYLFlBQVksRUFBRTtJQUNuQlcsU0FBUyxDQUFDRyxHQUFHLENBQUMsSUFBSSxDQUFDZixXQUFXLENBQUNnQixDQUFDLEVBQUUsSUFBSSxDQUFDaEIsV0FBVyxDQUFDaUIsQ0FBQyxFQUFFLElBQUksQ0FBQ2hCLFlBQVksQ0FBQ2UsQ0FBQyxFQUFFLElBQUksQ0FBQ2YsWUFBWSxDQUFDZ0IsQ0FBQyxFQUFFLElBQUksQ0FBQ2YsSUFBSSxDQUFDO0lBQzFHVSxTQUFTLENBQUNNLFFBQVEsQ0FBQyxJQUFJLENBQUNmLEtBQUssQ0FBQztFQUNsQztBQUNKLENBQUM7O0FBRURPLEtBQUssQ0FBQ1MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlDLE1BQU0sR0FBRyxJQUFJLENBQUN0QixNQUFNLENBQUN1QixTQUFTLENBQUMsSUFBSSxDQUFDUixRQUFRLENBQUM7RUFDakRPLE1BQU0sSUFBSSxJQUFJLENBQUN0QixNQUFNLENBQUN3QixZQUFZLENBQUNGLE1BQU0sQ0FBQztBQUM5QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZURpbWVuc2lvbi5qcz9jNjZlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBNYXJrdXBEaW1lbnNpb24gfSBmcm9tICcuLi9NYXJrdXBEaW1lbnNpb24nO1xuaW1wb3J0IHsgY2xvbmVTdHlsZSB9IGZyb20gJy4uL1N0eWxlVXRpbHMnO1xuXG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIENyZWF0ZURpbWVuc2lvbihlZGl0b3IsIGlkLCBmaXJzdEFuY2hvciwgc2Vjb25kQW5jaG9yLCB0ZXh0LCBzdHlsZSkge1xuXG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdDUkVBVEUtRElNRU5TSU9OJywgaWQpO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0T25FeGVjdXRpb24gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zZWNvbmRBbmNob3IgPSBzZWNvbmRBbmNob3I7XG4gICAgICAgIHRoaXMuZmlyc3RBbmNob3IgPSBmaXJzdEFuY2hvcjtcbiAgICAgICAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgICAgICAgdGhpcy5zdHlsZSA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgIH1cblxuICAgIENyZWF0ZURpbWVuc2lvbi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBDcmVhdGVEaW1lbnNpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ3JlYXRlRGltZW5zaW9uO1xuXG4gICAgdmFyIHByb3RvID0gQ3JlYXRlRGltZW5zaW9uLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgIHZhciBkaW1lbnNpb24gPSBuZXcgTWFya3VwRGltZW5zaW9uKHRoaXMudGFyZ2V0SWQsIGVkaXRvcik7XG5cbiAgICAgICAgZWRpdG9yLmFkZE1hcmt1cChkaW1lbnNpb24pO1xuXG4gICAgICAgIC8vIERvbid0IGRpc3BsYXkgdGhlIGRpbWVuc2lvbiBtYXJrdXAgd2hlbiB0aGVyZSBpcyBvbmx5IG9uZSBBbmNob3IgKEZpcnN0IGNsaWNrLCBiZWZvcmUgbW91c2UgbW92ZSkuXG4gICAgICAgIGlmICh0aGlzLnNlY29uZEFuY2hvcikge1xuICAgICAgICAgICAgZGltZW5zaW9uLnNldCh0aGlzLmZpcnN0QW5jaG9yLngsIHRoaXMuZmlyc3RBbmNob3IueSwgdGhpcy5zZWNvbmRBbmNob3IueCwgdGhpcy5zZWNvbmRBbmNob3IueSwgdGhpcy50ZXh0KTtcbiAgICAgICAgICAgIGRpbWVuc2lvbi5zZXRTdHlsZSh0aGlzLnN0eWxlKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIHRoaXMuZWRpdG9yLnJlbW92ZU1hcmt1cChtYXJrdXApO1xuICAgIH07XG5cblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJNYXJrdXBEaW1lbnNpb24iLCJjbG9uZVN0eWxlIiwiQ3JlYXRlRGltZW5zaW9uIiwiZWRpdG9yIiwiaWQiLCJmaXJzdEFuY2hvciIsInNlY29uZEFuY2hvciIsInRleHQiLCJzdHlsZSIsImNhbGwiLCJzZWxlY3RPbkV4ZWN1dGlvbiIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwiZGltZW5zaW9uIiwidGFyZ2V0SWQiLCJhZGRNYXJrdXAiLCJzZXQiLCJ4IiwieSIsInNldFN0eWxlIiwidW5kbyIsIm1hcmt1cCIsImdldE1hcmt1cCIsInJlbW92ZU1hcmt1cCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateDimension.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateFreehand.js":
/*!***************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateFreehand.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateFreehand: () => (/* binding */ CreateFreehand)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupFreehand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupFreehand */ \"./extensions/Markup/core/MarkupFreehand.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param rotation\n * @param locations\n * @param style\n * @constructor\n */\nfunction CreateFreehand(editor, id, position, size, rotation, locations, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-FREEHAND', id);\n\n  this.selectOnExecution = false;\n  this.position = position;\n  this.size = size;\n  this.rotation = rotation;\n  this.movements = locations.slice(0);\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreateFreehand.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateFreehand.prototype.constructor = CreateFreehand;\n\nvar proto = CreateFreehand.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var freehand = new _MarkupFreehand__WEBPACK_IMPORTED_MODULE_1__.MarkupFreehand(this.targetId, editor);\n\n  editor.addMarkup(freehand);\n\n  freehand.set(this.position, this.size, this.movements, false);\n  freehand.setRotation(this.rotation);\n  freehand.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVGcmVlaGFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRTZCO0FBQ1M7QUFDUjs7QUFFdkM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNHLGNBQWNBLENBQUNDLE1BQU0sRUFBRUMsRUFBRSxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLEtBQUssRUFBRTs7RUFFbkZWLG1EQUFVLENBQUNXLElBQUksQ0FBQyxJQUFJLEVBQUVQLE1BQU0sRUFBRSxpQkFBaUIsRUFBRUMsRUFBRSxDQUFDOztFQUVwRCxJQUFJLENBQUNPLGlCQUFpQixHQUFHLEtBQUs7RUFDOUIsSUFBSSxDQUFDTixRQUFRLEdBQUdBLFFBQVE7RUFDeEIsSUFBSSxDQUFDQyxJQUFJLEdBQUdBLElBQUk7RUFDaEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFFBQVE7RUFDeEIsSUFBSSxDQUFDSyxTQUFTLEdBQUdKLFNBQVMsQ0FBQ0ssS0FBSyxDQUFDLENBQUMsQ0FBQztFQUNuQyxJQUFJLENBQUNKLEtBQUssR0FBR1IsdURBQVUsQ0FBQ1EsS0FBSyxDQUFDO0FBQ2xDOztBQUVBUCxjQUFjLENBQUNZLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNqQixtREFBVSxDQUFDZSxTQUFTLENBQUM7QUFDOURaLGNBQWMsQ0FBQ1ksU0FBUyxDQUFDRyxXQUFXLEdBQUdmLGNBQWM7O0FBRXJELElBQUlnQixLQUFLLEdBQUdoQixjQUFjLENBQUNZLFNBQVM7O0FBRXBDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJaEIsTUFBTSxHQUFHLElBQUksQ0FBQ0EsTUFBTTtFQUN4QixJQUFJaUIsUUFBUSxHQUFHLElBQUlwQiwyREFBYyxDQUFDLElBQUksQ0FBQ3FCLFFBQVEsRUFBRWxCLE1BQU0sQ0FBQzs7RUFFeERBLE1BQU0sQ0FBQ21CLFNBQVMsQ0FBQ0YsUUFBUSxDQUFDOztFQUUxQkEsUUFBUSxDQUFDRyxHQUFHLENBQUMsSUFBSSxDQUFDbEIsUUFBUSxFQUFFLElBQUksQ0FBQ0MsSUFBSSxFQUFFLElBQUksQ0FBQ00sU0FBUyxFQUFFLEtBQUssQ0FBQztFQUM3RFEsUUFBUSxDQUFDSSxXQUFXLENBQUMsSUFBSSxDQUFDakIsUUFBUSxDQUFDO0VBQ25DYSxRQUFRLENBQUNLLFFBQVEsQ0FBQyxJQUFJLENBQUNoQixLQUFLLENBQUM7QUFDakMsQ0FBQzs7QUFFRFMsS0FBSyxDQUFDUSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSUMsTUFBTSxHQUFHLElBQUksQ0FBQ3hCLE1BQU0sQ0FBQ3lCLFNBQVMsQ0FBQyxJQUFJLENBQUNQLFFBQVEsQ0FBQztFQUNqRE0sTUFBTSxJQUFJLElBQUksQ0FBQ3hCLE1BQU0sQ0FBQzBCLFlBQVksQ0FBQ0YsTUFBTSxDQUFDO0FBQzlDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvQ3JlYXRlRnJlZWhhbmQuanM/MjU3NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuaW1wb3J0IHsgTWFya3VwRnJlZWhhbmQgfSBmcm9tICcuLi9NYXJrdXBGcmVlaGFuZCc7XG5pbXBvcnQgeyBjbG9uZVN0eWxlIH0gZnJvbSAnLi4vU3R5bGVVdGlscyc7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgKiBAcGFyYW0gaWRcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0gc2l6ZVxuICAgICAqIEBwYXJhbSByb3RhdGlvblxuICAgICAqIEBwYXJhbSBsb2NhdGlvbnNcbiAgICAgKiBAcGFyYW0gc3R5bGVcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gQ3JlYXRlRnJlZWhhbmQoZWRpdG9yLCBpZCwgcG9zaXRpb24sIHNpemUsIHJvdGF0aW9uLCBsb2NhdGlvbnMsIHN0eWxlKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0NSRUFURS1GUkVFSEFORCcsIGlkKTtcblxuICAgICAgICB0aGlzLnNlbGVjdE9uRXhlY3V0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5yb3RhdGlvbiA9IHJvdGF0aW9uO1xuICAgICAgICB0aGlzLm1vdmVtZW50cyA9IGxvY2F0aW9ucy5zbGljZSgwKTtcbiAgICAgICAgdGhpcy5zdHlsZSA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgIH1cblxuICAgIENyZWF0ZUZyZWVoYW5kLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIENyZWF0ZUZyZWVoYW5kLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IENyZWF0ZUZyZWVoYW5kO1xuXG4gICAgdmFyIHByb3RvID0gQ3JlYXRlRnJlZWhhbmQucHJvdG90eXBlO1xuXG4gICAgcHJvdG8ucmVkbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjtcbiAgICAgICAgdmFyIGZyZWVoYW5kID0gbmV3IE1hcmt1cEZyZWVoYW5kKHRoaXMudGFyZ2V0SWQsIGVkaXRvcik7XG5cbiAgICAgICAgZWRpdG9yLmFkZE1hcmt1cChmcmVlaGFuZCk7XG5cbiAgICAgICAgZnJlZWhhbmQuc2V0KHRoaXMucG9zaXRpb24sIHRoaXMuc2l6ZSwgdGhpcy5tb3ZlbWVudHMsIGZhbHNlKTtcbiAgICAgICAgZnJlZWhhbmQuc2V0Um90YXRpb24odGhpcy5yb3RhdGlvbik7XG4gICAgICAgIGZyZWVoYW5kLnNldFN0eWxlKHRoaXMuc3R5bGUpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIHRoaXMuZWRpdG9yLnJlbW92ZU1hcmt1cChtYXJrdXApO1xuICAgIH07XG5cbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiTWFya3VwRnJlZWhhbmQiLCJjbG9uZVN0eWxlIiwiQ3JlYXRlRnJlZWhhbmQiLCJlZGl0b3IiLCJpZCIsInBvc2l0aW9uIiwic2l6ZSIsInJvdGF0aW9uIiwibG9jYXRpb25zIiwic3R5bGUiLCJjYWxsIiwic2VsZWN0T25FeGVjdXRpb24iLCJtb3ZlbWVudHMiLCJzbGljZSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwiZnJlZWhhbmQiLCJ0YXJnZXRJZCIsImFkZE1hcmt1cCIsInNldCIsInNldFJvdGF0aW9uIiwic2V0U3R5bGUiLCJ1bmRvIiwibWFya3VwIiwiZ2V0TWFya3VwIiwicmVtb3ZlTWFya3VwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateFreehand.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateHighlight.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateHighlight.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateHighlight: () => (/* binding */ CreateHighlight)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupHighlight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupHighlight */ \"./extensions/Markup/core/MarkupHighlight.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param rotation\n * @param locations\n * @param style\n * @constructor\n */\nfunction CreateHighlight(editor, id, position, size, rotation, locations, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-HIGHLIGHT', id);\n\n  this.selectOnExecution = false;\n  this.position = position;\n  this.size = size;\n  this.rotation = rotation;\n  this.movements = locations.slice(0);\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreateHighlight.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateHighlight.prototype.constructor = CreateHighlight;\n\nvar proto = CreateHighlight.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var highlight = new _MarkupHighlight__WEBPACK_IMPORTED_MODULE_1__.MarkupHighlight(this.targetId, editor);\n\n  editor.addMarkup(highlight);\n\n  highlight.set(this.position, this.size, this.movements, false);\n  highlight.setRotation(this.rotation);\n  highlight.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVIaWdobGlnaHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUU2QjtBQUNXO0FBQ1Y7O0FBRXZDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTRyxlQUFlQSxDQUFDQyxNQUFNLEVBQUVDLEVBQUUsRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxLQUFLLEVBQUU7O0VBRXBGVixtREFBVSxDQUFDVyxJQUFJLENBQUMsSUFBSSxFQUFFUCxNQUFNLEVBQUUsa0JBQWtCLEVBQUVDLEVBQUUsQ0FBQzs7RUFFckQsSUFBSSxDQUFDTyxpQkFBaUIsR0FBRyxLQUFLO0VBQzlCLElBQUksQ0FBQ04sUUFBUSxHQUFHQSxRQUFRO0VBQ3hCLElBQUksQ0FBQ0MsSUFBSSxHQUFHQSxJQUFJO0VBQ2hCLElBQUksQ0FBQ0MsUUFBUSxHQUFHQSxRQUFRO0VBQ3hCLElBQUksQ0FBQ0ssU0FBUyxHQUFHSixTQUFTLENBQUNLLEtBQUssQ0FBQyxDQUFDLENBQUM7RUFDbkMsSUFBSSxDQUFDSixLQUFLLEdBQUdSLHVEQUFVLENBQUNRLEtBQUssQ0FBQztBQUNsQzs7QUFFQVAsZUFBZSxDQUFDWSxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDakIsbURBQVUsQ0FBQ2UsU0FBUyxDQUFDO0FBQy9EWixlQUFlLENBQUNZLFNBQVMsQ0FBQ0csV0FBVyxHQUFHZixlQUFlOztBQUV2RCxJQUFJZ0IsS0FBSyxHQUFHaEIsZUFBZSxDQUFDWSxTQUFTOztBQUVyQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSWhCLE1BQU0sR0FBRyxJQUFJLENBQUNBLE1BQU07RUFDeEIsSUFBSWlCLFNBQVMsR0FBRyxJQUFJcEIsNkRBQWUsQ0FBQyxJQUFJLENBQUNxQixRQUFRLEVBQUVsQixNQUFNLENBQUM7O0VBRTFEQSxNQUFNLENBQUNtQixTQUFTLENBQUNGLFNBQVMsQ0FBQzs7RUFFM0JBLFNBQVMsQ0FBQ0csR0FBRyxDQUFDLElBQUksQ0FBQ2xCLFFBQVEsRUFBRSxJQUFJLENBQUNDLElBQUksRUFBRSxJQUFJLENBQUNNLFNBQVMsRUFBRSxLQUFLLENBQUM7RUFDOURRLFNBQVMsQ0FBQ0ksV0FBVyxDQUFDLElBQUksQ0FBQ2pCLFFBQVEsQ0FBQztFQUNwQ2EsU0FBUyxDQUFDSyxRQUFRLENBQUMsSUFBSSxDQUFDaEIsS0FBSyxDQUFDO0FBQ2xDLENBQUM7O0FBRURTLEtBQUssQ0FBQ1EsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlDLE1BQU0sR0FBRyxJQUFJLENBQUN4QixNQUFNLENBQUN5QixTQUFTLENBQUMsSUFBSSxDQUFDUCxRQUFRLENBQUM7RUFDakRNLE1BQU0sSUFBSSxJQUFJLENBQUN4QixNQUFNLENBQUMwQixZQUFZLENBQUNGLE1BQU0sQ0FBQztBQUM5QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZUhpZ2hsaWdodC5qcz9mOWZjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBNYXJrdXBIaWdobGlnaHQgfSBmcm9tICcuLi9NYXJrdXBIaWdobGlnaHQnO1xuaW1wb3J0IHsgY2xvbmVTdHlsZSB9IGZyb20gJy4uL1N0eWxlVXRpbHMnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gcm90YXRpb25cbiAgICAgKiBAcGFyYW0gbG9jYXRpb25zXG4gICAgICogQHBhcmFtIHN0eWxlXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIENyZWF0ZUhpZ2hsaWdodChlZGl0b3IsIGlkLCBwb3NpdGlvbiwgc2l6ZSwgcm90YXRpb24sIGxvY2F0aW9ucywgc3R5bGUpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnQ1JFQVRFLUhJR0hMSUdIVCcsIGlkKTtcblxuICAgICAgICB0aGlzLnNlbGVjdE9uRXhlY3V0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5yb3RhdGlvbiA9IHJvdGF0aW9uO1xuICAgICAgICB0aGlzLm1vdmVtZW50cyA9IGxvY2F0aW9ucy5zbGljZSgwKTtcbiAgICAgICAgdGhpcy5zdHlsZSA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgIH1cblxuICAgIENyZWF0ZUhpZ2hsaWdodC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBDcmVhdGVIaWdobGlnaHQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ3JlYXRlSGlnaGxpZ2h0O1xuXG4gICAgdmFyIHByb3RvID0gQ3JlYXRlSGlnaGxpZ2h0LnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgIHZhciBoaWdobGlnaHQgPSBuZXcgTWFya3VwSGlnaGxpZ2h0KHRoaXMudGFyZ2V0SWQsIGVkaXRvcik7XG5cbiAgICAgICAgZWRpdG9yLmFkZE1hcmt1cChoaWdobGlnaHQpO1xuXG4gICAgICAgIGhpZ2hsaWdodC5zZXQodGhpcy5wb3NpdGlvbiwgdGhpcy5zaXplLCB0aGlzLm1vdmVtZW50cywgZmFsc2UpO1xuICAgICAgICBoaWdobGlnaHQuc2V0Um90YXRpb24odGhpcy5yb3RhdGlvbik7XG4gICAgICAgIGhpZ2hsaWdodC5zZXRTdHlsZSh0aGlzLnN0eWxlKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBtYXJrdXAgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG4gICAgICAgIG1hcmt1cCAmJiB0aGlzLmVkaXRvci5yZW1vdmVNYXJrdXAobWFya3VwKTtcbiAgICB9O1xuXG5cbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiTWFya3VwSGlnaGxpZ2h0IiwiY2xvbmVTdHlsZSIsIkNyZWF0ZUhpZ2hsaWdodCIsImVkaXRvciIsImlkIiwicG9zaXRpb24iLCJzaXplIiwicm90YXRpb24iLCJsb2NhdGlvbnMiLCJzdHlsZSIsImNhbGwiLCJzZWxlY3RPbkV4ZWN1dGlvbiIsIm1vdmVtZW50cyIsInNsaWNlIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJoaWdobGlnaHQiLCJ0YXJnZXRJZCIsImFkZE1hcmt1cCIsInNldCIsInNldFJvdGF0aW9uIiwic2V0U3R5bGUiLCJ1bmRvIiwibWFya3VwIiwiZ2V0TWFya3VwIiwicmVtb3ZlTWFya3VwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateHighlight.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreatePolycloud.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreatePolycloud.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreatePolycloud: () => (/* binding */ CreatePolycloud)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupPolycloud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupPolycloud */ \"./extensions/Markup/core/MarkupPolycloud.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param rotation\n * @param locations\n * @param closed\n * @param style\n * @constructor\n */\nfunction CreatePolycloud(editor, id, position, size, rotation, locations, style, closed) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-POLYCLOUD', id);\n\n  this.selectOnExecution = false;\n  this.position = position;\n  this.size = size;\n  this.rotation = rotation;\n  this.movements = locations.concat();\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n  this.closed = closed;\n}\n\nCreatePolycloud.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreatePolycloud.prototype.constructor = CreatePolycloud;\n\nvar proto = CreatePolycloud.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var polyline = new _MarkupPolycloud__WEBPACK_IMPORTED_MODULE_1__.MarkupPolycloud(this.targetId, editor);\n\n  editor.addMarkup(polyline);\n\n  polyline.set(this.position, this.size, this.movements, this.closed);\n  polyline.setRotation(this.rotation);\n  polyline.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVQb2x5Y2xvdWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUU2QjtBQUNXO0FBQ1Y7O0FBRXZDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNHLGVBQWVBLENBQUNDLE1BQU0sRUFBRUMsRUFBRSxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFOztFQUU1RlgsbURBQVUsQ0FBQ1ksSUFBSSxDQUFDLElBQUksRUFBRVIsTUFBTSxFQUFFLGtCQUFrQixFQUFFQyxFQUFFLENBQUM7O0VBRXJELElBQUksQ0FBQ1EsaUJBQWlCLEdBQUcsS0FBSztFQUM5QixJQUFJLENBQUNQLFFBQVEsR0FBR0EsUUFBUTtFQUN4QixJQUFJLENBQUNDLElBQUksR0FBR0EsSUFBSTtFQUNoQixJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtFQUN4QixJQUFJLENBQUNNLFNBQVMsR0FBR0wsU0FBUyxDQUFDTSxNQUFNLENBQUMsQ0FBQztFQUNuQyxJQUFJLENBQUNMLEtBQUssR0FBR1IsdURBQVUsQ0FBQ1EsS0FBSyxDQUFDO0VBQzlCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxNQUFNO0FBQ3hCOztBQUVBUixlQUFlLENBQUNhLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNsQixtREFBVSxDQUFDZ0IsU0FBUyxDQUFDO0FBQy9EYixlQUFlLENBQUNhLFNBQVMsQ0FBQ0csV0FBVyxHQUFHaEIsZUFBZTs7QUFFdkQsSUFBSWlCLEtBQUssR0FBR2pCLGVBQWUsQ0FBQ2EsU0FBUzs7QUFFckNJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlqQixNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNO0VBQ3hCLElBQUlrQixRQUFRLEdBQUcsSUFBSXJCLDZEQUFlLENBQUMsSUFBSSxDQUFDc0IsUUFBUSxFQUFFbkIsTUFBTSxDQUFDOztFQUV6REEsTUFBTSxDQUFDb0IsU0FBUyxDQUFDRixRQUFRLENBQUM7O0VBRTFCQSxRQUFRLENBQUNHLEdBQUcsQ0FBQyxJQUFJLENBQUNuQixRQUFRLEVBQUUsSUFBSSxDQUFDQyxJQUFJLEVBQUUsSUFBSSxDQUFDTyxTQUFTLEVBQUUsSUFBSSxDQUFDSCxNQUFNLENBQUM7RUFDbkVXLFFBQVEsQ0FBQ0ksV0FBVyxDQUFDLElBQUksQ0FBQ2xCLFFBQVEsQ0FBQztFQUNuQ2MsUUFBUSxDQUFDSyxRQUFRLENBQUMsSUFBSSxDQUFDakIsS0FBSyxDQUFDO0FBQ2pDLENBQUM7O0FBRURVLEtBQUssQ0FBQ1EsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlDLE1BQU0sR0FBRyxJQUFJLENBQUN6QixNQUFNLENBQUMwQixTQUFTLENBQUMsSUFBSSxDQUFDUCxRQUFRLENBQUM7RUFDakRNLE1BQU0sSUFBSSxJQUFJLENBQUN6QixNQUFNLENBQUMyQixZQUFZLENBQUNGLE1BQU0sQ0FBQztBQUM5QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZVBvbHljbG91ZC5qcz9iZDE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBNYXJrdXBQb2x5Y2xvdWQgfSBmcm9tICcuLi9NYXJrdXBQb2x5Y2xvdWQnO1xuaW1wb3J0IHsgY2xvbmVTdHlsZSB9IGZyb20gJy4uL1N0eWxlVXRpbHMnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gcm90YXRpb25cbiAgICAgKiBAcGFyYW0gbG9jYXRpb25zXG4gICAgICogQHBhcmFtIGNsb3NlZFxuICAgICAqIEBwYXJhbSBzdHlsZVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBDcmVhdGVQb2x5Y2xvdWQoZWRpdG9yLCBpZCwgcG9zaXRpb24sIHNpemUsIHJvdGF0aW9uLCBsb2NhdGlvbnMsIHN0eWxlLCBjbG9zZWQpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnQ1JFQVRFLVBPTFlDTE9VRCcsIGlkKTtcblxuICAgICAgICB0aGlzLnNlbGVjdE9uRXhlY3V0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5yb3RhdGlvbiA9IHJvdGF0aW9uO1xuICAgICAgICB0aGlzLm1vdmVtZW50cyA9IGxvY2F0aW9ucy5jb25jYXQoKTtcbiAgICAgICAgdGhpcy5zdHlsZSA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgICAgICB0aGlzLmNsb3NlZCA9IGNsb3NlZDtcbiAgICB9XG5cbiAgICBDcmVhdGVQb2x5Y2xvdWQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgQ3JlYXRlUG9seWNsb3VkLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IENyZWF0ZVBvbHljbG91ZDtcblxuICAgIHZhciBwcm90byA9IENyZWF0ZVBvbHljbG91ZC5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yO1xuICAgICAgICB2YXIgcG9seWxpbmUgPSBuZXcgTWFya3VwUG9seWNsb3VkKHRoaXMudGFyZ2V0SWQsIGVkaXRvcik7XG5cbiAgICAgICAgZWRpdG9yLmFkZE1hcmt1cChwb2x5bGluZSk7XG5cbiAgICAgICAgcG9seWxpbmUuc2V0KHRoaXMucG9zaXRpb24sIHRoaXMuc2l6ZSwgdGhpcy5tb3ZlbWVudHMsIHRoaXMuY2xvc2VkKTtcbiAgICAgICAgcG9seWxpbmUuc2V0Um90YXRpb24odGhpcy5yb3RhdGlvbik7XG4gICAgICAgIHBvbHlsaW5lLnNldFN0eWxlKHRoaXMuc3R5bGUpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIHRoaXMuZWRpdG9yLnJlbW92ZU1hcmt1cChtYXJrdXApO1xuICAgIH07XG5cbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiTWFya3VwUG9seWNsb3VkIiwiY2xvbmVTdHlsZSIsIkNyZWF0ZVBvbHljbG91ZCIsImVkaXRvciIsImlkIiwicG9zaXRpb24iLCJzaXplIiwicm90YXRpb24iLCJsb2NhdGlvbnMiLCJzdHlsZSIsImNsb3NlZCIsImNhbGwiLCJzZWxlY3RPbkV4ZWN1dGlvbiIsIm1vdmVtZW50cyIsImNvbmNhdCIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwicG9seWxpbmUiLCJ0YXJnZXRJZCIsImFkZE1hcmt1cCIsInNldCIsInNldFJvdGF0aW9uIiwic2V0U3R5bGUiLCJ1bmRvIiwibWFya3VwIiwiZ2V0TWFya3VwIiwicmVtb3ZlTWFya3VwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreatePolycloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreatePolyline.js":
/*!***************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreatePolyline.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreatePolyline: () => (/* binding */ CreatePolyline)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupPolyLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupPolyLine */ \"./extensions/Markup/core/MarkupPolyLine.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param rotation\n * @param locations\n * @param closed\n * @param style\n * @constructor\n */\nfunction CreatePolyline(editor, id, position, size, rotation, locations, style, closed) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-POLYLINE', id);\n\n  this.selectOnExecution = false;\n  this.position = position;\n  this.size = size;\n  this.rotation = rotation;\n  this.movements = locations.concat();\n  this.closed = closed;\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreatePolyline.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreatePolyline.prototype.constructor = CreatePolyline;\n\nvar proto = CreatePolyline.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var polyline = new _MarkupPolyLine__WEBPACK_IMPORTED_MODULE_1__.MarkupPolyline(this.targetId, editor);\n\n  editor.addMarkup(polyline);\n\n  polyline.set(this.position, this.size, this.movements, this.closed);\n  polyline.setRotation(this.rotation);\n  polyline.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVQb2x5bGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRTZCO0FBQ1M7QUFDUjs7QUFFdkM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0csY0FBY0EsQ0FBQ0MsTUFBTSxFQUFFQyxFQUFFLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLFNBQVMsRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUU7O0VBRTNGWCxtREFBVSxDQUFDWSxJQUFJLENBQUMsSUFBSSxFQUFFUixNQUFNLEVBQUUsaUJBQWlCLEVBQUVDLEVBQUUsQ0FBQzs7RUFFcEQsSUFBSSxDQUFDUSxpQkFBaUIsR0FBRyxLQUFLO0VBQzlCLElBQUksQ0FBQ1AsUUFBUSxHQUFHQSxRQUFRO0VBQ3hCLElBQUksQ0FBQ0MsSUFBSSxHQUFHQSxJQUFJO0VBQ2hCLElBQUksQ0FBQ0MsUUFBUSxHQUFHQSxRQUFRO0VBQ3hCLElBQUksQ0FBQ00sU0FBUyxHQUFHTCxTQUFTLENBQUNNLE1BQU0sQ0FBQyxDQUFDO0VBQ25DLElBQUksQ0FBQ0osTUFBTSxHQUFHQSxNQUFNO0VBQ3BCLElBQUksQ0FBQ0QsS0FBSyxHQUFHUix1REFBVSxDQUFDUSxLQUFLLENBQUM7QUFDbEM7O0FBRUFQLGNBQWMsQ0FBQ2EsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2xCLG1EQUFVLENBQUNnQixTQUFTLENBQUM7QUFDOURiLGNBQWMsQ0FBQ2EsU0FBUyxDQUFDRyxXQUFXLEdBQUdoQixjQUFjOztBQUVyRCxJQUFJaUIsS0FBSyxHQUFHakIsY0FBYyxDQUFDYSxTQUFTOztBQUVwQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSWpCLE1BQU0sR0FBRyxJQUFJLENBQUNBLE1BQU07RUFDeEIsSUFBSWtCLFFBQVEsR0FBRyxJQUFJckIsMkRBQWMsQ0FBQyxJQUFJLENBQUNzQixRQUFRLEVBQUVuQixNQUFNLENBQUM7O0VBRXhEQSxNQUFNLENBQUNvQixTQUFTLENBQUNGLFFBQVEsQ0FBQzs7RUFFMUJBLFFBQVEsQ0FBQ0csR0FBRyxDQUFDLElBQUksQ0FBQ25CLFFBQVEsRUFBRSxJQUFJLENBQUNDLElBQUksRUFBRSxJQUFJLENBQUNPLFNBQVMsRUFBRSxJQUFJLENBQUNILE1BQU0sQ0FBQztFQUNuRVcsUUFBUSxDQUFDSSxXQUFXLENBQUMsSUFBSSxDQUFDbEIsUUFBUSxDQUFDO0VBQ25DYyxRQUFRLENBQUNLLFFBQVEsQ0FBQyxJQUFJLENBQUNqQixLQUFLLENBQUM7QUFDakMsQ0FBQzs7QUFFRFUsS0FBSyxDQUFDUSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSUMsTUFBTSxHQUFHLElBQUksQ0FBQ3pCLE1BQU0sQ0FBQzBCLFNBQVMsQ0FBQyxJQUFJLENBQUNQLFFBQVEsQ0FBQztFQUNqRE0sTUFBTSxJQUFJLElBQUksQ0FBQ3pCLE1BQU0sQ0FBQzJCLFlBQVksQ0FBQ0YsTUFBTSxDQUFDO0FBQzlDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvQ3JlYXRlUG9seWxpbmUuanM/YjU4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuaW1wb3J0IHsgTWFya3VwUG9seWxpbmUgfSBmcm9tICcuLi9NYXJrdXBQb2x5TGluZSc7XG5pbXBvcnQgeyBjbG9uZVN0eWxlIH0gZnJvbSAnLi4vU3R5bGVVdGlscyc7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgKiBAcGFyYW0gaWRcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0gc2l6ZVxuICAgICAqIEBwYXJhbSByb3RhdGlvblxuICAgICAqIEBwYXJhbSBsb2NhdGlvbnNcbiAgICAgKiBAcGFyYW0gY2xvc2VkXG4gICAgICogQHBhcmFtIHN0eWxlXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIENyZWF0ZVBvbHlsaW5lKGVkaXRvciwgaWQsIHBvc2l0aW9uLCBzaXplLCByb3RhdGlvbiwgbG9jYXRpb25zLCBzdHlsZSwgY2xvc2VkKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0NSRUFURS1QT0xZTElORScsIGlkKTtcblxuICAgICAgICB0aGlzLnNlbGVjdE9uRXhlY3V0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5yb3RhdGlvbiA9IHJvdGF0aW9uO1xuICAgICAgICB0aGlzLm1vdmVtZW50cyA9IGxvY2F0aW9ucy5jb25jYXQoKTtcbiAgICAgICAgdGhpcy5jbG9zZWQgPSBjbG9zZWQ7XG4gICAgICAgIHRoaXMuc3R5bGUgPSBjbG9uZVN0eWxlKHN0eWxlKTtcbiAgICB9XG5cbiAgICBDcmVhdGVQb2x5bGluZS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBDcmVhdGVQb2x5bGluZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBDcmVhdGVQb2x5bGluZTtcblxuICAgIHZhciBwcm90byA9IENyZWF0ZVBvbHlsaW5lLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgIHZhciBwb2x5bGluZSA9IG5ldyBNYXJrdXBQb2x5bGluZSh0aGlzLnRhcmdldElkLCBlZGl0b3IpO1xuXG4gICAgICAgIGVkaXRvci5hZGRNYXJrdXAocG9seWxpbmUpO1xuXG4gICAgICAgIHBvbHlsaW5lLnNldCh0aGlzLnBvc2l0aW9uLCB0aGlzLnNpemUsIHRoaXMubW92ZW1lbnRzLCB0aGlzLmNsb3NlZCk7XG4gICAgICAgIHBvbHlsaW5lLnNldFJvdGF0aW9uKHRoaXMucm90YXRpb24pO1xuICAgICAgICBwb2x5bGluZS5zZXRTdHlsZSh0aGlzLnN0eWxlKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBtYXJrdXAgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG4gICAgICAgIG1hcmt1cCAmJiB0aGlzLmVkaXRvci5yZW1vdmVNYXJrdXAobWFya3VwKTtcbiAgICB9O1xuXG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIk1hcmt1cFBvbHlsaW5lIiwiY2xvbmVTdHlsZSIsIkNyZWF0ZVBvbHlsaW5lIiwiZWRpdG9yIiwiaWQiLCJwb3NpdGlvbiIsInNpemUiLCJyb3RhdGlvbiIsImxvY2F0aW9ucyIsInN0eWxlIiwiY2xvc2VkIiwiY2FsbCIsInNlbGVjdE9uRXhlY3V0aW9uIiwibW92ZW1lbnRzIiwiY29uY2F0IiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJwb2x5bGluZSIsInRhcmdldElkIiwiYWRkTWFya3VwIiwic2V0Iiwic2V0Um90YXRpb24iLCJzZXRTdHlsZSIsInVuZG8iLCJtYXJrdXAiLCJnZXRNYXJrdXAiLCJyZW1vdmVNYXJrdXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreatePolyline.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateRectangle.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateRectangle.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateRectangle: () => (/* binding */ CreateRectangle)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupRectangle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupRectangle */ \"./extensions/Markup/core/MarkupRectangle.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param rotation\n * @param style\n * @constructor\n */\nfunction CreateRectangle(editor, id, position, size, rotation, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-RECTANGLE', id);\n\n  this.selectOnExecution = false;\n  this.position = { x: position.x, y: position.y };\n  this.size = { x: size.x, y: size.y };\n  this.rotation = rotation;\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreateRectangle.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateRectangle.prototype.constructor = CreateRectangle;\n\nvar proto = CreateRectangle.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var rectangle = new _MarkupRectangle__WEBPACK_IMPORTED_MODULE_1__.MarkupRectangle(this.targetId, editor);\n\n  editor.addMarkup(rectangle);\n\n  rectangle.set(this.position, this.size);\n  rectangle.setRotation(this.rotation);\n  rectangle.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && this.editor.removeMarkup(markup);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVSZWN0YW5nbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUU2QjtBQUNXO0FBQ1Y7O0FBRXZDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0csZUFBZUEsQ0FBQ0MsTUFBTSxFQUFFQyxFQUFFLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLEtBQUssRUFBRTs7RUFFekVULG1EQUFVLENBQUNVLElBQUksQ0FBQyxJQUFJLEVBQUVOLE1BQU0sRUFBRSxrQkFBa0IsRUFBRUMsRUFBRSxDQUFDOztFQUVyRCxJQUFJLENBQUNNLGlCQUFpQixHQUFHLEtBQUs7RUFDOUIsSUFBSSxDQUFDTCxRQUFRLEdBQUcsRUFBQ00sQ0FBQyxFQUFFTixRQUFRLENBQUNNLENBQUMsRUFBRUMsQ0FBQyxFQUFFUCxRQUFRLENBQUNPLENBQUMsRUFBQztFQUM5QyxJQUFJLENBQUNOLElBQUksR0FBRyxFQUFDSyxDQUFDLEVBQUVMLElBQUksQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVOLElBQUksQ0FBQ00sQ0FBQyxFQUFDO0VBQ2xDLElBQUksQ0FBQ0wsUUFBUSxHQUFHQSxRQUFRO0VBQ3hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHUCx1REFBVSxDQUFDTyxLQUFLLENBQUM7QUFDbEM7O0FBRUFOLGVBQWUsQ0FBQ1csU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2hCLG1EQUFVLENBQUNjLFNBQVMsQ0FBQztBQUMvRFgsZUFBZSxDQUFDVyxTQUFTLENBQUNHLFdBQVcsR0FBR2QsZUFBZTs7QUFFdkQsSUFBSWUsS0FBSyxHQUFHZixlQUFlLENBQUNXLFNBQVM7O0FBRXJDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJZixNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNO0VBQ3hCLElBQUlnQixTQUFTLEdBQUcsSUFBSW5CLDZEQUFlLENBQUMsSUFBSSxDQUFDb0IsUUFBUSxFQUFFakIsTUFBTSxDQUFDOztFQUUxREEsTUFBTSxDQUFDa0IsU0FBUyxDQUFDRixTQUFTLENBQUM7O0VBRTNCQSxTQUFTLENBQUNHLEdBQUcsQ0FBQyxJQUFJLENBQUNqQixRQUFRLEVBQUUsSUFBSSxDQUFDQyxJQUFJLENBQUM7RUFDdkNhLFNBQVMsQ0FBQ0ksV0FBVyxDQUFDLElBQUksQ0FBQ2hCLFFBQVEsQ0FBQztFQUNwQ1ksU0FBUyxDQUFDSyxRQUFRLENBQUMsSUFBSSxDQUFDaEIsS0FBSyxDQUFDO0FBQ2xDLENBQUM7O0FBRURTLEtBQUssQ0FBQ1EsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlDLE1BQU0sR0FBRyxJQUFJLENBQUN2QixNQUFNLENBQUN3QixTQUFTLENBQUMsSUFBSSxDQUFDUCxRQUFRLENBQUM7RUFDakRNLE1BQU0sSUFBSSxJQUFJLENBQUN2QixNQUFNLENBQUN5QixZQUFZLENBQUNGLE1BQU0sQ0FBQztBQUM5QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZVJlY3RhbmdsZS5qcz83NWE3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBNYXJrdXBSZWN0YW5nbGUgfSBmcm9tICcuLi9NYXJrdXBSZWN0YW5nbGUnO1xuaW1wb3J0IHsgY2xvbmVTdHlsZSB9IGZyb20gJy4uL1N0eWxlVXRpbHMnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gcm90YXRpb25cbiAgICAgKiBAcGFyYW0gc3R5bGVcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gQ3JlYXRlUmVjdGFuZ2xlKGVkaXRvciwgaWQsIHBvc2l0aW9uLCBzaXplLCByb3RhdGlvbiwgc3R5bGUpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnQ1JFQVRFLVJFQ1RBTkdMRScsIGlkKTtcblxuICAgICAgICB0aGlzLnNlbGVjdE9uRXhlY3V0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7eDogcG9zaXRpb24ueCwgeTogcG9zaXRpb24ueX07XG4gICAgICAgIHRoaXMuc2l6ZSA9IHt4OiBzaXplLngsIHk6IHNpemUueX07XG4gICAgICAgIHRoaXMucm90YXRpb24gPSByb3RhdGlvbjtcbiAgICAgICAgdGhpcy5zdHlsZSA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgIH1cblxuICAgIENyZWF0ZVJlY3RhbmdsZS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBDcmVhdGVSZWN0YW5nbGUucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ3JlYXRlUmVjdGFuZ2xlO1xuXG4gICAgdmFyIHByb3RvID0gQ3JlYXRlUmVjdGFuZ2xlLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgIHZhciByZWN0YW5nbGUgPSBuZXcgTWFya3VwUmVjdGFuZ2xlKHRoaXMudGFyZ2V0SWQsIGVkaXRvcik7XG5cbiAgICAgICAgZWRpdG9yLmFkZE1hcmt1cChyZWN0YW5nbGUpO1xuXG4gICAgICAgIHJlY3RhbmdsZS5zZXQodGhpcy5wb3NpdGlvbiwgdGhpcy5zaXplKTtcbiAgICAgICAgcmVjdGFuZ2xlLnNldFJvdGF0aW9uKHRoaXMucm90YXRpb24pO1xuICAgICAgICByZWN0YW5nbGUuc2V0U3R5bGUodGhpcy5zdHlsZSk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgbWFya3VwID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRoaXMudGFyZ2V0SWQpO1xuICAgICAgICBtYXJrdXAgJiYgdGhpcy5lZGl0b3IucmVtb3ZlTWFya3VwKG1hcmt1cCk7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJNYXJrdXBSZWN0YW5nbGUiLCJjbG9uZVN0eWxlIiwiQ3JlYXRlUmVjdGFuZ2xlIiwiZWRpdG9yIiwiaWQiLCJwb3NpdGlvbiIsInNpemUiLCJyb3RhdGlvbiIsInN0eWxlIiwiY2FsbCIsInNlbGVjdE9uRXhlY3V0aW9uIiwieCIsInkiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsInJlY3RhbmdsZSIsInRhcmdldElkIiwiYWRkTWFya3VwIiwic2V0Iiwic2V0Um90YXRpb24iLCJzZXRTdHlsZSIsInVuZG8iLCJtYXJrdXAiLCJnZXRNYXJrdXAiLCJyZW1vdmVNYXJrdXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateRectangle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateStamp.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateStamp.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateStamp: () => (/* binding */ CreateStamp)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupStamp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupStamp */ \"./extensions/Markup/core/MarkupStamp.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n\n\n/**\n * @constructor\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param style\n * @param {string} svg\n */\n\nclass CreateStamp extends _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction {\n  constructor(editor, id, position, size, rotation, style, svgData) {\n    super(editor, 'CREATE-STAMP', id);\n\n    this.selectOnExecution = false;\n    this.position = { x: position.x, y: position.y };\n    this.size = { x: size.x, y: size.y };\n    this.rotation = rotation;\n    this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n    this.svgData = svgData;\n  }\n\n  redo() {\n    const stamp = new _MarkupStamp__WEBPACK_IMPORTED_MODULE_1__.MarkupStamp(this.targetId, this.editor, this.svgData);\n\n    this.editor.addMarkup(stamp);\n\n    stamp.setSize(this.position, this.size.x, this.size.y);\n    stamp.setRotation(this.rotation);\n    stamp.setStyle(this.style);\n  }\n\n  undo() {\n    const markup = this.editor.getMarkup(this.targetId);\n    this.editor.removeMarkup(markup);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVTdGFtcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRTZCO0FBQ0c7QUFDRjs7QUFFcEI7O0FBRW5CO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU1HLFdBQVcsU0FBU0gsbURBQVUsQ0FBQztFQUNqQ0ksV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxFQUFFLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFO0lBQzlELEtBQUssQ0FBQ04sTUFBTSxFQUFFLGNBQWMsRUFBRUMsRUFBRSxDQUFDOztJQUVqQyxJQUFJLENBQUNNLGlCQUFpQixHQUFHLEtBQUs7SUFDOUIsSUFBSSxDQUFDTCxRQUFRLEdBQUcsRUFBQ00sQ0FBQyxFQUFFTixRQUFRLENBQUNNLENBQUMsRUFBRUMsQ0FBQyxFQUFFUCxRQUFRLENBQUNPLENBQUMsRUFBQztJQUM5QyxJQUFJLENBQUNOLElBQUksR0FBRyxFQUFDSyxDQUFDLEVBQUVMLElBQUksQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVOLElBQUksQ0FBQ00sQ0FBQyxFQUFDO0lBQ2xDLElBQUksQ0FBQ0wsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHUix1REFBVSxDQUFDUSxLQUFLLENBQUM7SUFDOUIsSUFBSSxDQUFDQyxPQUFPLEdBQUdBLE9BQU87RUFDMUI7O0VBRUFJLElBQUlBLENBQUEsRUFBRztJQUNILE1BQU1DLEtBQUssR0FBRyxJQUFJZixxREFBVyxDQUFDLElBQUksQ0FBQ2dCLFFBQVEsRUFBRSxJQUFJLENBQUNaLE1BQU0sRUFBRSxJQUFJLENBQUNNLE9BQU8sQ0FBQzs7SUFFdkUsSUFBSSxDQUFDTixNQUFNLENBQUNhLFNBQVMsQ0FBQ0YsS0FBSyxDQUFDOztJQUU1QkEsS0FBSyxDQUFDRyxPQUFPLENBQUMsSUFBSSxDQUFDWixRQUFRLEVBQUUsSUFBSSxDQUFDQyxJQUFJLENBQUNLLENBQUMsRUFBRSxJQUFJLENBQUNMLElBQUksQ0FBQ00sQ0FBQyxDQUFDO0lBQ3RERSxLQUFLLENBQUNJLFdBQVcsQ0FBQyxJQUFJLENBQUNYLFFBQVEsQ0FBQztJQUNoQ08sS0FBSyxDQUFDSyxRQUFRLENBQUMsSUFBSSxDQUFDWCxLQUFLLENBQUM7RUFDOUI7O0VBRUFZLElBQUlBLENBQUEsRUFBRztJQUNILE1BQU1DLE1BQU0sR0FBRyxJQUFJLENBQUNsQixNQUFNLENBQUNtQixTQUFTLENBQUMsSUFBSSxDQUFDUCxRQUFRLENBQUM7SUFDbkQsSUFBSSxDQUFDWixNQUFNLENBQUNvQixZQUFZLENBQUNGLE1BQU0sQ0FBQztFQUNwQztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0NyZWF0ZVN0YW1wLmpzP2MxMmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcbmltcG9ydCB7IE1hcmt1cFN0YW1wIH0gZnJvbSAnLi4vTWFya3VwU3RhbXAnO1xuaW1wb3J0IHsgY2xvbmVTdHlsZSB9IGZyb20gJy4uL1N0eWxlVXRpbHMnO1xuXG5leHBvcnQgeyBDcmVhdGVTdGFtcCB9O1xuXG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGlkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gc3R5bGVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc3ZnXG4gICAgICovXG5cbmNsYXNzIENyZWF0ZVN0YW1wIGV4dGVuZHMgRWRpdEFjdGlvbiB7XG4gICAgY29uc3RydWN0b3IoZWRpdG9yLCBpZCwgcG9zaXRpb24sIHNpemUsIHJvdGF0aW9uLCBzdHlsZSwgc3ZnRGF0YSkge1xuICAgICAgICBzdXBlcihlZGl0b3IsICdDUkVBVEUtU1RBTVAnLCBpZCk7XG5cbiAgICAgICAgdGhpcy5zZWxlY3RPbkV4ZWN1dGlvbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBvc2l0aW9uID0ge3g6IHBvc2l0aW9uLngsIHk6IHBvc2l0aW9uLnl9O1xuICAgICAgICB0aGlzLnNpemUgPSB7eDogc2l6ZS54LCB5OiBzaXplLnl9O1xuICAgICAgICB0aGlzLnJvdGF0aW9uID0gcm90YXRpb247XG4gICAgICAgIHRoaXMuc3R5bGUgPSBjbG9uZVN0eWxlKHN0eWxlKTtcbiAgICAgICAgdGhpcy5zdmdEYXRhID0gc3ZnRGF0YTtcbiAgICB9XG5cbiAgICByZWRvKCkge1xuICAgICAgICBjb25zdCBzdGFtcCA9IG5ldyBNYXJrdXBTdGFtcCh0aGlzLnRhcmdldElkLCB0aGlzLmVkaXRvciwgdGhpcy5zdmdEYXRhKTtcblxuICAgICAgICB0aGlzLmVkaXRvci5hZGRNYXJrdXAoc3RhbXApO1xuXG4gICAgICAgIHN0YW1wLnNldFNpemUodGhpcy5wb3NpdGlvbiwgdGhpcy5zaXplLngsIHRoaXMuc2l6ZS55KTtcbiAgICAgICAgc3RhbXAuc2V0Um90YXRpb24odGhpcy5yb3RhdGlvbik7XG4gICAgICAgIHN0YW1wLnNldFN0eWxlKHRoaXMuc3R5bGUpO1xuICAgIH1cblxuICAgIHVuZG8oKSB7XG4gICAgICAgIGNvbnN0IG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgdGhpcy5lZGl0b3IucmVtb3ZlTWFya3VwKG1hcmt1cCk7XG4gICAgfVxufVxuXG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIk1hcmt1cFN0YW1wIiwiY2xvbmVTdHlsZSIsIkNyZWF0ZVN0YW1wIiwiY29uc3RydWN0b3IiLCJlZGl0b3IiLCJpZCIsInBvc2l0aW9uIiwic2l6ZSIsInJvdGF0aW9uIiwic3R5bGUiLCJzdmdEYXRhIiwic2VsZWN0T25FeGVjdXRpb24iLCJ4IiwieSIsInJlZG8iLCJzdGFtcCIsInRhcmdldElkIiwiYWRkTWFya3VwIiwic2V0U2l6ZSIsInNldFJvdGF0aW9uIiwic2V0U3R5bGUiLCJ1bmRvIiwibWFya3VwIiwiZ2V0TWFya3VwIiwicmVtb3ZlTWFya3VwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateStamp.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/CreateText.js":
/*!***********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/CreateText.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateText: () => (/* binding */ CreateText)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _MarkupText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupText */ \"./extensions/Markup/core/MarkupText.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @param id\n * @param position\n * @param size\n * @param text\n * @param style\n * @constructor\n */\nfunction CreateText(editor, id, position, size, text, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'CREATE-TEXT', id);\n\n  this.text = text;\n  this.position = { x: position.x, y: position.y };\n  this.size = { x: size.x, y: size.y };\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n}\n\nCreateText.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nCreateText.prototype.constructor = CreateText;\n\nvar proto = CreateText.prototype;\n\nproto.redo = function () {\n\n  var editor = this.editor;\n  var position = this.position;\n  var size = this.size;\n\n  var text = new _MarkupText__WEBPACK_IMPORTED_MODULE_1__.MarkupText(this.targetId, editor, size);\n\n  editor.addMarkup(text);\n\n  text.set(position, size, this.text);\n  text.setStyle(this.style);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  if (markup) {\n    this.editor.removeMarkup(markup);\n    markup.destroy();\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVUZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTs7QUFFNkI7QUFDQztBQUNBOztBQUV2QztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNHLFVBQVVBLENBQUNDLE1BQU0sRUFBRUMsRUFBRSxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUc7O0VBRWpFVCxtREFBVSxDQUFDVSxJQUFJLENBQUMsSUFBSSxFQUFFTixNQUFNLEVBQUUsYUFBYSxFQUFFQyxFQUFFLENBQUM7O0VBRWhELElBQUksQ0FBQ0csSUFBSSxHQUFHQSxJQUFJO0VBQ2hCLElBQUksQ0FBQ0YsUUFBUSxHQUFHLEVBQUNLLENBQUMsRUFBRUwsUUFBUSxDQUFDSyxDQUFDLEVBQUVDLENBQUMsRUFBRU4sUUFBUSxDQUFDTSxDQUFDLEVBQUM7RUFDOUMsSUFBSSxDQUFDTCxJQUFJLEdBQUcsRUFBQ0ksQ0FBQyxFQUFFSixJQUFJLENBQUNJLENBQUMsRUFBRUMsQ0FBQyxFQUFFTCxJQUFJLENBQUNLLENBQUMsRUFBQztFQUNsQyxJQUFJLENBQUNILEtBQUssR0FBR1AsdURBQVUsQ0FBQ08sS0FBSyxDQUFDO0FBQ2xDOztBQUVBTixVQUFVLENBQUNVLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNmLG1EQUFVLENBQUNhLFNBQVMsQ0FBQztBQUMxRFYsVUFBVSxDQUFDVSxTQUFTLENBQUNHLFdBQVcsR0FBR2IsVUFBVTs7QUFFN0MsSUFBSWMsS0FBSyxHQUFHZCxVQUFVLENBQUNVLFNBQVM7O0FBRWhDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFZOztFQUVyQixJQUFJZCxNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNO0VBQ3hCLElBQUlFLFFBQVEsR0FBRyxJQUFJLENBQUNBLFFBQVE7RUFDNUIsSUFBSUMsSUFBSSxHQUFHLElBQUksQ0FBQ0EsSUFBSTs7RUFFcEIsSUFBSUMsSUFBSSxHQUFHLElBQUlQLG1EQUFVLENBQUMsSUFBSSxDQUFDa0IsUUFBUSxFQUFFZixNQUFNLEVBQUVHLElBQUksQ0FBQzs7RUFFdERILE1BQU0sQ0FBQ2dCLFNBQVMsQ0FBQ1osSUFBSSxDQUFDOztFQUV0QkEsSUFBSSxDQUFDYSxHQUFHLENBQUNmLFFBQVEsRUFBRUMsSUFBSSxFQUFFLElBQUksQ0FBQ0MsSUFBSSxDQUFDO0VBQ25DQSxJQUFJLENBQUNjLFFBQVEsQ0FBQyxJQUFJLENBQUNiLEtBQUssQ0FBQztBQUM3QixDQUFDOztBQUVEUSxLQUFLLENBQUNNLElBQUksR0FBRyxZQUFZOztFQUVyQixJQUFJQyxNQUFNLEdBQUcsSUFBSSxDQUFDcEIsTUFBTSxDQUFDcUIsU0FBUyxDQUFDLElBQUksQ0FBQ04sUUFBUSxDQUFDO0VBQ2pELElBQUlLLE1BQU0sRUFBRTtJQUNSLElBQUksQ0FBQ3BCLE1BQU0sQ0FBQ3NCLFlBQVksQ0FBQ0YsTUFBTSxDQUFDO0lBQ2hDQSxNQUFNLENBQUNHLE9BQU8sQ0FBQyxDQUFDO0VBQ3BCO0FBQ0osQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9DcmVhdGVUZXh0LmpzPzA2MzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcbmltcG9ydCB7IE1hcmt1cFRleHQgfSBmcm9tICcuLi9NYXJrdXBUZXh0JztcbmltcG9ydCB7IGNsb25lU3R5bGUgfSBmcm9tICcuLi9TdHlsZVV0aWxzJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBpZFxuICAgICAqIEBwYXJhbSBwb3NpdGlvblxuICAgICAqIEBwYXJhbSBzaXplXG4gICAgICogQHBhcmFtIHRleHRcbiAgICAgKiBAcGFyYW0gc3R5bGVcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gQ3JlYXRlVGV4dChlZGl0b3IsIGlkLCBwb3NpdGlvbiwgc2l6ZSwgdGV4dCwgc3R5bGUgKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0NSRUFURS1URVhUJywgaWQpO1xuXG4gICAgICAgIHRoaXMudGV4dCA9IHRleHQ7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7eDogcG9zaXRpb24ueCwgeTogcG9zaXRpb24ueX07XG4gICAgICAgIHRoaXMuc2l6ZSA9IHt4OiBzaXplLngsIHk6IHNpemUueX07XG4gICAgICAgIHRoaXMuc3R5bGUgPSBjbG9uZVN0eWxlKHN0eWxlKTtcbiAgICB9XG5cbiAgICBDcmVhdGVUZXh0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIENyZWF0ZVRleHQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ3JlYXRlVGV4dDtcblxuICAgIHZhciBwcm90byA9IENyZWF0ZVRleHQucHJvdG90eXBlO1xuXG4gICAgcHJvdG8ucmVkbyA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICB2YXIgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgIHZhciBwb3NpdGlvbiA9IHRoaXMucG9zaXRpb247XG4gICAgICAgIHZhciBzaXplID0gdGhpcy5zaXplO1xuXG4gICAgICAgIHZhciB0ZXh0ID0gbmV3IE1hcmt1cFRleHQodGhpcy50YXJnZXRJZCwgZWRpdG9yLCBzaXplKTtcblxuICAgICAgICBlZGl0b3IuYWRkTWFya3VwKHRleHQpO1xuXG4gICAgICAgIHRleHQuc2V0KHBvc2l0aW9uLCBzaXplLCB0aGlzLnRleHQpO1xuICAgICAgICB0ZXh0LnNldFN0eWxlKHRoaXMuc3R5bGUpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHZhciBtYXJrdXAgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG4gICAgICAgIGlmIChtYXJrdXApIHtcbiAgICAgICAgICAgIHRoaXMuZWRpdG9yLnJlbW92ZU1hcmt1cChtYXJrdXApO1xuICAgICAgICAgICAgbWFya3VwLmRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgIH07XG5cblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJNYXJrdXBUZXh0IiwiY2xvbmVTdHlsZSIsIkNyZWF0ZVRleHQiLCJlZGl0b3IiLCJpZCIsInBvc2l0aW9uIiwic2l6ZSIsInRleHQiLCJzdHlsZSIsImNhbGwiLCJ4IiwieSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwidGFyZ2V0SWQiLCJhZGRNYXJrdXAiLCJzZXQiLCJzZXRTdHlsZSIsInVuZG8iLCJtYXJrdXAiLCJnZXRNYXJrdXAiLCJyZW1vdmVNYXJrdXAiLCJkZXN0cm95Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/CreateText.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteArrow.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteArrow.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteArrow: () => (/* binding */ DeleteArrow)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateArrow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateArrow */ \"./extensions/Markup/core/edit-actions/CreateArrow.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param arrow\n * @constructor\n */\nfunction DeleteArrow(editor, arrow) {\n\n  // Confusing naming here. Arrow.tail is the starting point of the arrow,\n  // and arrow.head is the final point. In CreateArrow the head argument\n  // is the first point of the arrow and the tail argument is the second\n  // point of the argument. So construct CreateArrow with the tail before\n  // the head.\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-ARROW', arrow.id);\n  this.createArrow = new _CreateArrow__WEBPACK_IMPORTED_MODULE_1__.CreateArrow(\n    editor,\n    arrow.id,\n    arrow.tail,\n    arrow.head,\n    arrow.getStyle());\n}\n\nDeleteArrow.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteArrow.prototype.constructor = DeleteArrow;\n\nvar proto = DeleteArrow.prototype;\n\nproto.redo = function () {\n\n  this.createArrow.undo();\n};\n\nproto.undo = function () {\n\n  this.createArrow.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVBcnJvdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFNkI7QUFDRTs7QUFFeEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0UsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLEVBQUU7O0VBRXZDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQUosbURBQVUsQ0FBQ0ssSUFBSSxDQUFDLElBQUksRUFBRUYsTUFBTSxFQUFFLGNBQWMsRUFBRUMsS0FBSyxDQUFDRSxFQUFFLENBQUM7RUFDdkQsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSU4scURBQVc7SUFDOUJFLE1BQU07SUFDTkMsS0FBSyxDQUFDRSxFQUFFO0lBQ1JGLEtBQUssQ0FBQ0ksSUFBSTtJQUNWSixLQUFLLENBQUNLLElBQUk7SUFDVkwsS0FBSyxDQUFDTSxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ3pCOztBQUVBUixXQUFXLENBQUNTLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNiLG1EQUFVLENBQUNXLFNBQVMsQ0FBQztBQUMzRFQsV0FBVyxDQUFDUyxTQUFTLENBQUNHLFdBQVcsR0FBR1osV0FBVzs7QUFFL0MsSUFBSWEsS0FBSyxHQUFHYixXQUFXLENBQUNTLFNBQVM7O0FBRWpDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNULFdBQVcsQ0FBQ1UsSUFBSSxDQUFDLENBQUM7QUFDM0IsQ0FBQzs7QUFFREYsS0FBSyxDQUFDRSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDVixXQUFXLENBQUNTLElBQUksQ0FBQyxDQUFDO0FBQzNCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvRGVsZXRlQXJyb3cuanM/ZDM1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuaW1wb3J0IHsgQ3JlYXRlQXJyb3cgfSBmcm9tICcuL0NyZWF0ZUFycm93JztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBhcnJvd1xuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBEZWxldGVBcnJvdyhlZGl0b3IsIGFycm93KSB7XG5cbiAgICAgICAgLy8gQ29uZnVzaW5nIG5hbWluZyBoZXJlLiBBcnJvdy50YWlsIGlzIHRoZSBzdGFydGluZyBwb2ludCBvZiB0aGUgYXJyb3csXG4gICAgICAgIC8vIGFuZCBhcnJvdy5oZWFkIGlzIHRoZSBmaW5hbCBwb2ludC4gSW4gQ3JlYXRlQXJyb3cgdGhlIGhlYWQgYXJndW1lbnRcbiAgICAgICAgLy8gaXMgdGhlIGZpcnN0IHBvaW50IG9mIHRoZSBhcnJvdyBhbmQgdGhlIHRhaWwgYXJndW1lbnQgaXMgdGhlIHNlY29uZFxuICAgICAgICAvLyBwb2ludCBvZiB0aGUgYXJndW1lbnQuIFNvIGNvbnN0cnVjdCBDcmVhdGVBcnJvdyB3aXRoIHRoZSB0YWlsIGJlZm9yZVxuICAgICAgICAvLyB0aGUgaGVhZC5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0RFTEVURS1BUlJPVycsIGFycm93LmlkKTtcbiAgICAgICAgdGhpcy5jcmVhdGVBcnJvdyA9IG5ldyBDcmVhdGVBcnJvdyhcbiAgICAgICAgICAgIGVkaXRvcixcbiAgICAgICAgICAgIGFycm93LmlkLFxuICAgICAgICAgICAgYXJyb3cudGFpbCxcbiAgICAgICAgICAgIGFycm93LmhlYWQsXG4gICAgICAgICAgICBhcnJvdy5nZXRTdHlsZSgpKTtcbiAgICB9XG5cbiAgICBEZWxldGVBcnJvdy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBEZWxldGVBcnJvdy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBEZWxldGVBcnJvdztcblxuICAgIHZhciBwcm90byA9IERlbGV0ZUFycm93LnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZUFycm93LnVuZG8oKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuY3JlYXRlQXJyb3cucmVkbygpO1xuICAgIH07XG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIkNyZWF0ZUFycm93IiwiRGVsZXRlQXJyb3ciLCJlZGl0b3IiLCJhcnJvdyIsImNhbGwiLCJpZCIsImNyZWF0ZUFycm93IiwidGFpbCIsImhlYWQiLCJnZXRTdHlsZSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwidW5kbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteArrow.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteCallout.js":
/*!**************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteCallout.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteCallout: () => (/* binding */ DeleteCallout)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateCallout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateCallout */ \"./extensions/Markup/core/edit-actions/CreateCallout.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param text\n * @constructor\n */\nfunction DeleteCallout(editor, callout) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-CALLOUT', callout.id);\n\n  var position = { x: callout.position.x, y: callout.position.y };\n  var size = { x: callout.size.x, y: callout.size.y };\n\n  this.createCallout = new _CreateCallout__WEBPACK_IMPORTED_MODULE_1__.CreateCallout(\n    editor,\n    callout.id,\n    position,\n    size,\n    callout.getText(),\n    callout.getStyle(),\n    callout.isFrameUsed);\n}\n\nDeleteCallout.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteCallout.prototype.constructor = DeleteCallout;\n\nvar proto = DeleteCallout.prototype;\n\nproto.redo = function () {\n\n  this.createCallout.undo();\n};\n\nproto.undo = function () {\n\n  this.createCallout.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVDYWxsb3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhOztBQUU2QjtBQUNNOztBQUU1QztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTRSxhQUFhQSxDQUFDQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTs7RUFFM0NKLG1EQUFVLENBQUNLLElBQUksQ0FBQyxJQUFJLEVBQUVGLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRUMsT0FBTyxDQUFDRSxFQUFFLENBQUM7O0VBRTNELElBQUlDLFFBQVEsR0FBRyxFQUFDQyxDQUFDLEVBQUVKLE9BQU8sQ0FBQ0csUUFBUSxDQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRUwsT0FBTyxDQUFDRyxRQUFRLENBQUNFLENBQUMsRUFBQztFQUM3RCxJQUFJQyxJQUFJLEdBQUcsRUFBQ0YsQ0FBQyxFQUFFSixPQUFPLENBQUNNLElBQUksQ0FBQ0YsQ0FBQyxFQUFFQyxDQUFDLEVBQUVMLE9BQU8sQ0FBQ00sSUFBSSxDQUFDRCxDQUFDLEVBQUM7O0VBRWpELElBQUksQ0FBQ0UsYUFBYSxHQUFHLElBQUlWLHlEQUFhO0lBQ2xDRSxNQUFNO0lBQ05DLE9BQU8sQ0FBQ0UsRUFBRTtJQUNWQyxRQUFRO0lBQ1JHLElBQUk7SUFDSk4sT0FBTyxDQUFDUSxPQUFPLENBQUMsQ0FBQztJQUNqQlIsT0FBTyxDQUFDUyxRQUFRLENBQUMsQ0FBQztJQUNsQlQsT0FBTyxDQUFDVSxXQUFXLENBQUM7QUFDNUI7O0FBRUFaLGFBQWEsQ0FBQ2EsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2pCLG1EQUFVLENBQUNlLFNBQVMsQ0FBQztBQUM3RGIsYUFBYSxDQUFDYSxTQUFTLENBQUNHLFdBQVcsR0FBR2hCLGFBQWE7O0FBRW5ELElBQUlpQixLQUFLLEdBQUdqQixhQUFhLENBQUNhLFNBQVM7O0FBRW5DSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNULGFBQWEsQ0FBQ1UsSUFBSSxDQUFDLENBQUM7QUFDN0IsQ0FBQzs7QUFFREYsS0FBSyxDQUFDRSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDVixhQUFhLENBQUNTLElBQUksQ0FBQyxDQUFDO0FBQzdCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvRGVsZXRlQ2FsbG91dC5qcz8xN2RkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBDcmVhdGVDYWxsb3V0IH0gZnJvbSAnLi9DcmVhdGVDYWxsb3V0JztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSB0ZXh0XG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIERlbGV0ZUNhbGxvdXQoZWRpdG9yLCBjYWxsb3V0KSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0RFTEVURS1DQUxMT1VUJywgY2FsbG91dC5pZCk7XG5cbiAgICAgICAgdmFyIHBvc2l0aW9uID0ge3g6IGNhbGxvdXQucG9zaXRpb24ueCwgeTogY2FsbG91dC5wb3NpdGlvbi55fTtcbiAgICAgICAgdmFyIHNpemUgPSB7eDogY2FsbG91dC5zaXplLngsIHk6IGNhbGxvdXQuc2l6ZS55fTtcblxuICAgICAgICB0aGlzLmNyZWF0ZUNhbGxvdXQgPSBuZXcgQ3JlYXRlQ2FsbG91dChcbiAgICAgICAgICAgIGVkaXRvcixcbiAgICAgICAgICAgIGNhbGxvdXQuaWQsXG4gICAgICAgICAgICBwb3NpdGlvbixcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgICAgICBjYWxsb3V0LmdldFRleHQoKSxcbiAgICAgICAgICAgIGNhbGxvdXQuZ2V0U3R5bGUoKSxcbiAgICAgICAgICAgIGNhbGxvdXQuaXNGcmFtZVVzZWQpO1xuICAgIH1cblxuICAgIERlbGV0ZUNhbGxvdXQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgRGVsZXRlQ2FsbG91dC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBEZWxldGVDYWxsb3V0O1xuXG4gICAgdmFyIHByb3RvID0gRGVsZXRlQ2FsbG91dC5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVDYWxsb3V0LnVuZG8oKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuY3JlYXRlQ2FsbG91dC5yZWRvKCk7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJDcmVhdGVDYWxsb3V0IiwiRGVsZXRlQ2FsbG91dCIsImVkaXRvciIsImNhbGxvdXQiLCJjYWxsIiwiaWQiLCJwb3NpdGlvbiIsIngiLCJ5Iiwic2l6ZSIsImNyZWF0ZUNhbGxvdXQiLCJnZXRUZXh0IiwiZ2V0U3R5bGUiLCJpc0ZyYW1lVXNlZCIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwidW5kbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteCallout.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteCircle.js":
/*!*************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteCircle.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteCircle: () => (/* binding */ DeleteCircle)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateCircle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateCircle */ \"./extensions/Markup/core/edit-actions/CreateCircle.js\");\n\n\n\n\n\n/**\n * Markup delete circle action.\n *\n * Implements an {@link Autodesk.Viewing.Extensions.Markups.Core.EditAction|EditAction}\n * for deleting a Circle {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n * Included in documentation as an example of how to create\n * a specific EditAction that deals with Markup deletion.\n * Developers are encourage to look into this class's source code and copy\n * as much code as they need. Find link to source code below.\n *\n * @tutorial feature_markup\n * @constructor\n * @memberof Autodesk.Viewing.Extensions.Markups.Core\n * @extends Autodesk.Viewing.Extensions.Markups.Core.EditAction\n *\n * @param editor\n * @param circle\n */\nfunction DeleteCircle(editor, circle) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-CIRCLE', circle.id);\n  this.createCircle = new _CreateCircle__WEBPACK_IMPORTED_MODULE_1__.CreateCircle(\n    editor,\n    circle.id,\n    circle.position,\n    circle.size,\n    circle.rotation,\n    circle.getStyle());\n}\n\nDeleteCircle.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteCircle.prototype.constructor = DeleteCircle;\n\nvar proto = DeleteCircle.prototype;\n\nproto.redo = function () {\n\n  this.createCircle.undo();\n};\n\nproto.undo = function () {\n\n  this.createCircle.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVDaXJjbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRTZCO0FBQ0k7O0FBRTFDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNFLFlBQVlBLENBQUNDLE1BQU0sRUFBRUMsTUFBTSxFQUFFOztFQUV6Q0osbURBQVUsQ0FBQ0ssSUFBSSxDQUFDLElBQUksRUFBRUYsTUFBTSxFQUFFLGVBQWUsRUFBRUMsTUFBTSxDQUFDRSxFQUFFLENBQUM7RUFDekQsSUFBSSxDQUFDQyxZQUFZLEdBQUcsSUFBSU4sdURBQVk7SUFDaENFLE1BQU07SUFDTkMsTUFBTSxDQUFDRSxFQUFFO0lBQ1RGLE1BQU0sQ0FBQ0ksUUFBUTtJQUNmSixNQUFNLENBQUNLLElBQUk7SUFDWEwsTUFBTSxDQUFDTSxRQUFRO0lBQ2ZOLE1BQU0sQ0FBQ08sUUFBUSxDQUFDLENBQUMsQ0FBQztBQUMxQjs7QUFFQVQsWUFBWSxDQUFDVSxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDZCxtREFBVSxDQUFDWSxTQUFTLENBQUM7QUFDNURWLFlBQVksQ0FBQ1UsU0FBUyxDQUFDRyxXQUFXLEdBQUdiLFlBQVk7O0FBRWpELElBQUljLEtBQUssR0FBR2QsWUFBWSxDQUFDVSxTQUFTOztBQUVsQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDVixZQUFZLENBQUNXLElBQUksQ0FBQyxDQUFDO0FBQzVCLENBQUM7O0FBRURGLEtBQUssQ0FBQ0UsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUksQ0FBQ1gsWUFBWSxDQUFDVSxJQUFJLENBQUMsQ0FBQztBQUM1QixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0RlbGV0ZUNpcmNsZS5qcz82MDI0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBDcmVhdGVDaXJjbGUgfSBmcm9tICcuL0NyZWF0ZUNpcmNsZSc7XG5cbiAgICAvKipcbiAgICAgKiBNYXJrdXAgZGVsZXRlIGNpcmNsZSBhY3Rpb24uXG4gICAgICpcbiAgICAgKiBJbXBsZW1lbnRzIGFuIHtAbGluayBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLkVkaXRBY3Rpb258RWRpdEFjdGlvbn1cbiAgICAgKiBmb3IgZGVsZXRpbmcgYSBDaXJjbGUge0BsaW5rIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuTWFya3VwfE1hcmt1cH0uXG4gICAgICogSW5jbHVkZWQgaW4gZG9jdW1lbnRhdGlvbiBhcyBhbiBleGFtcGxlIG9mIGhvdyB0byBjcmVhdGVcbiAgICAgKiBhIHNwZWNpZmljIEVkaXRBY3Rpb24gdGhhdCBkZWFscyB3aXRoIE1hcmt1cCBkZWxldGlvbi5cbiAgICAgKiBEZXZlbG9wZXJzIGFyZSBlbmNvdXJhZ2UgdG8gbG9vayBpbnRvIHRoaXMgY2xhc3MncyBzb3VyY2UgY29kZSBhbmQgY29weVxuICAgICAqIGFzIG11Y2ggY29kZSBhcyB0aGV5IG5lZWQuIEZpbmQgbGluayB0byBzb3VyY2UgY29kZSBiZWxvdy5cbiAgICAgKlxuICAgICAqIEB0dXRvcmlhbCBmZWF0dXJlX21hcmt1cFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBtZW1iZXJvZiBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlXG4gICAgICogQGV4dGVuZHMgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5FZGl0QWN0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGNpcmNsZVxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBEZWxldGVDaXJjbGUoZWRpdG9yLCBjaXJjbGUpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnREVMRVRFLUNJUkNMRScsIGNpcmNsZS5pZCk7XG4gICAgICAgIHRoaXMuY3JlYXRlQ2lyY2xlID0gbmV3IENyZWF0ZUNpcmNsZShcbiAgICAgICAgICAgIGVkaXRvcixcbiAgICAgICAgICAgIGNpcmNsZS5pZCxcbiAgICAgICAgICAgIGNpcmNsZS5wb3NpdGlvbixcbiAgICAgICAgICAgIGNpcmNsZS5zaXplLFxuICAgICAgICAgICAgY2lyY2xlLnJvdGF0aW9uLFxuICAgICAgICAgICAgY2lyY2xlLmdldFN0eWxlKCkpO1xuICAgIH1cblxuICAgIERlbGV0ZUNpcmNsZS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBEZWxldGVDaXJjbGUucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gRGVsZXRlQ2lyY2xlO1xuXG4gICAgdmFyIHByb3RvID0gRGVsZXRlQ2lyY2xlLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZUNpcmNsZS51bmRvKCk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZUNpcmNsZS5yZWRvKCk7XG4gICAgfTtcblxuXG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIkNyZWF0ZUNpcmNsZSIsIkRlbGV0ZUNpcmNsZSIsImVkaXRvciIsImNpcmNsZSIsImNhbGwiLCJpZCIsImNyZWF0ZUNpcmNsZSIsInBvc2l0aW9uIiwic2l6ZSIsInJvdGF0aW9uIiwiZ2V0U3R5bGUiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsInVuZG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteCircle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteCloud.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteCloud.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteCloud: () => (/* binding */ DeleteCloud)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateCloud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateCloud */ \"./extensions/Markup/core/edit-actions/CreateCloud.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param cloud\n * @constructor\n */\nfunction DeleteCloud(editor, cloud) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-CLOUD', cloud.id);\n  this.createCloud = new _CreateCloud__WEBPACK_IMPORTED_MODULE_1__.CreateCloud(\n    editor,\n    cloud.id,\n    cloud.position,\n    cloud.size,\n    cloud.rotation,\n    cloud.getStyle());\n}\n\nDeleteCloud.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteCloud.prototype.constructor = DeleteCloud;\n\nvar proto = DeleteCloud.prototype;\n\nproto.redo = function () {\n\n  this.createCloud.undo();\n};\n\nproto.undo = function () {\n\n  this.createCloud.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVDbG91ZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFNkI7QUFDRTs7QUFFeEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0UsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLEVBQUU7O0VBRXZDSixtREFBVSxDQUFDSyxJQUFJLENBQUMsSUFBSSxFQUFFRixNQUFNLEVBQUUsY0FBYyxFQUFFQyxLQUFLLENBQUNFLEVBQUUsQ0FBQztFQUN2RCxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJTixxREFBVztJQUM5QkUsTUFBTTtJQUNOQyxLQUFLLENBQUNFLEVBQUU7SUFDUkYsS0FBSyxDQUFDSSxRQUFRO0lBQ2RKLEtBQUssQ0FBQ0ssSUFBSTtJQUNWTCxLQUFLLENBQUNNLFFBQVE7SUFDZE4sS0FBSyxDQUFDTyxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ3pCOztBQUVBVCxXQUFXLENBQUNVLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNkLG1EQUFVLENBQUNZLFNBQVMsQ0FBQztBQUMzRFYsV0FBVyxDQUFDVSxTQUFTLENBQUNHLFdBQVcsR0FBR2IsV0FBVzs7QUFFL0MsSUFBSWMsS0FBSyxHQUFHZCxXQUFXLENBQUNVLFNBQVM7O0FBRWpDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNWLFdBQVcsQ0FBQ1csSUFBSSxDQUFDLENBQUM7QUFDM0IsQ0FBQzs7QUFFREYsS0FBSyxDQUFDRSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDWCxXQUFXLENBQUNVLElBQUksQ0FBQyxDQUFDO0FBQzNCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvRGVsZXRlQ2xvdWQuanM/ZjNiYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuaW1wb3J0IHsgQ3JlYXRlQ2xvdWQgfSBmcm9tICcuL0NyZWF0ZUNsb3VkJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBjbG91ZFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBEZWxldGVDbG91ZChlZGl0b3IsIGNsb3VkKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0RFTEVURS1DTE9VRCcsIGNsb3VkLmlkKTtcbiAgICAgICAgdGhpcy5jcmVhdGVDbG91ZCA9IG5ldyBDcmVhdGVDbG91ZChcbiAgICAgICAgICAgIGVkaXRvcixcbiAgICAgICAgICAgIGNsb3VkLmlkLFxuICAgICAgICAgICAgY2xvdWQucG9zaXRpb24sXG4gICAgICAgICAgICBjbG91ZC5zaXplLFxuICAgICAgICAgICAgY2xvdWQucm90YXRpb24sXG4gICAgICAgICAgICBjbG91ZC5nZXRTdHlsZSgpKTtcbiAgICB9XG5cbiAgICBEZWxldGVDbG91ZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBEZWxldGVDbG91ZC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBEZWxldGVDbG91ZDtcblxuICAgIHZhciBwcm90byA9IERlbGV0ZUNsb3VkLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZUNsb3VkLnVuZG8oKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuY3JlYXRlQ2xvdWQucmVkbygpO1xuICAgIH07XG5cbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiQ3JlYXRlQ2xvdWQiLCJEZWxldGVDbG91ZCIsImVkaXRvciIsImNsb3VkIiwiY2FsbCIsImlkIiwiY3JlYXRlQ2xvdWQiLCJwb3NpdGlvbiIsInNpemUiLCJyb3RhdGlvbiIsImdldFN0eWxlIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJ1bmRvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteCloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteDimension.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteDimension.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteDimension: () => (/* binding */ DeleteDimension)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateDimension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateDimension */ \"./extensions/Markup/core/edit-actions/CreateDimension.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param dimension\n * @constructor\n */\nfunction DeleteDimension(editor, dimension) {\n\n  // Confusing naming here. Dimension.secondAnchor is the starting point of the dimension,\n  // and dimension.firstAnchor is the final point. In CreateDimension the firstAnchor argument\n  // is the first point of the dimension and the secondAnchor argument is the second\n  // point of the argument. So construct CreateDimension with the secondAnchor before\n  // the firstAnchor.\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-DIMENSION', dimension.id);\n  this.createDimension = new _CreateDimension__WEBPACK_IMPORTED_MODULE_1__.CreateDimension(\n    editor,\n    dimension.id,\n    dimension.secondAnchor,\n    dimension.firstAnchor,\n    dimension.currentText,\n    dimension.getStyle());\n}\n\nDeleteDimension.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteDimension.prototype.constructor = DeleteDimension;\n\nvar proto = DeleteDimension.prototype;\n\nproto.redo = function () {\n\n  this.createDimension.undo();\n};\n\nproto.undo = function () {\n\n  this.createDimension.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVEaW1lbnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRTZCO0FBQ1U7O0FBRWhEO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNFLGVBQWVBLENBQUNDLE1BQU0sRUFBRUMsU0FBUyxFQUFFOztFQUUvQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0FKLG1EQUFVLENBQUNLLElBQUksQ0FBQyxJQUFJLEVBQUVGLE1BQU0sRUFBRSxrQkFBa0IsRUFBRUMsU0FBUyxDQUFDRSxFQUFFLENBQUM7RUFDL0QsSUFBSSxDQUFDQyxlQUFlLEdBQUcsSUFBSU4sNkRBQWU7SUFDdENFLE1BQU07SUFDTkMsU0FBUyxDQUFDRSxFQUFFO0lBQ1pGLFNBQVMsQ0FBQ0ksWUFBWTtJQUN0QkosU0FBUyxDQUFDSyxXQUFXO0lBQ3JCTCxTQUFTLENBQUNNLFdBQVc7SUFDckJOLFNBQVMsQ0FBQ08sUUFBUSxDQUFDLENBQUMsQ0FBQztBQUM3Qjs7QUFFQVQsZUFBZSxDQUFDVSxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDZCxtREFBVSxDQUFDWSxTQUFTLENBQUM7QUFDL0RWLGVBQWUsQ0FBQ1UsU0FBUyxDQUFDRyxXQUFXLEdBQUdiLGVBQWU7O0FBRXZELElBQUljLEtBQUssR0FBR2QsZUFBZSxDQUFDVSxTQUFTOztBQUVyQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDVixlQUFlLENBQUNXLElBQUksQ0FBQyxDQUFDO0FBQy9CLENBQUM7O0FBRURGLEtBQUssQ0FBQ0UsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUksQ0FBQ1gsZUFBZSxDQUFDVSxJQUFJLENBQUMsQ0FBQztBQUMvQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL0RlbGV0ZURpbWVuc2lvbi5qcz80YTQ4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBDcmVhdGVEaW1lbnNpb24gfSBmcm9tICcuL0NyZWF0ZURpbWVuc2lvbic7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgKiBAcGFyYW0gZGltZW5zaW9uXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIERlbGV0ZURpbWVuc2lvbihlZGl0b3IsIGRpbWVuc2lvbikge1xuXG4gICAgICAgIC8vIENvbmZ1c2luZyBuYW1pbmcgaGVyZS4gRGltZW5zaW9uLnNlY29uZEFuY2hvciBpcyB0aGUgc3RhcnRpbmcgcG9pbnQgb2YgdGhlIGRpbWVuc2lvbixcbiAgICAgICAgLy8gYW5kIGRpbWVuc2lvbi5maXJzdEFuY2hvciBpcyB0aGUgZmluYWwgcG9pbnQuIEluIENyZWF0ZURpbWVuc2lvbiB0aGUgZmlyc3RBbmNob3IgYXJndW1lbnRcbiAgICAgICAgLy8gaXMgdGhlIGZpcnN0IHBvaW50IG9mIHRoZSBkaW1lbnNpb24gYW5kIHRoZSBzZWNvbmRBbmNob3IgYXJndW1lbnQgaXMgdGhlIHNlY29uZFxuICAgICAgICAvLyBwb2ludCBvZiB0aGUgYXJndW1lbnQuIFNvIGNvbnN0cnVjdCBDcmVhdGVEaW1lbnNpb24gd2l0aCB0aGUgc2Vjb25kQW5jaG9yIGJlZm9yZVxuICAgICAgICAvLyB0aGUgZmlyc3RBbmNob3IuXG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdERUxFVEUtRElNRU5TSU9OJywgZGltZW5zaW9uLmlkKTtcbiAgICAgICAgdGhpcy5jcmVhdGVEaW1lbnNpb24gPSBuZXcgQ3JlYXRlRGltZW5zaW9uKFxuICAgICAgICAgICAgZWRpdG9yLFxuICAgICAgICAgICAgZGltZW5zaW9uLmlkLFxuICAgICAgICAgICAgZGltZW5zaW9uLnNlY29uZEFuY2hvcixcbiAgICAgICAgICAgIGRpbWVuc2lvbi5maXJzdEFuY2hvcixcbiAgICAgICAgICAgIGRpbWVuc2lvbi5jdXJyZW50VGV4dCxcbiAgICAgICAgICAgIGRpbWVuc2lvbi5nZXRTdHlsZSgpKTtcbiAgICB9XG5cbiAgICBEZWxldGVEaW1lbnNpb24ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgRGVsZXRlRGltZW5zaW9uLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IERlbGV0ZURpbWVuc2lvbjtcblxuICAgIHZhciBwcm90byA9IERlbGV0ZURpbWVuc2lvbi5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVEaW1lbnNpb24udW5kbygpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVEaW1lbnNpb24ucmVkbygpO1xuICAgIH07XG5cblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJDcmVhdGVEaW1lbnNpb24iLCJEZWxldGVEaW1lbnNpb24iLCJlZGl0b3IiLCJkaW1lbnNpb24iLCJjYWxsIiwiaWQiLCJjcmVhdGVEaW1lbnNpb24iLCJzZWNvbmRBbmNob3IiLCJmaXJzdEFuY2hvciIsImN1cnJlbnRUZXh0IiwiZ2V0U3R5bGUiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsInVuZG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteDimension.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteFreehand.js":
/*!***************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteFreehand.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteFreehand: () => (/* binding */ DeleteFreehand)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateFreehand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateFreehand */ \"./extensions/Markup/core/edit-actions/CreateFreehand.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param freehand\n * @constructor\n */\nfunction DeleteFreehand(editor, freehand) {\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-FREEHAND', freehand.id);\n  this.createFreehand = new _CreateFreehand__WEBPACK_IMPORTED_MODULE_1__.CreateFreehand(\n    editor,\n    freehand.id,\n    freehand.position,\n    freehand.size,\n    freehand.rotation,\n    freehand.locations,\n    freehand.getStyle());\n}\n\nDeleteFreehand.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteFreehand.prototype.constructor = DeleteFreehand;\n\nvar proto = DeleteFreehand.prototype;\n\nproto.redo = function () {\n\n  this.createFreehand.undo();\n};\n\nproto.undo = function () {\n\n  this.createFreehand.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVGcmVlaGFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFNkI7QUFDUTs7QUFFOUM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0UsY0FBY0EsQ0FBQ0MsTUFBTSxFQUFFQyxRQUFRLEVBQUU7RUFDN0NKLG1EQUFVLENBQUNLLElBQUksQ0FBQyxJQUFJLEVBQUVGLE1BQU0sRUFBRSxpQkFBaUIsRUFBRUMsUUFBUSxDQUFDRSxFQUFFLENBQUM7RUFDN0QsSUFBSSxDQUFDQyxjQUFjLEdBQUcsSUFBSU4sMkRBQWM7SUFDcENFLE1BQU07SUFDTkMsUUFBUSxDQUFDRSxFQUFFO0lBQ1hGLFFBQVEsQ0FBQ0ksUUFBUTtJQUNqQkosUUFBUSxDQUFDSyxJQUFJO0lBQ2JMLFFBQVEsQ0FBQ00sUUFBUTtJQUNqQk4sUUFBUSxDQUFDTyxTQUFTO0lBQ2xCUCxRQUFRLENBQUNRLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDNUI7O0FBRUFWLGNBQWMsQ0FBQ1csU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2YsbURBQVUsQ0FBQ2EsU0FBUyxDQUFDO0FBQzlEWCxjQUFjLENBQUNXLFNBQVMsQ0FBQ0csV0FBVyxHQUFHZCxjQUFjOztBQUVyRCxJQUFJZSxLQUFLLEdBQUdmLGNBQWMsQ0FBQ1csU0FBUzs7QUFFcENJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUksQ0FBQ1gsY0FBYyxDQUFDWSxJQUFJLENBQUMsQ0FBQztBQUM5QixDQUFDOztBQUVERixLQUFLLENBQUNFLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNaLGNBQWMsQ0FBQ1csSUFBSSxDQUFDLENBQUM7QUFDOUIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVGcmVlaGFuZC5qcz84YmJlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBDcmVhdGVGcmVlaGFuZCB9IGZyb20gJy4vQ3JlYXRlRnJlZWhhbmQnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGZyZWVoYW5kXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIERlbGV0ZUZyZWVoYW5kKGVkaXRvciwgZnJlZWhhbmQpIHtcbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0RFTEVURS1GUkVFSEFORCcsIGZyZWVoYW5kLmlkKTtcbiAgICAgICAgdGhpcy5jcmVhdGVGcmVlaGFuZCA9IG5ldyBDcmVhdGVGcmVlaGFuZChcbiAgICAgICAgICAgIGVkaXRvcixcbiAgICAgICAgICAgIGZyZWVoYW5kLmlkLFxuICAgICAgICAgICAgZnJlZWhhbmQucG9zaXRpb24sXG4gICAgICAgICAgICBmcmVlaGFuZC5zaXplLFxuICAgICAgICAgICAgZnJlZWhhbmQucm90YXRpb24sXG4gICAgICAgICAgICBmcmVlaGFuZC5sb2NhdGlvbnMsXG4gICAgICAgICAgICBmcmVlaGFuZC5nZXRTdHlsZSgpKTtcbiAgICB9XG5cbiAgICBEZWxldGVGcmVlaGFuZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBEZWxldGVGcmVlaGFuZC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBEZWxldGVGcmVlaGFuZDtcblxuICAgIHZhciBwcm90byA9IERlbGV0ZUZyZWVoYW5kLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZUZyZWVoYW5kLnVuZG8oKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuY3JlYXRlRnJlZWhhbmQucmVkbygpO1xuICAgIH07XG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIkNyZWF0ZUZyZWVoYW5kIiwiRGVsZXRlRnJlZWhhbmQiLCJlZGl0b3IiLCJmcmVlaGFuZCIsImNhbGwiLCJpZCIsImNyZWF0ZUZyZWVoYW5kIiwicG9zaXRpb24iLCJzaXplIiwicm90YXRpb24iLCJsb2NhdGlvbnMiLCJnZXRTdHlsZSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwidW5kbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteFreehand.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteHighlight.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteHighlight.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteHighlight: () => (/* binding */ DeleteHighlight)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateHighlight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateHighlight */ \"./extensions/Markup/core/edit-actions/CreateHighlight.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param highlight\n * @constructor\n */\nfunction DeleteHighlight(editor, highlight) {\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-HIGHLIGHT', highlight.id);\n  this.createHighlight = new _CreateHighlight__WEBPACK_IMPORTED_MODULE_1__.CreateHighlight(\n    editor,\n    highlight.id,\n    highlight.position,\n    highlight.size,\n    highlight.rotation,\n    highlight.locations,\n    highlight.getStyle());\n}\n\nDeleteHighlight.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteHighlight.prototype.constructor = DeleteHighlight;\n\nvar proto = DeleteHighlight.prototype;\n\nproto.redo = function () {\n\n  this.createHighlight.undo();\n};\n\nproto.undo = function () {\n\n  this.createHighlight.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVIaWdobGlnaHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRTZCO0FBQ1U7O0FBRWhEO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNFLGVBQWVBLENBQUNDLE1BQU0sRUFBRUMsU0FBUyxFQUFFO0VBQy9DSixtREFBVSxDQUFDSyxJQUFJLENBQUMsSUFBSSxFQUFFRixNQUFNLEVBQUUsa0JBQWtCLEVBQUVDLFNBQVMsQ0FBQ0UsRUFBRSxDQUFDO0VBQy9ELElBQUksQ0FBQ0MsZUFBZSxHQUFHLElBQUlOLDZEQUFlO0lBQ3RDRSxNQUFNO0lBQ05DLFNBQVMsQ0FBQ0UsRUFBRTtJQUNaRixTQUFTLENBQUNJLFFBQVE7SUFDbEJKLFNBQVMsQ0FBQ0ssSUFBSTtJQUNkTCxTQUFTLENBQUNNLFFBQVE7SUFDbEJOLFNBQVMsQ0FBQ08sU0FBUztJQUNuQlAsU0FBUyxDQUFDUSxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQzdCOztBQUVBVixlQUFlLENBQUNXLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNmLG1EQUFVLENBQUNhLFNBQVMsQ0FBQztBQUMvRFgsZUFBZSxDQUFDVyxTQUFTLENBQUNHLFdBQVcsR0FBR2QsZUFBZTs7QUFFdkQsSUFBSWUsS0FBSyxHQUFHZixlQUFlLENBQUNXLFNBQVM7O0FBRXJDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNYLGVBQWUsQ0FBQ1ksSUFBSSxDQUFDLENBQUM7QUFDL0IsQ0FBQzs7QUFFREYsS0FBSyxDQUFDRSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDWixlQUFlLENBQUNXLElBQUksQ0FBQyxDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvRGVsZXRlSGlnaGxpZ2h0LmpzP2E1MzYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcbmltcG9ydCB7IENyZWF0ZUhpZ2hsaWdodCB9IGZyb20gJy4vQ3JlYXRlSGlnaGxpZ2h0JztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBoaWdobGlnaHRcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gRGVsZXRlSGlnaGxpZ2h0KGVkaXRvciwgaGlnaGxpZ2h0KSB7XG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdERUxFVEUtSElHSExJR0hUJywgaGlnaGxpZ2h0LmlkKTtcbiAgICAgICAgdGhpcy5jcmVhdGVIaWdobGlnaHQgPSBuZXcgQ3JlYXRlSGlnaGxpZ2h0KFxuICAgICAgICAgICAgZWRpdG9yLFxuICAgICAgICAgICAgaGlnaGxpZ2h0LmlkLFxuICAgICAgICAgICAgaGlnaGxpZ2h0LnBvc2l0aW9uLFxuICAgICAgICAgICAgaGlnaGxpZ2h0LnNpemUsXG4gICAgICAgICAgICBoaWdobGlnaHQucm90YXRpb24sXG4gICAgICAgICAgICBoaWdobGlnaHQubG9jYXRpb25zLFxuICAgICAgICAgICAgaGlnaGxpZ2h0LmdldFN0eWxlKCkpO1xuICAgIH1cblxuICAgIERlbGV0ZUhpZ2hsaWdodC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBEZWxldGVIaWdobGlnaHQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gRGVsZXRlSGlnaGxpZ2h0O1xuXG4gICAgdmFyIHByb3RvID0gRGVsZXRlSGlnaGxpZ2h0LnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZUhpZ2hsaWdodC51bmRvKCk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZUhpZ2hsaWdodC5yZWRvKCk7XG4gICAgfTtcbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiQ3JlYXRlSGlnaGxpZ2h0IiwiRGVsZXRlSGlnaGxpZ2h0IiwiZWRpdG9yIiwiaGlnaGxpZ2h0IiwiY2FsbCIsImlkIiwiY3JlYXRlSGlnaGxpZ2h0IiwicG9zaXRpb24iLCJzaXplIiwicm90YXRpb24iLCJsb2NhdGlvbnMiLCJnZXRTdHlsZSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwidW5kbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteHighlight.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeletePolycloud.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeletePolycloud.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeletePolycloud: () => (/* binding */ DeletePolycloud)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreatePolycloud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreatePolycloud */ \"./extensions/Markup/core/edit-actions/CreatePolycloud.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param polycloud\n * @constructor\n */\nfunction DeletePolycloud(editor, polycloud) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-POLYCLOUD', polycloud.id);\n  this.createPolycloud = new _CreatePolycloud__WEBPACK_IMPORTED_MODULE_1__.CreatePolycloud(\n    editor,\n    polycloud.id,\n    polycloud.position,\n    polycloud.size,\n    polycloud.rotation,\n    polycloud.locations,\n    polycloud.getStyle(),\n    polycloud.closed);\n}\n\nDeletePolycloud.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeletePolycloud.prototype.constructor = DeletePolycloud;\n\nvar proto = DeletePolycloud.prototype;\n\nproto.redo = function () {\n\n  this.createPolycloud.undo();\n};\n\nproto.undo = function () {\n\n  this.createPolycloud.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVQb2x5Y2xvdWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRTZCO0FBQ1U7O0FBRWhEO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNFLGVBQWVBLENBQUNDLE1BQU0sRUFBRUMsU0FBUyxFQUFFOztFQUUvQ0osbURBQVUsQ0FBQ0ssSUFBSSxDQUFDLElBQUksRUFBRUYsTUFBTSxFQUFFLGtCQUFrQixFQUFFQyxTQUFTLENBQUNFLEVBQUUsQ0FBQztFQUMvRCxJQUFJLENBQUNDLGVBQWUsR0FBRyxJQUFJTiw2REFBZTtJQUN0Q0UsTUFBTTtJQUNOQyxTQUFTLENBQUNFLEVBQUU7SUFDWkYsU0FBUyxDQUFDSSxRQUFRO0lBQ2xCSixTQUFTLENBQUNLLElBQUk7SUFDZEwsU0FBUyxDQUFDTSxRQUFRO0lBQ2xCTixTQUFTLENBQUNPLFNBQVM7SUFDbkJQLFNBQVMsQ0FBQ1EsUUFBUSxDQUFDLENBQUM7SUFDcEJSLFNBQVMsQ0FBQ1MsTUFBTSxDQUFDO0FBQ3pCOztBQUVBWCxlQUFlLENBQUNZLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNoQixtREFBVSxDQUFDYyxTQUFTLENBQUM7QUFDL0RaLGVBQWUsQ0FBQ1ksU0FBUyxDQUFDRyxXQUFXLEdBQUdmLGVBQWU7O0FBRXZELElBQUlnQixLQUFLLEdBQUloQixlQUFlLENBQUNZLFNBQVM7O0FBRXRDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNaLGVBQWUsQ0FBQ2EsSUFBSSxDQUFDLENBQUM7QUFDL0IsQ0FBQzs7QUFFREYsS0FBSyxDQUFDRSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDYixlQUFlLENBQUNZLElBQUksQ0FBQyxDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvRGVsZXRlUG9seWNsb3VkLmpzPzE4OGYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcbmltcG9ydCB7IENyZWF0ZVBvbHljbG91ZCB9IGZyb20gJy4vQ3JlYXRlUG9seWNsb3VkJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBwb2x5Y2xvdWRcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gRGVsZXRlUG9seWNsb3VkKGVkaXRvciwgcG9seWNsb3VkKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0RFTEVURS1QT0xZQ0xPVUQnLCBwb2x5Y2xvdWQuaWQpO1xuICAgICAgICB0aGlzLmNyZWF0ZVBvbHljbG91ZCA9IG5ldyBDcmVhdGVQb2x5Y2xvdWQoXG4gICAgICAgICAgICBlZGl0b3IsXG4gICAgICAgICAgICBwb2x5Y2xvdWQuaWQsXG4gICAgICAgICAgICBwb2x5Y2xvdWQucG9zaXRpb24sXG4gICAgICAgICAgICBwb2x5Y2xvdWQuc2l6ZSxcbiAgICAgICAgICAgIHBvbHljbG91ZC5yb3RhdGlvbixcbiAgICAgICAgICAgIHBvbHljbG91ZC5sb2NhdGlvbnMsXG4gICAgICAgICAgICBwb2x5Y2xvdWQuZ2V0U3R5bGUoKSxcbiAgICAgICAgICAgIHBvbHljbG91ZC5jbG9zZWQpO1xuICAgIH1cblxuICAgIERlbGV0ZVBvbHljbG91ZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBEZWxldGVQb2x5Y2xvdWQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gRGVsZXRlUG9seWNsb3VkO1xuXG4gICAgdmFyIHByb3RvID0gIERlbGV0ZVBvbHljbG91ZC5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVQb2x5Y2xvdWQudW5kbygpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVQb2x5Y2xvdWQucmVkbygpO1xuICAgIH07XG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIkNyZWF0ZVBvbHljbG91ZCIsIkRlbGV0ZVBvbHljbG91ZCIsImVkaXRvciIsInBvbHljbG91ZCIsImNhbGwiLCJpZCIsImNyZWF0ZVBvbHljbG91ZCIsInBvc2l0aW9uIiwic2l6ZSIsInJvdGF0aW9uIiwibG9jYXRpb25zIiwiZ2V0U3R5bGUiLCJjbG9zZWQiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsInVuZG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeletePolycloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeletePolyline.js":
/*!***************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeletePolyline.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeletePolyline: () => (/* binding */ DeletePolyline)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreatePolyline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreatePolyline */ \"./extensions/Markup/core/edit-actions/CreatePolyline.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param polyline\n * @constructor\n */\nfunction DeletePolyline(editor, polyline) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-POLYLINE', polyline.id);\n  this.createPolyline = new _CreatePolyline__WEBPACK_IMPORTED_MODULE_1__.CreatePolyline(\n    editor,\n    polyline.id,\n    polyline.position,\n    polyline.size,\n    polyline.rotation,\n    polyline.locations,\n    polyline.getStyle(),\n    polyline.closed);\n}\n\nDeletePolyline.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeletePolyline.prototype.constructor = DeletePolyline;\n\nvar proto = DeletePolyline.prototype;\n\nproto.redo = function () {\n\n  this.createPolyline.undo();\n};\n\nproto.undo = function () {\n\n  this.createPolyline.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVQb2x5bGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFNkI7QUFDUTs7QUFFOUM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0UsY0FBY0EsQ0FBQ0MsTUFBTSxFQUFFQyxRQUFRLEVBQUU7O0VBRTdDSixtREFBVSxDQUFDSyxJQUFJLENBQUMsSUFBSSxFQUFFRixNQUFNLEVBQUUsaUJBQWlCLEVBQUVDLFFBQVEsQ0FBQ0UsRUFBRSxDQUFDO0VBQzdELElBQUksQ0FBQ0MsY0FBYyxHQUFHLElBQUlOLDJEQUFjO0lBQ3BDRSxNQUFNO0lBQ05DLFFBQVEsQ0FBQ0UsRUFBRTtJQUNYRixRQUFRLENBQUNJLFFBQVE7SUFDakJKLFFBQVEsQ0FBQ0ssSUFBSTtJQUNiTCxRQUFRLENBQUNNLFFBQVE7SUFDakJOLFFBQVEsQ0FBQ08sU0FBUztJQUNsQlAsUUFBUSxDQUFDUSxRQUFRLENBQUMsQ0FBQztJQUNuQlIsUUFBUSxDQUFDUyxNQUFNLENBQUM7QUFDeEI7O0FBRUFYLGNBQWMsQ0FBQ1ksU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2hCLG1EQUFVLENBQUNjLFNBQVMsQ0FBQztBQUM5RFosY0FBYyxDQUFDWSxTQUFTLENBQUNHLFdBQVcsR0FBR2YsY0FBYzs7QUFFckQsSUFBSWdCLEtBQUssR0FBSWhCLGNBQWMsQ0FBQ1ksU0FBUzs7QUFFckNJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUksQ0FBQ1osY0FBYyxDQUFDYSxJQUFJLENBQUMsQ0FBQztBQUM5QixDQUFDOztBQUVERixLQUFLLENBQUNFLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNiLGNBQWMsQ0FBQ1ksSUFBSSxDQUFDLENBQUM7QUFDOUIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVQb2x5bGluZS5qcz9mYjIzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBDcmVhdGVQb2x5bGluZSB9IGZyb20gJy4vQ3JlYXRlUG9seWxpbmUnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIHBvbHlsaW5lXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIERlbGV0ZVBvbHlsaW5lKGVkaXRvciwgcG9seWxpbmUpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnREVMRVRFLVBPTFlMSU5FJywgcG9seWxpbmUuaWQpO1xuICAgICAgICB0aGlzLmNyZWF0ZVBvbHlsaW5lID0gbmV3IENyZWF0ZVBvbHlsaW5lKFxuICAgICAgICAgICAgZWRpdG9yLFxuICAgICAgICAgICAgcG9seWxpbmUuaWQsXG4gICAgICAgICAgICBwb2x5bGluZS5wb3NpdGlvbixcbiAgICAgICAgICAgIHBvbHlsaW5lLnNpemUsXG4gICAgICAgICAgICBwb2x5bGluZS5yb3RhdGlvbixcbiAgICAgICAgICAgIHBvbHlsaW5lLmxvY2F0aW9ucyxcbiAgICAgICAgICAgIHBvbHlsaW5lLmdldFN0eWxlKCksXG4gICAgICAgICAgICBwb2x5bGluZS5jbG9zZWQpO1xuICAgIH1cblxuICAgIERlbGV0ZVBvbHlsaW5lLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIERlbGV0ZVBvbHlsaW5lLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IERlbGV0ZVBvbHlsaW5lO1xuXG4gICAgdmFyIHByb3RvID0gIERlbGV0ZVBvbHlsaW5lLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZVBvbHlsaW5lLnVuZG8oKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuY3JlYXRlUG9seWxpbmUucmVkbygpO1xuICAgIH07XG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIkNyZWF0ZVBvbHlsaW5lIiwiRGVsZXRlUG9seWxpbmUiLCJlZGl0b3IiLCJwb2x5bGluZSIsImNhbGwiLCJpZCIsImNyZWF0ZVBvbHlsaW5lIiwicG9zaXRpb24iLCJzaXplIiwicm90YXRpb24iLCJsb2NhdGlvbnMiLCJnZXRTdHlsZSIsImNsb3NlZCIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwidW5kbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeletePolyline.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteRectangle.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteRectangle.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteRectangle: () => (/* binding */ DeleteRectangle)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateRectangle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateRectangle */ \"./extensions/Markup/core/edit-actions/CreateRectangle.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param rectangle\n * @constructor\n */\nvar DeleteRectangle = function (editor, rectangle) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-RECTANGLE', rectangle.id);\n  this.createRectangle = new _CreateRectangle__WEBPACK_IMPORTED_MODULE_1__.CreateRectangle(\n    editor,\n    rectangle.id,\n    rectangle.position,\n    rectangle.size,\n    rectangle.rotation,\n    rectangle.getStyle());\n};\n\nDeleteRectangle.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteRectangle.prototype.constructor = DeleteRectangle;\n\nvar proto = DeleteRectangle.prototype;\n\nproto.redo = function () {\n\n  this.createRectangle.undo();\n};\n\nproto.undo = function () {\n\n  this.createRectangle.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVSZWN0YW5nbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRTZCO0FBQ1U7O0FBRWhEO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLElBQUlFLGVBQWUsR0FBRyxTQUFBQSxDQUFTQyxNQUFNLEVBQUVDLFNBQVMsRUFBRTs7RUFFckRKLG1EQUFVLENBQUNLLElBQUksQ0FBQyxJQUFJLEVBQUVGLE1BQU0sRUFBRSxrQkFBa0IsRUFBRUMsU0FBUyxDQUFDRSxFQUFFLENBQUM7RUFDL0QsSUFBSSxDQUFDQyxlQUFlLEdBQUcsSUFBSU4sNkRBQWU7SUFDdENFLE1BQU07SUFDTkMsU0FBUyxDQUFDRSxFQUFFO0lBQ1pGLFNBQVMsQ0FBQ0ksUUFBUTtJQUNsQkosU0FBUyxDQUFDSyxJQUFJO0lBQ2RMLFNBQVMsQ0FBQ00sUUFBUTtJQUNsQk4sU0FBUyxDQUFDTyxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQzdCLENBQUM7O0FBRURULGVBQWUsQ0FBQ1UsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2QsbURBQVUsQ0FBQ1ksU0FBUyxDQUFDO0FBQy9EVixlQUFlLENBQUNVLFNBQVMsQ0FBQ0csV0FBVyxHQUFHYixlQUFlOztBQUV2RCxJQUFJYyxLQUFLLEdBQUdkLGVBQWUsQ0FBQ1UsU0FBUzs7QUFFckNJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUksQ0FBQ1YsZUFBZSxDQUFDVyxJQUFJLENBQUMsQ0FBQztBQUMvQixDQUFDOztBQUVERixLQUFLLENBQUNFLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNYLGVBQWUsQ0FBQ1UsSUFBSSxDQUFDLENBQUM7QUFDL0IsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVSZWN0YW5nbGUuanM/ODkwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuaW1wb3J0IHsgQ3JlYXRlUmVjdGFuZ2xlIH0gZnJvbSAnLi9DcmVhdGVSZWN0YW5nbGUnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIHJlY3RhbmdsZVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCB2YXIgRGVsZXRlUmVjdGFuZ2xlID0gZnVuY3Rpb24oZWRpdG9yLCByZWN0YW5nbGUpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnREVMRVRFLVJFQ1RBTkdMRScsIHJlY3RhbmdsZS5pZCk7XG4gICAgICAgIHRoaXMuY3JlYXRlUmVjdGFuZ2xlID0gbmV3IENyZWF0ZVJlY3RhbmdsZShcbiAgICAgICAgICAgIGVkaXRvcixcbiAgICAgICAgICAgIHJlY3RhbmdsZS5pZCxcbiAgICAgICAgICAgIHJlY3RhbmdsZS5wb3NpdGlvbixcbiAgICAgICAgICAgIHJlY3RhbmdsZS5zaXplLFxuICAgICAgICAgICAgcmVjdGFuZ2xlLnJvdGF0aW9uLFxuICAgICAgICAgICAgcmVjdGFuZ2xlLmdldFN0eWxlKCkpO1xuICAgIH07XG5cbiAgICBEZWxldGVSZWN0YW5nbGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgRGVsZXRlUmVjdGFuZ2xlLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IERlbGV0ZVJlY3RhbmdsZTtcblxuICAgIHZhciBwcm90byA9IERlbGV0ZVJlY3RhbmdsZS5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVSZWN0YW5nbGUudW5kbygpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVSZWN0YW5nbGUucmVkbygpO1xuICAgIH07XG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIkNyZWF0ZVJlY3RhbmdsZSIsIkRlbGV0ZVJlY3RhbmdsZSIsImVkaXRvciIsInJlY3RhbmdsZSIsImNhbGwiLCJpZCIsImNyZWF0ZVJlY3RhbmdsZSIsInBvc2l0aW9uIiwic2l6ZSIsInJvdGF0aW9uIiwiZ2V0U3R5bGUiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsInVuZG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteRectangle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteStamp.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteStamp.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteStamp: () => (/* binding */ DeleteStamp)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateStamp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateStamp */ \"./extensions/Markup/core/edit-actions/CreateStamp.js\");\n\n\n\n\n\n\n\nclass DeleteStamp extends _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction {\n  constructor(editor, stamp) {\n    super(editor, 'DELETE-STAMP', stamp.id);\n\n    this.createStamp = new _CreateStamp__WEBPACK_IMPORTED_MODULE_1__.CreateStamp(\n      editor,\n      stamp.id,\n      stamp.position,\n      stamp.size,\n      stamp.rotation,\n      stamp.getStyle()\n    );\n  }\n\n  redo() {\n    this.createStamp.undo();\n  }\n\n  undo() {\n    this.createStamp.redo();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVTdGFtcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFNkI7QUFDRTs7QUFFckI7O0FBRXZCLE1BQU1FLFdBQVcsU0FBU0YsbURBQVUsQ0FBQztFQUNoQ0csV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLEVBQUU7SUFDeEIsS0FBSyxDQUFDRCxNQUFNLEVBQUUsY0FBYyxFQUFFQyxLQUFLLENBQUNDLEVBQUUsQ0FBQzs7SUFFdkMsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSU4scURBQVc7TUFDOUJHLE1BQU07TUFDTkMsS0FBSyxDQUFDQyxFQUFFO01BQ1JELEtBQUssQ0FBQ0csUUFBUTtNQUNkSCxLQUFLLENBQUNJLElBQUk7TUFDVkosS0FBSyxDQUFDSyxRQUFRO01BQ2RMLEtBQUssQ0FBQ00sUUFBUSxDQUFDO0lBQ25CLENBQUM7RUFDTDs7RUFFQUMsSUFBSUEsQ0FBQSxFQUFHO0lBQ0gsSUFBSSxDQUFDTCxXQUFXLENBQUNNLElBQUksQ0FBQyxDQUFDO0VBQzNCOztFQUVBQSxJQUFJQSxDQUFBLEVBQUc7SUFDSCxJQUFJLENBQUNOLFdBQVcsQ0FBQ0ssSUFBSSxDQUFDLENBQUM7RUFDM0I7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVTdGFtcC5qcz83ZmM3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBDcmVhdGVTdGFtcCB9IGZyb20gJy4vQ3JlYXRlU3RhbXAnO1xuXG5leHBvcnQgeyBEZWxldGVTdGFtcCB9O1xuXG5jbGFzcyBEZWxldGVTdGFtcCBleHRlbmRzIEVkaXRBY3Rpb24ge1xuICAgICBjb25zdHJ1Y3RvcihlZGl0b3IsIHN0YW1wKSB7XG4gICAgICAgIHN1cGVyKGVkaXRvciwgJ0RFTEVURS1TVEFNUCcsIHN0YW1wLmlkKTtcblxuICAgICAgICB0aGlzLmNyZWF0ZVN0YW1wID0gbmV3IENyZWF0ZVN0YW1wKFxuICAgICAgICAgICAgZWRpdG9yLFxuICAgICAgICAgICAgc3RhbXAuaWQsXG4gICAgICAgICAgICBzdGFtcC5wb3NpdGlvbixcbiAgICAgICAgICAgIHN0YW1wLnNpemUsXG4gICAgICAgICAgICBzdGFtcC5yb3RhdGlvbixcbiAgICAgICAgICAgIHN0YW1wLmdldFN0eWxlKClcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICByZWRvKCkge1xuICAgICAgICB0aGlzLmNyZWF0ZVN0YW1wLnVuZG8oKTtcbiAgICB9XG5cbiAgICB1bmRvKCkge1xuICAgICAgICB0aGlzLmNyZWF0ZVN0YW1wLnJlZG8oKTtcbiAgICB9XG59Il0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJDcmVhdGVTdGFtcCIsIkRlbGV0ZVN0YW1wIiwiY29uc3RydWN0b3IiLCJlZGl0b3IiLCJzdGFtcCIsImlkIiwiY3JlYXRlU3RhbXAiLCJwb3NpdGlvbiIsInNpemUiLCJyb3RhdGlvbiIsImdldFN0eWxlIiwicmVkbyIsInVuZG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteStamp.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/DeleteText.js":
/*!***********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/DeleteText.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeleteText: () => (/* binding */ DeleteText)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _CreateText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreateText */ \"./extensions/Markup/core/edit-actions/CreateText.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param text\n * @constructor\n */\nfunction DeleteText(editor, text) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'DELETE-TEXT', text.id);\n\n  var position = { x: text.position.x, y: text.position.y };\n  var size = { x: text.size.x, y: text.size.y };\n\n  this.createText = new _CreateText__WEBPACK_IMPORTED_MODULE_1__.CreateText(\n    editor,\n    text.id,\n    position,\n    size,\n    text.getText(),\n    text.getStyle());\n}\n\nDeleteText.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nDeleteText.prototype.constructor = DeleteText;\n\nvar proto = DeleteText.prototype;\n\nproto.redo = function () {\n\n  this.createText.undo();\n};\n\nproto.undo = function () {\n\n  this.createText.redo();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9EZWxldGVUZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhOztBQUU2QjtBQUNBOztBQUV0QztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTRSxVQUFVQSxDQUFDQyxNQUFNLEVBQUVDLElBQUksRUFBRTs7RUFFckNKLG1EQUFVLENBQUNLLElBQUksQ0FBQyxJQUFJLEVBQUVGLE1BQU0sRUFBRSxhQUFhLEVBQUVDLElBQUksQ0FBQ0UsRUFBRSxDQUFDOztFQUVyRCxJQUFJQyxRQUFRLEdBQUcsRUFBQ0MsQ0FBQyxFQUFFSixJQUFJLENBQUNHLFFBQVEsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVMLElBQUksQ0FBQ0csUUFBUSxDQUFDRSxDQUFDLEVBQUM7RUFDdkQsSUFBSUMsSUFBSSxHQUFHLEVBQUNGLENBQUMsRUFBRUosSUFBSSxDQUFDTSxJQUFJLENBQUNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFTCxJQUFJLENBQUNNLElBQUksQ0FBQ0QsQ0FBQyxFQUFDOztFQUUzQyxJQUFJLENBQUNFLFVBQVUsR0FBRyxJQUFJVixtREFBVTtJQUM1QkUsTUFBTTtJQUNOQyxJQUFJLENBQUNFLEVBQUU7SUFDUEMsUUFBUTtJQUNSRyxJQUFJO0lBQ0pOLElBQUksQ0FBQ1EsT0FBTyxDQUFDLENBQUM7SUFDZFIsSUFBSSxDQUFDUyxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ3hCOztBQUVBWCxVQUFVLENBQUNZLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNoQixtREFBVSxDQUFDYyxTQUFTLENBQUM7QUFDMURaLFVBQVUsQ0FBQ1ksU0FBUyxDQUFDRyxXQUFXLEdBQUdmLFVBQVU7O0FBRTdDLElBQUlnQixLQUFLLEdBQUdoQixVQUFVLENBQUNZLFNBQVM7O0FBRWhDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNSLFVBQVUsQ0FBQ1MsSUFBSSxDQUFDLENBQUM7QUFDMUIsQ0FBQzs7QUFFREYsS0FBSyxDQUFDRSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDVCxVQUFVLENBQUNRLElBQUksQ0FBQyxDQUFDO0FBQzFCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvRGVsZXRlVGV4dC5qcz9lYTg2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5pbXBvcnQgeyBDcmVhdGVUZXh0IH0gZnJvbSAnLi9DcmVhdGVUZXh0JztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSB0ZXh0XG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIERlbGV0ZVRleHQoZWRpdG9yLCB0ZXh0KSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ0RFTEVURS1URVhUJywgdGV4dC5pZCk7XG5cbiAgICAgICAgdmFyIHBvc2l0aW9uID0ge3g6IHRleHQucG9zaXRpb24ueCwgeTogdGV4dC5wb3NpdGlvbi55fTtcbiAgICAgICAgdmFyIHNpemUgPSB7eDogdGV4dC5zaXplLngsIHk6IHRleHQuc2l6ZS55fTtcblxuICAgICAgICB0aGlzLmNyZWF0ZVRleHQgPSBuZXcgQ3JlYXRlVGV4dChcbiAgICAgICAgICAgIGVkaXRvcixcbiAgICAgICAgICAgIHRleHQuaWQsXG4gICAgICAgICAgICBwb3NpdGlvbixcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgICAgICB0ZXh0LmdldFRleHQoKSxcbiAgICAgICAgICAgIHRleHQuZ2V0U3R5bGUoKSk7XG4gICAgfVxuXG4gICAgRGVsZXRlVGV4dC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBEZWxldGVUZXh0LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IERlbGV0ZVRleHQ7XG5cbiAgICB2YXIgcHJvdG8gPSBEZWxldGVUZXh0LnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmNyZWF0ZVRleHQudW5kbygpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVUZXh0LnJlZG8oKTtcbiAgICB9O1xuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJDcmVhdGVUZXh0IiwiRGVsZXRlVGV4dCIsImVkaXRvciIsInRleHQiLCJjYWxsIiwiaWQiLCJwb3NpdGlvbiIsIngiLCJ5Iiwic2l6ZSIsImNyZWF0ZVRleHQiLCJnZXRUZXh0IiwiZ2V0U3R5bGUiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsInVuZG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/DeleteText.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/EditAction.js":
/*!***********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/EditAction.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditAction: () => (/* binding */ EditAction)\n/* harmony export */ });\n\n\n/**\n * Base class for all markup edit actions.\n *\n * EditActions encapsulate {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}\n * operations (such as creation, edition and deletion) that hook into the undo/redo system.\n *\n * The minimum set of methods to implement on an EditAction extension are:\n * - execute()\n * - undo()\n * - redo()\n *\n * A good set of classes to check their implementation are:\n * {@link Autodesk.Viewing.Extensions.Markups.Core.CreateCircle|CreateCircle}.\n * {@link Autodesk.Viewing.Extensions.Markups.Core.DeleteCircle|DeleteCircle}.\n * {@link Autodesk.Viewing.Extensions.Markups.Core.SetCircle|SetCircle}.\n *\n * @tutorial feature_markup\n * @constructor\n * @memberof Autodesk.Viewing.Extensions.Markups.Core\n *\n * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor\n * @param {String} type - An identifier for the EditAction.\n * @param {number} targetId - The id of the markup being affected.\n */\nfunction EditAction(editor, type, targetId) {\n\n  this.type = type;\n  this.editor = editor;\n  this.targetId = targetId;\n  this.addToHistory = true;\n  this.selectOnExecution = true;\n}\n\n/**\n * Performs the action.\n */\nEditAction.prototype.execute = function () {\n\n  this.editor.actionManager.execute(this);\n};\n\n/**\n * @abstract\n */\nEditAction.prototype.redo = function () {\n\n};\n\n/**\n * @abstract\n */\nEditAction.prototype.undo = function () {\n\n};\n\n/**\n * Provides a mechanism to merge consecutive actions of the same type.\n * @param {Autodesk.Viewing.Extensions.Markups.Core.EditAction} action - Action to check if it can be merged with 'this'.\n * @returns {boolean} Returns true if merge has been applied. Parameter will be discarded.\n */\nEditAction.prototype.merge = function (action) {\n\n  return false;\n};\n\n/**\n * Provides a mechanism to check whether the action yields no results.\n * @returns {boolean} Returns true if no changes happen with this action.\n */\nEditAction.prototype.isIdentity = function () {\n\n  return false;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9FZGl0QWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFVDtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQSxVQUFVQSxDQUFDQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFOztFQUUvQyxJQUFJLENBQUNELElBQUksR0FBSUEsSUFBSTtFQUNqQixJQUFJLENBQUNELE1BQU0sR0FBR0EsTUFBTTtFQUNwQixJQUFJLENBQUNFLFFBQVEsR0FBR0EsUUFBUTtFQUN4QixJQUFJLENBQUNDLFlBQVksR0FBRyxJQUFJO0VBQ3hCLElBQUksQ0FBQ0MsaUJBQWlCLEdBQUcsSUFBSTtBQUNqQzs7QUFFQTtBQUNKO0FBQ0E7QUFDSUwsVUFBVSxDQUFDTSxTQUFTLENBQUNDLE9BQU8sR0FBRyxZQUFXOztFQUV0QyxJQUFJLENBQUNOLE1BQU0sQ0FBQ08sYUFBYSxDQUFDRCxPQUFPLENBQUMsSUFBSSxDQUFDO0FBQzNDLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0lQLFVBQVUsQ0FBQ00sU0FBUyxDQUFDRyxJQUFJLEdBQUcsWUFBVzs7QUFFdkMsQ0FBQzs7QUFFRDtBQUNKO0FBQ0E7QUFDSVQsVUFBVSxDQUFDTSxTQUFTLENBQUNJLElBQUksR0FBRyxZQUFXOztBQUV2QyxDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDSVYsVUFBVSxDQUFDTSxTQUFTLENBQUNLLEtBQUssR0FBRyxVQUFTQyxNQUFNLEVBQUU7O0VBRTFDLE9BQU8sS0FBSztBQUNoQixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNBO0FBQ0laLFVBQVUsQ0FBQ00sU0FBUyxDQUFDTyxVQUFVLEdBQUcsWUFBVzs7RUFFekMsT0FBTyxLQUFLO0FBQ2hCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvRWRpdEFjdGlvbi5qcz80YTkwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuICAgIC8qKlxuICAgICAqIEJhc2UgY2xhc3MgZm9yIGFsbCBtYXJrdXAgZWRpdCBhY3Rpb25zLlxuICAgICAqXG4gICAgICogRWRpdEFjdGlvbnMgZW5jYXBzdWxhdGUge0BsaW5rIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuTWFya3VwfE1hcmt1cH1cbiAgICAgKiBvcGVyYXRpb25zIChzdWNoIGFzIGNyZWF0aW9uLCBlZGl0aW9uIGFuZCBkZWxldGlvbikgdGhhdCBob29rIGludG8gdGhlIHVuZG8vcmVkbyBzeXN0ZW0uXG4gICAgICpcbiAgICAgKiBUaGUgbWluaW11bSBzZXQgb2YgbWV0aG9kcyB0byBpbXBsZW1lbnQgb24gYW4gRWRpdEFjdGlvbiBleHRlbnNpb24gYXJlOlxuICAgICAqIC0gZXhlY3V0ZSgpXG4gICAgICogLSB1bmRvKClcbiAgICAgKiAtIHJlZG8oKVxuICAgICAqXG4gICAgICogQSBnb29kIHNldCBvZiBjbGFzc2VzIHRvIGNoZWNrIHRoZWlyIGltcGxlbWVudGF0aW9uIGFyZTpcbiAgICAgKiB7QGxpbmsgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5DcmVhdGVDaXJjbGV8Q3JlYXRlQ2lyY2xlfS5cbiAgICAgKiB7QGxpbmsgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5EZWxldGVDaXJjbGV8RGVsZXRlQ2lyY2xlfS5cbiAgICAgKiB7QGxpbmsgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5TZXRDaXJjbGV8U2V0Q2lyY2xlfS5cbiAgICAgKlxuICAgICAqIEB0dXRvcmlhbCBmZWF0dXJlX21hcmt1cFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBtZW1iZXJvZiBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0F1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuTWFya3Vwc0NvcmV9IGVkaXRvclxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlIC0gQW4gaWRlbnRpZmllciBmb3IgdGhlIEVkaXRBY3Rpb24uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHRhcmdldElkIC0gVGhlIGlkIG9mIHRoZSBtYXJrdXAgYmVpbmcgYWZmZWN0ZWQuXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIEVkaXRBY3Rpb24oZWRpdG9yLCB0eXBlLCB0YXJnZXRJZCkge1xuXG4gICAgICAgIHRoaXMudHlwZSA9ICB0eXBlO1xuICAgICAgICB0aGlzLmVkaXRvciA9IGVkaXRvcjtcbiAgICAgICAgdGhpcy50YXJnZXRJZCA9IHRhcmdldElkO1xuICAgICAgICB0aGlzLmFkZFRvSGlzdG9yeSA9IHRydWU7XG4gICAgICAgIHRoaXMuc2VsZWN0T25FeGVjdXRpb24gPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFBlcmZvcm1zIHRoZSBhY3Rpb24uXG4gICAgICovXG4gICAgRWRpdEFjdGlvbi5wcm90b3R5cGUuZXhlY3V0ZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuZWRpdG9yLmFjdGlvbk1hbmFnZXIuZXhlY3V0ZSh0aGlzKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQGFic3RyYWN0XG4gICAgICovXG4gICAgRWRpdEFjdGlvbi5wcm90b3R5cGUucmVkbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEBhYnN0cmFjdFxuICAgICAqL1xuICAgIEVkaXRBY3Rpb24ucHJvdG90eXBlLnVuZG8gPSBmdW5jdGlvbigpIHtcblxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQcm92aWRlcyBhIG1lY2hhbmlzbSB0byBtZXJnZSBjb25zZWN1dGl2ZSBhY3Rpb25zIG9mIHRoZSBzYW1lIHR5cGUuXG4gICAgICogQHBhcmFtIHtBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuTWFya3Vwcy5Db3JlLkVkaXRBY3Rpb259IGFjdGlvbiAtIEFjdGlvbiB0byBjaGVjayBpZiBpdCBjYW4gYmUgbWVyZ2VkIHdpdGggJ3RoaXMnLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIHRydWUgaWYgbWVyZ2UgaGFzIGJlZW4gYXBwbGllZC4gUGFyYW1ldGVyIHdpbGwgYmUgZGlzY2FyZGVkLlxuICAgICAqL1xuICAgIEVkaXRBY3Rpb24ucHJvdG90eXBlLm1lcmdlID0gZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQcm92aWRlcyBhIG1lY2hhbmlzbSB0byBjaGVjayB3aGV0aGVyIHRoZSBhY3Rpb24geWllbGRzIG5vIHJlc3VsdHMuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgdHJ1ZSBpZiBubyBjaGFuZ2VzIGhhcHBlbiB3aXRoIHRoaXMgYWN0aW9uLlxuICAgICAqL1xuICAgIEVkaXRBY3Rpb24ucHJvdG90eXBlLmlzSWRlbnRpdHkgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJlZGl0b3IiLCJ0eXBlIiwidGFyZ2V0SWQiLCJhZGRUb0hpc3RvcnkiLCJzZWxlY3RPbkV4ZWN1dGlvbiIsInByb3RvdHlwZSIsImV4ZWN1dGUiLCJhY3Rpb25NYW5hZ2VyIiwicmVkbyIsInVuZG8iLCJtZXJnZSIsImFjdGlvbiIsImlzSWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/EditAction.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/EditActionGroup.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/EditActionGroup.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditActionGroup: () => (/* binding */ EditActionGroup)\n/* harmony export */ });\n\n\n/**\n * This class will group actions edit actions that should be executed as a whole.\n * When a group is open actions can be added to it, similar actions will be merged into one during this process.\n * This class is not intended to be used by users, it's a helper class of EditActionManager.\n * @constructor\n */\nfunction EditActionGroup() {\n\n  this.actions = [];\n  this.closed = true;\n}\n\nvar proto = EditActionGroup.prototype;\n\n/**\n *\n * @returns {boolean}\n */\nproto.open = function () {\n\n  if (!this.closed) {\n    return false;\n  }\n\n  this.closed = false;\n  return true;\n};\n\n/**\n *\n * @returns {boolean}\n */\nproto.close = function () {\n\n  if (this.closed) {\n    return false;\n  }\n\n  this.closed = true;\n  return true;\n};\n\n/**\n *\n * @returns {number} targetId\n */\nproto.undo = function () {\n\n  var actions = this.actions;\n  var actionsMaxIndex = actions.length - 1;\n\n  var targetId = -1;\n  for (var i = actionsMaxIndex; i >= 0; --i) {\n\n    var action = actions[i];\n    action.undo();\n\n    if (action.targetId !== -1) {\n      targetId = action.targetId;\n    }\n  }\n\n  return targetId;\n};\n\n/**\n *\n * @returns {number} targetId\n */\nproto.redo = function () {\n\n  var actions = this.actions;\n  var actionsCount = actions.length;\n\n  var targetId = -1;\n  for (var i = 0; i < actionsCount; ++i) {\n\n    var action = actions[i];\n    action.redo();\n\n    if (action.targetId !== -1) {\n      targetId = action.targetId;\n    }\n  }\n\n  return targetId;\n};\n\n/**\n *\n * @returns {boolean}\n */\nproto.isOpen = function () {\n\n  return !this.closed;\n};\n\n/**\n *\n * @returns {boolean}\n */\nproto.isClosed = function () {\n\n  return this.closed;\n};\n\n/**\n *\n * @returns {boolean}\n */\nproto.isEmpty = function () {\n\n  return this.actions.length === 0;\n};\n\n/**\n *\n * @param {EditAction} action\n */\nproto.addAction = function (action) {\n\n  if (this.closed) {\n    return false;\n  }\n\n  this.actions.push(action);\n  this.compact();\n\n  return true;\n};\n\n/**\n * @private\n */\nproto.compact = function () {\n\n  var actions = this.actions;\n  var actionsCount = actions.length;\n\n  for (var i = 0; i < actionsCount; ++i) {\n\n    // If an action does nothing, remove it.\n    var actionA = actions[i];\n    if (actionA.isIdentity()) {\n      actions.splice(i, 1);\n      --actionsCount;\n      --i;\n      continue;\n    }\n\n    // If an action can be merged, merge it.\n    for (var j = i + 1; j < actionsCount; ++j) {\n\n      var actionB = actions[j];\n      if (actionA.type === actionB.type &&\n      actionA.merge(actionB)) {\n        actions.splice(j, 1);\n        --actionsCount;\n        --i;\n        break;\n      }\n    }\n  }\n};\n\nproto.getTargetId = function () {\n  var actions = this.actions;\n  var actionsCount = actions.length;\n  var targetId = -1;\n  for (var i = 0; i < actionsCount; ++i) {\n    var action = actions[i];\n    if (action.targetId !== -1) {\n      targetId = action.targetId;\n    }\n  }\n  return targetId;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/EditActionGroup.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/EditActionManager.js":
/*!******************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/EditActionManager.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditActionManager: () => (/* binding */ EditActionManager)\n/* harmony export */ });\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _EditActionGroup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EditActionGroup */ \"./extensions/Markup/core/edit-actions/EditActionGroup.js\");\n\n\n\n\n\n\n/**\n *\n * @param historySize\n * @constructor\n */\nfunction EditActionManager(historySize) {\n\n  this.historySize = historySize;\n\n  this.undoStack = [];\n  this.redoStack = [];\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.addTraitEventDispatcher)(this);\n}\n\nvar proto = EditActionManager.prototype;\n\n/**\n *\n * @param action\n */\nproto.execute = function (action) {\n\n  var redoStack = this.redoStack;\n  var undoStack = this.undoStack;\n\n  redoStack.splice(0, redoStack.length);\n\n  action.redo();\n\n  var group = this.getEditActionGroup();\n  if (group.isOpen()) {\n    group.addAction(action);\n  } else {\n    group.open();\n    group.addAction(action);\n    group.close();\n  }\n\n  if (undoStack.length > this.historySize) {\n    undoStack.splice(0, 1);\n  }\n\n  var targetId = action.selectOnExecution ? action.targetId : -1;\n  this.dispatchEvent(\n    { type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_HISTORY_CHANGED, data: { action: 'execute', targetId: targetId } });\n};\n\nproto.beginActionGroup = function () {\n\n  var undoStack = this.undoStack;\n  var undoStackCount = undoStack.length;\n  var group = null;\n\n  if (undoStackCount === 0 || undoStack[undoStackCount - 1].isClosed()) {\n\n    group = this.getEditActionGroup();\n    group.open();\n  } else {\n    console.warn('Markups - Undo/Redo - Action edit group already open.');\n  }\n};\n\nproto.closeActionGroup = function () {\n\n  var undoStack = this.undoStack;\n  var undoStackCount = undoStack.length;\n\n  if (undoStackCount === 0) {\n\n    console.warn('Markups - Undo/Redo - There is no action edit group to close.');\n    return;\n  }\n\n  var group = undoStack[undoStackCount - 1];\n  if (!group.close()) {\n    console.warn('Markups - Undo/Redo - Action edit group already closed.');\n  }\n\n  if (group.isEmpty()) {\n    undoStack.pop();\n  }\n};\n\nproto.cancelActionGroup = function () {\n\n  var undoStack = this.undoStack;\n  var undoStackCount = undoStack.length;\n\n  if (undoStackCount === 0) {\n\n    console.warn('Markups - Undo/Redo - There is no action edit group to close.');\n    return;\n  }\n\n  var group = undoStack[undoStackCount - 1];\n  if (!group.close()) {\n    console.warn('Markups - Undo/Redo - Action edit group already closed.');\n    return;\n  }\n\n  group.undo();\n  undoStack.pop();\n\n  this.dispatchEvent(\n    { type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_HISTORY_CHANGED, data: { action: 'cancel', targetId: -1 } });\n};\n\nproto.undo = function () {\n\n  var undoStack = this.undoStack;\n  var redoStack = this.redoStack;\n\n  if (undoStack.length === 0) {\n    return;\n  }\n\n  var group = undoStack.pop();\n  var targetId = group.undo();\n\n  redoStack.push(group);\n\n  this.dispatchEvent(\n    { type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_HISTORY_CHANGED, data: { action: 'undo', targetId: targetId } });\n};\n\nproto.redo = function () {\n\n  var undoStack = this.undoStack;\n  var redoStack = this.redoStack;\n\n  if (redoStack.length === 0) {\n    return;\n  }\n\n  var group = redoStack.pop();\n  var targetId = group.redo();\n\n  undoStack.push(group);\n\n  this.dispatchEvent(\n    { type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_HISTORY_CHANGED, data: { action: 'redo', targetId: targetId } });\n};\n\nproto.clear = function () {\n\n  this.undoStack.splice(0, this.undoStack.length);\n  this.redoStack.splice(0, this.redoStack.length);\n\n  this.dispatchEvent(\n    { type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_HISTORY_CHANGED, data: { action: 'clear', targetId: -1 } });\n};\n\nproto.isUndoStackEmpty = function () {\n\n  return this.undoStack.length === 0;\n};\n\nproto.isRedoStackEmpty = function () {\n\n  return this.redoStack.length === 0;\n};\n\nproto.getLastElementInUndoStack = function () {\n\n  var undoStack = this.undoStack;\n  var undoStackCount = undoStack.length;\n  return undoStack[undoStackCount - 1];\n};\n\n/**\n *\n * @return action\n * @private\n */\nproto.getEditActionGroup = function () {\n\n  var undoStack = this.undoStack;\n  var undoStackCount = this.undoStack.length;\n\n  var group = null;\n\n  if (undoStackCount === 0 || undoStack[undoStackCount - 1].isClosed()) {\n    group = new _EditActionGroup__WEBPACK_IMPORTED_MODULE_2__.EditActionGroup();\n    undoStack.push(group);\n  } else {\n    group = undoStack[undoStackCount - 1];\n  }\n\n  return group;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/EditActionManager.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetArrow.js":
/*!*********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetArrow.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetArrow: () => (/* binding */ SetArrow)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param arrow\n * @param head\n * @param tail\n * @constructor\n */\nfunction SetArrow(editor, arrow, head, tail) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-ARROW', arrow.id);\n\n  this.newHead = { x: head.x, y: head.y };\n  this.newTail = { x: tail.x, y: tail.y };\n  this.oldHead = { x: arrow.head.x, y: arrow.head.y };\n  this.oldTail = { x: arrow.tail.x, y: arrow.tail.y };\n}\n\nSetArrow.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetArrow.prototype.constructor = SetArrow;\n\nvar proto = SetArrow.prototype;\n\nproto.redo = function () {\n\n  this.applyState(this.targetId, this.newHead, this.newTail);\n};\n\nproto.undo = function () {\n\n  this.applyState(this.targetId, this.oldHead, this.oldTail);\n};\n\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.newHead = action.newHead;\n    this.newTail = action.newTail;\n    return true;\n  }\n  return false;\n};\n\n/**\n *\n * @private\n */\nproto.applyState = function (targetId, head, tail) {\n\n  var arrow = this.editor.getMarkup(targetId);\n  if (!arrow) {\n    return;\n  }\n\n  // Different stroke widths make positions differ at sub-pixel level.\n  var epsilon = 0.0001;\n\n  if (Math.abs(arrow.head.x - head.x) >= epsilon || Math.abs(arrow.head.y - head.y) >= epsilon ||\n  Math.abs(arrow.tail.x - tail.x) >= epsilon || Math.abs(arrow.tail.y - tail.y) >= epsilon) {\n\n    // Confusing naming here. in arrow.set the first two numbers are\n    // the point you drag from and the second two are the point you\n    // drag to. So the head point is actually where the tail of the\n    // arrow is positioned and the tail point is the head is positioned.\n    arrow.set(head.x, head.y, tail.x, tail.y);\n  }\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return (\n    this.newHead.x === this.oldHead.x &&\n    this.newHead.y === this.oldHead.y &&\n    this.newTail.x === this.oldTail.x &&\n    this.newTail.y === this.oldTail.y);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRBcnJvdy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU2Qjs7QUFFdEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNDLFFBQVFBLENBQUNDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRTs7RUFFaERMLG1EQUFVLENBQUNNLElBQUksQ0FBQyxJQUFJLEVBQUVKLE1BQU0sRUFBRSxXQUFXLEVBQUVDLEtBQUssQ0FBQ0ksRUFBRSxDQUFDOztFQUVwRCxJQUFJLENBQUNDLE9BQU8sR0FBRyxFQUFDQyxDQUFDLEVBQUVMLElBQUksQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVOLElBQUksQ0FBQ00sQ0FBQyxFQUFDO0VBQ3JDLElBQUksQ0FBQ0MsT0FBTyxHQUFHLEVBQUNGLENBQUMsRUFBRUosSUFBSSxDQUFDSSxDQUFDLEVBQUVDLENBQUMsRUFBRUwsSUFBSSxDQUFDSyxDQUFDLEVBQUM7RUFDckMsSUFBSSxDQUFDRSxPQUFPLEdBQUcsRUFBQ0gsQ0FBQyxFQUFFTixLQUFLLENBQUNDLElBQUksQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVQLEtBQUssQ0FBQ0MsSUFBSSxDQUFDTSxDQUFDLEVBQUM7RUFDakQsSUFBSSxDQUFDRyxPQUFPLEdBQUcsRUFBQ0osQ0FBQyxFQUFFTixLQUFLLENBQUNFLElBQUksQ0FBQ0ksQ0FBQyxFQUFFQyxDQUFDLEVBQUVQLEtBQUssQ0FBQ0UsSUFBSSxDQUFDSyxDQUFDLEVBQUM7QUFDckQ7O0FBRUFULFFBQVEsQ0FBQ2EsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2hCLG1EQUFVLENBQUNjLFNBQVMsQ0FBQztBQUN4RGIsUUFBUSxDQUFDYSxTQUFTLENBQUNHLFdBQVcsR0FBR2hCLFFBQVE7O0FBRXpDLElBQUlpQixLQUFLLEdBQUdqQixRQUFRLENBQUNhLFNBQVM7O0FBRTlCSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNDLFVBQVUsQ0FBQyxJQUFJLENBQUNDLFFBQVEsRUFBRSxJQUFJLENBQUNiLE9BQU8sRUFBRSxJQUFJLENBQUNHLE9BQU8sQ0FBQztBQUM5RCxDQUFDOztBQUVETyxLQUFLLENBQUNJLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNGLFVBQVUsQ0FBQyxJQUFJLENBQUNDLFFBQVEsRUFBRSxJQUFJLENBQUNULE9BQU8sRUFBRSxJQUFJLENBQUNDLE9BQU8sQ0FBQztBQUM5RCxDQUFDOztBQUVESyxLQUFLLENBQUNLLEtBQUssR0FBRyxVQUFTQyxNQUFNLEVBQUU7O0VBRTNCLElBQUksSUFBSSxDQUFDSCxRQUFRLEtBQUtHLE1BQU0sQ0FBQ0gsUUFBUTtFQUNqQyxJQUFJLENBQUNJLElBQUksS0FBS0QsTUFBTSxDQUFDQyxJQUFJLEVBQUU7O0lBRTNCLElBQUksQ0FBQ2pCLE9BQU8sR0FBR2dCLE1BQU0sQ0FBQ2hCLE9BQU87SUFDN0IsSUFBSSxDQUFDRyxPQUFPLEdBQUdhLE1BQU0sQ0FBQ2IsT0FBTztJQUM3QixPQUFPLElBQUk7RUFDZjtFQUNBLE9BQU8sS0FBSztBQUNoQixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNBO0FBQ0lPLEtBQUssQ0FBQ0UsVUFBVSxHQUFHLFVBQVNDLFFBQVEsRUFBRWpCLElBQUksRUFBRUMsSUFBSSxFQUFFOztFQUU5QyxJQUFJRixLQUFLLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUN3QixTQUFTLENBQUNMLFFBQVEsQ0FBQztFQUMzQyxJQUFHLENBQUNsQixLQUFLLEVBQUU7SUFDUDtFQUNKOztFQUVBO0VBQ0EsSUFBSXdCLE9BQU8sR0FBRyxNQUFNOztFQUVwQixJQUFJQyxJQUFJLENBQUNDLEdBQUcsQ0FBQzFCLEtBQUssQ0FBQ0MsSUFBSSxDQUFDSyxDQUFDLEdBQUdMLElBQUksQ0FBQ0ssQ0FBQyxDQUFDLElBQUlrQixPQUFPLElBQUlDLElBQUksQ0FBQ0MsR0FBRyxDQUFDMUIsS0FBSyxDQUFDQyxJQUFJLENBQUNNLENBQUMsR0FBR04sSUFBSSxDQUFDTSxDQUFDLENBQUMsSUFBSWlCLE9BQU87RUFDeEZDLElBQUksQ0FBQ0MsR0FBRyxDQUFDMUIsS0FBSyxDQUFDRSxJQUFJLENBQUNJLENBQUMsR0FBR0osSUFBSSxDQUFDSSxDQUFDLENBQUMsSUFBSWtCLE9BQU8sSUFBSUMsSUFBSSxDQUFDQyxHQUFHLENBQUMxQixLQUFLLENBQUNFLElBQUksQ0FBQ0ssQ0FBQyxHQUFHTCxJQUFJLENBQUNLLENBQUMsQ0FBQyxJQUFJaUIsT0FBTyxFQUFFOztJQUUxRjtJQUNBO0lBQ0E7SUFDQTtJQUNBeEIsS0FBSyxDQUFDMkIsR0FBRyxDQUFDMUIsSUFBSSxDQUFDSyxDQUFDLEVBQUVMLElBQUksQ0FBQ00sQ0FBQyxFQUFFTCxJQUFJLENBQUNJLENBQUMsRUFBRUosSUFBSSxDQUFDSyxDQUFDLENBQUM7RUFDN0M7QUFDSixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNJUSxLQUFLLENBQUNhLFVBQVUsR0FBRyxZQUFXOztFQUUxQjtJQUNJLElBQUksQ0FBQ3ZCLE9BQU8sQ0FBQ0MsQ0FBQyxLQUFLLElBQUksQ0FBQ0csT0FBTyxDQUFDSCxDQUFDO0lBQ2pDLElBQUksQ0FBQ0QsT0FBTyxDQUFDRSxDQUFDLEtBQUssSUFBSSxDQUFDRSxPQUFPLENBQUNGLENBQUM7SUFDakMsSUFBSSxDQUFDQyxPQUFPLENBQUNGLENBQUMsS0FBSyxJQUFJLENBQUNJLE9BQU8sQ0FBQ0osQ0FBQztJQUNqQyxJQUFJLENBQUNFLE9BQU8sQ0FBQ0QsQ0FBQyxLQUFLLElBQUksQ0FBQ0csT0FBTyxDQUFDSCxDQUFDO0FBQ3pDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvU2V0QXJyb3cuanM/NzBmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGFycm93XG4gICAgICogQHBhcmFtIGhlYWRcbiAgICAgKiBAcGFyYW0gdGFpbFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBTZXRBcnJvdyhlZGl0b3IsIGFycm93LCBoZWFkLCB0YWlsKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ1NFVC1BUlJPVycsIGFycm93LmlkKTtcblxuICAgICAgICB0aGlzLm5ld0hlYWQgPSB7eDogaGVhZC54LCB5OiBoZWFkLnl9O1xuICAgICAgICB0aGlzLm5ld1RhaWwgPSB7eDogdGFpbC54LCB5OiB0YWlsLnl9O1xuICAgICAgICB0aGlzLm9sZEhlYWQgPSB7eDogYXJyb3cuaGVhZC54LCB5OiBhcnJvdy5oZWFkLnl9O1xuICAgICAgICB0aGlzLm9sZFRhaWwgPSB7eDogYXJyb3cudGFpbC54LCB5OiBhcnJvdy50YWlsLnl9O1xuICAgIH1cblxuICAgIFNldEFycm93LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIFNldEFycm93LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFNldEFycm93O1xuXG4gICAgdmFyIHByb3RvID0gU2V0QXJyb3cucHJvdG90eXBlO1xuXG4gICAgcHJvdG8ucmVkbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuYXBwbHlTdGF0ZSh0aGlzLnRhcmdldElkLCB0aGlzLm5ld0hlYWQsIHRoaXMubmV3VGFpbCk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmFwcGx5U3RhdGUodGhpcy50YXJnZXRJZCwgdGhpcy5vbGRIZWFkLCB0aGlzLm9sZFRhaWwpO1xuICAgIH07XG5cbiAgICBwcm90by5tZXJnZSA9IGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gICAgICAgIGlmICh0aGlzLnRhcmdldElkID09PSBhY3Rpb24udGFyZ2V0SWQgJiZcbiAgICAgICAgICAgIHRoaXMudHlwZSA9PT0gYWN0aW9uLnR5cGUpIHtcblxuICAgICAgICAgICAgdGhpcy5uZXdIZWFkID0gYWN0aW9uLm5ld0hlYWQ7XG4gICAgICAgICAgICB0aGlzLm5ld1RhaWwgPSBhY3Rpb24ubmV3VGFpbDtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHByb3RvLmFwcGx5U3RhdGUgPSBmdW5jdGlvbih0YXJnZXRJZCwgaGVhZCwgdGFpbCkge1xuXG4gICAgICAgIHZhciBhcnJvdyA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0YXJnZXRJZCk7XG4gICAgICAgIGlmKCFhcnJvdykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRGlmZmVyZW50IHN0cm9rZSB3aWR0aHMgbWFrZSBwb3NpdGlvbnMgZGlmZmVyIGF0IHN1Yi1waXhlbCBsZXZlbC5cbiAgICAgICAgdmFyIGVwc2lsb24gPSAwLjAwMDE7XG5cbiAgICAgICAgaWYgKE1hdGguYWJzKGFycm93LmhlYWQueCAtIGhlYWQueCkgPj0gZXBzaWxvbiB8fCBNYXRoLmFicyhhcnJvdy5oZWFkLnkgLSBoZWFkLnkpID49IGVwc2lsb24gfHxcbiAgICAgICAgICAgIE1hdGguYWJzKGFycm93LnRhaWwueCAtIHRhaWwueCkgPj0gZXBzaWxvbiB8fCBNYXRoLmFicyhhcnJvdy50YWlsLnkgLSB0YWlsLnkpID49IGVwc2lsb24pIHtcblxuICAgICAgICAgICAgLy8gQ29uZnVzaW5nIG5hbWluZyBoZXJlLiBpbiBhcnJvdy5zZXQgdGhlIGZpcnN0IHR3byBudW1iZXJzIGFyZVxuICAgICAgICAgICAgLy8gdGhlIHBvaW50IHlvdSBkcmFnIGZyb20gYW5kIHRoZSBzZWNvbmQgdHdvIGFyZSB0aGUgcG9pbnQgeW91XG4gICAgICAgICAgICAvLyBkcmFnIHRvLiBTbyB0aGUgaGVhZCBwb2ludCBpcyBhY3R1YWxseSB3aGVyZSB0aGUgdGFpbCBvZiB0aGVcbiAgICAgICAgICAgIC8vIGFycm93IGlzIHBvc2l0aW9uZWQgYW5kIHRoZSB0YWlsIHBvaW50IGlzIHRoZSBoZWFkIGlzIHBvc2l0aW9uZWQuXG4gICAgICAgICAgICBhcnJvdy5zZXQoaGVhZC54LCBoZWFkLnksIHRhaWwueCwgdGFpbC55KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBwcm90by5pc0lkZW50aXR5ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIHRoaXMubmV3SGVhZC54ID09PSB0aGlzLm9sZEhlYWQueCAmJlxuICAgICAgICAgICAgdGhpcy5uZXdIZWFkLnkgPT09IHRoaXMub2xkSGVhZC55ICYmXG4gICAgICAgICAgICB0aGlzLm5ld1RhaWwueCA9PT0gdGhpcy5vbGRUYWlsLnggJiZcbiAgICAgICAgICAgIHRoaXMubmV3VGFpbC55ID09PSB0aGlzLm9sZFRhaWwueSk7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJTZXRBcnJvdyIsImVkaXRvciIsImFycm93IiwiaGVhZCIsInRhaWwiLCJjYWxsIiwiaWQiLCJuZXdIZWFkIiwieCIsInkiLCJuZXdUYWlsIiwib2xkSGVhZCIsIm9sZFRhaWwiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsImFwcGx5U3RhdGUiLCJ0YXJnZXRJZCIsInVuZG8iLCJtZXJnZSIsImFjdGlvbiIsInR5cGUiLCJnZXRNYXJrdXAiLCJlcHNpbG9uIiwiTWF0aCIsImFicyIsInNldCIsImlzSWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetArrow.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetCallout.js":
/*!***********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetCallout.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetCallout: () => (/* binding */ SetCallout)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param markup\n * @param position\n * @param size\n * @param text\n * @constructor\n */\nfunction SetCallout(editor, markup, position, size, text, isFrameUsed) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-CALLOUT', markup.id);\n\n  this.newPosition = { x: position.x, y: position.y };\n  this.oldPosition = { x: markup.position.x, y: markup.position.y };\n  this.newSize = { x: size.x, y: size.y };\n  this.oldSize = { x: markup.size.x, y: markup.size.y };\n  this.newText = text;\n  this.oldText = markup.getText();\n  this.newIsFrameUsed = isFrameUsed;\n  this.oldIsFrameUsed = markup.isFrameUsed;\n}\n\nSetCallout.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetCallout.prototype.constructor = SetCallout;\n\nvar proto = SetCallout.prototype;\n\nproto.redo = function () {\n\n  var callout = this.editor.getMarkup(this.targetId);\n  callout && callout.set(this.newPosition, this.newSize, this.newText, this.newIsFrameUsed);\n};\n\nproto.undo = function () {\n\n  var callout = this.editor.getMarkup(this.targetId);\n  callout && callout.set(this.oldPosition, this.oldSize, this.oldText, this.oldIsFrameUsed);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRDYWxsb3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRTZCOztBQUV0QztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQyxVQUFVQSxDQUFDQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsV0FBVyxFQUFFOztFQUUxRVAsbURBQVUsQ0FBQ1EsSUFBSSxDQUFDLElBQUksRUFBRU4sTUFBTSxFQUFFLGFBQWEsRUFBRUMsTUFBTSxDQUFDTSxFQUFFLENBQUM7O0VBRXZELElBQUksQ0FBQ0MsV0FBVyxHQUFHLEVBQUNDLENBQUMsRUFBRVAsUUFBUSxDQUFDTyxDQUFDLEVBQUVDLENBQUMsRUFBRVIsUUFBUSxDQUFDUSxDQUFDLEVBQUM7RUFDakQsSUFBSSxDQUFDQyxXQUFXLEdBQUcsRUFBQ0YsQ0FBQyxFQUFFUixNQUFNLENBQUNDLFFBQVEsQ0FBQ08sQ0FBQyxFQUFFQyxDQUFDLEVBQUVULE1BQU0sQ0FBQ0MsUUFBUSxDQUFDUSxDQUFDLEVBQUM7RUFDL0QsSUFBSSxDQUFDRSxPQUFPLEdBQUcsRUFBQ0gsQ0FBQyxFQUFFTixJQUFJLENBQUNNLENBQUMsRUFBRUMsQ0FBQyxFQUFFUCxJQUFJLENBQUNPLENBQUMsRUFBQztFQUNyQyxJQUFJLENBQUNHLE9BQU8sR0FBRyxFQUFDSixDQUFDLEVBQUVSLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDTSxDQUFDLEVBQUVDLENBQUMsRUFBRVQsTUFBTSxDQUFDRSxJQUFJLENBQUNPLENBQUMsRUFBQztFQUNuRCxJQUFJLENBQUNJLE9BQU8sR0FBR1YsSUFBSTtFQUNuQixJQUFJLENBQUNXLE9BQU8sR0FBR2QsTUFBTSxDQUFDZSxPQUFPLENBQUMsQ0FBQztFQUMvQixJQUFJLENBQUNDLGNBQWMsR0FBR1osV0FBVztFQUNqQyxJQUFJLENBQUNhLGNBQWMsR0FBR2pCLE1BQU0sQ0FBQ0ksV0FBVztBQUM1Qzs7QUFFQU4sVUFBVSxDQUFDb0IsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ3ZCLG1EQUFVLENBQUNxQixTQUFTLENBQUM7QUFDMURwQixVQUFVLENBQUNvQixTQUFTLENBQUNHLFdBQVcsR0FBR3ZCLFVBQVU7O0FBRTdDLElBQUl3QixLQUFLLEdBQUd4QixVQUFVLENBQUNvQixTQUFTOztBQUVoQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSUMsT0FBTyxHQUFHLElBQUksQ0FBQ3pCLE1BQU0sQ0FBQzBCLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNsREYsT0FBTyxJQUFJQSxPQUFPLENBQUNHLEdBQUcsQ0FBQyxJQUFJLENBQUNwQixXQUFXLEVBQUUsSUFBSSxDQUFDSSxPQUFPLEVBQUUsSUFBSSxDQUFDRSxPQUFPLEVBQUUsSUFBSSxDQUFDRyxjQUFjLENBQUM7QUFDN0YsQ0FBQzs7QUFFRE0sS0FBSyxDQUFDTSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSUosT0FBTyxHQUFHLElBQUksQ0FBQ3pCLE1BQU0sQ0FBQzBCLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNsREYsT0FBTyxJQUFJQSxPQUFPLENBQUNHLEdBQUcsQ0FBQyxJQUFJLENBQUNqQixXQUFXLEVBQUUsSUFBSSxDQUFDRSxPQUFPLEVBQUUsSUFBSSxDQUFDRSxPQUFPLEVBQUUsSUFBSSxDQUFDRyxjQUFjLENBQUM7QUFDN0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRDYWxsb3V0LmpzPzU4NjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBtYXJrdXBcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0gc2l6ZVxuICAgICAqIEBwYXJhbSB0ZXh0XG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIFNldENhbGxvdXQoZWRpdG9yLCBtYXJrdXAsIHBvc2l0aW9uLCBzaXplLCB0ZXh0LCBpc0ZyYW1lVXNlZCkge1xuXG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdTRVQtQ0FMTE9VVCcsIG1hcmt1cC5pZCk7XG5cbiAgICAgICAgdGhpcy5uZXdQb3NpdGlvbiA9IHt4OiBwb3NpdGlvbi54LCB5OiBwb3NpdGlvbi55fTtcbiAgICAgICAgdGhpcy5vbGRQb3NpdGlvbiA9IHt4OiBtYXJrdXAucG9zaXRpb24ueCwgeTogbWFya3VwLnBvc2l0aW9uLnl9O1xuICAgICAgICB0aGlzLm5ld1NpemUgPSB7eDogc2l6ZS54LCB5OiBzaXplLnl9O1xuICAgICAgICB0aGlzLm9sZFNpemUgPSB7eDogbWFya3VwLnNpemUueCwgeTogbWFya3VwLnNpemUueX07XG4gICAgICAgIHRoaXMubmV3VGV4dCA9IHRleHQ7XG4gICAgICAgIHRoaXMub2xkVGV4dCA9IG1hcmt1cC5nZXRUZXh0KCk7XG4gICAgICAgIHRoaXMubmV3SXNGcmFtZVVzZWQgPSBpc0ZyYW1lVXNlZDtcbiAgICAgICAgdGhpcy5vbGRJc0ZyYW1lVXNlZCA9IG1hcmt1cC5pc0ZyYW1lVXNlZDtcbiAgICB9XG5cbiAgICBTZXRDYWxsb3V0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIFNldENhbGxvdXQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU2V0Q2FsbG91dDtcblxuICAgIHZhciBwcm90byA9IFNldENhbGxvdXQucHJvdG90eXBlO1xuXG4gICAgcHJvdG8ucmVkbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBjYWxsb3V0ID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRoaXMudGFyZ2V0SWQpO1xuICAgICAgICBjYWxsb3V0ICYmIGNhbGxvdXQuc2V0KHRoaXMubmV3UG9zaXRpb24sIHRoaXMubmV3U2l6ZSwgdGhpcy5uZXdUZXh0LCB0aGlzLm5ld0lzRnJhbWVVc2VkKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBjYWxsb3V0ID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRoaXMudGFyZ2V0SWQpO1xuICAgICAgICBjYWxsb3V0ICYmIGNhbGxvdXQuc2V0KHRoaXMub2xkUG9zaXRpb24sIHRoaXMub2xkU2l6ZSwgdGhpcy5vbGRUZXh0LCB0aGlzLm9sZElzRnJhbWVVc2VkKTtcbiAgICB9O1xuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJTZXRDYWxsb3V0IiwiZWRpdG9yIiwibWFya3VwIiwicG9zaXRpb24iLCJzaXplIiwidGV4dCIsImlzRnJhbWVVc2VkIiwiY2FsbCIsImlkIiwibmV3UG9zaXRpb24iLCJ4IiwieSIsIm9sZFBvc2l0aW9uIiwibmV3U2l6ZSIsIm9sZFNpemUiLCJuZXdUZXh0Iiwib2xkVGV4dCIsImdldFRleHQiLCJuZXdJc0ZyYW1lVXNlZCIsIm9sZElzRnJhbWVVc2VkIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJjYWxsb3V0IiwiZ2V0TWFya3VwIiwidGFyZ2V0SWQiLCJzZXQiLCJ1bmRvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetCallout.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetCircle.js":
/*!**********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetCircle.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetCircle: () => (/* binding */ SetCircle)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n * Markup set circle action.\n *\n * Implements an {@link Autodesk.Viewing.Extensions.Markups.Core.EditAction|EditAction}\n * for editing properties of a Circle {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n * Included in documentation as an example of how to create\n * a specific EditAction that deals with Markup edition.\n * Developers are encourage to look into this class's source code and copy\n * as much code as they need. Find link to source code below.\n *\n * @tutorial feature_markup\n * @constructor\n * @memberof Autodesk.Viewing.Extensions.Markups.Core\n * @extends Autodesk.Viewing.Extensions.Markups.Core.EditAction\n *\n * @param editor\n * @param circle\n * @param position\n * @param size\n */\nfunction SetCircle(editor, circle, position, size) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-CIRCLE', circle.id);\n\n  this.newPosition = { x: position.x, y: position.y };\n  this.newSize = { x: size.x, y: size.y };\n  this.oldPosition = { x: circle.position.x, y: circle.position.y };\n  this.oldSize = { x: circle.size.x, y: circle.size.y };\n}\n\nSetCircle.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetCircle.prototype.constructor = SetCircle;\n\nvar proto = SetCircle.prototype;\n\nproto.redo = function () {\n\n  this.applyState(this.targetId, this.newPosition, this.newSize);\n};\n\nproto.undo = function () {\n\n  this.applyState(this.targetId, this.oldPosition, this.oldSize);\n};\n\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.newPosition = action.newPosition;\n    this.newSize = action.newSize;\n    return true;\n  }\n  return false;\n};\n\n/**\n *\n * @private\n */\nproto.applyState = function (targetId, position, size) {\n\n  var circle = this.editor.getMarkup(targetId);\n  if (!circle) {\n    return;\n  }\n\n  // Different stroke widths make positions differ at sub-pixel level.\n  var epsilon = 0.0001;\n\n  if (Math.abs(circle.position.x - position.x) > epsilon || Math.abs(circle.size.y - size.y) > epsilon ||\n  Math.abs(circle.position.y - position.y) > epsilon || Math.abs(circle.size.y - size.y) > epsilon) {\n\n    circle.set(position, size);\n  }\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return (\n    this.newPosition.x === this.oldPosition.x &&\n    this.newPosition.y === this.oldPosition.y &&\n    this.newSize.x === this.oldSize.x &&\n    this.newSize.y === this.oldSize.y);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRDaXJjbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTs7QUFFNkI7O0FBRXRDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQyxTQUFTQSxDQUFDQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUU7O0VBRXRETCxtREFBVSxDQUFDTSxJQUFJLENBQUMsSUFBSSxFQUFFSixNQUFNLEVBQUUsWUFBWSxFQUFFQyxNQUFNLENBQUNJLEVBQUUsQ0FBQzs7RUFFdEQsSUFBSSxDQUFDQyxXQUFXLEdBQUcsRUFBQ0MsQ0FBQyxFQUFFTCxRQUFRLENBQUNLLENBQUMsRUFBRUMsQ0FBQyxFQUFFTixRQUFRLENBQUNNLENBQUMsRUFBQztFQUNqRCxJQUFJLENBQUNDLE9BQU8sR0FBRyxFQUFDRixDQUFDLEVBQUVKLElBQUksQ0FBQ0ksQ0FBQyxFQUFFQyxDQUFDLEVBQUVMLElBQUksQ0FBQ0ssQ0FBQyxFQUFDO0VBQ3JDLElBQUksQ0FBQ0UsV0FBVyxHQUFHLEVBQUNILENBQUMsRUFBRU4sTUFBTSxDQUFDQyxRQUFRLENBQUNLLENBQUMsRUFBRUMsQ0FBQyxFQUFFUCxNQUFNLENBQUNDLFFBQVEsQ0FBQ00sQ0FBQyxFQUFDO0VBQy9ELElBQUksQ0FBQ0csT0FBTyxHQUFHLEVBQUNKLENBQUMsRUFBRU4sTUFBTSxDQUFDRSxJQUFJLENBQUNJLENBQUMsRUFBRUMsQ0FBQyxFQUFFUCxNQUFNLENBQUNFLElBQUksQ0FBQ0ssQ0FBQyxFQUFDO0FBQ3ZEOztBQUVBVCxTQUFTLENBQUNhLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNoQixtREFBVSxDQUFDYyxTQUFTLENBQUM7QUFDekRiLFNBQVMsQ0FBQ2EsU0FBUyxDQUFDRyxXQUFXLEdBQUdoQixTQUFTOztBQUUzQyxJQUFJaUIsS0FBSyxHQUFHakIsU0FBUyxDQUFDYSxTQUFTOztBQUUvQkksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDYixXQUFXLEVBQUUsSUFBSSxDQUFDRyxPQUFPLENBQUM7QUFDbEUsQ0FBQzs7QUFFRE8sS0FBSyxDQUFDSSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDRixVQUFVLENBQUMsSUFBSSxDQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDVCxXQUFXLEVBQUUsSUFBSSxDQUFDQyxPQUFPLENBQUM7QUFDbEUsQ0FBQzs7QUFFREssS0FBSyxDQUFDSyxLQUFLLEdBQUcsVUFBU0MsTUFBTSxFQUFFOztFQUUzQixJQUFJLElBQUksQ0FBQ0gsUUFBUSxLQUFLRyxNQUFNLENBQUNILFFBQVE7RUFDakMsSUFBSSxDQUFDSSxJQUFJLEtBQUtELE1BQU0sQ0FBQ0MsSUFBSSxFQUFFOztJQUUzQixJQUFJLENBQUNqQixXQUFXLEdBQUdnQixNQUFNLENBQUNoQixXQUFXO0lBQ3JDLElBQUksQ0FBQ0csT0FBTyxHQUFHYSxNQUFNLENBQUNiLE9BQU87SUFDN0IsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxPQUFPLEtBQUs7QUFDaEIsQ0FBQzs7QUFFRDtBQUNKO0FBQ0E7QUFDQTtBQUNJTyxLQUFLLENBQUNFLFVBQVUsR0FBRyxVQUFTQyxRQUFRLEVBQUVqQixRQUFRLEVBQUVDLElBQUksRUFBRTs7RUFFbEQsSUFBSUYsTUFBTSxHQUFHLElBQUksQ0FBQ0QsTUFBTSxDQUFDd0IsU0FBUyxDQUFDTCxRQUFRLENBQUM7RUFDNUMsSUFBRyxDQUFDbEIsTUFBTSxFQUFFO0lBQ1I7RUFDSjs7RUFFQTtFQUNBLElBQUl3QixPQUFPLEdBQUcsTUFBTTs7RUFFcEIsSUFBSUMsSUFBSSxDQUFDQyxHQUFHLENBQUMxQixNQUFNLENBQUNDLFFBQVEsQ0FBQ0ssQ0FBQyxHQUFHTCxRQUFRLENBQUNLLENBQUMsQ0FBQyxHQUFHa0IsT0FBTyxJQUFJQyxJQUFJLENBQUNDLEdBQUcsQ0FBQzFCLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDSyxDQUFDLEdBQUdMLElBQUksQ0FBQ0ssQ0FBQyxDQUFDLEdBQUdpQixPQUFPO0VBQ2hHQyxJQUFJLENBQUNDLEdBQUcsQ0FBQzFCLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDTSxDQUFDLEdBQUdOLFFBQVEsQ0FBQ00sQ0FBQyxDQUFDLEdBQUdpQixPQUFPLElBQUlDLElBQUksQ0FBQ0MsR0FBRyxDQUFDMUIsTUFBTSxDQUFDRSxJQUFJLENBQUNLLENBQUMsR0FBR0wsSUFBSSxDQUFDSyxDQUFDLENBQUMsR0FBR2lCLE9BQU8sRUFBRTs7SUFFbEd4QixNQUFNLENBQUMyQixHQUFHLENBQUMxQixRQUFRLEVBQUVDLElBQUksQ0FBQztFQUM5QjtBQUNKLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0lhLEtBQUssQ0FBQ2EsVUFBVSxHQUFHLFlBQVc7O0VBRTFCO0lBQ0ksSUFBSSxDQUFDdkIsV0FBVyxDQUFDQyxDQUFDLEtBQUssSUFBSSxDQUFDRyxXQUFXLENBQUNILENBQUM7SUFDekMsSUFBSSxDQUFDRCxXQUFXLENBQUNFLENBQUMsS0FBSyxJQUFJLENBQUNFLFdBQVcsQ0FBQ0YsQ0FBQztJQUN6QyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0YsQ0FBQyxLQUFLLElBQUksQ0FBQ0ksT0FBTyxDQUFDSixDQUFDO0lBQ2pDLElBQUksQ0FBQ0UsT0FBTyxDQUFDRCxDQUFDLEtBQUssSUFBSSxDQUFDRyxPQUFPLENBQUNILENBQUM7QUFDekMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRDaXJjbGUuanM/ZjMyZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuXG4gICAgLyoqXG4gICAgICogTWFya3VwIHNldCBjaXJjbGUgYWN0aW9uLlxuICAgICAqXG4gICAgICogSW1wbGVtZW50cyBhbiB7QGxpbmsgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5FZGl0QWN0aW9ufEVkaXRBY3Rpb259XG4gICAgICogZm9yIGVkaXRpbmcgcHJvcGVydGllcyBvZiBhIENpcmNsZSB7QGxpbmsgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZS5NYXJrdXB8TWFya3VwfS5cbiAgICAgKiBJbmNsdWRlZCBpbiBkb2N1bWVudGF0aW9uIGFzIGFuIGV4YW1wbGUgb2YgaG93IHRvIGNyZWF0ZVxuICAgICAqIGEgc3BlY2lmaWMgRWRpdEFjdGlvbiB0aGF0IGRlYWxzIHdpdGggTWFya3VwIGVkaXRpb24uXG4gICAgICogRGV2ZWxvcGVycyBhcmUgZW5jb3VyYWdlIHRvIGxvb2sgaW50byB0aGlzIGNsYXNzJ3Mgc291cmNlIGNvZGUgYW5kIGNvcHlcbiAgICAgKiBhcyBtdWNoIGNvZGUgYXMgdGhleSBuZWVkLiBGaW5kIGxpbmsgdG8gc291cmNlIGNvZGUgYmVsb3cuXG4gICAgICpcbiAgICAgKiBAdHV0b3JpYWwgZmVhdHVyZV9tYXJrdXBcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAbWVtYmVyb2YgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLk1hcmt1cHMuQ29yZVxuICAgICAqIEBleHRlbmRzIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5NYXJrdXBzLkNvcmUuRWRpdEFjdGlvblxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBjaXJjbGVcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0gc2l6ZVxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBTZXRDaXJjbGUoZWRpdG9yLCBjaXJjbGUsIHBvc2l0aW9uLCBzaXplKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ1NFVC1DSVJDTEUnLCBjaXJjbGUuaWQpO1xuXG4gICAgICAgIHRoaXMubmV3UG9zaXRpb24gPSB7eDogcG9zaXRpb24ueCwgeTogcG9zaXRpb24ueX07XG4gICAgICAgIHRoaXMubmV3U2l6ZSA9IHt4OiBzaXplLngsIHk6IHNpemUueX07XG4gICAgICAgIHRoaXMub2xkUG9zaXRpb24gPSB7eDogY2lyY2xlLnBvc2l0aW9uLngsIHk6IGNpcmNsZS5wb3NpdGlvbi55fTtcbiAgICAgICAgdGhpcy5vbGRTaXplID0ge3g6IGNpcmNsZS5zaXplLngsIHk6IGNpcmNsZS5zaXplLnl9O1xuICAgIH1cblxuICAgIFNldENpcmNsZS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBTZXRDaXJjbGUucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU2V0Q2lyY2xlO1xuXG4gICAgdmFyIHByb3RvID0gU2V0Q2lyY2xlLnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB0aGlzLmFwcGx5U3RhdGUodGhpcy50YXJnZXRJZCwgdGhpcy5uZXdQb3NpdGlvbiwgdGhpcy5uZXdTaXplKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuYXBwbHlTdGF0ZSh0aGlzLnRhcmdldElkLCB0aGlzLm9sZFBvc2l0aW9uLCB0aGlzLm9sZFNpemUpO1xuICAgIH07XG5cbiAgICBwcm90by5tZXJnZSA9IGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gICAgICAgIGlmICh0aGlzLnRhcmdldElkID09PSBhY3Rpb24udGFyZ2V0SWQgJiZcbiAgICAgICAgICAgIHRoaXMudHlwZSA9PT0gYWN0aW9uLnR5cGUpIHtcblxuICAgICAgICAgICAgdGhpcy5uZXdQb3NpdGlvbiA9IGFjdGlvbi5uZXdQb3NpdGlvbjtcbiAgICAgICAgICAgIHRoaXMubmV3U2l6ZSA9IGFjdGlvbi5uZXdTaXplO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgcHJvdG8uYXBwbHlTdGF0ZSA9IGZ1bmN0aW9uKHRhcmdldElkLCBwb3NpdGlvbiwgc2l6ZSkge1xuXG4gICAgICAgIHZhciBjaXJjbGUgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGFyZ2V0SWQpO1xuICAgICAgICBpZighY2lyY2xlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEaWZmZXJlbnQgc3Ryb2tlIHdpZHRocyBtYWtlIHBvc2l0aW9ucyBkaWZmZXIgYXQgc3ViLXBpeGVsIGxldmVsLlxuICAgICAgICB2YXIgZXBzaWxvbiA9IDAuMDAwMTtcblxuICAgICAgICBpZiAoTWF0aC5hYnMoY2lyY2xlLnBvc2l0aW9uLnggLSBwb3NpdGlvbi54KSA+IGVwc2lsb24gfHwgTWF0aC5hYnMoY2lyY2xlLnNpemUueSAtIHNpemUueSkgPiBlcHNpbG9uIHx8XG4gICAgICAgICAgICBNYXRoLmFicyhjaXJjbGUucG9zaXRpb24ueSAtIHBvc2l0aW9uLnkpID4gZXBzaWxvbiB8fCBNYXRoLmFicyhjaXJjbGUuc2l6ZS55IC0gc2l6ZS55KSA+IGVwc2lsb24pIHtcblxuICAgICAgICAgICAgY2lyY2xlLnNldChwb3NpdGlvbiwgc2l6ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgcHJvdG8uaXNJZGVudGl0eSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICB0aGlzLm5ld1Bvc2l0aW9uLnggPT09IHRoaXMub2xkUG9zaXRpb24ueCAmJlxuICAgICAgICAgICAgdGhpcy5uZXdQb3NpdGlvbi55ID09PSB0aGlzLm9sZFBvc2l0aW9uLnkgJiZcbiAgICAgICAgICAgIHRoaXMubmV3U2l6ZS54ID09PSB0aGlzLm9sZFNpemUueCAmJlxuICAgICAgICAgICAgdGhpcy5uZXdTaXplLnkgPT09IHRoaXMub2xkU2l6ZS55KTtcbiAgICB9O1xuXG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIlNldENpcmNsZSIsImVkaXRvciIsImNpcmNsZSIsInBvc2l0aW9uIiwic2l6ZSIsImNhbGwiLCJpZCIsIm5ld1Bvc2l0aW9uIiwieCIsInkiLCJuZXdTaXplIiwib2xkUG9zaXRpb24iLCJvbGRTaXplIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJhcHBseVN0YXRlIiwidGFyZ2V0SWQiLCJ1bmRvIiwibWVyZ2UiLCJhY3Rpb24iLCJ0eXBlIiwiZ2V0TWFya3VwIiwiZXBzaWxvbiIsIk1hdGgiLCJhYnMiLCJzZXQiLCJpc0lkZW50aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetCircle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetCloud.js":
/*!*********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetCloud.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetCloud: () => (/* binding */ SetCloud)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param cloud\n * @param position\n * @param size\n * @constructor\n */\nfunction SetCloud(editor, cloud, position, size) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-CLOUD', cloud.id);\n\n  this.newPosition = { x: position.x, y: position.y };\n  this.newSize = { x: size.x, y: size.y };\n  this.oldPosition = { x: cloud.position.x, y: cloud.position.y };\n  this.oldSize = { x: cloud.size.x, y: cloud.size.y };\n}\n\nSetCloud.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetCloud.prototype.constructor = SetCloud;\n\nvar proto = SetCloud.prototype;\n\nproto.redo = function () {\n\n  this.applyState(this.targetId, this.newPosition, this.newSize, this.newStrokeWidth, this.newColor);\n};\n\nproto.undo = function () {\n\n  this.applyState(this.targetId, this.oldPosition, this.oldSize, this.oldStrokeWidth, this.oldColor);\n};\n\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.newPosition = action.newPosition;\n    this.newSize = action.newSize;\n    return true;\n  }\n  return false;\n};\n\n/**\n *\n * @private\n */\nproto.applyState = function (targetId, position, size) {\n\n  var cloud = this.editor.getMarkup(targetId);\n  if (!cloud) {\n    return;\n  }\n\n  // Different stroke widths make positions differ at sub-pixel level.\n  var epsilon = 0.0001;\n\n  if (Math.abs(cloud.position.x - position.x) > epsilon || Math.abs(cloud.size.y - size.y) > epsilon ||\n  Math.abs(cloud.position.y - position.y) > epsilon || Math.abs(cloud.size.y - size.y) > epsilon) {\n\n    cloud.set(position, size);\n  }\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return (\n    this.newPosition.x === this.oldPosition.x &&\n    this.newPosition.y === this.oldPosition.y &&\n    this.newSize.x === this.oldSize.x &&\n    this.newSize.y === this.oldSize.y);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRDbG91ZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU2Qjs7QUFFdEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNDLFFBQVFBLENBQUNDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRTs7RUFFcERMLG1EQUFVLENBQUNNLElBQUksQ0FBQyxJQUFJLEVBQUVKLE1BQU0sRUFBRSxXQUFXLEVBQUVDLEtBQUssQ0FBQ0ksRUFBRSxDQUFDOztFQUVwRCxJQUFJLENBQUNDLFdBQVcsR0FBRyxFQUFDQyxDQUFDLEVBQUVMLFFBQVEsQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVOLFFBQVEsQ0FBQ00sQ0FBQyxFQUFDO0VBQ2pELElBQUksQ0FBQ0MsT0FBTyxHQUFHLEVBQUNGLENBQUMsRUFBRUosSUFBSSxDQUFDSSxDQUFDLEVBQUVDLENBQUMsRUFBRUwsSUFBSSxDQUFDSyxDQUFDLEVBQUM7RUFDckMsSUFBSSxDQUFDRSxXQUFXLEdBQUcsRUFBQ0gsQ0FBQyxFQUFFTixLQUFLLENBQUNDLFFBQVEsQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVQLEtBQUssQ0FBQ0MsUUFBUSxDQUFDTSxDQUFDLEVBQUM7RUFDN0QsSUFBSSxDQUFDRyxPQUFPLEdBQUcsRUFBQ0osQ0FBQyxFQUFFTixLQUFLLENBQUNFLElBQUksQ0FBQ0ksQ0FBQyxFQUFFQyxDQUFDLEVBQUVQLEtBQUssQ0FBQ0UsSUFBSSxDQUFDSyxDQUFDLEVBQUM7QUFDckQ7O0FBRUFULFFBQVEsQ0FBQ2EsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2hCLG1EQUFVLENBQUNjLFNBQVMsQ0FBQztBQUN4RGIsUUFBUSxDQUFDYSxTQUFTLENBQUNHLFdBQVcsR0FBR2hCLFFBQVE7O0FBRXpDLElBQUlpQixLQUFLLEdBQUdqQixRQUFRLENBQUNhLFNBQVM7O0FBRTlCSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNDLFVBQVUsQ0FBQyxJQUFJLENBQUNDLFFBQVEsRUFBRSxJQUFJLENBQUNiLFdBQVcsRUFBRSxJQUFJLENBQUNHLE9BQU8sRUFBRSxJQUFJLENBQUNXLGNBQWMsRUFBRSxJQUFJLENBQUNDLFFBQVEsQ0FBQztBQUN0RyxDQUFDOztBQUVETCxLQUFLLENBQUNNLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNKLFVBQVUsQ0FBQyxJQUFJLENBQUNDLFFBQVEsRUFBRSxJQUFJLENBQUNULFdBQVcsRUFBRSxJQUFJLENBQUNDLE9BQU8sRUFBRSxJQUFJLENBQUNZLGNBQWMsRUFBRSxJQUFJLENBQUNDLFFBQVEsQ0FBQztBQUN0RyxDQUFDOztBQUVEUixLQUFLLENBQUNTLEtBQUssR0FBRyxVQUFTQyxNQUFNLEVBQUU7O0VBRTNCLElBQUksSUFBSSxDQUFDUCxRQUFRLEtBQUtPLE1BQU0sQ0FBQ1AsUUFBUTtFQUNqQyxJQUFJLENBQUNRLElBQUksS0FBS0QsTUFBTSxDQUFDQyxJQUFJLEVBQUU7O0lBRTNCLElBQUksQ0FBQ3JCLFdBQVcsR0FBR29CLE1BQU0sQ0FBQ3BCLFdBQVc7SUFDckMsSUFBSSxDQUFDRyxPQUFPLEdBQUdpQixNQUFNLENBQUNqQixPQUFPO0lBQzdCLE9BQU8sSUFBSTtFQUNmO0VBQ0EsT0FBTyxLQUFLO0FBQ2hCLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0E7QUFDSU8sS0FBSyxDQUFDRSxVQUFVLEdBQUcsVUFBU0MsUUFBUSxFQUFFakIsUUFBUSxFQUFFQyxJQUFJLEVBQUU7O0VBRWxELElBQUlGLEtBQUssR0FBRyxJQUFJLENBQUNELE1BQU0sQ0FBQzRCLFNBQVMsQ0FBQ1QsUUFBUSxDQUFDO0VBQzNDLElBQUcsQ0FBQ2xCLEtBQUssRUFBRTtJQUNQO0VBQ0o7O0VBRUE7RUFDQSxJQUFJNEIsT0FBTyxHQUFHLE1BQU07O0VBRXBCLElBQUlDLElBQUksQ0FBQ0MsR0FBRyxDQUFDOUIsS0FBSyxDQUFDQyxRQUFRLENBQUNLLENBQUMsR0FBR0wsUUFBUSxDQUFDSyxDQUFDLENBQUMsR0FBR3NCLE9BQU8sSUFBSUMsSUFBSSxDQUFDQyxHQUFHLENBQUM5QixLQUFLLENBQUNFLElBQUksQ0FBQ0ssQ0FBQyxHQUFHTCxJQUFJLENBQUNLLENBQUMsQ0FBQyxHQUFHcUIsT0FBTztFQUM5RkMsSUFBSSxDQUFDQyxHQUFHLENBQUM5QixLQUFLLENBQUNDLFFBQVEsQ0FBQ00sQ0FBQyxHQUFHTixRQUFRLENBQUNNLENBQUMsQ0FBQyxHQUFHcUIsT0FBTyxJQUFJQyxJQUFJLENBQUNDLEdBQUcsQ0FBQzlCLEtBQUssQ0FBQ0UsSUFBSSxDQUFDSyxDQUFDLEdBQUdMLElBQUksQ0FBQ0ssQ0FBQyxDQUFDLEdBQUdxQixPQUFPLEVBQUU7O0lBRWhHNUIsS0FBSyxDQUFDK0IsR0FBRyxDQUFDOUIsUUFBUSxFQUFFQyxJQUFJLENBQUM7RUFDN0I7QUFDSixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNJYSxLQUFLLENBQUNpQixVQUFVLEdBQUcsWUFBVzs7RUFFMUI7SUFDSSxJQUFJLENBQUMzQixXQUFXLENBQUNDLENBQUMsS0FBSyxJQUFJLENBQUNHLFdBQVcsQ0FBQ0gsQ0FBQztJQUN6QyxJQUFJLENBQUNELFdBQVcsQ0FBQ0UsQ0FBQyxLQUFLLElBQUksQ0FBQ0UsV0FBVyxDQUFDRixDQUFDO0lBQ3pDLElBQUksQ0FBQ0MsT0FBTyxDQUFDRixDQUFDLEtBQUssSUFBSSxDQUFDSSxPQUFPLENBQUNKLENBQUM7SUFDakMsSUFBSSxDQUFDRSxPQUFPLENBQUNELENBQUMsS0FBSyxJQUFJLENBQUNHLE9BQU8sQ0FBQ0gsQ0FBQztBQUN6QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL1NldENsb3VkLmpzPzY4OWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBjbG91ZFxuICAgICAqIEBwYXJhbSBwb3NpdGlvblxuICAgICAqIEBwYXJhbSBzaXplXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIFNldENsb3VkKGVkaXRvciwgY2xvdWQsIHBvc2l0aW9uLCBzaXplKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ1NFVC1DTE9VRCcsIGNsb3VkLmlkKTtcblxuICAgICAgICB0aGlzLm5ld1Bvc2l0aW9uID0ge3g6IHBvc2l0aW9uLngsIHk6IHBvc2l0aW9uLnl9O1xuICAgICAgICB0aGlzLm5ld1NpemUgPSB7eDogc2l6ZS54LCB5OiBzaXplLnl9O1xuICAgICAgICB0aGlzLm9sZFBvc2l0aW9uID0ge3g6IGNsb3VkLnBvc2l0aW9uLngsIHk6IGNsb3VkLnBvc2l0aW9uLnl9O1xuICAgICAgICB0aGlzLm9sZFNpemUgPSB7eDogY2xvdWQuc2l6ZS54LCB5OiBjbG91ZC5zaXplLnl9O1xuICAgIH1cblxuICAgIFNldENsb3VkLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIFNldENsb3VkLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFNldENsb3VkO1xuXG4gICAgdmFyIHByb3RvID0gU2V0Q2xvdWQucHJvdG90eXBlO1xuXG4gICAgcHJvdG8ucmVkbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuYXBwbHlTdGF0ZSh0aGlzLnRhcmdldElkLCB0aGlzLm5ld1Bvc2l0aW9uLCB0aGlzLm5ld1NpemUsIHRoaXMubmV3U3Ryb2tlV2lkdGgsIHRoaXMubmV3Q29sb3IpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5hcHBseVN0YXRlKHRoaXMudGFyZ2V0SWQsIHRoaXMub2xkUG9zaXRpb24sIHRoaXMub2xkU2l6ZSwgdGhpcy5vbGRTdHJva2VXaWR0aCwgdGhpcy5vbGRDb2xvcik7XG4gICAgfTtcblxuICAgIHByb3RvLm1lcmdlID0gZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0SWQgPT09IGFjdGlvbi50YXJnZXRJZCAmJlxuICAgICAgICAgICAgdGhpcy50eXBlID09PSBhY3Rpb24udHlwZSkge1xuXG4gICAgICAgICAgICB0aGlzLm5ld1Bvc2l0aW9uID0gYWN0aW9uLm5ld1Bvc2l0aW9uO1xuICAgICAgICAgICAgdGhpcy5uZXdTaXplID0gYWN0aW9uLm5ld1NpemU7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBwcm90by5hcHBseVN0YXRlID0gZnVuY3Rpb24odGFyZ2V0SWQsIHBvc2l0aW9uLCBzaXplKSB7XG5cbiAgICAgICAgdmFyIGNsb3VkID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRhcmdldElkKTtcbiAgICAgICAgaWYoIWNsb3VkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEaWZmZXJlbnQgc3Ryb2tlIHdpZHRocyBtYWtlIHBvc2l0aW9ucyBkaWZmZXIgYXQgc3ViLXBpeGVsIGxldmVsLlxuICAgICAgICB2YXIgZXBzaWxvbiA9IDAuMDAwMTtcblxuICAgICAgICBpZiAoTWF0aC5hYnMoY2xvdWQucG9zaXRpb24ueCAtIHBvc2l0aW9uLngpID4gZXBzaWxvbiB8fCBNYXRoLmFicyhjbG91ZC5zaXplLnkgLSBzaXplLnkpID4gZXBzaWxvbiB8fFxuICAgICAgICAgICAgTWF0aC5hYnMoY2xvdWQucG9zaXRpb24ueSAtIHBvc2l0aW9uLnkpID4gZXBzaWxvbiB8fCBNYXRoLmFicyhjbG91ZC5zaXplLnkgLSBzaXplLnkpID4gZXBzaWxvbikge1xuXG4gICAgICAgICAgICBjbG91ZC5zZXQocG9zaXRpb24sIHNpemUpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHByb3RvLmlzSWRlbnRpdHkgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgdGhpcy5uZXdQb3NpdGlvbi54ID09PSB0aGlzLm9sZFBvc2l0aW9uLnggJiZcbiAgICAgICAgICAgIHRoaXMubmV3UG9zaXRpb24ueSA9PT0gdGhpcy5vbGRQb3NpdGlvbi55ICYmXG4gICAgICAgICAgICB0aGlzLm5ld1NpemUueCA9PT0gdGhpcy5vbGRTaXplLnggJiZcbiAgICAgICAgICAgIHRoaXMubmV3U2l6ZS55ID09PSB0aGlzLm9sZFNpemUueSk7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJTZXRDbG91ZCIsImVkaXRvciIsImNsb3VkIiwicG9zaXRpb24iLCJzaXplIiwiY2FsbCIsImlkIiwibmV3UG9zaXRpb24iLCJ4IiwieSIsIm5ld1NpemUiLCJvbGRQb3NpdGlvbiIsIm9sZFNpemUiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsImFwcGx5U3RhdGUiLCJ0YXJnZXRJZCIsIm5ld1N0cm9rZVdpZHRoIiwibmV3Q29sb3IiLCJ1bmRvIiwib2xkU3Ryb2tlV2lkdGgiLCJvbGRDb2xvciIsIm1lcmdlIiwiYWN0aW9uIiwidHlwZSIsImdldE1hcmt1cCIsImVwc2lsb24iLCJNYXRoIiwiYWJzIiwic2V0IiwiaXNJZGVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetCloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetDimension.js":
/*!*************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetDimension.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetDimension: () => (/* binding */ SetDimension)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param dimension\n * @param firstAnchor\n * @param secondAnchor\n * @constructor\n */\nfunction SetDimension(editor, dimension, firstAnchor, secondAnchor, text) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-DIMENSION', dimension.id);\n\n  this.newFirstAnchor = { x: firstAnchor.x, y: firstAnchor.y };\n  this.newSecondAnchor = { x: secondAnchor.x, y: secondAnchor.y };\n  this.oldFirstAnchor = { x: dimension.firstAnchor.x, y: dimension.firstAnchor.y };\n  this.oldSecondAnchor = { x: dimension.secondAnchor.x, y: dimension.secondAnchor.y };\n  this.newText = text;\n  this.oldText = dimension.currentText;\n}\n\nSetDimension.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetDimension.prototype.constructor = SetDimension;\n\nvar proto = SetDimension.prototype;\n\nproto.redo = function () {\n\n  this.applyState(this.newFirstAnchor, this.newSecondAnchor, this.newText);\n\n};\n\nproto.undo = function () {\n\n  this.applyState(this.oldFirstAnchor, this.oldSecondAnchor, this.oldText);\n\n};\n\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.newFirstAnchor = action.newFirstAnchor;\n    this.newSecondAnchor = action.newSecondAnchor;\n    this.newText = action.newText;\n    return true;\n  }\n  return false;\n};\n\n/**\n *\n * @private\n */\nproto.applyState = function (firstAnchor, secondAnchor, text) {\n\n  var dimension = this.editor.getMarkup(this.targetId);\n\n  if (!dimension) {\n    return;\n  }\n\n  dimension.set(firstAnchor.x, firstAnchor.y, secondAnchor.x, secondAnchor.y, text);\n\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return this.newText === this.oldText && (\n  !this.newFirstAnchor || !this.newSecondAnchor ||\n  this.newFirstAnchor.x === this.oldFirstAnchor.x &&\n  this.newFirstAnchor.y === this.oldFirstAnchor.y &&\n  this.newSecondAnchor.x === this.oldSecondAnchor.x &&\n  this.newSecondAnchor.y === this.oldSecondAnchor.y);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXREaW1lbnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTs7QUFFNkI7O0FBRXRDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQyxZQUFZQSxDQUFDQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsV0FBVyxFQUFFQyxZQUFZLEVBQUVDLElBQUksRUFBRTs7RUFFN0VOLG1EQUFVLENBQUNPLElBQUksQ0FBQyxJQUFJLEVBQUVMLE1BQU0sRUFBRSxlQUFlLEVBQUVDLFNBQVMsQ0FBQ0ssRUFBRSxDQUFDOztFQUU1RCxJQUFJLENBQUNDLGNBQWMsR0FBRyxFQUFDQyxDQUFDLEVBQUVOLFdBQVcsQ0FBQ00sQ0FBQyxFQUFFQyxDQUFDLEVBQUVQLFdBQVcsQ0FBQ08sQ0FBQyxFQUFDO0VBQzFELElBQUksQ0FBQ0MsZUFBZSxHQUFHLEVBQUNGLENBQUMsRUFBRUwsWUFBWSxDQUFDSyxDQUFDLEVBQUVDLENBQUMsRUFBRU4sWUFBWSxDQUFDTSxDQUFDLEVBQUM7RUFDN0QsSUFBSSxDQUFDRSxjQUFjLEdBQUcsRUFBQ0gsQ0FBQyxFQUFFUCxTQUFTLENBQUNDLFdBQVcsQ0FBQ00sQ0FBQyxFQUFFQyxDQUFDLEVBQUVSLFNBQVMsQ0FBQ0MsV0FBVyxDQUFDTyxDQUFDLEVBQUM7RUFDOUUsSUFBSSxDQUFDRyxlQUFlLEdBQUcsRUFBQ0osQ0FBQyxFQUFFUCxTQUFTLENBQUNFLFlBQVksQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVSLFNBQVMsQ0FBQ0UsWUFBWSxDQUFDTSxDQUFDLEVBQUM7RUFDakYsSUFBSSxDQUFDSSxPQUFPLEdBQUdULElBQUk7RUFDbkIsSUFBSSxDQUFDVSxPQUFPLEdBQUdiLFNBQVMsQ0FBQ2MsV0FBVztBQUN4Qzs7QUFFQWhCLFlBQVksQ0FBQ2lCLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNwQixtREFBVSxDQUFDa0IsU0FBUyxDQUFDO0FBQzVEakIsWUFBWSxDQUFDaUIsU0FBUyxDQUFDRyxXQUFXLEdBQUdwQixZQUFZOztBQUVqRCxJQUFJcUIsS0FBSyxHQUFHckIsWUFBWSxDQUFDaUIsU0FBUzs7QUFFbENJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUksQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQ2YsY0FBYyxFQUFFLElBQUksQ0FBQ0csZUFBZSxFQUFFLElBQUksQ0FBQ0csT0FBTyxDQUFDOztBQUU1RSxDQUFDOztBQUVETyxLQUFLLENBQUNHLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJLENBQUNELFVBQVUsQ0FBQyxJQUFJLENBQUNYLGNBQWMsRUFBRSxJQUFJLENBQUNDLGVBQWUsRUFBRSxJQUFJLENBQUNFLE9BQU8sQ0FBQzs7QUFFNUUsQ0FBQzs7QUFFRE0sS0FBSyxDQUFDSSxLQUFLLEdBQUcsVUFBU0MsTUFBTSxFQUFFOztFQUUzQixJQUFJLElBQUksQ0FBQ0MsUUFBUSxLQUFLRCxNQUFNLENBQUNDLFFBQVE7RUFDakMsSUFBSSxDQUFDQyxJQUFJLEtBQUtGLE1BQU0sQ0FBQ0UsSUFBSSxFQUFFOztJQUUzQixJQUFJLENBQUNwQixjQUFjLEdBQUdrQixNQUFNLENBQUNsQixjQUFjO0lBQzNDLElBQUksQ0FBQ0csZUFBZSxHQUFHZSxNQUFNLENBQUNmLGVBQWU7SUFDN0MsSUFBSSxDQUFDRyxPQUFPLEdBQUdZLE1BQU0sQ0FBQ1osT0FBTztJQUM3QixPQUFPLElBQUk7RUFDZjtFQUNBLE9BQU8sS0FBSztBQUNoQixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNBO0FBQ0lPLEtBQUssQ0FBQ0UsVUFBVSxHQUFHLFVBQVNwQixXQUFXLEVBQUVDLFlBQVksRUFBRUMsSUFBSSxFQUFFOztFQUV6RCxJQUFJSCxTQUFTLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUM0QixTQUFTLENBQUMsSUFBSSxDQUFDRixRQUFRLENBQUM7O0VBRXBELElBQUcsQ0FBQ3pCLFNBQVMsRUFBRTtJQUNYO0VBQ0o7O0VBRUFBLFNBQVMsQ0FBQzRCLEdBQUcsQ0FBQzNCLFdBQVcsQ0FBQ00sQ0FBQyxFQUFFTixXQUFXLENBQUNPLENBQUMsRUFBRU4sWUFBWSxDQUFDSyxDQUFDLEVBQUVMLFlBQVksQ0FBQ00sQ0FBQyxFQUFFTCxJQUFJLENBQUM7O0FBRXJGLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0lnQixLQUFLLENBQUNVLFVBQVUsR0FBRyxZQUFXOztFQUUxQixPQUFTLElBQUksQ0FBQ2pCLE9BQU8sS0FBSyxJQUFJLENBQUNDLE9BQU87RUFDbEMsQ0FBQyxJQUFJLENBQUNQLGNBQWMsSUFBSSxDQUFDLElBQUksQ0FBQ0csZUFBZTtFQUM3QyxJQUFJLENBQUNILGNBQWMsQ0FBQ0MsQ0FBQyxLQUFLLElBQUksQ0FBQ0csY0FBYyxDQUFDSCxDQUFDO0VBQy9DLElBQUksQ0FBQ0QsY0FBYyxDQUFDRSxDQUFDLEtBQUssSUFBSSxDQUFDRSxjQUFjLENBQUNGLENBQUM7RUFDL0MsSUFBSSxDQUFDQyxlQUFlLENBQUNGLENBQUMsS0FBSyxJQUFJLENBQUNJLGVBQWUsQ0FBQ0osQ0FBQztFQUNqRCxJQUFJLENBQUNFLGVBQWUsQ0FBQ0QsQ0FBQyxLQUFLLElBQUksQ0FBQ0csZUFBZSxDQUFDSCxDQUFDLENBQUM7QUFDMUQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXREaW1lbnNpb24uanM/ZWZlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIGRpbWVuc2lvblxuICAgICAqIEBwYXJhbSBmaXJzdEFuY2hvclxuICAgICAqIEBwYXJhbSBzZWNvbmRBbmNob3JcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gU2V0RGltZW5zaW9uKGVkaXRvciwgZGltZW5zaW9uLCBmaXJzdEFuY2hvciwgc2Vjb25kQW5jaG9yLCB0ZXh0KSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ1NFVC1ESU1FTlNJT04nLCBkaW1lbnNpb24uaWQpO1xuXG4gICAgICAgIHRoaXMubmV3Rmlyc3RBbmNob3IgPSB7eDogZmlyc3RBbmNob3IueCwgeTogZmlyc3RBbmNob3IueX07XG4gICAgICAgIHRoaXMubmV3U2Vjb25kQW5jaG9yID0ge3g6IHNlY29uZEFuY2hvci54LCB5OiBzZWNvbmRBbmNob3IueX07XG4gICAgICAgIHRoaXMub2xkRmlyc3RBbmNob3IgPSB7eDogZGltZW5zaW9uLmZpcnN0QW5jaG9yLngsIHk6IGRpbWVuc2lvbi5maXJzdEFuY2hvci55fTtcbiAgICAgICAgdGhpcy5vbGRTZWNvbmRBbmNob3IgPSB7eDogZGltZW5zaW9uLnNlY29uZEFuY2hvci54LCB5OiBkaW1lbnNpb24uc2Vjb25kQW5jaG9yLnl9O1xuICAgICAgICB0aGlzLm5ld1RleHQgPSB0ZXh0O1xuICAgICAgICB0aGlzLm9sZFRleHQgPSBkaW1lbnNpb24uY3VycmVudFRleHQ7XG4gICAgfVxuXG4gICAgU2V0RGltZW5zaW9uLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIFNldERpbWVuc2lvbi5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTZXREaW1lbnNpb247XG5cbiAgICB2YXIgcHJvdG8gPSBTZXREaW1lbnNpb24ucHJvdG90eXBlO1xuXG4gICAgcHJvdG8ucmVkbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuYXBwbHlTdGF0ZSh0aGlzLm5ld0ZpcnN0QW5jaG9yLCB0aGlzLm5ld1NlY29uZEFuY2hvciwgdGhpcy5uZXdUZXh0KTtcblxuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5hcHBseVN0YXRlKHRoaXMub2xkRmlyc3RBbmNob3IsIHRoaXMub2xkU2Vjb25kQW5jaG9yLCB0aGlzLm9sZFRleHQpO1xuXG4gICAgfTtcblxuICAgIHByb3RvLm1lcmdlID0gZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0SWQgPT09IGFjdGlvbi50YXJnZXRJZCAmJlxuICAgICAgICAgICAgdGhpcy50eXBlID09PSBhY3Rpb24udHlwZSkge1xuXG4gICAgICAgICAgICB0aGlzLm5ld0ZpcnN0QW5jaG9yID0gYWN0aW9uLm5ld0ZpcnN0QW5jaG9yO1xuICAgICAgICAgICAgdGhpcy5uZXdTZWNvbmRBbmNob3IgPSBhY3Rpb24ubmV3U2Vjb25kQW5jaG9yO1xuICAgICAgICAgICAgdGhpcy5uZXdUZXh0ID0gYWN0aW9uLm5ld1RleHQ7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBwcm90by5hcHBseVN0YXRlID0gZnVuY3Rpb24oZmlyc3RBbmNob3IsIHNlY29uZEFuY2hvciwgdGV4dCkge1xuXG4gICAgICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG5cbiAgICAgICAgaWYoIWRpbWVuc2lvbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZGltZW5zaW9uLnNldChmaXJzdEFuY2hvci54LCBmaXJzdEFuY2hvci55LCBzZWNvbmRBbmNob3IueCwgc2Vjb25kQW5jaG9yLnksIHRleHQpO1xuXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHByb3RvLmlzSWRlbnRpdHkgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4gKCh0aGlzLm5ld1RleHQgPT09IHRoaXMub2xkVGV4dCkgJiYgKFxuICAgICAgICAgICAgIXRoaXMubmV3Rmlyc3RBbmNob3IgfHwgIXRoaXMubmV3U2Vjb25kQW5jaG9yIHx8XG4gICAgICAgICAgICB0aGlzLm5ld0ZpcnN0QW5jaG9yLnggPT09IHRoaXMub2xkRmlyc3RBbmNob3IueCAmJlxuICAgICAgICAgICAgdGhpcy5uZXdGaXJzdEFuY2hvci55ID09PSB0aGlzLm9sZEZpcnN0QW5jaG9yLnkgJiZcbiAgICAgICAgICAgIHRoaXMubmV3U2Vjb25kQW5jaG9yLnggPT09IHRoaXMub2xkU2Vjb25kQW5jaG9yLnggJiZcbiAgICAgICAgICAgIHRoaXMubmV3U2Vjb25kQW5jaG9yLnkgPT09IHRoaXMub2xkU2Vjb25kQW5jaG9yLnkpKTtcbiAgICB9O1xuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJTZXREaW1lbnNpb24iLCJlZGl0b3IiLCJkaW1lbnNpb24iLCJmaXJzdEFuY2hvciIsInNlY29uZEFuY2hvciIsInRleHQiLCJjYWxsIiwiaWQiLCJuZXdGaXJzdEFuY2hvciIsIngiLCJ5IiwibmV3U2Vjb25kQW5jaG9yIiwib2xkRmlyc3RBbmNob3IiLCJvbGRTZWNvbmRBbmNob3IiLCJuZXdUZXh0Iiwib2xkVGV4dCIsImN1cnJlbnRUZXh0IiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJhcHBseVN0YXRlIiwidW5kbyIsIm1lcmdlIiwiYWN0aW9uIiwidGFyZ2V0SWQiLCJ0eXBlIiwiZ2V0TWFya3VwIiwic2V0IiwiaXNJZGVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetDimension.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetFreehand.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetFreehand.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetFreehand: () => (/* binding */ SetFreehand)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param freehand\n * @param position\n * @param size\n * @param locations\n * @constructor\n */\nfunction SetFreehand(editor, freehand, position, size, locations, isAbsoluteCoords) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-FREEHAND', freehand.id);\n\n  this.position = position;\n  this.size = size;\n  this.locations = isAbsoluteCoords ? locations : locations.slice(0);\n  this.isAbsoluteCoords = isAbsoluteCoords;\n\n  // No need to save old data\n}\n\nSetFreehand.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetFreehand.prototype.constructor = SetFreehand;\n\nvar proto = SetFreehand.prototype;\n\nproto.redo = function () {\n\n  var freehand = this.editor.getMarkup(this.targetId);\n  if (!freehand) {\n    return;\n  }\n\n  freehand.set(this.position, this.size, this.locations, this.isAbsoluteCoords);\n};\n\nproto.undo = function () {\n\n  // No need for undo.\n};\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.locations = action.isAbsoluteCoords ? action.locations : action.locations.slice(0);\n    this.position = action.position;\n    this.size = action.size;\n    this.isAbsoluteCoords = action.isAbsoluteCoords;\n    return true;\n  }\n  return false;\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return false; // No need to optimize, always false.\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRGcmVlaGFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU2Qjs7QUFFdEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0MsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLGdCQUFnQixFQUFFOztFQUV2RlAsbURBQVUsQ0FBQ1EsSUFBSSxDQUFDLElBQUksRUFBRU4sTUFBTSxFQUFFLGNBQWMsRUFBRUMsUUFBUSxDQUFDTSxFQUFFLENBQUM7O0VBRTFELElBQUksQ0FBQ0wsUUFBUSxHQUFHQSxRQUFRO0VBQ3hCLElBQUksQ0FBQ0MsSUFBSSxHQUFHQSxJQUFJO0VBQ2hCLElBQUksQ0FBQ0MsU0FBUyxHQUFHQyxnQkFBZ0IsR0FBR0QsU0FBUyxHQUFHQSxTQUFTLENBQUNJLEtBQUssQ0FBQyxDQUFDLENBQUM7RUFDbEUsSUFBSSxDQUFDSCxnQkFBZ0IsR0FBR0EsZ0JBQWdCOztFQUV4QztBQUNKOztBQUVBTixXQUFXLENBQUNVLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNiLG1EQUFVLENBQUNXLFNBQVMsQ0FBQztBQUMzRFYsV0FBVyxDQUFDVSxTQUFTLENBQUNHLFdBQVcsR0FBR2IsV0FBVzs7QUFFL0MsSUFBSWMsS0FBSyxHQUFHZCxXQUFXLENBQUNVLFNBQVM7O0FBRWpDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJYixRQUFRLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUNlLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNuRCxJQUFJLENBQUNmLFFBQVEsRUFBRTtJQUNYO0VBQ0o7O0VBRUFBLFFBQVEsQ0FBQ2dCLEdBQUcsQ0FBQyxJQUFJLENBQUNmLFFBQVEsRUFBRSxJQUFJLENBQUNDLElBQUksRUFBRSxJQUFJLENBQUNDLFNBQVMsRUFBRSxJQUFJLENBQUNDLGdCQUFnQixDQUFDO0FBQ2pGLENBQUM7O0FBRURRLEtBQUssQ0FBQ0ssSUFBSSxHQUFHLFlBQVc7O0VBQ3BCO0FBQUEsQ0FDSDtBQUVETCxLQUFLLENBQUNNLEtBQUssR0FBRyxVQUFTQyxNQUFNLEVBQUU7O0VBRTNCLElBQUksSUFBSSxDQUFDSixRQUFRLEtBQUtJLE1BQU0sQ0FBQ0osUUFBUTtFQUNqQyxJQUFJLENBQUNLLElBQUksS0FBS0QsTUFBTSxDQUFDQyxJQUFJLEVBQUU7O0lBRTNCLElBQUksQ0FBQ2pCLFNBQVMsR0FBR2dCLE1BQU0sQ0FBQ2YsZ0JBQWdCLEdBQUdlLE1BQU0sQ0FBQ2hCLFNBQVMsR0FBR2dCLE1BQU0sQ0FBQ2hCLFNBQVMsQ0FBQ0ksS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN2RixJQUFJLENBQUNOLFFBQVEsR0FBR2tCLE1BQU0sQ0FBQ2xCLFFBQVE7SUFDL0IsSUFBSSxDQUFDQyxJQUFJLEdBQUdpQixNQUFNLENBQUNqQixJQUFJO0lBQ3ZCLElBQUksQ0FBQ0UsZ0JBQWdCLEdBQUdlLE1BQU0sQ0FBQ2YsZ0JBQWdCO0lBQy9DLE9BQU8sSUFBSTtFQUNmO0VBQ0EsT0FBTyxLQUFLO0FBQ2hCLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0lRLEtBQUssQ0FBQ1MsVUFBVSxHQUFHLFlBQVc7O0VBRTFCLE9BQU8sS0FBSyxDQUFDLENBQUM7QUFDbEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRGcmVlaGFuZC5qcz82ZDhmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgKiBAcGFyYW0gZnJlZWhhbmRcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0gc2l6ZVxuICAgICAqIEBwYXJhbSBsb2NhdGlvbnNcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gU2V0RnJlZWhhbmQoZWRpdG9yLCBmcmVlaGFuZCwgcG9zaXRpb24sIHNpemUsIGxvY2F0aW9ucywgaXNBYnNvbHV0ZUNvb3Jkcykge1xuXG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdTRVQtRlJFRUhBTkQnLCBmcmVlaGFuZC5pZCk7XG5cbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHBvc2l0aW9uO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLmxvY2F0aW9ucyA9IGlzQWJzb2x1dGVDb29yZHMgPyBsb2NhdGlvbnMgOiBsb2NhdGlvbnMuc2xpY2UoMCk7XG4gICAgICAgIHRoaXMuaXNBYnNvbHV0ZUNvb3JkcyA9IGlzQWJzb2x1dGVDb29yZHM7XG5cbiAgICAgICAgLy8gTm8gbmVlZCB0byBzYXZlIG9sZCBkYXRhXG4gICAgfVxuXG4gICAgU2V0RnJlZWhhbmQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgU2V0RnJlZWhhbmQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU2V0RnJlZWhhbmQ7XG5cbiAgICB2YXIgcHJvdG8gPSBTZXRGcmVlaGFuZC5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIGZyZWVoYW5kID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRoaXMudGFyZ2V0SWQpO1xuICAgICAgICBpZiAoIWZyZWVoYW5kKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBmcmVlaGFuZC5zZXQodGhpcy5wb3NpdGlvbiwgdGhpcy5zaXplLCB0aGlzLmxvY2F0aW9ucywgdGhpcy5pc0Fic29sdXRlQ29vcmRzKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBObyBuZWVkIGZvciB1bmRvLlxuICAgIH07XG5cbiAgICBwcm90by5tZXJnZSA9IGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gICAgICAgIGlmICh0aGlzLnRhcmdldElkID09PSBhY3Rpb24udGFyZ2V0SWQgJiZcbiAgICAgICAgICAgIHRoaXMudHlwZSA9PT0gYWN0aW9uLnR5cGUpIHtcblxuICAgICAgICAgICAgdGhpcy5sb2NhdGlvbnMgPSBhY3Rpb24uaXNBYnNvbHV0ZUNvb3JkcyA/IGFjdGlvbi5sb2NhdGlvbnMgOiBhY3Rpb24ubG9jYXRpb25zLnNsaWNlKDApO1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbiA9IGFjdGlvbi5wb3NpdGlvbjtcbiAgICAgICAgICAgIHRoaXMuc2l6ZSA9IGFjdGlvbi5zaXplO1xuICAgICAgICAgICAgdGhpcy5pc0Fic29sdXRlQ29vcmRzID0gYWN0aW9uLmlzQWJzb2x1dGVDb29yZHM7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHByb3RvLmlzSWRlbnRpdHkgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4gZmFsc2U7IC8vIE5vIG5lZWQgdG8gb3B0aW1pemUsIGFsd2F5cyBmYWxzZS5cbiAgICB9O1xuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJTZXRGcmVlaGFuZCIsImVkaXRvciIsImZyZWVoYW5kIiwicG9zaXRpb24iLCJzaXplIiwibG9jYXRpb25zIiwiaXNBYnNvbHV0ZUNvb3JkcyIsImNhbGwiLCJpZCIsInNsaWNlIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJnZXRNYXJrdXAiLCJ0YXJnZXRJZCIsInNldCIsInVuZG8iLCJtZXJnZSIsImFjdGlvbiIsInR5cGUiLCJpc0lkZW50aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetFreehand.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetHighlight.js":
/*!*************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetHighlight.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetHighlight: () => (/* binding */ SetHighlight)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param highlight\n * @param position\n * @param size\n * @param locations\n * @constructor\n */\nfunction SetHighlight(editor, highlight, position, size, locations, isAbsoluteCoords) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-HIGHLIGHT', highlight.id);\n\n  this.position = position;\n  this.size = size;\n  this.locations = isAbsoluteCoords ? locations : locations.slice(0);\n  this.isAbsoluteCoords = isAbsoluteCoords;\n\n  // No need to save old data\n}\n\nSetHighlight.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetHighlight.prototype.constructor = SetHighlight;\n\nvar proto = SetHighlight.prototype;\n\nproto.redo = function () {\n\n  var highlight = this.editor.getMarkup(this.targetId);\n  if (!highlight) {\n    return;\n  }\n\n  highlight.set(this.position, this.size, this.locations, this.isAbsoluteCoords);\n};\n\nproto.undo = function () {\n\n  // No need for undo.\n};\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.locations = action.isAbsoluteCoords ? action.locations : action.locations.slice(0);\n    this.position = action.position;\n    this.size = action.size;\n    this.isAbsoluteCoords = action.isAbsoluteCoords;\n    return true;\n  }\n  return false;\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return false; // No need to optimize, always false.\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRIaWdobGlnaHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTs7QUFFNkI7O0FBRXRDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNDLFlBQVlBLENBQUNDLE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFQyxnQkFBZ0IsRUFBRTs7RUFFekZQLG1EQUFVLENBQUNRLElBQUksQ0FBQyxJQUFJLEVBQUVOLE1BQU0sRUFBRSxlQUFlLEVBQUVDLFNBQVMsQ0FBQ00sRUFBRSxDQUFDOztFQUU1RCxJQUFJLENBQUNMLFFBQVEsR0FBR0EsUUFBUTtFQUN4QixJQUFJLENBQUNDLElBQUksR0FBR0EsSUFBSTtFQUNoQixJQUFJLENBQUNDLFNBQVMsR0FBR0MsZ0JBQWdCLEdBQUdELFNBQVMsR0FBR0EsU0FBUyxDQUFDSSxLQUFLLENBQUMsQ0FBQyxDQUFDO0VBQ2xFLElBQUksQ0FBQ0gsZ0JBQWdCLEdBQUdBLGdCQUFnQjs7RUFFeEM7QUFDSjs7QUFFQU4sWUFBWSxDQUFDVSxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDYixtREFBVSxDQUFDVyxTQUFTLENBQUM7QUFDNURWLFlBQVksQ0FBQ1UsU0FBUyxDQUFDRyxXQUFXLEdBQUdiLFlBQVk7O0FBRWpELElBQUljLEtBQUssR0FBR2QsWUFBWSxDQUFDVSxTQUFTOztBQUVsQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSWIsU0FBUyxHQUFHLElBQUksQ0FBQ0QsTUFBTSxDQUFDZSxTQUFTLENBQUMsSUFBSSxDQUFDQyxRQUFRLENBQUM7RUFDcEQsSUFBSSxDQUFDZixTQUFTLEVBQUU7SUFDWjtFQUNKOztFQUVBQSxTQUFTLENBQUNnQixHQUFHLENBQUMsSUFBSSxDQUFDZixRQUFRLEVBQUUsSUFBSSxDQUFDQyxJQUFJLEVBQUUsSUFBSSxDQUFDQyxTQUFTLEVBQUUsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQztBQUNsRixDQUFDOztBQUVEUSxLQUFLLENBQUNLLElBQUksR0FBRyxZQUFXOztFQUNwQjtBQUFBLENBQ0g7QUFFREwsS0FBSyxDQUFDTSxLQUFLLEdBQUcsVUFBU0MsTUFBTSxFQUFFOztFQUUzQixJQUFJLElBQUksQ0FBQ0osUUFBUSxLQUFLSSxNQUFNLENBQUNKLFFBQVE7RUFDakMsSUFBSSxDQUFDSyxJQUFJLEtBQUtELE1BQU0sQ0FBQ0MsSUFBSSxFQUFFOztJQUUzQixJQUFJLENBQUNqQixTQUFTLEdBQUdnQixNQUFNLENBQUNmLGdCQUFnQixHQUFHZSxNQUFNLENBQUNoQixTQUFTLEdBQUdnQixNQUFNLENBQUNoQixTQUFTLENBQUNJLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDdkYsSUFBSSxDQUFDTixRQUFRLEdBQUdrQixNQUFNLENBQUNsQixRQUFRO0lBQy9CLElBQUksQ0FBQ0MsSUFBSSxHQUFHaUIsTUFBTSxDQUFDakIsSUFBSTtJQUN2QixJQUFJLENBQUNFLGdCQUFnQixHQUFHZSxNQUFNLENBQUNmLGdCQUFnQjtJQUMvQyxPQUFPLElBQUk7RUFDZjtFQUNBLE9BQU8sS0FBSztBQUNoQixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNJUSxLQUFLLENBQUNTLFVBQVUsR0FBRyxZQUFXOztFQUUxQixPQUFPLEtBQUssQ0FBQyxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvU2V0SGlnaGxpZ2h0LmpzPzY0MjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBoaWdobGlnaHRcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKiBAcGFyYW0gc2l6ZVxuICAgICAqIEBwYXJhbSBsb2NhdGlvbnNcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gU2V0SGlnaGxpZ2h0KGVkaXRvciwgaGlnaGxpZ2h0LCBwb3NpdGlvbiwgc2l6ZSwgbG9jYXRpb25zLCBpc0Fic29sdXRlQ29vcmRzKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ1NFVC1ISUdITElHSFQnLCBoaWdobGlnaHQuaWQpO1xuXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5sb2NhdGlvbnMgPSBpc0Fic29sdXRlQ29vcmRzID8gbG9jYXRpb25zIDogbG9jYXRpb25zLnNsaWNlKDApO1xuICAgICAgICB0aGlzLmlzQWJzb2x1dGVDb29yZHMgPSBpc0Fic29sdXRlQ29vcmRzO1xuXG4gICAgICAgIC8vIE5vIG5lZWQgdG8gc2F2ZSBvbGQgZGF0YVxuICAgIH1cblxuICAgIFNldEhpZ2hsaWdodC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRBY3Rpb24ucHJvdG90eXBlKTtcbiAgICBTZXRIaWdobGlnaHQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU2V0SGlnaGxpZ2h0O1xuXG4gICAgdmFyIHByb3RvID0gU2V0SGlnaGxpZ2h0LnByb3RvdHlwZTtcblxuICAgIHByb3RvLnJlZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgaGlnaGxpZ2h0ID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRoaXMudGFyZ2V0SWQpO1xuICAgICAgICBpZiAoIWhpZ2hsaWdodCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaGlnaGxpZ2h0LnNldCh0aGlzLnBvc2l0aW9uLCB0aGlzLnNpemUsIHRoaXMubG9jYXRpb25zLCB0aGlzLmlzQWJzb2x1dGVDb29yZHMpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIE5vIG5lZWQgZm9yIHVuZG8uXG4gICAgfTtcblxuICAgIHByb3RvLm1lcmdlID0gZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0SWQgPT09IGFjdGlvbi50YXJnZXRJZCAmJlxuICAgICAgICAgICAgdGhpcy50eXBlID09PSBhY3Rpb24udHlwZSkge1xuXG4gICAgICAgICAgICB0aGlzLmxvY2F0aW9ucyA9IGFjdGlvbi5pc0Fic29sdXRlQ29vcmRzID8gYWN0aW9uLmxvY2F0aW9ucyA6IGFjdGlvbi5sb2NhdGlvbnMuc2xpY2UoMCk7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uID0gYWN0aW9uLnBvc2l0aW9uO1xuICAgICAgICAgICAgdGhpcy5zaXplID0gYWN0aW9uLnNpemU7XG4gICAgICAgICAgICB0aGlzLmlzQWJzb2x1dGVDb29yZHMgPSBhY3Rpb24uaXNBYnNvbHV0ZUNvb3JkcztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgcHJvdG8uaXNJZGVudGl0eSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHJldHVybiBmYWxzZTsgLy8gTm8gbmVlZCB0byBvcHRpbWl6ZSwgYWx3YXlzIGZhbHNlLlxuICAgIH07XG5cbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiU2V0SGlnaGxpZ2h0IiwiZWRpdG9yIiwiaGlnaGxpZ2h0IiwicG9zaXRpb24iLCJzaXplIiwibG9jYXRpb25zIiwiaXNBYnNvbHV0ZUNvb3JkcyIsImNhbGwiLCJpZCIsInNsaWNlIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJnZXRNYXJrdXAiLCJ0YXJnZXRJZCIsInNldCIsInVuZG8iLCJtZXJnZSIsImFjdGlvbiIsInR5cGUiLCJpc0lkZW50aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetHighlight.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetPolycloud.js":
/*!*************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetPolycloud.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetPolycloud: () => (/* binding */ SetPolycloud)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param polycloud\n * @param position\n * @param size\n * @param locations\n * @param closed\n * @constructor\n */\nfunction SetPolycloud(editor, polycloud, position, size, locations, closed) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-POLYCLOUD', polycloud.id);\n\n  this.position = position;\n  this.size = size;\n  this.locations = locations.concat();\n  this.closed = closed;\n\n  // No need to save old data\n}\n\nSetPolycloud.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetPolycloud.prototype.constructor = SetPolycloud;\n\nvar proto = SetPolycloud.prototype;\n\nproto.redo = function () {\n\n  var polycloud = this.editor.getMarkup(this.targetId);\n  if (!polycloud) {\n    return;\n  }\n\n  polycloud.set(this.position, this.size, this.locations, this.closed);\n};\n\nproto.undo = function () {\n\n  // No need for undo.\n};\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.locations = action.locations.concat();\n    this.position = action.position;\n    this.size = action.size;\n    this.closed = action.closed;\n    return true;\n  }\n  return false;\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return false; // No need to optimize, always false.\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRQb2x5Y2xvdWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTs7QUFFNkI7O0FBRXRDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0MsWUFBWUEsQ0FBQ0MsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBRTs7RUFFL0VQLG1EQUFVLENBQUNRLElBQUksQ0FBQyxJQUFJLEVBQUVOLE1BQU0sRUFBRSxlQUFlLEVBQUVDLFNBQVMsQ0FBQ00sRUFBRSxDQUFDOztFQUU1RCxJQUFJLENBQUNMLFFBQVEsR0FBR0EsUUFBUTtFQUN4QixJQUFJLENBQUNDLElBQUksR0FBR0EsSUFBSTtFQUNoQixJQUFJLENBQUNDLFNBQVMsR0FBR0EsU0FBUyxDQUFDSSxNQUFNLENBQUMsQ0FBQztFQUNuQyxJQUFJLENBQUNILE1BQU0sR0FBR0EsTUFBTTs7RUFFcEI7QUFDSjs7QUFFQU4sWUFBWSxDQUFDVSxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDYixtREFBVSxDQUFDVyxTQUFTLENBQUM7QUFDNURWLFlBQVksQ0FBQ1UsU0FBUyxDQUFDRyxXQUFXLEdBQUdiLFlBQVk7O0FBRWpELElBQUljLEtBQUssR0FBR2QsWUFBWSxDQUFDVSxTQUFTOztBQUVsQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSWIsU0FBUyxHQUFHLElBQUksQ0FBQ0QsTUFBTSxDQUFDZSxTQUFTLENBQUMsSUFBSSxDQUFDQyxRQUFRLENBQUM7RUFDcEQsSUFBRyxDQUFDZixTQUFTLEVBQUU7SUFDWDtFQUNKOztFQUVBQSxTQUFTLENBQUNnQixHQUFHLENBQUMsSUFBSSxDQUFDZixRQUFRLEVBQUUsSUFBSSxDQUFDQyxJQUFJLEVBQUUsSUFBSSxDQUFDQyxTQUFTLEVBQUUsSUFBSSxDQUFDQyxNQUFNLENBQUM7QUFDeEUsQ0FBQzs7QUFFRFEsS0FBSyxDQUFDSyxJQUFJLEdBQUcsWUFBVzs7RUFDcEI7QUFBQSxDQUNIO0FBRURMLEtBQUssQ0FBQ00sS0FBSyxHQUFHLFVBQVNDLE1BQU0sRUFBRTs7RUFFM0IsSUFBSSxJQUFJLENBQUNKLFFBQVEsS0FBS0ksTUFBTSxDQUFDSixRQUFRO0VBQ2pDLElBQUksQ0FBQ0ssSUFBSSxLQUFLRCxNQUFNLENBQUNDLElBQUksRUFBRTs7SUFFM0IsSUFBSSxDQUFDakIsU0FBUyxHQUFHZ0IsTUFBTSxDQUFDaEIsU0FBUyxDQUFDSSxNQUFNLENBQUMsQ0FBQztJQUMxQyxJQUFJLENBQUNOLFFBQVEsR0FBR2tCLE1BQU0sQ0FBQ2xCLFFBQVE7SUFDL0IsSUFBSSxDQUFDQyxJQUFJLEdBQUdpQixNQUFNLENBQUNqQixJQUFJO0lBQ3ZCLElBQUksQ0FBQ0UsTUFBTSxHQUFHZSxNQUFNLENBQUNmLE1BQU07SUFDM0IsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxPQUFPLEtBQUs7QUFDaEIsQ0FBQzs7QUFFRDtBQUNKO0FBQ0E7QUFDSVEsS0FBSyxDQUFDUyxVQUFVLEdBQUcsWUFBVzs7RUFFMUIsT0FBTyxLQUFLLENBQUMsQ0FBQztBQUNsQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL1NldFBvbHljbG91ZC5qcz9jM2E0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgKiBAcGFyYW0gcG9seWNsb3VkXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gbG9jYXRpb25zXG4gICAgICogQHBhcmFtIGNsb3NlZFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBTZXRQb2x5Y2xvdWQoZWRpdG9yLCBwb2x5Y2xvdWQsIHBvc2l0aW9uLCBzaXplLCBsb2NhdGlvbnMsIGNsb3NlZCkge1xuXG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdTRVQtUE9MWUNMT1VEJywgcG9seWNsb3VkLmlkKTtcblxuICAgICAgICB0aGlzLnBvc2l0aW9uID0gcG9zaXRpb247XG4gICAgICAgIHRoaXMuc2l6ZSA9IHNpemU7XG4gICAgICAgIHRoaXMubG9jYXRpb25zID0gbG9jYXRpb25zLmNvbmNhdCgpO1xuICAgICAgICB0aGlzLmNsb3NlZCA9IGNsb3NlZDtcblxuICAgICAgICAvLyBObyBuZWVkIHRvIHNhdmUgb2xkIGRhdGFcbiAgICB9XG5cbiAgICBTZXRQb2x5Y2xvdWQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgU2V0UG9seWNsb3VkLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFNldFBvbHljbG91ZDtcblxuICAgIHZhciBwcm90byA9IFNldFBvbHljbG91ZC5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIHBvbHljbG91ZCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgaWYoIXBvbHljbG91ZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcG9seWNsb3VkLnNldCh0aGlzLnBvc2l0aW9uLCB0aGlzLnNpemUsIHRoaXMubG9jYXRpb25zLCB0aGlzLmNsb3NlZCk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gTm8gbmVlZCBmb3IgdW5kby5cbiAgICB9O1xuXG4gICAgcHJvdG8ubWVyZ2UgPSBmdW5jdGlvbihhY3Rpb24pIHtcblxuICAgICAgICBpZiAodGhpcy50YXJnZXRJZCA9PT0gYWN0aW9uLnRhcmdldElkICYmXG4gICAgICAgICAgICB0aGlzLnR5cGUgPT09IGFjdGlvbi50eXBlKSB7XG5cbiAgICAgICAgICAgIHRoaXMubG9jYXRpb25zID0gYWN0aW9uLmxvY2F0aW9ucy5jb25jYXQoKTtcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb24gPSBhY3Rpb24ucG9zaXRpb247XG4gICAgICAgICAgICB0aGlzLnNpemUgPSBhY3Rpb24uc2l6ZTtcbiAgICAgICAgICAgIHRoaXMuY2xvc2VkID0gYWN0aW9uLmNsb3NlZDtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgcHJvdG8uaXNJZGVudGl0eSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHJldHVybiBmYWxzZTsgLy8gTm8gbmVlZCB0byBvcHRpbWl6ZSwgYWx3YXlzIGZhbHNlLlxuICAgIH07XG5cbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiU2V0UG9seWNsb3VkIiwiZWRpdG9yIiwicG9seWNsb3VkIiwicG9zaXRpb24iLCJzaXplIiwibG9jYXRpb25zIiwiY2xvc2VkIiwiY2FsbCIsImlkIiwiY29uY2F0IiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJnZXRNYXJrdXAiLCJ0YXJnZXRJZCIsInNldCIsInVuZG8iLCJtZXJnZSIsImFjdGlvbiIsInR5cGUiLCJpc0lkZW50aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetPolycloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetPolyline.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetPolyline.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetPolyline: () => (/* binding */ SetPolyline)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param polyline\n * @param position\n * @param size\n * @param locations\n * @param closed\n * @constructor\n */\nfunction SetPolyline(editor, polyline, position, size, locations, closed) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-POLYLINE', polyline.id);\n\n  this.position = position;\n  this.size = size;\n  this.locations = locations.concat();\n  this.closed = closed;\n\n  // No need to save old data\n}\n\nSetPolyline.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetPolyline.prototype.constructor = SetPolyline;\n\nvar proto = SetPolyline.prototype;\n\nproto.redo = function () {\n\n  var polyline = this.editor.getMarkup(this.targetId);\n  if (!polyline) {\n    return;\n  }\n\n  polyline.set(this.position, this.size, this.locations, this.closed);\n};\n\nproto.undo = function () {\n\n  // No need for undo.\n};\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.locations = action.locations.concat();\n    this.position = action.position;\n    this.size = action.size;\n    this.closed = action.closed;\n    return true;\n  }\n  return false;\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return false; // No need to optimize, always false.\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRQb2x5bGluZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU2Qjs7QUFFdEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQyxXQUFXQSxDQUFDQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLFNBQVMsRUFBRUMsTUFBTSxFQUFFOztFQUU3RVAsbURBQVUsQ0FBQ1EsSUFBSSxDQUFDLElBQUksRUFBRU4sTUFBTSxFQUFFLGNBQWMsRUFBRUMsUUFBUSxDQUFDTSxFQUFFLENBQUM7O0VBRTFELElBQUksQ0FBQ0wsUUFBUSxHQUFHQSxRQUFRO0VBQ3hCLElBQUksQ0FBQ0MsSUFBSSxHQUFHQSxJQUFJO0VBQ2hCLElBQUksQ0FBQ0MsU0FBUyxHQUFHQSxTQUFTLENBQUNJLE1BQU0sQ0FBQyxDQUFDO0VBQ25DLElBQUksQ0FBQ0gsTUFBTSxHQUFHQSxNQUFNOztFQUVwQjtBQUNKOztBQUVBTixXQUFXLENBQUNVLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNiLG1EQUFVLENBQUNXLFNBQVMsQ0FBQztBQUMzRFYsV0FBVyxDQUFDVSxTQUFTLENBQUNHLFdBQVcsR0FBR2IsV0FBVzs7QUFFL0MsSUFBSWMsS0FBSyxHQUFHZCxXQUFXLENBQUNVLFNBQVM7O0FBRWpDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJYixRQUFRLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUNlLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNuRCxJQUFHLENBQUNmLFFBQVEsRUFBRTtJQUNWO0VBQ0o7O0VBRUFBLFFBQVEsQ0FBQ2dCLEdBQUcsQ0FBQyxJQUFJLENBQUNmLFFBQVEsRUFBRSxJQUFJLENBQUNDLElBQUksRUFBRSxJQUFJLENBQUNDLFNBQVMsRUFBRSxJQUFJLENBQUNDLE1BQU0sQ0FBQztBQUN2RSxDQUFDOztBQUVEUSxLQUFLLENBQUNLLElBQUksR0FBRyxZQUFXOztFQUNwQjtBQUFBLENBQ0g7QUFFREwsS0FBSyxDQUFDTSxLQUFLLEdBQUcsVUFBU0MsTUFBTSxFQUFFOztFQUUzQixJQUFJLElBQUksQ0FBQ0osUUFBUSxLQUFLSSxNQUFNLENBQUNKLFFBQVE7RUFDakMsSUFBSSxDQUFDSyxJQUFJLEtBQUtELE1BQU0sQ0FBQ0MsSUFBSSxFQUFFOztJQUUzQixJQUFJLENBQUNqQixTQUFTLEdBQUdnQixNQUFNLENBQUNoQixTQUFTLENBQUNJLE1BQU0sQ0FBQyxDQUFDO0lBQzFDLElBQUksQ0FBQ04sUUFBUSxHQUFHa0IsTUFBTSxDQUFDbEIsUUFBUTtJQUMvQixJQUFJLENBQUNDLElBQUksR0FBR2lCLE1BQU0sQ0FBQ2pCLElBQUk7SUFDdkIsSUFBSSxDQUFDRSxNQUFNLEdBQUdlLE1BQU0sQ0FBQ2YsTUFBTTtJQUMzQixPQUFPLElBQUk7RUFDZjtFQUNBLE9BQU8sS0FBSztBQUNoQixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNJUSxLQUFLLENBQUNTLFVBQVUsR0FBRyxZQUFXOztFQUUxQixPQUFPLEtBQUssQ0FBQyxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvU2V0UG9seWxpbmUuanM/MmNiYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIHBvbHlsaW5lXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHNpemVcbiAgICAgKiBAcGFyYW0gbG9jYXRpb25zXG4gICAgICogQHBhcmFtIGNsb3NlZFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBTZXRQb2x5bGluZShlZGl0b3IsIHBvbHlsaW5lLCBwb3NpdGlvbiwgc2l6ZSwgbG9jYXRpb25zLCBjbG9zZWQpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnU0VULVBPTFlMSU5FJywgcG9seWxpbmUuaWQpO1xuXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICAgICAgdGhpcy5sb2NhdGlvbnMgPSBsb2NhdGlvbnMuY29uY2F0KCk7XG4gICAgICAgIHRoaXMuY2xvc2VkID0gY2xvc2VkO1xuXG4gICAgICAgIC8vIE5vIG5lZWQgdG8gc2F2ZSBvbGQgZGF0YVxuICAgIH1cblxuICAgIFNldFBvbHlsaW5lLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIFNldFBvbHlsaW5lLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFNldFBvbHlsaW5lO1xuXG4gICAgdmFyIHByb3RvID0gU2V0UG9seWxpbmUucHJvdG90eXBlO1xuXG4gICAgcHJvdG8ucmVkbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBwb2x5bGluZSA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgaWYoIXBvbHlsaW5lKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBwb2x5bGluZS5zZXQodGhpcy5wb3NpdGlvbiwgdGhpcy5zaXplLCB0aGlzLmxvY2F0aW9ucywgdGhpcy5jbG9zZWQpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIE5vIG5lZWQgZm9yIHVuZG8uXG4gICAgfTtcblxuICAgIHByb3RvLm1lcmdlID0gZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0SWQgPT09IGFjdGlvbi50YXJnZXRJZCAmJlxuICAgICAgICAgICAgdGhpcy50eXBlID09PSBhY3Rpb24udHlwZSkge1xuXG4gICAgICAgICAgICB0aGlzLmxvY2F0aW9ucyA9IGFjdGlvbi5sb2NhdGlvbnMuY29uY2F0KCk7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uID0gYWN0aW9uLnBvc2l0aW9uO1xuICAgICAgICAgICAgdGhpcy5zaXplID0gYWN0aW9uLnNpemU7XG4gICAgICAgICAgICB0aGlzLmNsb3NlZCA9IGFjdGlvbi5jbG9zZWQ7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHByb3RvLmlzSWRlbnRpdHkgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICByZXR1cm4gZmFsc2U7IC8vIE5vIG5lZWQgdG8gb3B0aW1pemUsIGFsd2F5cyBmYWxzZS5cbiAgICB9O1xuXG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIlNldFBvbHlsaW5lIiwiZWRpdG9yIiwicG9seWxpbmUiLCJwb3NpdGlvbiIsInNpemUiLCJsb2NhdGlvbnMiLCJjbG9zZWQiLCJjYWxsIiwiaWQiLCJjb25jYXQiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsImdldE1hcmt1cCIsInRhcmdldElkIiwic2V0IiwidW5kbyIsIm1lcmdlIiwiYWN0aW9uIiwidHlwZSIsImlzSWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetPolyline.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetPosition.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetPosition.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetPosition: () => (/* binding */ SetPosition)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\nfunction SetPosition(editor, markup, position) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-POSITION', markup.id);\n\n  this.newPosition = { x: position.x, y: position.y };\n  this.oldPosition = { x: markup.position.x, y: markup.position.y };\n}\n\nSetPosition.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetPosition.prototype.constructor = SetPosition;\n\nvar proto = SetPosition.prototype;\n\nproto.redo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && markup.setPosition(this.newPosition.x, this.newPosition.y);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && markup.setPosition(this.oldPosition.x, this.oldPosition.y);\n};\n\n/**\n *\n * @param action\n * @returns {boolean}\n */\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.newPosition = action.newPosition;\n    return true;\n  }\n  return false;\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  var newPosition = this.newPosition;\n  var oldPosition = this.oldPosition;\n\n  return newPosition.x === oldPosition.x && newPosition.y === oldPosition.y;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRQb3NpdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU2Qjs7QUFFL0IsU0FBU0MsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRTs7RUFFbERKLG1EQUFVLENBQUNLLElBQUksQ0FBQyxJQUFJLEVBQUVILE1BQU0sRUFBRSxjQUFjLEVBQUVDLE1BQU0sQ0FBQ0csRUFBRSxDQUFDOztFQUV4RCxJQUFJLENBQUNDLFdBQVcsR0FBRyxFQUFDQyxDQUFDLEVBQUVKLFFBQVEsQ0FBQ0ksQ0FBQyxFQUFFQyxDQUFDLEVBQUVMLFFBQVEsQ0FBQ0ssQ0FBQyxFQUFDO0VBQ2pELElBQUksQ0FBQ0MsV0FBVyxHQUFHLEVBQUNGLENBQUMsRUFBRUwsTUFBTSxDQUFDQyxRQUFRLENBQUNJLENBQUMsRUFBRUMsQ0FBQyxFQUFFTixNQUFNLENBQUNDLFFBQVEsQ0FBQ0ssQ0FBQyxFQUFDO0FBQ25FOztBQUVBUixXQUFXLENBQUNVLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNiLG1EQUFVLENBQUNXLFNBQVMsQ0FBQztBQUMzRFYsV0FBVyxDQUFDVSxTQUFTLENBQUNHLFdBQVcsR0FBR2IsV0FBVzs7QUFFL0MsSUFBSWMsS0FBSyxHQUFHZCxXQUFXLENBQUNVLFNBQVM7O0FBRWpDSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJYixNQUFNLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUNlLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNqRGYsTUFBTSxJQUFJQSxNQUFNLENBQUNnQixXQUFXLENBQUMsSUFBSSxDQUFDWixXQUFXLENBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNELFdBQVcsQ0FBQ0UsQ0FBQyxDQUFDO0FBQ3hFLENBQUM7O0FBRURNLEtBQUssQ0FBQ0ssSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlqQixNQUFNLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUNlLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNqRGYsTUFBTSxJQUFJQSxNQUFNLENBQUNnQixXQUFXLENBQUMsSUFBSSxDQUFDVCxXQUFXLENBQUNGLENBQUMsRUFBRSxJQUFJLENBQUNFLFdBQVcsQ0FBQ0QsQ0FBQyxDQUFDO0FBQ3hFLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNJTSxLQUFLLENBQUNNLEtBQUssR0FBRyxVQUFTQyxNQUFNLEVBQUU7O0VBRTNCLElBQUksSUFBSSxDQUFDSixRQUFRLEtBQUtJLE1BQU0sQ0FBQ0osUUFBUTtFQUNqQyxJQUFJLENBQUNLLElBQUksS0FBS0QsTUFBTSxDQUFDQyxJQUFJLEVBQUU7O0lBRTNCLElBQUksQ0FBQ2hCLFdBQVcsR0FBR2UsTUFBTSxDQUFDZixXQUFXO0lBQ3JDLE9BQU8sSUFBSTtFQUNmO0VBQ0EsT0FBTyxLQUFLO0FBQ2hCLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0lRLEtBQUssQ0FBQ1MsVUFBVSxHQUFHLFlBQVc7O0VBRTFCLElBQUlqQixXQUFXLEdBQUcsSUFBSSxDQUFDQSxXQUFXO0VBQ2xDLElBQUlHLFdBQVcsR0FBRyxJQUFJLENBQUNBLFdBQVc7O0VBRWxDLE9BQU9ILFdBQVcsQ0FBQ0MsQ0FBQyxLQUFLRSxXQUFXLENBQUNGLENBQUMsSUFBSUQsV0FBVyxDQUFDRSxDQUFDLEtBQUtDLFdBQVcsQ0FBQ0QsQ0FBQztBQUM3RSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL1NldFBvc2l0aW9uLmpzP2M0MjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcblxuICAgIGV4cG9ydCBmdW5jdGlvbiBTZXRQb3NpdGlvbihlZGl0b3IsIG1hcmt1cCwgcG9zaXRpb24pIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnU0VULVBPU0lUSU9OJywgbWFya3VwLmlkKTtcblxuICAgICAgICB0aGlzLm5ld1Bvc2l0aW9uID0ge3g6IHBvc2l0aW9uLngsIHk6IHBvc2l0aW9uLnl9O1xuICAgICAgICB0aGlzLm9sZFBvc2l0aW9uID0ge3g6IG1hcmt1cC5wb3NpdGlvbi54LCB5OiBtYXJrdXAucG9zaXRpb24ueX07XG4gICAgfVxuXG4gICAgU2V0UG9zaXRpb24ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgU2V0UG9zaXRpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU2V0UG9zaXRpb247XG5cbiAgICB2YXIgcHJvdG8gPSBTZXRQb3NpdGlvbi5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIG1hcmt1cC5zZXRQb3NpdGlvbih0aGlzLm5ld1Bvc2l0aW9uLngsIHRoaXMubmV3UG9zaXRpb24ueSk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuZG8gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgbWFya3VwID0gdGhpcy5lZGl0b3IuZ2V0TWFya3VwKHRoaXMudGFyZ2V0SWQpO1xuICAgICAgICBtYXJrdXAgJiYgbWFya3VwLnNldFBvc2l0aW9uKHRoaXMub2xkUG9zaXRpb24ueCwgdGhpcy5vbGRQb3NpdGlvbi55KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYWN0aW9uXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgcHJvdG8ubWVyZ2UgPSBmdW5jdGlvbihhY3Rpb24pIHtcblxuICAgICAgICBpZiAodGhpcy50YXJnZXRJZCA9PT0gYWN0aW9uLnRhcmdldElkICYmXG4gICAgICAgICAgICB0aGlzLnR5cGUgPT09IGFjdGlvbi50eXBlKSB7XG5cbiAgICAgICAgICAgIHRoaXMubmV3UG9zaXRpb24gPSBhY3Rpb24ubmV3UG9zaXRpb247XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHByb3RvLmlzSWRlbnRpdHkgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgbmV3UG9zaXRpb24gPSB0aGlzLm5ld1Bvc2l0aW9uO1xuICAgICAgICB2YXIgb2xkUG9zaXRpb24gPSB0aGlzLm9sZFBvc2l0aW9uO1xuXG4gICAgICAgIHJldHVybiBuZXdQb3NpdGlvbi54ID09PSBvbGRQb3NpdGlvbi54ICYmIG5ld1Bvc2l0aW9uLnkgPT09IG9sZFBvc2l0aW9uLnk7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJTZXRQb3NpdGlvbiIsImVkaXRvciIsIm1hcmt1cCIsInBvc2l0aW9uIiwiY2FsbCIsImlkIiwibmV3UG9zaXRpb24iLCJ4IiwieSIsIm9sZFBvc2l0aW9uIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsInJlZG8iLCJnZXRNYXJrdXAiLCJ0YXJnZXRJZCIsInNldFBvc2l0aW9uIiwidW5kbyIsIm1lcmdlIiwiYWN0aW9uIiwidHlwZSIsImlzSWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetPosition.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetRectangle.js":
/*!*************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetRectangle.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetRectangle: () => (/* binding */ SetRectangle)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param rectangle\n * @param position\n * @param size\n * @constructor\n */\nfunction SetRectangle(editor, rectangle, position, size) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-RECTANGLE', rectangle.id);\n\n  this.newPosition = { x: position.x, y: position.y };\n  this.newSize = { x: size.x, y: size.y };\n  this.oldPosition = { x: rectangle.position.x, y: rectangle.position.y };\n  this.oldSize = { x: rectangle.size.x, y: rectangle.size.y };\n}\n\nSetRectangle.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetRectangle.prototype.constructor = SetRectangle;\n\nvar proto = SetRectangle.prototype;\n\nproto.redo = function () {\n\n  this.applyState(this.targetId, this.newPosition, this.newSize);\n};\n\nproto.undo = function () {\n\n  this.applyState(this.targetId, this.oldPosition, this.oldSize);\n};\n\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.newPosition = action.newPosition;\n    this.newSize = action.newSize;\n    return true;\n  }\n  return false;\n};\n\n/**\n *\n * @private\n */\nproto.applyState = function (targetId, position, size) {\n\n  var rectangle = this.editor.getMarkup(targetId);\n  if (!rectangle) {\n    return;\n  }\n\n  // Different stroke widths make positions differ at sub-pixel level.\n  var epsilon = 0.0001;\n\n  if (Math.abs(rectangle.position.x - position.x) > epsilon || Math.abs(rectangle.size.y - size.y) > epsilon ||\n  Math.abs(rectangle.position.y - position.y) > epsilon || Math.abs(rectangle.size.y - size.y) > epsilon) {\n\n    rectangle.set(position, size);\n  }\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return (\n    this.newPosition.x === this.oldPosition.x &&\n    this.newPosition.y === this.oldPosition.y &&\n    this.newSize.x === this.oldSize.x &&\n    this.newSize.y === this.oldSize.y);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRSZWN0YW5nbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTs7QUFFNkI7O0FBRXRDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQyxZQUFZQSxDQUFDQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUU7O0VBRTVETCxtREFBVSxDQUFDTSxJQUFJLENBQUMsSUFBSSxFQUFFSixNQUFNLEVBQUUsZUFBZSxFQUFFQyxTQUFTLENBQUNJLEVBQUUsQ0FBQzs7RUFFNUQsSUFBSSxDQUFDQyxXQUFXLEdBQUcsRUFBQ0MsQ0FBQyxFQUFFTCxRQUFRLENBQUNLLENBQUMsRUFBRUMsQ0FBQyxFQUFFTixRQUFRLENBQUNNLENBQUMsRUFBQztFQUNqRCxJQUFJLENBQUNDLE9BQU8sR0FBRyxFQUFDRixDQUFDLEVBQUVKLElBQUksQ0FBQ0ksQ0FBQyxFQUFFQyxDQUFDLEVBQUVMLElBQUksQ0FBQ0ssQ0FBQyxFQUFDO0VBQ3JDLElBQUksQ0FBQ0UsV0FBVyxHQUFHLEVBQUNILENBQUMsRUFBRU4sU0FBUyxDQUFDQyxRQUFRLENBQUNLLENBQUMsRUFBRUMsQ0FBQyxFQUFFUCxTQUFTLENBQUNDLFFBQVEsQ0FBQ00sQ0FBQyxFQUFDO0VBQ3JFLElBQUksQ0FBQ0csT0FBTyxHQUFHLEVBQUNKLENBQUMsRUFBRU4sU0FBUyxDQUFDRSxJQUFJLENBQUNJLENBQUMsRUFBRUMsQ0FBQyxFQUFFUCxTQUFTLENBQUNFLElBQUksQ0FBQ0ssQ0FBQyxFQUFDO0FBQzdEOztBQUVBVCxZQUFZLENBQUNhLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNoQixtREFBVSxDQUFDYyxTQUFTLENBQUM7QUFDNURiLFlBQVksQ0FBQ2EsU0FBUyxDQUFDRyxXQUFXLEdBQUdoQixZQUFZOztBQUVqRCxJQUFJaUIsS0FBSyxHQUFHakIsWUFBWSxDQUFDYSxTQUFTOztBQUVsQ0ksS0FBSyxDQUFDQyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDYixXQUFXLEVBQUUsSUFBSSxDQUFDRyxPQUFPLENBQUM7QUFDbEUsQ0FBQzs7QUFFRE8sS0FBSyxDQUFDSSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSSxDQUFDRixVQUFVLENBQUMsSUFBSSxDQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDVCxXQUFXLEVBQUUsSUFBSSxDQUFDQyxPQUFPLENBQUM7QUFDbEUsQ0FBQzs7QUFFREssS0FBSyxDQUFDSyxLQUFLLEdBQUcsVUFBU0MsTUFBTSxFQUFFOztFQUUzQixJQUFJLElBQUksQ0FBQ0gsUUFBUSxLQUFLRyxNQUFNLENBQUNILFFBQVE7RUFDakMsSUFBSSxDQUFDSSxJQUFJLEtBQUtELE1BQU0sQ0FBQ0MsSUFBSSxFQUFFOztJQUUzQixJQUFJLENBQUNqQixXQUFXLEdBQUdnQixNQUFNLENBQUNoQixXQUFXO0lBQ3JDLElBQUksQ0FBQ0csT0FBTyxHQUFHYSxNQUFNLENBQUNiLE9BQU87SUFDN0IsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxPQUFPLEtBQUs7QUFDaEIsQ0FBQzs7QUFFRDtBQUNKO0FBQ0E7QUFDQTtBQUNJTyxLQUFLLENBQUNFLFVBQVUsR0FBRyxVQUFTQyxRQUFRLEVBQUVqQixRQUFRLEVBQUVDLElBQUksRUFBRTs7RUFFbEQsSUFBSUYsU0FBUyxHQUFHLElBQUksQ0FBQ0QsTUFBTSxDQUFDd0IsU0FBUyxDQUFDTCxRQUFRLENBQUM7RUFDL0MsSUFBRyxDQUFDbEIsU0FBUyxFQUFFO0lBQ1g7RUFDSjs7RUFFQTtFQUNBLElBQUl3QixPQUFPLEdBQUcsTUFBTTs7RUFFcEIsSUFBSUMsSUFBSSxDQUFDQyxHQUFHLENBQUMxQixTQUFTLENBQUNDLFFBQVEsQ0FBQ0ssQ0FBQyxHQUFHTCxRQUFRLENBQUNLLENBQUMsQ0FBQyxHQUFHa0IsT0FBTyxJQUFJQyxJQUFJLENBQUNDLEdBQUcsQ0FBQzFCLFNBQVMsQ0FBQ0UsSUFBSSxDQUFDSyxDQUFDLEdBQUdMLElBQUksQ0FBQ0ssQ0FBQyxDQUFDLEdBQUdpQixPQUFPO0VBQ3RHQyxJQUFJLENBQUNDLEdBQUcsQ0FBQzFCLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDTSxDQUFDLEdBQUdOLFFBQVEsQ0FBQ00sQ0FBQyxDQUFDLEdBQUdpQixPQUFPLElBQUlDLElBQUksQ0FBQ0MsR0FBRyxDQUFDMUIsU0FBUyxDQUFDRSxJQUFJLENBQUNLLENBQUMsR0FBR0wsSUFBSSxDQUFDSyxDQUFDLENBQUMsR0FBR2lCLE9BQU8sRUFBRTs7SUFFeEd4QixTQUFTLENBQUMyQixHQUFHLENBQUMxQixRQUFRLEVBQUVDLElBQUksQ0FBQztFQUNqQztBQUNKLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0lhLEtBQUssQ0FBQ2EsVUFBVSxHQUFHLFlBQVc7O0VBRTFCO0lBQ0ksSUFBSSxDQUFDdkIsV0FBVyxDQUFDQyxDQUFDLEtBQUssSUFBSSxDQUFDRyxXQUFXLENBQUNILENBQUM7SUFDekMsSUFBSSxDQUFDRCxXQUFXLENBQUNFLENBQUMsS0FBSyxJQUFJLENBQUNFLFdBQVcsQ0FBQ0YsQ0FBQztJQUN6QyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0YsQ0FBQyxLQUFLLElBQUksQ0FBQ0ksT0FBTyxDQUFDSixDQUFDO0lBQ2pDLElBQUksQ0FBQ0UsT0FBTyxDQUFDRCxDQUFDLEtBQUssSUFBSSxDQUFDRyxPQUFPLENBQUNILENBQUM7QUFDekMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRSZWN0YW5nbGUuanM/YTZiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIHJlY3RhbmdsZVxuICAgICAqIEBwYXJhbSBwb3NpdGlvblxuICAgICAqIEBwYXJhbSBzaXplXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIFNldFJlY3RhbmdsZShlZGl0b3IsIHJlY3RhbmdsZSwgcG9zaXRpb24sIHNpemUpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnU0VULVJFQ1RBTkdMRScsIHJlY3RhbmdsZS5pZCk7XG5cbiAgICAgICAgdGhpcy5uZXdQb3NpdGlvbiA9IHt4OiBwb3NpdGlvbi54LCB5OiBwb3NpdGlvbi55fTtcbiAgICAgICAgdGhpcy5uZXdTaXplID0ge3g6IHNpemUueCwgeTogc2l6ZS55fTtcbiAgICAgICAgdGhpcy5vbGRQb3NpdGlvbiA9IHt4OiByZWN0YW5nbGUucG9zaXRpb24ueCwgeTogcmVjdGFuZ2xlLnBvc2l0aW9uLnl9O1xuICAgICAgICB0aGlzLm9sZFNpemUgPSB7eDogcmVjdGFuZ2xlLnNpemUueCwgeTogcmVjdGFuZ2xlLnNpemUueX07XG4gICAgfVxuXG4gICAgU2V0UmVjdGFuZ2xlLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdEFjdGlvbi5wcm90b3R5cGUpO1xuICAgIFNldFJlY3RhbmdsZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTZXRSZWN0YW5nbGU7XG5cbiAgICB2YXIgcHJvdG8gPSBTZXRSZWN0YW5nbGUucHJvdG90eXBlO1xuXG4gICAgcHJvdG8ucmVkbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHRoaXMuYXBwbHlTdGF0ZSh0aGlzLnRhcmdldElkLCB0aGlzLm5ld1Bvc2l0aW9uLCB0aGlzLm5ld1NpemUpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5hcHBseVN0YXRlKHRoaXMudGFyZ2V0SWQsIHRoaXMub2xkUG9zaXRpb24sIHRoaXMub2xkU2l6ZSk7XG4gICAgfTtcblxuICAgIHByb3RvLm1lcmdlID0gZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0SWQgPT09IGFjdGlvbi50YXJnZXRJZCAmJlxuICAgICAgICAgICAgdGhpcy50eXBlID09PSBhY3Rpb24udHlwZSkge1xuXG4gICAgICAgICAgICB0aGlzLm5ld1Bvc2l0aW9uID0gYWN0aW9uLm5ld1Bvc2l0aW9uO1xuICAgICAgICAgICAgdGhpcy5uZXdTaXplID0gYWN0aW9uLm5ld1NpemU7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBwcm90by5hcHBseVN0YXRlID0gZnVuY3Rpb24odGFyZ2V0SWQsIHBvc2l0aW9uLCBzaXplKSB7XG5cbiAgICAgICAgdmFyIHJlY3RhbmdsZSA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0YXJnZXRJZCk7XG4gICAgICAgIGlmKCFyZWN0YW5nbGUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERpZmZlcmVudCBzdHJva2Ugd2lkdGhzIG1ha2UgcG9zaXRpb25zIGRpZmZlciBhdCBzdWItcGl4ZWwgbGV2ZWwuXG4gICAgICAgIHZhciBlcHNpbG9uID0gMC4wMDAxO1xuXG4gICAgICAgIGlmIChNYXRoLmFicyhyZWN0YW5nbGUucG9zaXRpb24ueCAtIHBvc2l0aW9uLngpID4gZXBzaWxvbiB8fCBNYXRoLmFicyhyZWN0YW5nbGUuc2l6ZS55IC0gc2l6ZS55KSA+IGVwc2lsb24gfHxcbiAgICAgICAgICAgIE1hdGguYWJzKHJlY3RhbmdsZS5wb3NpdGlvbi55IC0gcG9zaXRpb24ueSkgPiBlcHNpbG9uIHx8IE1hdGguYWJzKHJlY3RhbmdsZS5zaXplLnkgLSBzaXplLnkpID4gZXBzaWxvbikge1xuXG4gICAgICAgICAgICByZWN0YW5nbGUuc2V0KHBvc2l0aW9uLCBzaXplKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBwcm90by5pc0lkZW50aXR5ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgdGhpcy5uZXdQb3NpdGlvbi54ID09PSB0aGlzLm9sZFBvc2l0aW9uLnggJiZcbiAgICAgICAgICAgIHRoaXMubmV3UG9zaXRpb24ueSA9PT0gdGhpcy5vbGRQb3NpdGlvbi55ICYmXG4gICAgICAgICAgICB0aGlzLm5ld1NpemUueCA9PT0gdGhpcy5vbGRTaXplLnggJiZcbiAgICAgICAgICAgIHRoaXMubmV3U2l6ZS55ID09PSB0aGlzLm9sZFNpemUueSk7XG4gICAgfTtcbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiU2V0UmVjdGFuZ2xlIiwiZWRpdG9yIiwicmVjdGFuZ2xlIiwicG9zaXRpb24iLCJzaXplIiwiY2FsbCIsImlkIiwibmV3UG9zaXRpb24iLCJ4IiwieSIsIm5ld1NpemUiLCJvbGRQb3NpdGlvbiIsIm9sZFNpemUiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsImFwcGx5U3RhdGUiLCJ0YXJnZXRJZCIsInVuZG8iLCJtZXJnZSIsImFjdGlvbiIsInR5cGUiLCJnZXRNYXJrdXAiLCJlcHNpbG9uIiwiTWF0aCIsImFicyIsInNldCIsImlzSWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetRectangle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetRotation.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetRotation.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetRotation: () => (/* binding */ SetRotation)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param markup\n * @param angle\n * @constructor\n */\nfunction SetRotation(editor, markup, angle) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-ROTATION', markup.id);\n\n  var curAngle = markup.getRotation();\n\n  this.newRotation = { angle: angle };\n  this.oldRotation = { angle: curAngle };\n}\n\nSetRotation.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetRotation.prototype.constructor = SetRotation;\n\nvar proto = SetRotation.prototype;\n\nproto.redo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && markup.setRotation(this.newRotation.angle);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && markup.setRotation(this.oldRotation.angle);\n};\n\n/**\n *\n * @param action\n * @returns {boolean}\n */\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.newRotation = action.newRotation;\n    return true;\n  }\n  return false;\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  return this.newRotation.angle === this.oldRotation.angle;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRSb3RhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU2Qjs7QUFFdEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQyxXQUFXQSxDQUFDQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFOztFQUUvQ0osbURBQVUsQ0FBQ0ssSUFBSSxDQUFDLElBQUksRUFBRUgsTUFBTSxFQUFFLGNBQWMsRUFBRUMsTUFBTSxDQUFDRyxFQUFFLENBQUM7O0VBRXhELElBQUlDLFFBQVEsR0FBR0osTUFBTSxDQUFDSyxXQUFXLENBQUMsQ0FBQzs7RUFFbkMsSUFBSSxDQUFDQyxXQUFXLEdBQUcsRUFBQ0wsS0FBSyxFQUFFQSxLQUFLLEVBQUM7RUFDakMsSUFBSSxDQUFDTSxXQUFXLEdBQUcsRUFBQ04sS0FBSyxFQUFFRyxRQUFRLEVBQUM7QUFDeEM7O0FBRUFOLFdBQVcsQ0FBQ1UsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2IsbURBQVUsQ0FBQ1csU0FBUyxDQUFDO0FBQzNEVixXQUFXLENBQUNVLFNBQVMsQ0FBQ0csV0FBVyxHQUFHYixXQUFXOztBQUUvQyxJQUFJYyxLQUFLLEdBQUdkLFdBQVcsQ0FBQ1UsU0FBUzs7QUFFakNJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUliLE1BQU0sR0FBRyxJQUFJLENBQUNELE1BQU0sQ0FBQ2UsU0FBUyxDQUFDLElBQUksQ0FBQ0MsUUFBUSxDQUFDO0VBQ2pEZixNQUFNLElBQUlBLE1BQU0sQ0FBQ2dCLFdBQVcsQ0FBQyxJQUFJLENBQUNWLFdBQVcsQ0FBQ0wsS0FBSyxDQUFDO0FBQ3hELENBQUM7O0FBRURXLEtBQUssQ0FBQ0ssSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlqQixNQUFNLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUNlLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNqRGYsTUFBTSxJQUFJQSxNQUFNLENBQUNnQixXQUFXLENBQUMsSUFBSSxDQUFDVCxXQUFXLENBQUNOLEtBQUssQ0FBQztBQUN4RCxDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDSVcsS0FBSyxDQUFDTSxLQUFLLEdBQUcsVUFBU0MsTUFBTSxFQUFFOztFQUUzQixJQUFJLElBQUksQ0FBQ0osUUFBUSxLQUFLSSxNQUFNLENBQUNKLFFBQVE7RUFDakMsSUFBSSxDQUFDSyxJQUFJLEtBQUtELE1BQU0sQ0FBQ0MsSUFBSSxFQUFFOztJQUUzQixJQUFJLENBQUNkLFdBQVcsR0FBR2EsTUFBTSxDQUFDYixXQUFXO0lBQ3JDLE9BQU8sSUFBSTtFQUNmO0VBQ0EsT0FBTyxLQUFLO0FBQ2hCLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0lNLEtBQUssQ0FBQ1MsVUFBVSxHQUFHLFlBQVc7O0VBRTFCLE9BQU8sSUFBSSxDQUFDZixXQUFXLENBQUNMLEtBQUssS0FBSyxJQUFJLENBQUNNLFdBQVcsQ0FBQ04sS0FBSztBQUM1RCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL1NldFJvdGF0aW9uLmpzPzMzMTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBtYXJrdXBcbiAgICAgKiBAcGFyYW0gYW5nbGVcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gU2V0Um90YXRpb24oZWRpdG9yLCBtYXJrdXAsIGFuZ2xlKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ1NFVC1ST1RBVElPTicsIG1hcmt1cC5pZCk7XG5cbiAgICAgICAgdmFyIGN1ckFuZ2xlID0gbWFya3VwLmdldFJvdGF0aW9uKCk7XG5cbiAgICAgICAgdGhpcy5uZXdSb3RhdGlvbiA9IHthbmdsZTogYW5nbGV9O1xuICAgICAgICB0aGlzLm9sZFJvdGF0aW9uID0ge2FuZ2xlOiBjdXJBbmdsZX07XG4gICAgfVxuXG4gICAgU2V0Um90YXRpb24ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgU2V0Um90YXRpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU2V0Um90YXRpb247XG5cbiAgICB2YXIgcHJvdG8gPSBTZXRSb3RhdGlvbi5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIG1hcmt1cC5zZXRSb3RhdGlvbih0aGlzLm5ld1JvdGF0aW9uLmFuZ2xlKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBtYXJrdXAgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG4gICAgICAgIG1hcmt1cCAmJiBtYXJrdXAuc2V0Um90YXRpb24odGhpcy5vbGRSb3RhdGlvbi5hbmdsZSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGFjdGlvblxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHByb3RvLm1lcmdlID0gZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0SWQgPT09IGFjdGlvbi50YXJnZXRJZCAmJlxuICAgICAgICAgICAgdGhpcy50eXBlID09PSBhY3Rpb24udHlwZSkge1xuXG4gICAgICAgICAgICB0aGlzLm5ld1JvdGF0aW9uID0gYWN0aW9uLm5ld1JvdGF0aW9uO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBwcm90by5pc0lkZW50aXR5ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMubmV3Um90YXRpb24uYW5nbGUgPT09IHRoaXMub2xkUm90YXRpb24uYW5nbGU7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJTZXRSb3RhdGlvbiIsImVkaXRvciIsIm1hcmt1cCIsImFuZ2xlIiwiY2FsbCIsImlkIiwiY3VyQW5nbGUiLCJnZXRSb3RhdGlvbiIsIm5ld1JvdGF0aW9uIiwib2xkUm90YXRpb24iLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsImdldE1hcmt1cCIsInRhcmdldElkIiwic2V0Um90YXRpb24iLCJ1bmRvIiwibWVyZ2UiLCJhY3Rpb24iLCJ0eXBlIiwiaXNJZGVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetRotation.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetSize.js":
/*!********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetSize.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetSize: () => (/* binding */ SetSize)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param markup\n * @param position\n * @param width\n * @param height\n * @constructor\n */\nfunction SetSize(editor, markup, position, width, height) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-SIZE', markup.id);\n\n  this.newPosition = { x: position.x, y: position.y };\n  this.oldPosition = { x: markup.position.x, y: markup.position.y };\n  this.newWidth = width;\n  this.oldWidth = markup.size.x;\n  this.newHeight = height;\n  this.oldHeight = markup.size.y;\n}\n\nSetSize.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetSize.prototype.constructor = SetSize;\n\nvar proto = SetSize.prototype;\n\nproto.redo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && markup.setSize(this.newPosition, this.newWidth, this.newHeight);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && markup.setSize(this.oldPosition, this.oldWidth, this.oldHeight);\n};\n\nproto.merge = function (action) {\n\n  if (this.targetId === action.targetId &&\n  this.type === action.type) {\n\n    this.newPosition = action.newPosition;\n    this.newWidth = action.newWidth;\n    this.newHeight = action.newHeight;\n    return true;\n  }\n  return false;\n};\n\n/**\n * @returns {boolean}\n */\nproto.isIdentity = function () {\n\n  var identity =\n  this.newPosition.x === this.oldPosition.x &&\n  this.newPosition.y === this.oldPosition.y &&\n  this.newWidth === this.oldWidth &&\n  this.newHeight === this.oldHeight;\n\n  return identity;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRTaXplLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRTZCOztBQUV0QztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQyxPQUFPQSxDQUFDQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRTs7RUFFN0ROLG1EQUFVLENBQUNPLElBQUksQ0FBQyxJQUFJLEVBQUVMLE1BQU0sRUFBRSxVQUFVLEVBQUVDLE1BQU0sQ0FBQ0ssRUFBRSxDQUFDOztFQUVwRCxJQUFJLENBQUNDLFdBQVcsR0FBRyxFQUFDQyxDQUFDLEVBQUVOLFFBQVEsQ0FBQ00sQ0FBQyxFQUFFQyxDQUFDLEVBQUVQLFFBQVEsQ0FBQ08sQ0FBQyxFQUFDO0VBQ2pELElBQUksQ0FBQ0MsV0FBVyxHQUFHLEVBQUNGLENBQUMsRUFBRVAsTUFBTSxDQUFDQyxRQUFRLENBQUNNLENBQUMsRUFBRUMsQ0FBQyxFQUFFUixNQUFNLENBQUNDLFFBQVEsQ0FBQ08sQ0FBQyxFQUFDO0VBQy9ELElBQUksQ0FBQ0UsUUFBUSxHQUFHUixLQUFLO0VBQ3JCLElBQUksQ0FBQ1MsUUFBUSxHQUFHWCxNQUFNLENBQUNZLElBQUksQ0FBQ0wsQ0FBQztFQUM3QixJQUFJLENBQUNNLFNBQVMsR0FBR1YsTUFBTTtFQUN2QixJQUFJLENBQUNXLFNBQVMsR0FBR2QsTUFBTSxDQUFDWSxJQUFJLENBQUNKLENBQUM7QUFDbEM7O0FBRUFWLE9BQU8sQ0FBQ2lCLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNwQixtREFBVSxDQUFDa0IsU0FBUyxDQUFDO0FBQ3ZEakIsT0FBTyxDQUFDaUIsU0FBUyxDQUFDRyxXQUFXLEdBQUdwQixPQUFPOztBQUV2QyxJQUFJcUIsS0FBSyxHQUFHckIsT0FBTyxDQUFDaUIsU0FBUzs7QUFFN0JJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlwQixNQUFNLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUNzQixTQUFTLENBQUMsSUFBSSxDQUFDQyxRQUFRLENBQUM7RUFDakR0QixNQUFNLElBQUlBLE1BQU0sQ0FBQ3VCLE9BQU8sQ0FBQyxJQUFJLENBQUNqQixXQUFXLEVBQUUsSUFBSSxDQUFDSSxRQUFRLEVBQUUsSUFBSSxDQUFDRyxTQUFTLENBQUM7QUFDN0UsQ0FBQzs7QUFFRE0sS0FBSyxDQUFDSyxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSXhCLE1BQU0sR0FBRyxJQUFJLENBQUNELE1BQU0sQ0FBQ3NCLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNqRHRCLE1BQU0sSUFBSUEsTUFBTSxDQUFDdUIsT0FBTyxDQUFDLElBQUksQ0FBQ2QsV0FBVyxFQUFFLElBQUksQ0FBQ0UsUUFBUSxFQUFFLElBQUksQ0FBQ0csU0FBUyxDQUFDO0FBQzdFLENBQUM7O0FBRURLLEtBQUssQ0FBQ00sS0FBSyxHQUFHLFVBQVNDLE1BQU0sRUFBRTs7RUFFM0IsSUFBSSxJQUFJLENBQUNKLFFBQVEsS0FBS0ksTUFBTSxDQUFDSixRQUFRO0VBQ2pDLElBQUksQ0FBQ0ssSUFBSSxLQUFLRCxNQUFNLENBQUNDLElBQUksRUFBRTs7SUFFM0IsSUFBSSxDQUFDckIsV0FBVyxHQUFHb0IsTUFBTSxDQUFDcEIsV0FBVztJQUNyQyxJQUFJLENBQUNJLFFBQVEsR0FBR2dCLE1BQU0sQ0FBQ2hCLFFBQVE7SUFDL0IsSUFBSSxDQUFDRyxTQUFTLEdBQUdhLE1BQU0sQ0FBQ2IsU0FBUztJQUNqQyxPQUFPLElBQUk7RUFDZjtFQUNBLE9BQU8sS0FBSztBQUNoQixDQUFDOztBQUVEO0FBQ0o7QUFDQTtBQUNJTSxLQUFLLENBQUNTLFVBQVUsR0FBRyxZQUFXOztFQUUxQixJQUFJQyxRQUFRO0VBQ1IsSUFBSSxDQUFDdkIsV0FBVyxDQUFDQyxDQUFDLEtBQUssSUFBSSxDQUFDRSxXQUFXLENBQUNGLENBQUM7RUFDekMsSUFBSSxDQUFDRCxXQUFXLENBQUNFLENBQUMsS0FBSyxJQUFJLENBQUNDLFdBQVcsQ0FBQ0QsQ0FBQztFQUN6QyxJQUFJLENBQUNFLFFBQVEsS0FBSyxJQUFJLENBQUNDLFFBQVE7RUFDL0IsSUFBSSxDQUFDRSxTQUFTLEtBQUssSUFBSSxDQUFDQyxTQUFTOztFQUVyQyxPQUFPZSxRQUFRO0FBQ25CLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWFjdGlvbnMvU2V0U2l6ZS5qcz8xZjVjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgKiBAcGFyYW0gbWFya3VwXG4gICAgICogQHBhcmFtIHBvc2l0aW9uXG4gICAgICogQHBhcmFtIHdpZHRoXG4gICAgICogQHBhcmFtIGhlaWdodFxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBTZXRTaXplKGVkaXRvciwgbWFya3VwLCBwb3NpdGlvbiwgd2lkdGgsIGhlaWdodCkge1xuXG4gICAgICAgIEVkaXRBY3Rpb24uY2FsbCh0aGlzLCBlZGl0b3IsICdTRVQtU0laRScsIG1hcmt1cC5pZCk7XG5cbiAgICAgICAgdGhpcy5uZXdQb3NpdGlvbiA9IHt4OiBwb3NpdGlvbi54LCB5OiBwb3NpdGlvbi55fTtcbiAgICAgICAgdGhpcy5vbGRQb3NpdGlvbiA9IHt4OiBtYXJrdXAucG9zaXRpb24ueCwgeTogbWFya3VwLnBvc2l0aW9uLnl9O1xuICAgICAgICB0aGlzLm5ld1dpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMub2xkV2lkdGggPSBtYXJrdXAuc2l6ZS54O1xuICAgICAgICB0aGlzLm5ld0hlaWdodCA9IGhlaWdodDtcbiAgICAgICAgdGhpcy5vbGRIZWlnaHQgPSBtYXJrdXAuc2l6ZS55O1xuICAgIH1cblxuICAgIFNldFNpemUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgU2V0U2l6ZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTZXRTaXplO1xuXG4gICAgdmFyIHByb3RvID0gU2V0U2l6ZS5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIG1hcmt1cC5zZXRTaXplKHRoaXMubmV3UG9zaXRpb24sIHRoaXMubmV3V2lkdGgsIHRoaXMubmV3SGVpZ2h0KTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBtYXJrdXAgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG4gICAgICAgIG1hcmt1cCAmJiBtYXJrdXAuc2V0U2l6ZSh0aGlzLm9sZFBvc2l0aW9uLCB0aGlzLm9sZFdpZHRoLCB0aGlzLm9sZEhlaWdodCk7XG4gICAgfTtcblxuICAgIHByb3RvLm1lcmdlID0gZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0SWQgPT09IGFjdGlvbi50YXJnZXRJZCAmJlxuICAgICAgICAgICAgdGhpcy50eXBlID09PSBhY3Rpb24udHlwZSkge1xuXG4gICAgICAgICAgICB0aGlzLm5ld1Bvc2l0aW9uID0gYWN0aW9uLm5ld1Bvc2l0aW9uO1xuICAgICAgICAgICAgdGhpcy5uZXdXaWR0aCA9IGFjdGlvbi5uZXdXaWR0aDtcbiAgICAgICAgICAgIHRoaXMubmV3SGVpZ2h0ID0gYWN0aW9uLm5ld0hlaWdodDtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgcHJvdG8uaXNJZGVudGl0eSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBpZGVudGl0eSA9XG4gICAgICAgICAgICB0aGlzLm5ld1Bvc2l0aW9uLnggPT09IHRoaXMub2xkUG9zaXRpb24ueCAmJlxuICAgICAgICAgICAgdGhpcy5uZXdQb3NpdGlvbi55ID09PSB0aGlzLm9sZFBvc2l0aW9uLnkgJiZcbiAgICAgICAgICAgIHRoaXMubmV3V2lkdGggPT09IHRoaXMub2xkV2lkdGggJiZcbiAgICAgICAgICAgIHRoaXMubmV3SGVpZ2h0ID09PSB0aGlzLm9sZEhlaWdodDtcblxuICAgICAgICByZXR1cm4gaWRlbnRpdHk7XG4gICAgfTtcbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiU2V0U2l6ZSIsImVkaXRvciIsIm1hcmt1cCIsInBvc2l0aW9uIiwid2lkdGgiLCJoZWlnaHQiLCJjYWxsIiwiaWQiLCJuZXdQb3NpdGlvbiIsIngiLCJ5Iiwib2xkUG9zaXRpb24iLCJuZXdXaWR0aCIsIm9sZFdpZHRoIiwic2l6ZSIsIm5ld0hlaWdodCIsIm9sZEhlaWdodCIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJyZWRvIiwiZ2V0TWFya3VwIiwidGFyZ2V0SWQiLCJzZXRTaXplIiwidW5kbyIsIm1lcmdlIiwiYWN0aW9uIiwidHlwZSIsImlzSWRlbnRpdHkiLCJpZGVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetSize.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetStamp.js":
/*!*********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetStamp.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetStamp: () => (/* binding */ SetStamp)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n\n\nclass SetStamp extends _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction {\n  constructor(editor, stamp, position, size) {\n    super(editor, 'SET-STAMP', stamp.id);\n\n    this.newPosition = { x: position.x, y: position.y };\n    this.newSize = { x: size.x, y: size.y };\n    this.oldPosition = { x: stamp.position.x, y: stamp.position.y };\n    this.oldSize = { x: stamp.size.x, y: stamp.size.y };\n  }\n\n  redo() {\n    this.applyState(this.targetId, this.newPosition, this.newSize);\n  }\n\n  undo() {\n    this.applyState(this.targetId, this.oldPosition, this.oldSize);\n  }\n\n  merge(action) {\n    if (this.targetId === action.targetId && this.type === action.type) {\n      this.newPosition = action.newPosition;\n      this.newSize = action.newSize;\n      return true;\n    }\n\n    return false;\n  }\n\n  applyState(targetId, position, size) {\n    const stamp = this.editor.getMarkup(targetId);\n    if (!stamp) {\n      return;\n    }\n\n    // Different stroke widths make positions differ at sub-pixel level.\n    const epsilon = 0.0001;\n    if (\n    Math.abs(stamp.position.x - position.x) > epsilon ||\n    Math.abs(stamp.position.y - position.y) > epsilon ||\n    Math.abs(stamp.size.x - size.x) > epsilon ||\n    Math.abs(stamp.size.y - size.y) > epsilon)\n    {\n      stamp.set(position, size);\n    }\n  }\n\n  isIdentity() {\n    return (\n      this.newPosition.x === this.oldPosition.x &&\n      this.newPosition.y === this.oldPosition.y &&\n      this.newSize.x === this.oldSize.x &&\n      this.newSize.y === this.newSize.y);\n\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRTdGFtcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU2Qjs7QUFFdEI7O0FBRXBCLE1BQU1DLFFBQVEsU0FBU0QsbURBQVUsQ0FBQztFQUM5QkUsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFO0lBQ3ZDLEtBQUssQ0FBQ0gsTUFBTSxFQUFFLFdBQVcsRUFBRUMsS0FBSyxDQUFDRyxFQUFFLENBQUM7O0lBRXBDLElBQUksQ0FBQ0MsV0FBVyxHQUFHLEVBQUNDLENBQUMsRUFBRUosUUFBUSxDQUFDSSxDQUFDLEVBQUVDLENBQUMsRUFBRUwsUUFBUSxDQUFDSyxDQUFDLEVBQUM7SUFDakQsSUFBSSxDQUFDQyxPQUFPLEdBQUcsRUFBQ0YsQ0FBQyxFQUFFSCxJQUFJLENBQUNHLENBQUMsRUFBRUMsQ0FBQyxFQUFFSixJQUFJLENBQUNJLENBQUMsRUFBQztJQUNyQyxJQUFJLENBQUNFLFdBQVcsR0FBRyxFQUFDSCxDQUFDLEVBQUVMLEtBQUssQ0FBQ0MsUUFBUSxDQUFDSSxDQUFDLEVBQUVDLENBQUMsRUFBRU4sS0FBSyxDQUFDQyxRQUFRLENBQUNLLENBQUMsRUFBQztJQUM3RCxJQUFJLENBQUNHLE9BQU8sR0FBRyxFQUFDSixDQUFDLEVBQUVMLEtBQUssQ0FBQ0UsSUFBSSxDQUFDRyxDQUFDLEVBQUVDLENBQUMsRUFBRU4sS0FBSyxDQUFDRSxJQUFJLENBQUNJLENBQUMsRUFBQztFQUNyRDs7RUFFQUksSUFBSUEsQ0FBQSxFQUFHO0lBQ0gsSUFBSSxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDUixXQUFXLEVBQUUsSUFBSSxDQUFDRyxPQUFPLENBQUM7RUFDbEU7O0VBRUFNLElBQUlBLENBQUEsRUFBRztJQUNILElBQUksQ0FBQ0YsVUFBVSxDQUFDLElBQUksQ0FBQ0MsUUFBUSxFQUFFLElBQUksQ0FBQ0osV0FBVyxFQUFFLElBQUksQ0FBQ0MsT0FBTyxDQUFDO0VBQ2xFOztFQUVBSyxLQUFLQSxDQUFDQyxNQUFNLEVBQUU7SUFDVixJQUFJLElBQUksQ0FBQ0gsUUFBUSxLQUFLRyxNQUFNLENBQUNILFFBQVEsSUFBSSxJQUFJLENBQUNJLElBQUksS0FBS0QsTUFBTSxDQUFDQyxJQUFJLEVBQUU7TUFDaEUsSUFBSSxDQUFDWixXQUFXLEdBQUdXLE1BQU0sQ0FBQ1gsV0FBVztNQUNyQyxJQUFJLENBQUNHLE9BQU8sR0FBR1EsTUFBTSxDQUFDUixPQUFPO01BQzdCLE9BQU8sSUFBSTtJQUNmOztJQUVBLE9BQU8sS0FBSztFQUNoQjs7RUFFQUksVUFBVUEsQ0FBQ0MsUUFBUSxFQUFFWCxRQUFRLEVBQUVDLElBQUksRUFBRTtJQUNqQyxNQUFNRixLQUFLLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUNrQixTQUFTLENBQUNMLFFBQVEsQ0FBQztJQUM3QyxJQUFJLENBQUNaLEtBQUssRUFBRTtNQUNSO0lBQ0o7O0lBRUE7SUFDQSxNQUFNa0IsT0FBTyxHQUFHLE1BQU07SUFDdEI7SUFDSUMsSUFBSSxDQUFDQyxHQUFHLENBQUNwQixLQUFLLENBQUNDLFFBQVEsQ0FBQ0ksQ0FBQyxHQUFHSixRQUFRLENBQUNJLENBQUMsQ0FBQyxHQUFHYSxPQUFPO0lBQzlDQyxJQUFJLENBQUNDLEdBQUcsQ0FBQ3BCLEtBQUssQ0FBQ0MsUUFBUSxDQUFDSyxDQUFDLEdBQUdMLFFBQVEsQ0FBQ0ssQ0FBQyxDQUFDLEdBQUdZLE9BQU87SUFDakRDLElBQUksQ0FBQ0MsR0FBRyxDQUFDcEIsS0FBSyxDQUFDRSxJQUFJLENBQUNHLENBQUMsR0FBR0gsSUFBSSxDQUFDRyxDQUFDLENBQUMsR0FBR2EsT0FBTztJQUN6Q0MsSUFBSSxDQUFDQyxHQUFHLENBQUNwQixLQUFLLENBQUNFLElBQUksQ0FBQ0ksQ0FBQyxHQUFHSixJQUFJLENBQUNJLENBQUMsQ0FBQyxHQUFHWSxPQUFPO0lBQzlDO01BQ0VsQixLQUFLLENBQUNxQixHQUFHLENBQUNwQixRQUFRLEVBQUVDLElBQUksQ0FBQztJQUM3QjtFQUNKOztFQUVBb0IsVUFBVUEsQ0FBQSxFQUFHO0lBQ1Q7TUFDSSxJQUFJLENBQUNsQixXQUFXLENBQUNDLENBQUMsS0FBSyxJQUFJLENBQUNHLFdBQVcsQ0FBQ0gsQ0FBQztNQUN0QyxJQUFJLENBQUNELFdBQVcsQ0FBQ0UsQ0FBQyxLQUFLLElBQUksQ0FBQ0UsV0FBVyxDQUFDRixDQUFDO01BQ3pDLElBQUksQ0FBQ0MsT0FBTyxDQUFDRixDQUFDLEtBQUssSUFBSSxDQUFDSSxPQUFPLENBQUNKLENBQUM7TUFDakMsSUFBSSxDQUFDRSxPQUFPLENBQUNELENBQUMsS0FBSyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0QsQ0FBQzs7RUFFNUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRTdGFtcC5qcz82MTUyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdEFjdGlvbiB9IGZyb20gJy4vRWRpdEFjdGlvbic7XG5cbmV4cG9ydCB7IFNldFN0YW1wIH07XG5cbmNsYXNzIFNldFN0YW1wIGV4dGVuZHMgRWRpdEFjdGlvbiB7XG4gICAgY29uc3RydWN0b3IoZWRpdG9yLCBzdGFtcCwgcG9zaXRpb24sIHNpemUpIHtcbiAgICAgICAgc3VwZXIoZWRpdG9yLCAnU0VULVNUQU1QJywgc3RhbXAuaWQpO1xuXG4gICAgICAgIHRoaXMubmV3UG9zaXRpb24gPSB7eDogcG9zaXRpb24ueCwgeTogcG9zaXRpb24ueX07XG4gICAgICAgIHRoaXMubmV3U2l6ZSA9IHt4OiBzaXplLngsIHk6IHNpemUueX07XG4gICAgICAgIHRoaXMub2xkUG9zaXRpb24gPSB7eDogc3RhbXAucG9zaXRpb24ueCwgeTogc3RhbXAucG9zaXRpb24ueX07XG4gICAgICAgIHRoaXMub2xkU2l6ZSA9IHt4OiBzdGFtcC5zaXplLngsIHk6IHN0YW1wLnNpemUueX07XG4gICAgfVxuXG4gICAgcmVkbygpIHtcbiAgICAgICAgdGhpcy5hcHBseVN0YXRlKHRoaXMudGFyZ2V0SWQsIHRoaXMubmV3UG9zaXRpb24sIHRoaXMubmV3U2l6ZSk7XG4gICAgfVxuXG4gICAgdW5kbygpIHtcbiAgICAgICAgdGhpcy5hcHBseVN0YXRlKHRoaXMudGFyZ2V0SWQsIHRoaXMub2xkUG9zaXRpb24sIHRoaXMub2xkU2l6ZSk7XG4gICAgfVxuXG4gICAgbWVyZ2UoYWN0aW9uKSB7XG4gICAgICAgIGlmICh0aGlzLnRhcmdldElkID09PSBhY3Rpb24udGFyZ2V0SWQgJiYgdGhpcy50eXBlID09PSBhY3Rpb24udHlwZSkge1xuICAgICAgICAgICAgdGhpcy5uZXdQb3NpdGlvbiA9IGFjdGlvbi5uZXdQb3NpdGlvbjtcbiAgICAgICAgICAgIHRoaXMubmV3U2l6ZSA9IGFjdGlvbi5uZXdTaXplO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgYXBwbHlTdGF0ZSh0YXJnZXRJZCwgcG9zaXRpb24sIHNpemUpIHtcbiAgICAgICAgY29uc3Qgc3RhbXAgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGFyZ2V0SWQpO1xuICAgICAgICBpZiAoIXN0YW1wKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEaWZmZXJlbnQgc3Ryb2tlIHdpZHRocyBtYWtlIHBvc2l0aW9ucyBkaWZmZXIgYXQgc3ViLXBpeGVsIGxldmVsLlxuICAgICAgICBjb25zdCBlcHNpbG9uID0gMC4wMDAxO1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBNYXRoLmFicyhzdGFtcC5wb3NpdGlvbi54IC0gcG9zaXRpb24ueCkgPiBlcHNpbG9uXG4gICAgICAgICAgICB8fCBNYXRoLmFicyhzdGFtcC5wb3NpdGlvbi55IC0gcG9zaXRpb24ueSkgPiBlcHNpbG9uXG4gICAgICAgICAgICB8fCBNYXRoLmFicyhzdGFtcC5zaXplLnggLSBzaXplLngpID4gZXBzaWxvblxuICAgICAgICAgICAgfHwgTWF0aC5hYnMoc3RhbXAuc2l6ZS55IC0gc2l6ZS55KSA+IGVwc2lsb25cbiAgICAgICAgKSB7XG4gICAgICAgICAgICBzdGFtcC5zZXQocG9zaXRpb24sIHNpemUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaXNJZGVudGl0eSgpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIHRoaXMubmV3UG9zaXRpb24ueCA9PT0gdGhpcy5vbGRQb3NpdGlvbi54XG4gICAgICAgICAgICAmJiB0aGlzLm5ld1Bvc2l0aW9uLnkgPT09IHRoaXMub2xkUG9zaXRpb24ueVxuICAgICAgICAgICAgJiYgdGhpcy5uZXdTaXplLnggPT09IHRoaXMub2xkU2l6ZS54XG4gICAgICAgICAgICAmJiB0aGlzLm5ld1NpemUueSA9PT0gdGhpcy5uZXdTaXplLnlcbiAgICAgICAgKTtcbiAgICB9XG59Il0sIm5hbWVzIjpbIkVkaXRBY3Rpb24iLCJTZXRTdGFtcCIsImNvbnN0cnVjdG9yIiwiZWRpdG9yIiwic3RhbXAiLCJwb3NpdGlvbiIsInNpemUiLCJpZCIsIm5ld1Bvc2l0aW9uIiwieCIsInkiLCJuZXdTaXplIiwib2xkUG9zaXRpb24iLCJvbGRTaXplIiwicmVkbyIsImFwcGx5U3RhdGUiLCJ0YXJnZXRJZCIsInVuZG8iLCJtZXJnZSIsImFjdGlvbiIsInR5cGUiLCJnZXRNYXJrdXAiLCJlcHNpbG9uIiwiTWF0aCIsImFicyIsInNldCIsImlzSWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetStamp.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetStyle.js":
/*!*********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetStyle.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetStyle: () => (/* binding */ SetStyle)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @param markup\n * @param style\n * @constructor\n */\nfunction SetStyle(editor, markup, style) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-STYLE', markup.id);\n\n  this.newStyle = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_1__.cloneStyle)(style);\n  this.oldStyle = markup.getStyle();\n}\n\nSetStyle.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetStyle.prototype.constructor = SetStyle;\n\nvar proto = SetStyle.prototype;\n\nproto.redo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && markup.setStyle(this.newStyle);\n};\n\nproto.undo = function () {\n\n  var markup = this.editor.getMarkup(this.targetId);\n  markup && markup.setStyle(this.oldStyle);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRTdHlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFNkI7QUFDQzs7QUFFdkM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTRSxRQUFRQSxDQUFDQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFOztFQUU1Q0wsbURBQVUsQ0FBQ00sSUFBSSxDQUFDLElBQUksRUFBRUgsTUFBTSxFQUFFLFdBQVcsRUFBRUMsTUFBTSxDQUFDRyxFQUFFLENBQUM7O0VBRXJELElBQUksQ0FBQ0MsUUFBUSxHQUFHUCx1REFBVSxDQUFDSSxLQUFLLENBQUM7RUFDakMsSUFBSSxDQUFDSSxRQUFRLEdBQUdMLE1BQU0sQ0FBQ00sUUFBUSxDQUFDLENBQUM7QUFDckM7O0FBRUFSLFFBQVEsQ0FBQ1MsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2IsbURBQVUsQ0FBQ1csU0FBUyxDQUFDO0FBQ3hEVCxRQUFRLENBQUNTLFNBQVMsQ0FBQ0csV0FBVyxHQUFHWixRQUFROztBQUV6QyxJQUFJYSxLQUFLLEdBQUdiLFFBQVEsQ0FBQ1MsU0FBUzs7QUFFOUJJLEtBQUssQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlaLE1BQU0sR0FBRyxJQUFJLENBQUNELE1BQU0sQ0FBQ2MsU0FBUyxDQUFDLElBQUksQ0FBQ0MsUUFBUSxDQUFDO0VBQ2pEZCxNQUFNLElBQUlBLE1BQU0sQ0FBQ2UsUUFBUSxDQUFDLElBQUksQ0FBQ1gsUUFBUSxDQUFDO0FBQzVDLENBQUM7O0FBRURPLEtBQUssQ0FBQ0ssSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUloQixNQUFNLEdBQUcsSUFBSSxDQUFDRCxNQUFNLENBQUNjLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztFQUNqRGQsTUFBTSxJQUFJQSxNQUFNLENBQUNlLFFBQVEsQ0FBQyxJQUFJLENBQUNWLFFBQVEsQ0FBQztBQUM1QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL1NldFN0eWxlLmpzP2I4MmUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0QWN0aW9uIH0gZnJvbSAnLi9FZGl0QWN0aW9uJztcbmltcG9ydCB7IGNsb25lU3R5bGUgfSBmcm9tICcuLi9TdHlsZVV0aWxzJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBwYXJhbSBtYXJrdXBcbiAgICAgKiBAcGFyYW0gc3R5bGVcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gU2V0U3R5bGUoZWRpdG9yLCBtYXJrdXAsIHN0eWxlKSB7XG5cbiAgICAgICAgRWRpdEFjdGlvbi5jYWxsKHRoaXMsIGVkaXRvciwgJ1NFVC1TVFlMRScsIG1hcmt1cC5pZCk7XG5cbiAgICAgICAgdGhpcy5uZXdTdHlsZSA9IGNsb25lU3R5bGUoc3R5bGUpO1xuICAgICAgICB0aGlzLm9sZFN0eWxlID0gbWFya3VwLmdldFN0eWxlKCk7XG4gICAgfVxuXG4gICAgU2V0U3R5bGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgU2V0U3R5bGUucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU2V0U3R5bGU7XG5cbiAgICB2YXIgcHJvdG8gPSBTZXRTdHlsZS5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldE1hcmt1cCh0aGlzLnRhcmdldElkKTtcbiAgICAgICAgbWFya3VwICYmIG1hcmt1cC5zZXRTdHlsZSh0aGlzLm5ld1N0eWxlKTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5kbyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBtYXJrdXAgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG4gICAgICAgIG1hcmt1cCAmJiBtYXJrdXAuc2V0U3R5bGUodGhpcy5vbGRTdHlsZSk7XG4gICAgfTtcbiJdLCJuYW1lcyI6WyJFZGl0QWN0aW9uIiwiY2xvbmVTdHlsZSIsIlNldFN0eWxlIiwiZWRpdG9yIiwibWFya3VwIiwic3R5bGUiLCJjYWxsIiwiaWQiLCJuZXdTdHlsZSIsIm9sZFN0eWxlIiwiZ2V0U3R5bGUiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsImdldE1hcmt1cCIsInRhcmdldElkIiwic2V0U3R5bGUiLCJ1bmRvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetStyle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-actions/SetText.js":
/*!********************************************************!*\
  !*** ./extensions/Markup/core/edit-actions/SetText.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetText: () => (/* binding */ SetText)\n/* harmony export */ });\n/* harmony import */ var _EditAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditAction */ \"./extensions/Markup/core/edit-actions/EditAction.js\");\n\n\n\n\n/**\n *\n * @param editor\n * @param markup\n * @param position\n * @param size\n * @param text\n * @constructor\n */\nfunction SetText(editor, markup, position, size, text) {\n\n  _EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.call(this, editor, 'SET-TEXT', markup.id);\n\n  this.newPosition = { x: position.x, y: position.y };\n  this.oldPosition = { x: markup.position.x, y: markup.position.y };\n  this.newSize = { x: size.x, y: size.y };\n  this.oldSize = { x: markup.size.x, y: markup.size.y };\n  this.newText = text;\n  this.oldText = markup.getText();\n}\n\nSetText.prototype = Object.create(_EditAction__WEBPACK_IMPORTED_MODULE_0__.EditAction.prototype);\nSetText.prototype.constructor = SetText;\n\nvar proto = SetText.prototype;\n\nproto.redo = function () {\n\n  var text = this.editor.getMarkup(this.targetId);\n  text && text.set(this.newPosition, this.newSize, this.newText);\n};\n\nproto.undo = function () {\n\n  var text = this.editor.getMarkup(this.targetId);\n  text && text.set(this.oldPosition, this.oldSize, this.oldText);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtYWN0aW9ucy9TZXRUZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRTZCOztBQUV0QztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTQyxPQUFPQSxDQUFDQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRTs7RUFFMUROLG1EQUFVLENBQUNPLElBQUksQ0FBQyxJQUFJLEVBQUVMLE1BQU0sRUFBRSxVQUFVLEVBQUVDLE1BQU0sQ0FBQ0ssRUFBRSxDQUFDOztFQUVwRCxJQUFJLENBQUNDLFdBQVcsR0FBRyxFQUFDQyxDQUFDLEVBQUVOLFFBQVEsQ0FBQ00sQ0FBQyxFQUFFQyxDQUFDLEVBQUVQLFFBQVEsQ0FBQ08sQ0FBQyxFQUFDO0VBQ2pELElBQUksQ0FBQ0MsV0FBVyxHQUFHLEVBQUNGLENBQUMsRUFBRVAsTUFBTSxDQUFDQyxRQUFRLENBQUNNLENBQUMsRUFBRUMsQ0FBQyxFQUFFUixNQUFNLENBQUNDLFFBQVEsQ0FBQ08sQ0FBQyxFQUFDO0VBQy9ELElBQUksQ0FBQ0UsT0FBTyxHQUFHLEVBQUNILENBQUMsRUFBRUwsSUFBSSxDQUFDSyxDQUFDLEVBQUVDLENBQUMsRUFBRU4sSUFBSSxDQUFDTSxDQUFDLEVBQUM7RUFDckMsSUFBSSxDQUFDRyxPQUFPLEdBQUcsRUFBQ0osQ0FBQyxFQUFFUCxNQUFNLENBQUNFLElBQUksQ0FBQ0ssQ0FBQyxFQUFFQyxDQUFDLEVBQUVSLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDTSxDQUFDLEVBQUM7RUFDbkQsSUFBSSxDQUFDSSxPQUFPLEdBQUdULElBQUk7RUFDbkIsSUFBSSxDQUFDVSxPQUFPLEdBQUdiLE1BQU0sQ0FBQ2MsT0FBTyxDQUFDLENBQUM7QUFDbkM7O0FBRUFoQixPQUFPLENBQUNpQixTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDcEIsbURBQVUsQ0FBQ2tCLFNBQVMsQ0FBQztBQUN2RGpCLE9BQU8sQ0FBQ2lCLFNBQVMsQ0FBQ0csV0FBVyxHQUFHcEIsT0FBTzs7QUFFdkMsSUFBSXFCLEtBQUssR0FBR3JCLE9BQU8sQ0FBQ2lCLFNBQVM7O0FBRTdCSSxLQUFLLENBQUNDLElBQUksR0FBRyxZQUFXOztFQUVwQixJQUFJakIsSUFBSSxHQUFHLElBQUksQ0FBQ0osTUFBTSxDQUFDc0IsU0FBUyxDQUFDLElBQUksQ0FBQ0MsUUFBUSxDQUFDO0VBQy9DbkIsSUFBSSxJQUFJQSxJQUFJLENBQUNvQixHQUFHLENBQUMsSUFBSSxDQUFDakIsV0FBVyxFQUFFLElBQUksQ0FBQ0ksT0FBTyxFQUFFLElBQUksQ0FBQ0UsT0FBTyxDQUFDO0FBQ2xFLENBQUM7O0FBRURPLEtBQUssQ0FBQ0ssSUFBSSxHQUFHLFlBQVc7O0VBRXBCLElBQUlyQixJQUFJLEdBQUcsSUFBSSxDQUFDSixNQUFNLENBQUNzQixTQUFTLENBQUMsSUFBSSxDQUFDQyxRQUFRLENBQUM7RUFDL0NuQixJQUFJLElBQUlBLElBQUksQ0FBQ29CLEdBQUcsQ0FBQyxJQUFJLENBQUNkLFdBQVcsRUFBRSxJQUFJLENBQUNFLE9BQU8sRUFBRSxJQUFJLENBQUNFLE9BQU8sQ0FBQztBQUNsRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1hY3Rpb25zL1NldFRleHQuanM/YmM3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRBY3Rpb24gfSBmcm9tICcuL0VkaXRBY3Rpb24nO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQHBhcmFtIG1hcmt1cFxuICAgICAqIEBwYXJhbSBwb3NpdGlvblxuICAgICAqIEBwYXJhbSBzaXplXG4gICAgICogQHBhcmFtIHRleHRcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gU2V0VGV4dChlZGl0b3IsIG1hcmt1cCwgcG9zaXRpb24sIHNpemUsIHRleHQpIHtcblxuICAgICAgICBFZGl0QWN0aW9uLmNhbGwodGhpcywgZWRpdG9yLCAnU0VULVRFWFQnLCBtYXJrdXAuaWQpO1xuXG4gICAgICAgIHRoaXMubmV3UG9zaXRpb24gPSB7eDogcG9zaXRpb24ueCwgeTogcG9zaXRpb24ueX07XG4gICAgICAgIHRoaXMub2xkUG9zaXRpb24gPSB7eDogbWFya3VwLnBvc2l0aW9uLngsIHk6IG1hcmt1cC5wb3NpdGlvbi55fTtcbiAgICAgICAgdGhpcy5uZXdTaXplID0ge3g6IHNpemUueCwgeTogc2l6ZS55fTtcbiAgICAgICAgdGhpcy5vbGRTaXplID0ge3g6IG1hcmt1cC5zaXplLngsIHk6IG1hcmt1cC5zaXplLnl9O1xuICAgICAgICB0aGlzLm5ld1RleHQgPSB0ZXh0O1xuICAgICAgICB0aGlzLm9sZFRleHQgPSBtYXJrdXAuZ2V0VGV4dCgpO1xuICAgIH1cblxuICAgIFNldFRleHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0QWN0aW9uLnByb3RvdHlwZSk7XG4gICAgU2V0VGV4dC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTZXRUZXh0O1xuXG4gICAgdmFyIHByb3RvID0gU2V0VGV4dC5wcm90b3R5cGU7XG5cbiAgICBwcm90by5yZWRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIHRleHQgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG4gICAgICAgIHRleHQgJiYgdGV4dC5zZXQodGhpcy5uZXdQb3NpdGlvbiwgdGhpcy5uZXdTaXplLCB0aGlzLm5ld1RleHQpO1xuICAgIH07XG5cbiAgICBwcm90by51bmRvID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIHRleHQgPSB0aGlzLmVkaXRvci5nZXRNYXJrdXAodGhpcy50YXJnZXRJZCk7XG4gICAgICAgIHRleHQgJiYgdGV4dC5zZXQodGhpcy5vbGRQb3NpdGlvbiwgdGhpcy5vbGRTaXplLCB0aGlzLm9sZFRleHQpO1xuICAgIH07XG4iXSwibmFtZXMiOlsiRWRpdEFjdGlvbiIsIlNldFRleHQiLCJlZGl0b3IiLCJtYXJrdXAiLCJwb3NpdGlvbiIsInNpemUiLCJ0ZXh0IiwiY2FsbCIsImlkIiwibmV3UG9zaXRpb24iLCJ4IiwieSIsIm9sZFBvc2l0aW9uIiwibmV3U2l6ZSIsIm9sZFNpemUiLCJuZXdUZXh0Iiwib2xkVGV4dCIsImdldFRleHQiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwicmVkbyIsImdldE1hcmt1cCIsInRhcmdldElkIiwic2V0IiwidW5kbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-actions/SetText.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-clipboard/Clipboard.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-clipboard/Clipboard.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Clipboard: () => (/* binding */ Clipboard)\n/* harmony export */ });\n/* harmony import */ var _edit_actions_CloneMarkup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../edit-actions/CloneMarkup */ \"./extensions/Markup/core/edit-actions/CloneMarkup.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n\n\n\n\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction Clipboard(editor) {\n\n  this.editor = editor;\n  this.content = null;\n  this.pastePosition = { x: 0, y: 0 };\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.addTraitEventDispatcher)(this);\n}\n\nvar proto = Clipboard.prototype;\n\nproto.copy = function () {\n\n  var selectedMarkup = this.editor.getSelection();\n  if (!selectedMarkup) {\n    return;\n  }\n\n  this.content = selectedMarkup.clone();\n  this.pastePosition.x = selectedMarkup.position.x;\n  this.pastePosition.y = selectedMarkup.position.y;\n};\n\nproto.cut = function () {\n\n  var selectedMarkup = this.editor.getSelection();\n  if (!selectedMarkup) {\n    return;\n  }\n\n  this.copy();\n  this.editor.deleteMarkup(selectedMarkup);\n};\n\nproto.paste = function () {\n\n  var content = this.content;\n  if (!content) {\n    return;\n  }\n\n  var editor = this.editor;\n  var position = this.pastePosition;\n  var delta = editor.sizeFromClientToMarkups(20, 20);\n\n  position.x += delta.x;\n  position.y -= delta.y;\n\n  var cloneMarkup = new _edit_actions_CloneMarkup__WEBPACK_IMPORTED_MODULE_0__.CloneMarkup(editor, editor.getId(), content, position);\n  cloneMarkup.execute();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtY2xpcGJvYXJkL0NsaXBib2FyZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFNkM7QUFDSTs7QUFFMUQ7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNXLFNBQVNFLFNBQVNBLENBQUNDLE1BQU0sRUFBRTs7RUFFOUIsSUFBSSxDQUFDQSxNQUFNLEdBQUdBLE1BQU07RUFDcEIsSUFBSSxDQUFDQyxPQUFPLEdBQUcsSUFBSTtFQUNuQixJQUFJLENBQUNDLGFBQWEsR0FBRyxFQUFDQyxDQUFDLEVBQUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUUsQ0FBQyxFQUFDOztFQUVoQ04sMEVBQXVCLENBQUMsSUFBSSxDQUFDO0FBQ2pDOztBQUVBLElBQUlPLEtBQUssR0FBR04sU0FBUyxDQUFDTyxTQUFTOztBQUUvQkQsS0FBSyxDQUFDRSxJQUFJLEdBQUcsWUFBVzs7RUFFcEIsSUFBSUMsY0FBYyxHQUFHLElBQUksQ0FBQ1IsTUFBTSxDQUFDUyxZQUFZLENBQUMsQ0FBQztFQUMvQyxJQUFHLENBQUNELGNBQWMsRUFBRTtJQUNoQjtFQUNKOztFQUVBLElBQUksQ0FBQ1AsT0FBTyxHQUFHTyxjQUFjLENBQUNFLEtBQUssQ0FBQyxDQUFDO0VBQ3JDLElBQUksQ0FBQ1IsYUFBYSxDQUFDQyxDQUFDLEdBQUdLLGNBQWMsQ0FBQ0csUUFBUSxDQUFDUixDQUFDO0VBQ2hELElBQUksQ0FBQ0QsYUFBYSxDQUFDRSxDQUFDLEdBQUdJLGNBQWMsQ0FBQ0csUUFBUSxDQUFDUCxDQUFDO0FBQ3BELENBQUM7O0FBRURDLEtBQUssQ0FBQ08sR0FBRyxHQUFHLFlBQVc7O0VBRW5CLElBQUlKLGNBQWMsR0FBRyxJQUFJLENBQUNSLE1BQU0sQ0FBQ1MsWUFBWSxDQUFDLENBQUM7RUFDL0MsSUFBRyxDQUFDRCxjQUFjLEVBQUU7SUFDaEI7RUFDSjs7RUFFQSxJQUFJLENBQUNELElBQUksQ0FBQyxDQUFDO0VBQ1gsSUFBSSxDQUFDUCxNQUFNLENBQUNhLFlBQVksQ0FBQ0wsY0FBYyxDQUFDO0FBQzVDLENBQUM7O0FBRURILEtBQUssQ0FBQ1MsS0FBSyxHQUFHLFlBQVc7O0VBRXJCLElBQUliLE9BQU8sR0FBRyxJQUFJLENBQUNBLE9BQU87RUFDMUIsSUFBRyxDQUFDQSxPQUFPLEVBQUU7SUFDVDtFQUNKOztFQUVBLElBQUlELE1BQU0sR0FBRyxJQUFJLENBQUNBLE1BQU07RUFDeEIsSUFBSVcsUUFBUSxHQUFHLElBQUksQ0FBQ1QsYUFBYTtFQUNqQyxJQUFJYSxLQUFLLEdBQUdmLE1BQU0sQ0FBQ2dCLHVCQUF1QixDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUM7O0VBRWxETCxRQUFRLENBQUNSLENBQUMsSUFBSVksS0FBSyxDQUFDWixDQUFDO0VBQ3JCUSxRQUFRLENBQUNQLENBQUMsSUFBSVcsS0FBSyxDQUFDWCxDQUFDOztFQUVyQixJQUFJYSxXQUFXLEdBQUcsSUFBSXBCLGtFQUFXLENBQUNHLE1BQU0sRUFBRUEsTUFBTSxDQUFDa0IsS0FBSyxDQUFDLENBQUMsRUFBRWpCLE9BQU8sRUFBRVUsUUFBUSxDQUFDO0VBQzVFTSxXQUFXLENBQUNFLE9BQU8sQ0FBQyxDQUFDO0FBQ3pCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LWNsaXBib2FyZC9DbGlwYm9hcmQuanM/NDY0NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IENsb25lTWFya3VwIH0gZnJvbSAnLi4vZWRpdC1hY3Rpb25zL0Nsb25lTWFya3VwJztcbmltcG9ydCB7IGFkZFRyYWl0RXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnLi4vTWFya3Vwc0NvcmVVdGlscyc7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gQ2xpcGJvYXJkKGVkaXRvcikge1xuXG4gICAgICAgIHRoaXMuZWRpdG9yID0gZWRpdG9yO1xuICAgICAgICB0aGlzLmNvbnRlbnQgPSBudWxsO1xuICAgICAgICB0aGlzLnBhc3RlUG9zaXRpb24gPSB7eDowLCB5OiAwfTtcblxuICAgICAgICBhZGRUcmFpdEV2ZW50RGlzcGF0Y2hlcih0aGlzKTtcbiAgICB9XG5cbiAgICB2YXIgcHJvdG8gPSBDbGlwYm9hcmQucHJvdG90eXBlO1xuXG4gICAgcHJvdG8uY29weSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciBzZWxlY3RlZE1hcmt1cCA9IHRoaXMuZWRpdG9yLmdldFNlbGVjdGlvbigpO1xuICAgICAgICBpZighc2VsZWN0ZWRNYXJrdXApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY29udGVudCA9IHNlbGVjdGVkTWFya3VwLmNsb25lKCk7XG4gICAgICAgIHRoaXMucGFzdGVQb3NpdGlvbi54ID0gc2VsZWN0ZWRNYXJrdXAucG9zaXRpb24ueDtcbiAgICAgICAgdGhpcy5wYXN0ZVBvc2l0aW9uLnkgPSBzZWxlY3RlZE1hcmt1cC5wb3NpdGlvbi55O1xuICAgIH07XG5cbiAgICBwcm90by5jdXQgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgc2VsZWN0ZWRNYXJrdXAgPSB0aGlzLmVkaXRvci5nZXRTZWxlY3Rpb24oKTtcbiAgICAgICAgaWYoIXNlbGVjdGVkTWFya3VwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNvcHkoKTtcbiAgICAgICAgdGhpcy5lZGl0b3IuZGVsZXRlTWFya3VwKHNlbGVjdGVkTWFya3VwKTtcbiAgICB9O1xuXG4gICAgcHJvdG8ucGFzdGUgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgY29udGVudCA9IHRoaXMuY29udGVudDtcbiAgICAgICAgaWYoIWNvbnRlbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gdGhpcy5wYXN0ZVBvc2l0aW9uO1xuICAgICAgICB2YXIgZGVsdGEgPSBlZGl0b3Iuc2l6ZUZyb21DbGllbnRUb01hcmt1cHMoMjAsIDIwKTtcblxuICAgICAgICBwb3NpdGlvbi54ICs9IGRlbHRhLng7XG4gICAgICAgIHBvc2l0aW9uLnkgLT0gZGVsdGEueTtcblxuICAgICAgICB2YXIgY2xvbmVNYXJrdXAgPSBuZXcgQ2xvbmVNYXJrdXAoZWRpdG9yLCBlZGl0b3IuZ2V0SWQoKSwgY29udGVudCwgcG9zaXRpb24pO1xuICAgICAgICBjbG9uZU1hcmt1cC5leGVjdXRlKCk7XG4gICAgfTtcbiJdLCJuYW1lcyI6WyJDbG9uZU1hcmt1cCIsImFkZFRyYWl0RXZlbnREaXNwYXRjaGVyIiwiQ2xpcGJvYXJkIiwiZWRpdG9yIiwiY29udGVudCIsInBhc3RlUG9zaXRpb24iLCJ4IiwieSIsInByb3RvIiwicHJvdG90eXBlIiwiY29weSIsInNlbGVjdGVkTWFya3VwIiwiZ2V0U2VsZWN0aW9uIiwiY2xvbmUiLCJwb3NpdGlvbiIsImN1dCIsImRlbGV0ZU1hcmt1cCIsInBhc3RlIiwiZGVsdGEiLCJzaXplRnJvbUNsaWVudFRvTWFya3VwcyIsImNsb25lTWFya3VwIiwiZ2V0SWQiLCJleGVjdXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-clipboard/Clipboard.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-input/InputHandler.js":
/*!***********************************************************!*\
  !*** ./extensions/Markup/core/edit-input/InputHandler.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputHandler: () => (/* binding */ InputHandler)\n/* harmony export */ });\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n\n\n\n\nvar av = Autodesk.Viewing;\nvar avp = av.Private;\n\nvar _mouseEnabled = false;\nvar _mousePrevValue = false;\nvar _lock = false;\n\nfunction InputHandler() {\n\n  this.editor = null;\n  this.mousePosition = { x: 0, y: 0 };\n  this.makeSameXY = false; // TODO: FIND a better way to name and communicate these.\n  this.snapRotations = false;\n  this.keepAspectRatio = false;\n  this.constrainAxis = false;\n  this.duringEditMode = false;\n\n  this.onWheelBinded = this.onWheel.bind(this);\n  this.onTouchDragBinded = this.onTouchDrag.bind(this);\n  this.onTouchPanBinded = this.onTouchPan.bind(this);\n  this.onTouchPinchBinded = this.onTouchPinch.bind(this);\n  this.onSingleTapBinded = this.onSingleTap.bind(this);\n  this.onDoubleTapBinded = this.onDoubleTap.bind(this);\n  this.onMouseMoveBinded = this.onMouseMove.bind(this);\n  this.onMouseUpBinded = this.onMouseUp.bind(this);\n  this.onMouseDownBinded = this.onMouseDown.bind(this);\n  this.onMouseDoubleClickBinded = this.onMouseDoubleClick.bind(this);\n  this.onHammerInputBinded = this.onHammerInput.bind(this);\n  this.isMouseDown = false;\n}\n\nav.GlobalManagerMixin.call(InputHandler.prototype);\nvar proto = InputHandler.prototype;\n\nproto.attachTo = function (editor) {\n\n  this.editor && this.detachFrom(this.editor);\n  this.editor = editor;\n\n  if ((0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_0__.isTouchDevice)()) {\n\n    this.hammer = new av.Hammer.Manager(editor.svg, {\n      recognizers: [\n      av.GestureRecognizers.drag,\n      av.GestureRecognizers.doubletap,\n      av.GestureRecognizers.doubletap2,\n      av.GestureRecognizers.singletap,\n      av.GestureRecognizers.singletap2,\n      av.GestureRecognizers.press,\n      av.GestureRecognizers.pan,\n      av.GestureRecognizers.pinch],\n\n      handlePointerEventMouse: false,\n      inputClass: av.Hammer.TouchInput\n    });\n\n    this.hammer.get('doubletap2').recognizeWith('doubletap');\n    this.hammer.get('singletap2').recognizeWith('singletap');\n    this.hammer.get('singletap').requireFailure('doubletap');\n  }\n};\n\nproto.onHammerInput = function (event) {\n\n  this.setMouseDisabledWhenTouching(event);\n};\n\nproto.setMouseDisabledWhenTouching = function (event) {\n\n  if (event.isFirst && !_lock) {\n    this.enableMouseButtons(false);\n    _lock = true;\n  } else if (event.isFinal) {\n    var _this = this;\n    setTimeout(function () {\n      _this.enableMouseButtons(_mousePrevValue);\n      _lock = false;\n    }, 10);\n  }\n};\n\nproto.enableMouseButtons = function (state) {\n\n  if (state && !_mouseEnabled)\n  {\n    this.editor.svg.addEventListener('mousedown', this.onMouseDownBinded);\n    this.editor.svg.addEventListener('dblclick', this.onMouseDoubleClickBinded);\n    this.editor.svg.addEventListener('wheel', this.onWheelBinded);\n    this.editor.svg.addEventListener('DOMMouseScroll', this.onWheelBinded); // Firefox\n\n    // The mouseup and mousemove listeners are at the document level to handle the case where\n    // mouse was held inside the canvas and released outside.\n    // When this happens, we don't want the editing to be in a hung state and cancel it\n    this.addDocumentEventListener('mousemove', this.onMouseMoveBinded);\n    this.addDocumentEventListener('mouseup', this.onMouseUpBinded);\n  } else\n  if (!state && _mouseEnabled)\n  {\n    this.editor.svg.removeEventListener('mousedown', this.onMouseDownBinded);\n    this.editor.svg.removeEventListener('dblclick', this.onMouseDoubleClickBinded);\n    this.editor.svg.removeEventListener('wheel', this.onWheelBinded);\n    this.editor.svg.removeEventListener('DOMMouseScroll', this.onWheelBinded);\n    this.removeDocumentEventListener('mousemove', this.onMouseMoveBinded);\n    this.removeDocumentEventListener('mouseup', this.onMouseUpBinded);\n\n  }\n\n  _mousePrevValue = _mouseEnabled;\n  _mouseEnabled = state;\n};\n\nproto.detachFrom = function (editor) {\n\n  this.hammer && this.hammer.destroy();\n\n  this.removeDocumentEventListener('mousemove', this.onMouseMoveBinded);\n  this.removeDocumentEventListener('mouseup', this.onMouseUpBinded);\n\n  if (this.editor) {\n    this.editor.svg.removeEventListener('mousedown', this.onMouseDownBinded);\n    this.editor.svg.removeEventListener('dblclick', this.onMouseDoubleClickBinded);\n  }\n\n  this.editor = editor;\n};\n\nproto.enterEditMode = function () {\n  if (this.duringEditMode) {\n    return;\n  }\n\n  if (this.hammer) {\n    this.hammer.on('dragstart dragmove dragend', this.onTouchDragBinded);\n    this.hammer.on('panstart panmove panend', this.onTouchPanBinded);\n    this.hammer.on('pinchstart pinchmove pinchend', this.onTouchPinchBinded);\n    this.hammer.on('singletap', this.onSingleTapBinded);\n    this.hammer.on('singletap2', this.onSingleTapBinded);\n    this.hammer.on('doubletap', this.onDoubleTapBinded);\n    this.hammer.on('doubletap2', this.onDoubleTapBinded);\n    this.hammer.on('hammer.input', this.onHammerInputBinded);\n\n    this.hammer.get('drag').requireFailure('pinch');\n    this.hammer.get('drag').requireFailure('pan');\n  }\n\n  if (!av.isMobileDevice()) {\n    this.enableMouseButtons(true);\n  }\n\n  this.duringEditMode = true;\n};\n\nproto.leaveEditMode = function () {\n  if (!this.duringEditMode) {\n    return;\n  }\n\n  if (this.hammer) {\n    this.hammer.off('dragstart dragmove dragend', this.onTouchDragBinded);\n    this.hammer.off('panstart panmove panend', this.onTouchPanBinded);\n    this.hammer.off('pinchstart pinchmove pinchend', this.onTouchPinchBinded);\n    this.hammer.off('singletap', this.onSingleTapBinded);\n    this.hammer.off('singletap2', this.onSingleTapBinded);\n    this.hammer.off('doubletap', this.onDoubleTapBinded);\n    this.hammer.off('doubletap2', this.onDoubleTapBinded);\n    this.hammer.off('hammer.input', this.onHammerInputBinded);\n  }\n\n  if (!av.isMobileDevice()) {\n    this.enableMouseButtons(false);\n  }\n\n  this.duringEditMode = false;\n};\n\nproto.enterViewMode = function () {\n\n};\n\nproto.leaveViewMode = function () {\n\n};\n\nproto.getMousePosition = function () {\n\n  return { x: this.mousePosition.x, y: this.mousePosition.y };\n};\n\nproto.onWheel = function (event) {\n\n  if (!av.isMobileDevice()) {\n    this.editor.viewer.toolController.mousewheel(event);\n  }\n\n  event.preventDefault();\n};\n\nproto.onMouseMove = function (event) {\n\n  processMouseEvent(this, event);\n\n  if (!av.isMobileDevice() && this.editor.viewer.container.contains(event.target)) {\n    this.editor.viewer.toolController.mousemove(event);\n  }\n\n  if (this.editor.onMouseMove(event)) {\n    // editor handled the event\n    event.preventDefault();\n  }\n};\n\n\nproto.onMouseDownRightClick = function (event) {\n\n  const _document = this.getDocument();\n  _document.activeElement && _document.activeElement.blur && _document.activeElement.blur();\n\n  var controller = this.editor.viewer.toolController;\n  controller.__clientToCanvasCoords(event);\n\n  this.editor.markupTool.handleButtonDown(event, 2);\n};\n\nproto.onMouseUpRightClick = function (event) {\n\n  var controller = this.editor.viewer.toolController;\n  controller.__clientToCanvasCoords(event);\n\n  this.editor.markupTool.handleButtonUp(event, 2);\n};\n\nproto.onMouseDown = function (event) {\n\n  processMouseEvent(this, event);\n\n  // Panning when right clicking\n  if (!av.isMobileDevice() && (avp.isRightClick(event, this.editor.viewer.navigation) || avp.isMiddleClick(event))) {\n    this.onMouseDownRightClick(event);\n    return;\n  }\n\n  this.isMouseDown = true;\n  this.editor.onMouseDown(event);\n  event.preventDefault();\n};\n\nproto.onMouseUp = function (event) {\n\n  processMouseEvent(this, event);\n\n  if (!av.isMobileDevice() && this.editor.viewer.container.contains(event.target) && (\n  avp.isRightClick(event, this.editor.viewer.navigation) || avp.isMiddleClick(event)))\n  {\n    this.onMouseUpRightClick(event);\n    return;\n  }\n\n  this.isMouseDown = false;\n  if (this.editor.onMouseUp(event)) {\n    // editor handled the event\n    event.preventDefault();\n  }\n};\n\nproto.onMouseDoubleClick = function (event) {\n\n  processMouseEvent(this, event);\n  this.editor.onMouseDoubleClick(event);\n  event.preventDefault();\n};\n\nproto.onTouchDrag = function (event) {\n\n  convertEventHammerToMouse(event);\n  switch (event.type) {\n    case 'dragstart':\n      this.onMouseDown(event);\n      break;\n    case 'dragmove':\n      this.onMouseMove(event);\n      break;\n    case 'dragend':\n      this.onMouseUp(event);\n      break;\n  }\n  event.preventDefault();\n};\n\nproto.onTouchPan = function (event) {\n\n  var gestureHandler = this.editor.viewer.toolController.getTool(\"gestures\");\n  gestureHandler.distributeGesture(event);\n  event.preventDefault();\n};\n\nproto.onTouchPinch = function (event) {\n\n  processMouseEvent(this, event);\n\n  var gestureHandler = this.editor.viewer.toolController.getTool(\"gestures\");\n  gestureHandler.distributeGesture(event);\n\n  this.mousePosition.x = this.mousePosition.y = null;\n  this.editor.callSnapperMouseMove();\n\n  event.preventDefault();\n};\n\nproto.onSingleTap = function (event) {\n\n  convertEventHammerToMouse(event);\n\n  this.onMouseDown(event);\n  this.onMouseUp(event);\n  event.preventDefault();\n};\n\nproto.onDoubleTap = function (event) {\n\n  convertEventHammerToMouse(event);\n  this.onMouseDoubleClick(event);\n  event.preventDefault();\n};\n\nfunction processMouseEvent(input, event) {\n\n  var rect = input.editor.svg.getBoundingClientRect();\n\n  input.makeSameXY = event.shiftKey;\n  input.snapRotations = event.shiftKey;\n  input.keepAspectRatio = event.shiftKey;\n  input.constrainAxis = event.shiftKey;\n\n  input.mousePosition.x = event.clientX - rect.left;\n  input.mousePosition.y = event.clientY - rect.top;\n}\n\nfunction convertEventHammerToMouse(event) {\n\n  // Convert Hammer touch-event X,Y into mouse-event X,Y.\n  event.shiftKey = false;\n  event.clientX = event.pointers[0].clientX;\n  event.clientY = event.pointers[0].clientY;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-input/InputHandler.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/BuiltinEditModes.js":
/*!***************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/BuiltinEditModes.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _EditModeManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../EditModeManager */ \"./extensions/Markup/core/EditModeManager.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _EditModeArrow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EditModeArrow */ \"./extensions/Markup/core/edit-modes/EditModeArrow.js\");\n/* harmony import */ var _EditModeText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EditModeText */ \"./extensions/Markup/core/edit-modes/EditModeText.js\");\n/* harmony import */ var _EditModeRectangle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EditModeRectangle */ \"./extensions/Markup/core/edit-modes/EditModeRectangle.js\");\n/* harmony import */ var _EditModeCircle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EditModeCircle */ \"./extensions/Markup/core/edit-modes/EditModeCircle.js\");\n/* harmony import */ var _EditModeCloud__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EditModeCloud */ \"./extensions/Markup/core/edit-modes/EditModeCloud.js\");\n/* harmony import */ var _EditModeFreehand__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EditModeFreehand */ \"./extensions/Markup/core/edit-modes/EditModeFreehand.js\");\n/* harmony import */ var _EditModeHighlight__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./EditModeHighlight */ \"./extensions/Markup/core/edit-modes/EditModeHighlight.js\");\n/* harmony import */ var _EditModePolyline__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EditModePolyline */ \"./extensions/Markup/core/edit-modes/EditModePolyline.js\");\n/* harmony import */ var _EditModePolycloud__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EditModePolycloud */ \"./extensions/Markup/core/edit-modes/EditModePolycloud.js\");\n/* harmony import */ var _EditModeCallout__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./EditModeCallout */ \"./extensions/Markup/core/edit-modes/EditModeCallout.js\");\n/* harmony import */ var _EditModeDimension__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./EditModeDimension */ \"./extensions/Markup/core/edit-modes/EditModeDimension.js\");\n/* harmony import */ var _EditModeStamp__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./EditModeStamp */ \"./extensions/Markup/core/edit-modes/EditModeStamp.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_ARROW, _EditModeArrow__WEBPACK_IMPORTED_MODULE_2__.EditModeArrow);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_TEXT, _EditModeText__WEBPACK_IMPORTED_MODULE_3__.EditModeText);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_RECTANGLE, _EditModeRectangle__WEBPACK_IMPORTED_MODULE_4__.EditModeRectangle);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_CIRCLE, _EditModeCircle__WEBPACK_IMPORTED_MODULE_5__.EditModeCircle);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_CLOUD, _EditModeCloud__WEBPACK_IMPORTED_MODULE_6__.EditModeCloud);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_FREEHAND, _EditModeFreehand__WEBPACK_IMPORTED_MODULE_7__.EditModeFreehand);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_HIGHLIGHT, _EditModeHighlight__WEBPACK_IMPORTED_MODULE_8__.EditModeHighlight);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_POLYLINE, _EditModePolyline__WEBPACK_IMPORTED_MODULE_9__.EditModePolyline);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_POLYCLOUD, _EditModePolycloud__WEBPACK_IMPORTED_MODULE_10__.EditModePolycloud);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_CALLOUT, _EditModeCallout__WEBPACK_IMPORTED_MODULE_11__.EditModeCallout);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_DIMENSION, _EditModeDimension__WEBPACK_IMPORTED_MODULE_12__.EditModeDimension);\n_EditModeManager__WEBPACK_IMPORTED_MODULE_0__.theEditModeManager.register(_MarkupTypes__WEBPACK_IMPORTED_MODULE_1__.MARKUP_TYPE_STAMP, _EditModeStamp__WEBPACK_IMPORTED_MODULE_13__.EditModeStamp);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtbW9kZXMvQnVpbHRpbkVkaXRNb2Rlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ3dEO0FBQ1Y7O0FBRUU7QUFDRjtBQUNVO0FBQ047QUFDRjtBQUNNO0FBQ0U7QUFDRjtBQUNFO0FBQ0o7QUFDSTtBQUNSOzs7QUFHaERBLGdFQUFrQixDQUFDYyxRQUFRLENBQUNiLDJEQUE2QixFQUFFQyx5REFBYSxDQUFDO0FBQ3pFRixnRUFBa0IsQ0FBQ2MsUUFBUSxDQUFDYiwwREFBNEIsRUFBRUUsdURBQVksQ0FBQztBQUN2RUgsZ0VBQWtCLENBQUNjLFFBQVEsQ0FBQ2IsK0RBQWlDLEVBQUVHLGlFQUFpQixDQUFDO0FBQ2pGSixnRUFBa0IsQ0FBQ2MsUUFBUSxDQUFDYiw0REFBOEIsRUFBRUksMkRBQWMsQ0FBQztBQUMzRUwsZ0VBQWtCLENBQUNjLFFBQVEsQ0FBQ2IsMkRBQTZCLEVBQUVLLHlEQUFhLENBQUM7QUFDekVOLGdFQUFrQixDQUFDYyxRQUFRLENBQUNiLDhEQUFnQyxFQUFFTSwrREFBZ0IsQ0FBQztBQUMvRVAsZ0VBQWtCLENBQUNjLFFBQVEsQ0FBQ2IsK0RBQWlDLEVBQUVPLGlFQUFpQixDQUFDO0FBQ2pGUixnRUFBa0IsQ0FBQ2MsUUFBUSxDQUFDYiw4REFBZ0MsRUFBRVEsK0RBQWdCLENBQUM7QUFDL0VULGdFQUFrQixDQUFDYyxRQUFRLENBQUNiLCtEQUFpQyxFQUFFUyxrRUFBaUIsQ0FBQztBQUNqRlYsZ0VBQWtCLENBQUNjLFFBQVEsQ0FBQ2IsNkRBQStCLEVBQUVVLDhEQUFlLENBQUM7QUFDN0VYLGdFQUFrQixDQUFDYyxRQUFRLENBQUNiLCtEQUFpQyxFQUFFVyxrRUFBaUIsQ0FBQztBQUNqRlosZ0VBQWtCLENBQUNjLFFBQVEsQ0FBQ2IsMkRBQTZCLEVBQUVZLDBEQUFhLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LW1vZGVzL0J1aWx0aW5FZGl0TW9kZXMuanM/ZTc0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IHRoZUVkaXRNb2RlTWFuYWdlciB9IGZyb20gJy4uL0VkaXRNb2RlTWFuYWdlcic7XG5pbXBvcnQgKiBhcyBNYXJrdXBUeXBlcyBmcm9tICcuLi9NYXJrdXBUeXBlcyc7XG5cbmltcG9ydCB7IEVkaXRNb2RlQXJyb3cgfSBmcm9tICcuL0VkaXRNb2RlQXJyb3cnO1xuaW1wb3J0IHsgRWRpdE1vZGVUZXh0IH0gZnJvbSAnLi9FZGl0TW9kZVRleHQnO1xuaW1wb3J0IHsgRWRpdE1vZGVSZWN0YW5nbGUgfSBmcm9tICcuL0VkaXRNb2RlUmVjdGFuZ2xlJztcbmltcG9ydCB7IEVkaXRNb2RlQ2lyY2xlIH0gZnJvbSAnLi9FZGl0TW9kZUNpcmNsZSc7XG5pbXBvcnQgeyBFZGl0TW9kZUNsb3VkIH0gZnJvbSAnLi9FZGl0TW9kZUNsb3VkJztcbmltcG9ydCB7IEVkaXRNb2RlRnJlZWhhbmQgfSBmcm9tICcuL0VkaXRNb2RlRnJlZWhhbmQnO1xuaW1wb3J0IHsgRWRpdE1vZGVIaWdobGlnaHQgfSBmcm9tICcuL0VkaXRNb2RlSGlnaGxpZ2h0JztcbmltcG9ydCB7IEVkaXRNb2RlUG9seWxpbmUgfSBmcm9tICcuL0VkaXRNb2RlUG9seWxpbmUnO1xuaW1wb3J0IHsgRWRpdE1vZGVQb2x5Y2xvdWQgfSBmcm9tICcuL0VkaXRNb2RlUG9seWNsb3VkJztcbmltcG9ydCB7IEVkaXRNb2RlQ2FsbG91dCB9IGZyb20gJy4vRWRpdE1vZGVDYWxsb3V0JztcbmltcG9ydCB7IEVkaXRNb2RlRGltZW5zaW9uIH0gZnJvbSAnLi9FZGl0TW9kZURpbWVuc2lvbic7XG5pbXBvcnQgeyBFZGl0TW9kZVN0YW1wIH0gZnJvbSAnLi9FZGl0TW9kZVN0YW1wJztcblxuXG50aGVFZGl0TW9kZU1hbmFnZXIucmVnaXN0ZXIoTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfQVJST1csIEVkaXRNb2RlQXJyb3cpO1xudGhlRWRpdE1vZGVNYW5hZ2VyLnJlZ2lzdGVyKE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX1RFWFQsIEVkaXRNb2RlVGV4dCk7XG50aGVFZGl0TW9kZU1hbmFnZXIucmVnaXN0ZXIoTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfUkVDVEFOR0xFLCBFZGl0TW9kZVJlY3RhbmdsZSk7XG50aGVFZGl0TW9kZU1hbmFnZXIucmVnaXN0ZXIoTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfQ0lSQ0xFLCBFZGl0TW9kZUNpcmNsZSk7XG50aGVFZGl0TW9kZU1hbmFnZXIucmVnaXN0ZXIoTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfQ0xPVUQsIEVkaXRNb2RlQ2xvdWQpO1xudGhlRWRpdE1vZGVNYW5hZ2VyLnJlZ2lzdGVyKE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX0ZSRUVIQU5ELCBFZGl0TW9kZUZyZWVoYW5kKTtcbnRoZUVkaXRNb2RlTWFuYWdlci5yZWdpc3RlcihNYXJrdXBUeXBlcy5NQVJLVVBfVFlQRV9ISUdITElHSFQsIEVkaXRNb2RlSGlnaGxpZ2h0KTtcbnRoZUVkaXRNb2RlTWFuYWdlci5yZWdpc3RlcihNYXJrdXBUeXBlcy5NQVJLVVBfVFlQRV9QT0xZTElORSwgRWRpdE1vZGVQb2x5bGluZSk7XG50aGVFZGl0TW9kZU1hbmFnZXIucmVnaXN0ZXIoTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfUE9MWUNMT1VELCBFZGl0TW9kZVBvbHljbG91ZCk7XG50aGVFZGl0TW9kZU1hbmFnZXIucmVnaXN0ZXIoTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfQ0FMTE9VVCwgRWRpdE1vZGVDYWxsb3V0KTtcbnRoZUVkaXRNb2RlTWFuYWdlci5yZWdpc3RlcihNYXJrdXBUeXBlcy5NQVJLVVBfVFlQRV9ESU1FTlNJT04sIEVkaXRNb2RlRGltZW5zaW9uKTtcbnRoZUVkaXRNb2RlTWFuYWdlci5yZWdpc3RlcihNYXJrdXBUeXBlcy5NQVJLVVBfVFlQRV9TVEFNUCwgRWRpdE1vZGVTdGFtcCk7XG5cbiJdLCJuYW1lcyI6WyJ0aGVFZGl0TW9kZU1hbmFnZXIiLCJNYXJrdXBUeXBlcyIsIkVkaXRNb2RlQXJyb3ciLCJFZGl0TW9kZVRleHQiLCJFZGl0TW9kZVJlY3RhbmdsZSIsIkVkaXRNb2RlQ2lyY2xlIiwiRWRpdE1vZGVDbG91ZCIsIkVkaXRNb2RlRnJlZWhhbmQiLCJFZGl0TW9kZUhpZ2hsaWdodCIsIkVkaXRNb2RlUG9seWxpbmUiLCJFZGl0TW9kZVBvbHljbG91ZCIsIkVkaXRNb2RlQ2FsbG91dCIsIkVkaXRNb2RlRGltZW5zaW9uIiwiRWRpdE1vZGVTdGFtcCIsInJlZ2lzdGVyIiwiTUFSS1VQX1RZUEVfQVJST1ciLCJNQVJLVVBfVFlQRV9URVhUIiwiTUFSS1VQX1RZUEVfUkVDVEFOR0xFIiwiTUFSS1VQX1RZUEVfQ0lSQ0xFIiwiTUFSS1VQX1RZUEVfQ0xPVUQiLCJNQVJLVVBfVFlQRV9GUkVFSEFORCIsIk1BUktVUF9UWVBFX0hJR0hMSUdIVCIsIk1BUktVUF9UWVBFX1BPTFlMSU5FIiwiTUFSS1VQX1RZUEVfUE9MWUNMT1VEIiwiTUFSS1VQX1RZUEVfQ0FMTE9VVCIsIk1BUktVUF9UWVBFX0RJTUVOU0lPTiIsIk1BUktVUF9UWVBFX1NUQU1QIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/BuiltinEditModes.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditMode.js":
/*!*******************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditMode.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditMode: () => (/* binding */ EditMode)\n/* harmony export */ });\n/* harmony import */ var _MarkupEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetStyle */ \"./extensions/Markup/core/edit-actions/SetStyle.js\");\n\n\n\n\n\n\n\nconst av = Autodesk.Viewing;\n\n/**\n * Base class for all markup edit modes.\n *\n * An EditMode is responsible for handling user input to create and edit a\n * {@link Autodesk.Viewing.Extensions.Markups.Core.Markup|Markup}.\n *\n * Any class extending Markup should contain at least the following methods:\n * - deleteMarkup()\n * - onMouseDown()\n * - onMouseMove()\n *\n * A good reference is the Circle EditMode implementation available in\n * {@link Autodesk.Viewing.Extensions.Markups.Core.EditModeCircle|EditModeCircle}.\n *\n * @tutorial feature_markup\n * @constructor\n * @memberof Autodesk.Viewing.Extensions.Markups.Core\n *\n * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor - Markups extension.\n * @param {String} type - An identifier for the EditMode type. Not to be confused by the Markup's id.\n * @param {Array} styleAttributes - Attributes for customization.\n * @constructor\n */\nfunction EditMode(editor, type, styleAttributes) {\n\n  this.editor = editor;\n  this.viewer = editor.viewer;\n  this.setGlobalManager(this.viewer.globalManager);\n  this.type = type;\n  this.selectedMarkup = null;\n  this.dragging = false;\n  this.draggingAnnotationIniPosition = null;\n  this.draggingMouseIniPosition = new THREE.Vector2();\n  this.initialX = 0;\n  this.initialY = 0;\n  this.minSize = 9; // In pixels\n  this.creating = false;\n  this.size = { x: 0, y: 0 };\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_1__.createStyle)(styleAttributes, this.editor);\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_1__.copyStyle)(editor.getDefaultStyle(), this.style);\n\n  this.CREATION_METHOD_DRAG = 'CREATION_METHOD_DRAG';\n  this.CREATION_METHOD_CLICK = 'CREATION_METHOD_CLICK';\n  this.CREATION_METHOD_CLICKS = 'CREATION_METHOD_CLICKS';\n  this.creationMethod = this.CREATION_METHOD_DRAG;\n\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.addTraitEventDispatcher)(this);\n}\n\nav.GlobalManagerMixin.call(EditMode.prototype);\nvar proto = EditMode.prototype;\n\nproto.destroy = function () {\n\n  this.unselect();\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.removeTraitEventDispatcher)(this);\n};\n\nproto.unselect = function () {\n\n  var fireEv = false;\n  var selectedMarkup = this.selectedMarkup;\n  var selectedId = null;\n\n  if (selectedMarkup) {\n    selectedId = selectedMarkup.id;\n    selectedMarkup.unselect();\n    this.selectedMarkup = null;\n    fireEv = true;\n  }\n\n  this.editor.editFrame.setMarkup(null);\n\n  if (fireEv) {\n    this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_0__.EVENT_MARKUP_DESELECT, markupId: selectedId });\n  }\n};\n\nproto.creationBegin = function () {\n\n  if (this.creating) {\n    return;\n  }\n\n  this.creating = true;\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_0__.EVENT_EDITMODE_CREATION_BEGIN });\n};\n\nproto.creationEnd = function (isCancelling) {\n\n  if (!this.creating) {\n    return false;\n  }\n\n  if (this.creationMethod !== this.CREATION_METHOD_CLICK) {\n\n    if (this.selectedMarkup && !this.isMinSizeValid()) {\n\n      this.creationCancel();\n      isCancelling = true;\n    } else {\n\n      if (this.creationMethod === this.CREATION_METHOD_DRAG) {\n        this.finishDragging();\n      }\n\n      if (this.selectedMarkup) {\n\n        // Opened on mouse down.\n        this.editor.closeActionGroup();\n        this.selectedMarkup = null;\n      }\n    }\n  }\n\n  this.creating = false;\n  this.dispatchEvent({ type: _MarkupEvents__WEBPACK_IMPORTED_MODULE_0__.EVENT_EDITMODE_CREATION_END, creationCancelled: !!isCancelling });\n  return true;\n};\n\nproto.creationCancel = function () {\n\n  this.editor.cancelActionGroup();\n  this.creationEnd(true);\n  this.selectedMarkup = null; // No need to call unselect\n};\n\n/**\n *\n * @param style\n */\nproto.setStyle = function (style) {\n\n  this.style = style;\n\n  var selectedMarkup = this.selectedMarkup;\n  if (!selectedMarkup) {\n    return;\n  }\n\n  var setStyle = new _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_3__.SetStyle(this.editor, selectedMarkup, style);\n  setStyle.execute();\n};\n\nproto.getStyle = function () {\n\n  return this.style;\n};\n\nproto.setSelection = function (markup) {\n\n  if (this.selectedMarkup !== markup) {\n    this.unselect();\n    markup && markup.select();\n  }\n\n  this.selectedMarkup = markup;\n\n  var editor = this.editor;\n  markup && editor.bringToFront(markup);\n\n  if (this.isTextInputHelperActive() && editor.editFrame.markup) {\n    this.textInputHelper.setEditFrame();\n  } else if (!this.creating) {\n    editor.editFrame.setMarkup(markup);\n  }\n};\n\nproto.getSelection = function () {\n\n  return this.selectedMarkup;\n};\n\n/**\n *\n * @param [markup] If provided deletes markup (has to have same type that the edit mode), otherwise deletes selected one.\n * @param [cantUndo] If true to not add deletion to undo history.\n * @returns {boolean}\n */\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  return false;\n};\n\n/**\n * Used by classes extending EditMode to validate the minimum size (in screen coordinates) of the markup.\n * See minSize attribute\n * @return {Boolean} Whether current size is valid for creating the markup\n * @private\n */\nproto.isMinSizeValid = function () {\n\n  if (this.minSize !== 0) {\n\n    var tmp = this.editor.sizeFromMarkupsToClient(this.size.x, this.size.y);\n    return tmp.x * tmp.x + tmp.y * tmp.y >= this.minSize * this.minSize;\n\n  }\n  return true;\n};\n\n/**\n * @private\n */\nproto.startDragging = function () {\n\n  var selectedMarkup = this.selectedMarkup;\n  var mousePosition = this.editor.getMousePosition();\n\n  if (selectedMarkup) {\n\n    this.dragging = true;\n    this.draggingAnnotationIniPosition = selectedMarkup.getClientPosition();\n    this.draggingMouseIniPosition.set(mousePosition.x, mousePosition.y);\n  }\n};\n\n/**\n * @private\n */\nproto.finishDragging = function () {\n\n  var dragging = this.dragging;\n  var selectedMarkup = this.selectedMarkup;\n\n  this.dragging = false;\n\n  if (selectedMarkup && dragging) {\n\n    selectedMarkup.finishDragging();\n  }\n};\n\n/**\n *\n * @returns {{x: number, y: number}}\n */\nproto.getFinalMouseDraggingPosition = function () {\n\n  var editor = this.editor;\n  var bounds = editor.getBounds();\n  var mousePosition = editor.getMousePosition();\n\n  var initialX = this.initialX;\n  var initialY = this.initialY;\n\n  var finalX = Math.min(Math.max(bounds.x, mousePosition.x), bounds.x + bounds.width);\n  var finalY = Math.min(Math.max(bounds.y, mousePosition.y), bounds.y + bounds.height);\n\n  if (finalX == initialX &&\n  finalY == initialY) {\n    finalX++;\n    finalY++;\n  }\n\n  // Make equal x/y when shift is down\n  if (editor.input.makeSameXY) {\n    var dx = Math.abs(finalX - initialX);\n    var dy = Math.abs(finalY - initialY);\n\n    var maxDelta = Math.max(dx, dy);\n\n    // These calculations have the opportunity to go beyond 'bounds'.\n    finalX = initialX + maxDelta * (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.sign)(finalX - initialX);\n    finalY = initialY + maxDelta * (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_2__.sign)(finalY - initialY);\n  }\n\n  return { x: finalX, y: finalY };\n};\n\nproto.notifyAllowNavigation = function (allows) {\n\n};\n\nproto.onMouseMove = function (event) {\n  if (!this.selectedMarkup || !this.creating) {\n    return false;\n  }\n  return true;\n};\n\nproto.onMouseDown = function () {\n\n};\n\n/**\n * Handler to mouse up events, used to start annotations creation.\n * It will cancel the creation of a markup if its minSize conditions are not met.\n *\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseUp = function (event) {\n\n  if (this.creationMethod !== this.CREATION_METHOD_DRAG) {\n    return false;\n  }\n\n  return this.creationEnd();\n};\n\nproto.onMouseDoubleClick = function (event) {\n\n  if (this.creationMethod !== this.CREATION_METHOD_CLICKS) {\n    return;\n  }\n\n  this.creationEnd();\n};\n\n/**\n * Notify the markup that the displayed markups are being saved so edit mode can finish current editions.\n */\nproto.onSave = function () {\n\n  if (this.creating) {\n    this.creationCancel();\n  }\n};\n\n/**\n *\n * @returns {{x: *, y: *}}\n */\nproto.getDraggingPosition = function () {\n\n  var mousePosition = this.editor.getMousePosition();\n\n  var dx = mousePosition.x - this.draggingMouseIniPosition.x;\n  var dy = mousePosition.y - this.draggingMouseIniPosition.y;\n\n  return {\n    x: this.draggingAnnotationIniPosition.x + dx,\n    y: this.draggingAnnotationIniPosition.y + dy\n  };\n};\n\n/**\n *\n * @param x\n * @param y\n * @param bounds\n * @returns {boolean}\n * @orivate\n */\nproto.isInsideBounds = function (x, y, bounds) {\n\n  return x >= bounds.x && x <= bounds.x + bounds.width &&\n  y >= bounds.y && y <= bounds.y + bounds.height;\n};\n\n/*\n * Decides whether to use the snapper in the current edit mode or not.\n *\n * @returns {boolean}\n */\nproto.useWithSnapping = function () {\n  return this.viewer.model.is2d();\n};\n\n\nproto.isTextInputHelperActive = function () {\n  return this.textInputHelper && this.textInputHelper.isActive();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditMode.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeArrow.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeArrow.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeArrow: () => (/* binding */ EditModeArrow)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeleteArrow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteArrow */ \"./extensions/Markup/core/edit-actions/DeleteArrow.js\");\n/* harmony import */ var _edit_actions_CreateArrow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateArrow */ \"./extensions/Markup/core/edit-actions/CreateArrow.js\");\n/* harmony import */ var _edit_actions_SetArrow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetArrow */ \"./extensions/Markup/core/edit-actions/SetArrow.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n\n\n\n\n\n\n\n\n\nvar MeasureCommon = Autodesk.Viewing.MeasureCommon;\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModeArrow(editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_ARROW, styleAttributes);\n}\n\nEditModeArrow.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModeArrow.prototype.constructor = EditModeArrow;\n\n\nvar proto = EditModeArrow.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type == this.type) {\n    var deleteArrow = new _edit_actions_DeleteArrow__WEBPACK_IMPORTED_MODULE_1__.DeleteArrow(this.editor, markup);\n    deleteArrow.addToHistory = !cantUndo;\n    deleteArrow.execute();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseDown = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n  if (this.selectedMarkup) {\n    return;\n  }\n\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n\n  this.initialX = mousePosition.x;\n  this.initialY = mousePosition.y;\n\n  this.size.x = 0;\n  this.size.y = 0;\n\n  // Snap to parallel/perpendicular of underlying vectors\n  this.lineSnapped = null;\n  if (editor.snapper) {\n    var geomType = editor.snapper.getGeometryType();\n    if (geomType === MeasureCommon.SnapType.SNAP_VERTEX ||\n    geomType === MeasureCommon.SnapType.SNAP_EDGE ||\n    geomType === MeasureCommon.SnapType.SNAP_MIDPOINT ||\n    geomType === MeasureCommon.SnapType.SNAP_CIRCLE_CENTER)\n    {\n      this.lineSnapped = editor.snapper.getEdge();\n    }\n  }\n\n  // Calculate head and tail.\n  var arrowMinSize = this.style['stroke-width'] * 3.5;\n\n  var head = this.head = editor.positionFromClientToMarkups(this.initialX, this.initialY);\n  var tail = {\n    x: head.x + Math.cos(Math.PI * 0.25) * arrowMinSize,\n    y: head.y + Math.sin(-Math.PI * 0.25) * arrowMinSize\n  };\n  // Constrain head and tail inside working area.\n  var constrain = function (head, tail, size, bounds) {\n\n    if (this.isInsideBounds(tail.x, tail.y, bounds)) {\n      return;\n    }\n\n    tail.y = head.y + Math.sin(Math.PI * 0.25) * size;\n    if (this.isInsideBounds(tail.x, tail.y, bounds)) {\n      return;\n    }\n\n    tail.x = head.x + Math.cos(-Math.PI * 0.25) * size;\n    if (this.isInsideBounds(tail.x, tail.y, bounds)) {\n      return;\n    }\n\n    tail.y = head.y + Math.sin(-Math.PI * 0.25) * size;\n\n  }.bind(this);\n\n  constrain(head, tail, arrowMinSize, editor.getBounds());\n\n  // Create arrow.\n  editor.beginActionGroup();\n\n  var arrowVector = new THREE.Vector2(tail.x - head.x, tail.y - head.y);\n  if (arrowVector.lengthSq() < arrowMinSize * arrowMinSize) {\n\n    arrowVector = arrowVector.normalize().multiplyScalar(arrowMinSize);\n    tail.x = head.x + arrowVector.x;\n    tail.y = head.y + arrowVector.y;\n  }\n\n  var arrowId = editor.getId();\n  var create = new _edit_actions_CreateArrow__WEBPACK_IMPORTED_MODULE_2__.CreateArrow(editor, arrowId, head, tail, this.style);\n  create.execute();\n\n  this.selectedMarkup = editor.getMarkup(arrowId);\n  this.creationBegin();\n};\n\n/**\n * Handler to mouse move events, used to create markups.\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  if (!_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseMove.call(this, event)) {\n    return false;\n  }\n\n  var selectedMarkup = this.selectedMarkup;\n\n  var editor = this.editor;\n  var final = this.getFinalMouseDraggingPosition();\n  var initialX = this.initialX;\n  var initialY = this.initialY;\n\n  // Snap to parallel/perpendicular of underlying vectors\n  if (editor.snapper && !editor.snapper.isSnapped() && this.lineSnapped) {\n    var start = editor.project(this.lineSnapped.vertices[0]);\n    var end = editor.project(this.lineSnapped.vertices[1]);\n    var p = new THREE.Vector3(final.x, final.y, start.z);\n\n    var parallel = MeasureCommon.nearestPointInPointToLine(p, start, end);\n\n    // select an arbitrary point on the perpendicular line\n    var k = -(start.x - end.x) / (start.y - end.y);\n    var b = initialY - k * initialX;\n    var x = initialX + 1;\n    var y = k * x + b;\n    var pEnd = new THREE.Vector3(x, y, start.z);\n\n    var pStart = new THREE.Vector3(initialX, initialY, start.z);\n    var perpendicular = MeasureCommon.nearestPointInPointToLine(p, pStart, pEnd);\n\n    // Snap to parallel of underlying vectors\n    if (parallel.distanceTo(p) <= 20) {\n      final.x = parallel.x;\n      final.y = parallel.y;\n    }\n    // Snap to perpendicular of underlying vectors\n    else if (perpendicular.distanceTo(p) <= 20) {\n      final.x = perpendicular.x;\n      final.y = perpendicular.y;\n    }\n  }\n\n  var head = this.head;\n  var tail = editor.positionFromClientToMarkups(final.x, final.y);\n\n  var arrowVector = new THREE.Vector2(tail.x - head.x, tail.y - head.y);\n  var arrowMinSize = selectedMarkup.style['stroke-width'] * 3.5;\n\n  if (arrowVector.lengthSq() < arrowMinSize * arrowMinSize) {\n\n    arrowVector = arrowVector.normalize().multiplyScalar(arrowMinSize);\n    tail.x = head.x + arrowVector.x;\n    tail.y = head.y + arrowVector.y;\n  }\n\n  this.size = editor.sizeFromClientToMarkups(final.x - initialX, final.y - initialY);\n\n  var setArrow = new _edit_actions_SetArrow__WEBPACK_IMPORTED_MODULE_3__.SetArrow(editor, selectedMarkup, head, tail);\n  setArrow.execute();\n  return true;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeArrow.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeCallout.js":
/*!**************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeCallout.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeCallout: () => (/* binding */ EditModeCallout)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeleteCallout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteCallout */ \"./extensions/Markup/core/edit-actions/DeleteCallout.js\");\n/* harmony import */ var _edit_actions_CreateCallout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateCallout */ \"./extensions/Markup/core/edit-actions/CreateCallout.js\");\n/* harmony import */ var _edit_actions_SetCallout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetCallout */ \"./extensions/Markup/core/edit-actions/SetCallout.js\");\n/* harmony import */ var _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../edit-actions/SetStyle */ \"./extensions/Markup/core/edit-actions/SetStyle.js\");\n/* harmony import */ var _edit_actions_SetSize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../edit-actions/SetSize */ \"./extensions/Markup/core/edit-actions/SetSize.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupEvents__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _EditorTextInput__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./EditorTextInput */ \"./extensions/Markup/core/edit-modes/EditorTextInput.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar STARTING_WIDTH_FACTOR = 6;\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModeCallout(editor) {\n\n  var styleAttributes = [\n  'font-size',\n  'stroke-width',\n  'stroke-color',\n  'stroke-opacity',\n  'fill-color',\n  'fill-opacity',\n  'font-family',\n  'font-style',\n  'font-weight'];\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_6__.MARKUP_TYPE_CALLOUT, styleAttributes);\n\n  this.style['fill-opacity'] = 1.0;\n  this.style['fill-color'] = '#ffffff';\n\n  var helper = new _EditorTextInput__WEBPACK_IMPORTED_MODULE_8__.EditorTextInput(this.viewer.container, this.editor, false, 'Text', 360);\n  helper.addEventListener(helper.EVENT_TEXT_CHANGE, this.onHelperTextChange.bind(this), false);\n  helper.addEventListener(helper.EVENT_TEXT_SET_ACTIVE, this.onHelperSetActive.bind(this), false);\n  helper.addEventListener(helper.EVENT_TEXT_SET_INACTIVE, this.onHelperSetActive.bind(this), false);\n\n  this.textInputHelper = helper;\n  this.onHistoryChangeBinded = this.onHistoryChange.bind(this);\n  this.minSize = 0; // No need to size it initially\n  this.creationMethod = this.CREATION_METHOD_CLICK;\n}\n\nEditModeCallout.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModeCallout.prototype.constructor = EditModeCallout;\n\nvar proto = EditModeCallout.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type === this.type) {\n    var deleteCallout = new _edit_actions_DeleteCallout__WEBPACK_IMPORTED_MODULE_1__.DeleteCallout(this.editor, markup);\n    deleteCallout.addToHistory = !cantUndo;\n    deleteCallout.execute();\n    return true;\n  }\n  return false;\n};\n\nproto.setStyle = function (style) {\n\n  if (this.textInputHelper && this.textInputHelper.isActive()) {\n\n    this.textInputHelper.setStyle(style);\n  } else {\n    _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.setStyle.call(this, style);\n  }\n};\n\nproto.notifyAllowNavigation = function (allows) {\n\n  if (allows && this.textInputHelper && this.textInputHelper.isActive()) {\n    this.textInputHelper.acceptAndExit();\n  }\n};\n\nproto.destroy = function () {\n\n  if (this.textInputHelper) {\n    if (this.textInputHelper.isActive()) {\n      this.textInputHelper.acceptAndExit();\n    }\n    this.textInputHelper.destroy();\n    this.textInputHelper = null;\n  }\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.destroy.call(this);\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n */\nproto.onMouseDown = function () {\n\n  if (this.textInputHelper && this.textInputHelper.isActive()) {\n    this.textInputHelper.acceptAndExit();\n    return;\n  }\n\n  if (this.selectedMarkup) {\n    return;\n  }\n\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n  var clientFontSize = editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n  var initialWidth = clientFontSize * STARTING_WIDTH_FACTOR; // Find better way to initialize size.\n  var initialHeight = clientFontSize * 1;\n\n  // Center position.\n  var size = this.size = editor.sizeFromClientToMarkups(initialWidth, initialHeight);\n  var position = editor.positionFromClientToMarkups(\n    mousePosition.x + initialWidth * 0.5,\n    mousePosition.y + initialHeight * 0.5);\n\n  this.creationBegin();\n  editor.beginActionGroup();\n\n  // Given the initial width and font size, we assume that the text fits in one line.\n  var createCallout = new _edit_actions_CreateCallout__WEBPACK_IMPORTED_MODULE_2__.CreateCallout(\n    editor,\n    editor.getId(),\n    position,\n    size,\n    '',\n    this.style,\n    true);\n\n  createCallout.execute();\n  this.creationEnd();\n\n  this.selectedMarkup = editor.getMarkup(createCallout.targetId);\n  this.textInputHelper && this.textInputHelper.setActive(this.selectedMarkup, true);\n  this.editor.actionManager.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_7__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n};\n\nproto.onMouseUp = function (event) {\n\n};\n\nproto.onMouseDoubleClick = function (markup) {\n\n  if (markup === this.selectedMarkup) {\n    this.editor.selectMarkup(markup);\n    this.editor.editFrame.setMarkup(markup);\n    this.textInputHelper && this.textInputHelper.setActive(markup, false);\n  }\n};\n\nproto.onHelperSetActive = function (event) {\n  var databag = event.data;\n  var markup = databag.markup;\n  if (markup) {\n    markup.setIsHelperTextActive(databag.isActive);\n    markup.setIsShapeVisible(!databag.isActive);\n  }\n};\n\nproto.onHelperTextChange = function (event) {\n\n  var dataBag = event.data;\n  var textMarkup = dataBag.markup;\n  var textStyle = dataBag.style;\n  var curSelection = this.selectedMarkup;\n\n  this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_7__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n\n  // Deal with edge case first: Creating a Label without text\n  if (dataBag.newText === '') {\n    this.editor.cancelActionGroup();\n\n    var deleteCallout = new _edit_actions_DeleteCallout__WEBPACK_IMPORTED_MODULE_1__.DeleteCallout(this.editor, textMarkup);\n    deleteCallout.execute();\n\n    if (textMarkup !== curSelection) {\n      this.editor.selectMarkup(curSelection);\n    }\n\n    return;\n  }\n\n  // When the text is created for the first time, an action group\n  // is already created and it includes the CreateCallout action.\n  // Thus, no need to begin another action group.\n  if (!dataBag.firstEdit) {\n    this.editor.beginActionGroup();\n  }\n\n  // Size change action //\n  var position = this.editor.positionFromClientToMarkups(\n    dataBag.newPos.x, dataBag.newPos.y\n  );\n  var size = this.editor.sizeFromClientToMarkups(\n    dataBag.width, dataBag.height\n  );\n  var setSize = new _edit_actions_SetSize__WEBPACK_IMPORTED_MODULE_5__.SetSize(\n    this.editor,\n    textMarkup,\n    position,\n    size.x,\n    size.y);\n  setSize.execute();\n\n  // Text change action //\n  var setCallout = new _edit_actions_SetCallout__WEBPACK_IMPORTED_MODULE_3__.SetCallout(\n    this.editor,\n    textMarkup,\n    textMarkup.position,\n    textMarkup.size,\n    dataBag.newText,\n    textMarkup.isFrameUsed);\n  setCallout.execute();\n\n  var setStyle = new _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_4__.SetStyle(\n    this.editor,\n    textMarkup,\n    textStyle\n  );\n  setStyle.execute();\n\n  // However, we do need to close the action group at this point. For both cases.\n  this.editor.closeActionGroup();\n  this.editor.selectMarkup(curSelection);\n};\n\n/**\n * We want to make sure that the Input Helper gets removed from the screen\n * whenever the user attempts to perform an undo or redo action.\n * @param {Event} event\n * @private\n */\nproto.onHistoryChange = function (event) {\n\n  if (this.textInputHelper && this.textInputHelper.isActive()) {\n    this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_7__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n    this.textInputHelper.setInactive();\n  }\n};\n\n/**\n * Notify the markup that the displayed markups are being saved so edit mode can finish current editions.\n */\nproto.onSave = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onSave.call(this);\n\n  // Close input helper if it's open.\n  if (this.textInputHelper && this.textInputHelper.isActive()) {\n    var firstEdit = this.textInputHelper.firstEdit;\n\n    this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_7__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n    this.textInputHelper.setInactive();\n\n    // Close action group if open (first edit).\n    if (firstEdit) {\n      this.editor.cancelActionGroup();\n    }\n\n    this.editor.selectMarkup(null);\n    this.selectedMarkup = null;\n  }\n};\n\nproto.updateTextBoxStyle = function () {\n  if (this.isTextInputHelperActive()) {\n    this.textInputHelper.onCameraChanged();\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeCallout.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeCircle.js":
/*!*************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeCircle.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeCircle: () => (/* binding */ EditModeCircle)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeleteCircle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteCircle */ \"./extensions/Markup/core/edit-actions/DeleteCircle.js\");\n/* harmony import */ var _edit_actions_CreateCircle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateCircle */ \"./extensions/Markup/core/edit-actions/CreateCircle.js\");\n/* harmony import */ var _edit_actions_SetCircle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetCircle */ \"./extensions/Markup/core/edit-actions/SetCircle.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n\n\n\n\n\n\n\n\n/**\n * Markup circle edit mode.\n *\n * Implements a Circle {@link Autodesk.Viewing.Extensions.Markups.Core.EditMode|EditMode}.\n * Included in documentation as an example of how to create\n * an EditMode for a specific markup type. Developers are encourage to look into this class's source code and copy\n * as much code as they need. Find link to source code below.\n *\n * @tutorial feature_markup\n * @constructor\n * @memberof Autodesk.Viewing.Extensions.Markups.Core\n * @extends Autodesk.Viewing.Extensions.Markups.Core.EditMode\n * @param {Autodesk.Viewing.Extensions.Markups.Core.MarkupsCore} editor\n */\nfunction EditModeCircle(editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_CIRCLE, styleAttributes);\n}\n\nEditModeCircle.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModeCircle.prototype.constructor = EditModeCircle;\n\nvar proto = EditModeCircle.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type == this.type) {\n    var deleteCircle = new _edit_actions_DeleteCircle__WEBPACK_IMPORTED_MODULE_1__.DeleteCircle(this.editor, markup);\n    deleteCircle.addToHistory = !cantUndo;\n    deleteCircle.execute();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handler to mouse move events, used to create markups.\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  if (!_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseMove.call(this, event)) {\n    return false;\n  }\n\n  var selectedMarkup = this.selectedMarkup;\n\n  var editor = this.editor;\n\n  var final = this.getFinalMouseDraggingPosition();\n  final = editor.clientToMarkups(final.x, final.y);\n\n  var sizeX = Math.abs(this.firstPosition.x - final.x);\n  var sizeY = Math.abs(this.firstPosition.y - final.y);\n\n  var position = { x: (this.firstPosition.x + final.x) * 0.5, y: (this.firstPosition.y + final.y) * 0.5 };\n  var size = this.size = { x: sizeX, y: sizeY };\n\n  var setCircle = new _edit_actions_SetCircle__WEBPACK_IMPORTED_MODULE_3__.SetCircle(\n    editor,\n    selectedMarkup,\n    position,\n    size);\n\n  setCircle.execute();\n  return true;\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseDown = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n  if (this.selectedMarkup) {\n    return;\n  }\n\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n\n  this.initialX = mousePosition.x;\n  this.initialY = mousePosition.y;\n\n  // Calculate center and size.\n  var position = this.firstPosition = editor.clientToMarkups(this.initialX, this.initialY);\n  var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n\n  // Create circle.\n  editor.beginActionGroup();\n\n  var markupId = editor.getId();\n  var create = new _edit_actions_CreateCircle__WEBPACK_IMPORTED_MODULE_2__.CreateCircle(\n    editor,\n    markupId,\n    position,\n    size,\n    0,\n    this.style);\n  create.execute();\n\n  this.selectedMarkup = editor.getMarkup(markupId);\n  this.creationBegin();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeCircle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeCloud.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeCloud.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeCloud: () => (/* binding */ EditModeCloud)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeleteCloud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteCloud */ \"./extensions/Markup/core/edit-actions/DeleteCloud.js\");\n/* harmony import */ var _edit_actions_CreateCloud__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateCloud */ \"./extensions/Markup/core/edit-actions/CreateCloud.js\");\n/* harmony import */ var _edit_actions_SetCloud__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetCloud */ \"./extensions/Markup/core/edit-actions/SetCloud.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n\n\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModeCloud(editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_CLOUD, styleAttributes);\n}\n\nEditModeCloud.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModeCloud.prototype.constructor = EditModeCloud;\n\nvar proto = EditModeCloud.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type == this.type) {\n    var deleteCloud = new _edit_actions_DeleteCloud__WEBPACK_IMPORTED_MODULE_1__.DeleteCloud(this.editor, markup);\n    deleteCloud.addToHistory = !cantUndo;\n    deleteCloud.execute();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handler to mouse move events, used to create markups.\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  if (!_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseMove.call(this, event)) {\n    return false;\n  }\n\n  var selectedMarkup = this.selectedMarkup;\n\n  var editor = this.editor;\n\n  var pos = this.getFinalMouseDraggingPosition();\n  var final = editor.clientToMarkups(pos.x, pos.y);\n  var position = { x: (this.firstPosition.x + final.x) / 2, y: (this.firstPosition.y + final.y) / 2 };\n  var size = this.size = { x: Math.abs(final.x - this.firstPosition.x), y: Math.abs(final.y - this.firstPosition.y) };\n  var setCloud = new _edit_actions_SetCloud__WEBPACK_IMPORTED_MODULE_3__.SetCloud(\n    editor,\n    selectedMarkup,\n    position,\n    size);\n\n  setCloud.execute();\n  return true;\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseDown = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n  if (this.selectedMarkup) {\n    return;\n  }\n\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n\n  this.initialX = mousePosition.x;\n  this.initialY = mousePosition.y;\n\n  // Calculate center and size.\n  var position = this.firstPosition = editor.clientToMarkups(this.initialX, this.initialY);\n  var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n\n  // Create Cloud.\n  editor.beginActionGroup();\n\n  var markupId = editor.getId();\n  var create = new _edit_actions_CreateCloud__WEBPACK_IMPORTED_MODULE_2__.CreateCloud(\n    editor,\n    markupId,\n    position,\n    size,\n    0,\n    this.style);\n\n  create.execute();\n\n  this.selectedMarkup = editor.getMarkup(markupId);\n  this.creationBegin();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVDbG91ZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTs7QUFFeUI7QUFDb0I7QUFDQTtBQUNOO0FBQ047O0FBRTFDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTSyxhQUFhQSxDQUFDQyxNQUFNLEVBQUU7O0VBRWxDLElBQUlDLGVBQWUsR0FBRyxDQUFDLGNBQWMsRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLGNBQWMsQ0FBQztFQUN0R1AsK0NBQVEsQ0FBQ1EsSUFBSSxDQUFDLElBQUksRUFBRUYsTUFBTSxFQUFFRiwyREFBNkIsRUFBRUcsZUFBZSxDQUFDO0FBQy9FOztBQUVBRixhQUFhLENBQUNLLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUNaLCtDQUFRLENBQUNVLFNBQVMsQ0FBQztBQUMzREwsYUFBYSxDQUFDSyxTQUFTLENBQUNHLFdBQVcsR0FBR1IsYUFBYTs7QUFFbkQsSUFBSVMsS0FBSyxHQUFHVCxhQUFhLENBQUNLLFNBQVM7O0FBRW5DSSxLQUFLLENBQUNDLFlBQVksR0FBRyxVQUFTQyxNQUFNLEVBQUVDLFFBQVEsRUFBRTs7RUFFNUNELE1BQU0sR0FBR0EsTUFBTSxJQUFJLElBQUksQ0FBQ0UsY0FBYztFQUN0QyxJQUFJRixNQUFNLElBQUlBLE1BQU0sQ0FBQ0csSUFBSSxJQUFJLElBQUksQ0FBQ0EsSUFBSSxFQUFFO0lBQ3BDLElBQUlDLFdBQVcsR0FBRyxJQUFJbkIsa0VBQVcsQ0FBQyxJQUFJLENBQUNLLE1BQU0sRUFBRVUsTUFBTSxDQUFDO0lBQ3RESSxXQUFXLENBQUNDLFlBQVksR0FBRyxDQUFDSixRQUFRO0lBQ3BDRyxXQUFXLENBQUNFLE9BQU8sQ0FBQyxDQUFDO0lBQ3JCLE9BQU8sSUFBSTtFQUNmO0VBQ0EsT0FBTyxLQUFLO0FBQ2hCLENBQUM7O0FBRUQ7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNJUixLQUFL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QUFJLENBQUNJLGFBQWEsQ0FBQyxDQUFDO0FBQ3hCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9lZGl0LW1vZGVzL0VkaXRNb2RlQ2xvdWQuanM/MzFlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB7IEVkaXRNb2RlIH0gZnJvbSAnLi9FZGl0TW9kZSc7XG5pbXBvcnQgeyBEZWxldGVDbG91ZCB9IGZyb20gJy4uL2VkaXQtYWN0aW9ucy9EZWxldGVDbG91ZCc7XG5pbXBvcnQgeyBDcmVhdGVDbG91ZCB9IGZyb20gJy4uL2VkaXQtYWN0aW9ucy9DcmVhdGVDbG91ZCc7XG5pbXBvcnQgeyBTZXRDbG91ZCB9IGZyb20gJy4uL2VkaXQtYWN0aW9ucy9TZXRDbG91ZCc7XG5pbXBvcnQgKiBhcyBNYXJrdXBUeXBlcyBmcm9tICcuLi9NYXJrdXBUeXBlcyc7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gRWRpdE1vZGVDbG91ZChlZGl0b3IpIHtcblxuICAgICAgICB2YXIgc3R5bGVBdHRyaWJ1dGVzID0gWydzdHJva2Utd2lkdGgnLCAnc3Ryb2tlLWNvbG9yJywgJ3N0cm9rZS1vcGFjaXR5JywgJ2ZpbGwtY29sb3InLCAnZmlsbC1vcGFjaXR5J107XG4gICAgICAgIEVkaXRNb2RlLmNhbGwodGhpcywgZWRpdG9yLCBNYXJrdXBUeXBlcy5NQVJLVVBfVFlQRV9DTE9VRCwgc3R5bGVBdHRyaWJ1dGVzKTtcbiAgICB9XG5cbiAgICBFZGl0TW9kZUNsb3VkLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWRpdE1vZGUucHJvdG90eXBlKTtcbiAgICBFZGl0TW9kZUNsb3VkLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEVkaXRNb2RlQ2xvdWQ7XG5cbiAgICB2YXIgcHJvdG8gPSBFZGl0TW9kZUNsb3VkLnByb3RvdHlwZTtcblxuICAgIHByb3RvLmRlbGV0ZU1hcmt1cCA9IGZ1bmN0aW9uKG1hcmt1cCwgY2FudFVuZG8pIHtcblxuICAgICAgICBtYXJrdXAgPSBtYXJrdXAgfHwgdGhpcy5zZWxlY3RlZE1hcmt1cDtcbiAgICAgICAgaWYgKG1hcmt1cCAmJiBtYXJrdXAudHlwZSA9PSB0aGlzLnR5cGUpIHtcbiAgICAgICAgICAgIHZhciBkZWxldGVDbG91ZCA9IG5ldyBEZWxldGVDbG91ZCh0aGlzLmVkaXRvciwgbWFya3VwKTtcbiAgICAgICAgICAgIGRlbGV0ZUNsb3VkLmFkZFRvSGlzdG9yeSA9ICFjYW50VW5kbztcbiAgICAgICAgICAgIGRlbGV0ZUNsb3VkLmV4ZWN1dGUoKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogSGFuZGxlciB0byBtb3VzZSBtb3ZlIGV2ZW50cywgdXNlZCB0byBjcmVhdGUgbWFya3Vwcy5cbiAgICAgKiBAcGFyYW0ge01vdXNlRXZlbnR9IGV2ZW50IE1vdXNlIGV2ZW50LlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgcHJvdG8ub25Nb3VzZU1vdmUgPSBmdW5jdGlvbihldmVudCkge1xuXG4gICAgICAgIGlmICghRWRpdE1vZGUucHJvdG90eXBlLm9uTW91c2VNb3ZlLmNhbGwoIHRoaXMsIGV2ZW50ICkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBzZWxlY3RlZE1hcmt1cCA9IHRoaXMuc2VsZWN0ZWRNYXJrdXA7XG5cbiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yO1xuXG4gICAgICAgIHZhciBwb3MgPSB0aGlzLmdldEZpbmFsTW91c2VEcmFnZ2luZ1Bvc2l0aW9uKCk7XG4gICAgICAgIHZhciBmaW5hbCA9IGVkaXRvci5jbGllbnRUb01hcmt1cHMocG9zLngsIHBvcy55KTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0geyB4OiAodGhpcy5maXJzdFBvc2l0aW9uLnggKyBmaW5hbC54KSAvIDIsIHk6ICh0aGlzLmZpcnN0UG9zaXRpb24ueSArIGZpbmFsLnkpIC8gMiB9O1xuICAgICAgICB2YXIgc2l6ZSA9IHRoaXMuc2l6ZSA9IHsgeDogTWF0aC5hYnMoZmluYWwueCAtIHRoaXMuZmlyc3RQb3NpdGlvbi54KSwgeTogTWF0aC5hYnMoZmluYWwueSAtIHRoaXMuZmlyc3RQb3NpdGlvbi55KSB9O1xuICAgICAgICB2YXIgc2V0Q2xvdWQgPSBuZXcgU2V0Q2xvdWQoXG4gICAgICAgICAgICBlZGl0b3IsXG4gICAgICAgICAgICBzZWxlY3RlZE1hcmt1cCxcbiAgICAgICAgICAgIHBvc2l0aW9uLFxuICAgICAgICAgICAgc2l6ZSk7XG5cbiAgICAgICAgc2V0Q2xvdWQuZXhlY3V0ZSgpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogSGFuZGxlciB0byBtb3VzZSBkb3duIGV2ZW50cywgdXNlZCB0byBzdGFydCBtYXJrdXBzIGNyZWF0aW9uLlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgcHJvdG8ub25Nb3VzZURvd24gPSBmdW5jdGlvbigpIHtcblxuICAgICAgICBFZGl0TW9kZS5wcm90b3R5cGUub25Nb3VzZURvd24uY2FsbCh0aGlzKTtcblxuICAgICAgICBpZiAodGhpcy5zZWxlY3RlZE1hcmt1cCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yO1xuICAgICAgICB2YXIgbW91c2VQb3NpdGlvbiA9IGVkaXRvci5nZXRNb3VzZVBvc2l0aW9uKCk7XG5cbiAgICAgICAgdGhpcy5pbml0aWFsWCA9IG1vdXNlUG9zaXRpb24ueDtcbiAgICAgICAgdGhpcy5pbml0aWFsWSA9IG1vdXNlUG9zaXRpb24ueTtcblxuICAgICAgICAvLyBDYWxjdWxhdGUgY2VudGVyIGFuZCBzaXplLlxuICAgICAgICB2YXIgcG9zaXRpb24gPSB0aGlzLmZpcnN0UG9zaXRpb24gPSBlZGl0b3IuY2xpZW50VG9NYXJrdXBzKHRoaXMuaW5pdGlhbFgsIHRoaXMuaW5pdGlhbFkpO1xuICAgICAgICB2YXIgc2l6ZSA9IHRoaXMuc2l6ZSA9IGVkaXRvci5zaXplRnJvbUNsaWVudFRvTWFya3VwcygxLCAxKTtcblxuICAgICAgICAvLyBDcmVhdGUgQ2xvdWQuXG4gICAgICAgIGVkaXRvci5iZWdpbkFjdGlvbkdyb3VwKCk7XG5cbiAgICAgICAgdmFyIG1hcmt1cElkID0gZWRpdG9yLmdldElkKCk7XG4gICAgICAgIHZhciBjcmVhdGUgPSBuZXcgQ3JlYXRlQ2xvdWQoXG4gICAgICAgICAgICBlZGl0b3IsXG4gICAgICAgICAgICBtYXJrdXBJZCxcbiAgICAgICAgICAgIHBvc2l0aW9uLFxuICAgICAgICAgICAgc2l6ZSxcbiAgICAgICAgICAgIDAsXG4gICAgICAgICAgICB0aGlzLnN0eWxlKTtcblxuICAgICAgICBjcmVhdGUuZXhlY3V0ZSgpO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRNYXJrdXAgPSBlZGl0b3IuZ2V0TWFya3VwKG1hcmt1cElkKTtcbiAgICAgICAgdGhpcy5jcmVhdGlvbkJlZ2luKCk7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRNb2RlIiwiRGVsZXRlQ2xvdWQiLCJDcmVhdGVDbG91ZCIsIlNldENsb3VkIiwiTWFya3VwVHlwZXMiLCJFZGl0TW9kZUNsb3VkIiwiZWRpdG9yIiwic3R5bGVBdHRyaWJ1dGVzIiwiY2FsbCIsIk1BUktVUF9UWVBFX0NMT1VEIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJwcm90byIsImRlbGV0ZU1hcmt1cCIsIm1hcmt1cCIsImNhbnRVbmRvIiwic2VsZWN0ZWRNYXJrdXAiLCJ0eXBlIiwiZGVsZXRlQ2xvdWQiLCJhZGRUb0hpc3RvcnkiLCJleGVjdXRlIiwib25Nb3VzZU1vdmUiLCJldmVudCIsInBvcyIsImdldEZpbmFsTW91c2VEcmFnZ2luZ1Bvc2l0aW9uIiwiZmluYWwiLCJjbGllbnRUb01hcmt1cHMiLCJ4IiwieSIsInBvc2l0aW9uIiwiZmlyc3RQb3NpdGlvbiIsInNpemUiLCJNYXRoIiwiYWJzIiwic2V0Q2xvdWQiLCJvbk1vdXNlRG93biIsIm1vdXNlUG9zaXRpb24iLCJnZXRNb3VzZVBvc2l0aW9uIiwiaW5pdGlhbFgiLCJpbml0aWFsWSIsInNpemVGcm9tQ2xpZW50VG9NYXJrdXBzIiwiYmVnaW5BY3Rpb25Hcm91cCIsIm1hcmt1cElkIiwiZ2V0SWQiLCJzdHlsZSIsImdldE1hcmt1cCIsImNyZWF0aW9uQmVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeCloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeDimension.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeDimension.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeDimension: () => (/* binding */ EditModeDimension)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeleteDimension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteDimension */ \"./extensions/Markup/core/edit-actions/DeleteDimension.js\");\n/* harmony import */ var _edit_actions_CreateDimension__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateDimension */ \"./extensions/Markup/core/edit-actions/CreateDimension.js\");\n/* harmony import */ var _edit_actions_SetDimension__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetDimension */ \"./extensions/Markup/core/edit-actions/SetDimension.js\");\n/* harmony import */ var _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../edit-actions/SetStyle */ \"./extensions/Markup/core/edit-actions/SetStyle.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupEvents__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _EditorTextInput__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EditorTextInput */ \"./extensions/Markup/core/edit-modes/EditorTextInput.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar MeasureCommon = Autodesk.Viewing.MeasureCommon;\n\nvar MAX_LETTERS = 15;\nvar SPACE = '\\u00A0'; // Non-breaking space\nvar _cursorPosition;\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModeDimension(editor) {\n\n  var self = this;\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'font-size', 'font-family', 'font-style', 'font-weight'];\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_5__.MARKUP_TYPE_DIMENSION, styleAttributes);\n\n  this.onHistoryChangeBinded = this.onHistoryChange.bind(this);\n\n  this.measurement = new MeasureCommon.Measurement(MeasureCommon.MeasurementTypes.MEASUREMENT_DISTANCE);\n  var viewer = this.viewer;\n  var measureExt = viewer.getExtension('Autodesk.Measure');\n\n  function abortDimensionMarkup() {\n    self.cancelEditModeChange = true;\n    editor.enterEditMode(); // Selects default edit mode.\n  }\n\n  if (!measureExt) {\n    console.error('Demension markup cant work without measure extension. Please load measure extension first');\n    abortDimensionMarkup();\n  }\n\n  this.sharedMeasureConfig = measureExt.sharedMeasureConfig;\n\n  // If PDF, force calibration\n  if ((measureExt.forceCalibrate || viewer.model.isLeaflet() || viewer.model.isPdf(true)) && !measureExt.calibrationTool.isCalibrated()) {\n    measureExt.openCalibrationRequiredDialog('dimension');\n    abortDimensionMarkup();\n  }\n}\n\nEditModeDimension.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModeDimension.prototype.constructor = EditModeDimension;\n\nvar proto = EditModeDimension.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type == this.type) {\n    var deleteDimension = new _edit_actions_DeleteDimension__WEBPACK_IMPORTED_MODULE_1__.DeleteDimension(this.editor, markup);\n    deleteDimension.addToHistory = !cantUndo;\n    deleteDimension.execute();\n    this.creating = false;\n    this.dragging = false;\n    return true;\n  }\n  return false;\n};\n\nproto.updateTextBoxStyle = function (style) {\n  if (this.isTextInputHelperActive()) {\n    if (!style) {\n      style = this.textInputHelper.textMarkup.getStyle();\n    }\n\n    this.textInputHelper.setStyle(style);\n    this.updateTextBox(this.textInputHelper.textMarkup);\n  }\n};\n\nproto.setStyle = function (style) {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.setStyle.call(this, style);\n  this.updateTextBoxStyle(style);\n\n};\n\nproto.notifyAllowNavigation = function (allows) {\n\n  if (allows && this.isTextInputHelperActive()) {\n    this.textInputHelper.acceptAndExit();\n  }\n};\n\nproto.creationBegin = function () {\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationBegin.call(this);\n};\n\nproto.creationEnd = function () {\n\n  this.dragging = false;\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationEnd.call(this);\n};\n\nproto.isMinSizeValid = function () {\n\n  if (this.minSize !== 0) {\n    var tmp = this.editor.sizeFromMarkupsToClient(this.selectedMarkup.size.x, this.selectedMarkup.size.y);\n    return tmp.x * tmp.x >= this.minSize * this.minSize;\n  }\n\n  return true;\n};\n\nproto.creationCancel = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationCancel.call(this);\n\n  this.creating = false;\n  this.dragging = false;\n\n};\n\nproto.destroy = function () {\n\n  if (this.textInputHelper) {\n\n    if (this.textInputHelper.isActive()) {\n      this.textInputHelper.acceptAndExit();\n    }\n\n    this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_6__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n\n    this.textInputHelper.destroy();\n    this.textInputHelper = null;\n  }\n\n  this.updateViewportId();\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.destroy.call(this);\n};\n\nproto.getDistance = function () {\n\n  var distance = null;\n\n  this.measurement.computeResult(this.measurement.picks, this.viewer);\n\n  if (this.viewer.model && this.measurement.distanceXYZ) {\n    var d = Autodesk.Viewing.Private.convertUnits(this.viewer.model.getUnitString(), this.sharedMeasureConfig.units, this.sharedMeasureConfig.calibrationFactor, this.measurement.distanceXYZ);\n    return Autodesk.Viewing.Private.formatValueWithUnits(d, this.sharedMeasureConfig.units, 3, this.sharedMeasureConfig.precision);\n  }\n\n  return distance;\n};\n\nproto.updateMeasurement = function (measurementNumber) {\n  var editor = this.editor;\n\n  var pick = this.measurement.getPick(measurementNumber);\n\n  if (_cursorPosition) {\n    pick.geomType = MeasureCommon.SnapType.SNAP_VERTEX;\n    pick.geomVertex = _cursorPosition;\n    pick.intersectPoint = _cursorPosition;\n  } else {\n    editor.snapper.copyResults(pick);\n  }\n\n  return pick;\n};\n\nproto.updateViewportId = function (viewportId) {\n  if (this.viewer.model && this.viewer.model.is2d()) {\n    if (!viewportId) {\n      this.viewer.impl.updateViewportId(0);\n      this.editor.snapper.setViewportId(null);\n    } else\n    {\n      // Pass viewport Id to LineShader to make all other geometries with different viewport transparent\n      this.viewer.impl.updateViewportId(viewportId);\n      this.editor.snapper.setViewportId(viewportId);\n\n    }\n  }\n};\n\nproto.pickFirstAnchor = function () {\n  var editor = this.editor;\n  this.measurement.clearAllPicks();\n  var mousePosition = editor.getMousePosition();\n\n  this.initialX = mousePosition.x;\n  this.initialY = mousePosition.y;\n\n  this.firstAnchor = editor.positionFromClientToMarkups(this.initialX, this.initialY);\n\n  editor.beginActionGroup();\n\n  var dimensionId = editor.getId();\n  var create = new _edit_actions_CreateDimension__WEBPACK_IMPORTED_MODULE_2__.CreateDimension(editor, dimensionId, this.firstAnchor, null, this.currentText, this.style);\n  create.execute();\n\n  this.selectedMarkup = editor.getMarkup(dimensionId);\n  this.creationBegin();\n\n  var pick = this.updateMeasurement(1);\n  this.updateViewportId(pick.viewportIndex2d);\n};\n\nproto.pickSecondAnchor = function (mouseDown) {\n\n  var editor = this.editor;\n  var selectedMarkup = this.selectedMarkup;\n\n  this.secondAnchor = this.getFinalMouseDraggingPosition();\n\n  this.updateMeasurement(2);\n\n  // Correct Perpendicular\n  if (MeasureCommon.correctPerpendicularPicks(this.measurement.getPick(1), this.measurement.getPick(2), this.viewer, editor.snapper)) {\n    var newPos = MeasureCommon.getSnapResultPosition(this.measurement.getPick(2), this.viewer);\n    this.secondAnchor = editor.project(newPos);\n    editor.snapper.indicator.render();\n  }\n\n  var secondAnchor = editor.positionFromClientToMarkups(this.secondAnchor.x, this.secondAnchor.y);\n\n  this.size.x = selectedMarkup.size.x;\n  this.size.y = selectedMarkup.size.y;\n\n  selectedMarkup.currentText = this.getDistance();\n\n  var setDimension = new _edit_actions_SetDimension__WEBPACK_IMPORTED_MODULE_3__.SetDimension(editor, selectedMarkup, this.firstAnchor, secondAnchor, selectedMarkup.currentText);\n  setDimension.execute();\n\n  var setStyle = new _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_4__.SetStyle(editor, selectedMarkup, this.style);\n  setStyle.execute();\n\n  // Open 'Add Length' textbox if no measurement has being taken.\n  if (mouseDown && !selectedMarkup.currentText && this.isMinSizeValid()) {\n    selectedMarkup.currentText = '';\n    this.editor.selectMarkup(null);\n    this.updateTextBox(selectedMarkup);\n  }\n};\n\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseDown = function (event) {\n\n  // Right click - do nothing.\n  if (Autodesk.Viewing.Private.isRightClick(event, this.viewer.navigation)) {\n    return;\n  }\n\n  _cursorPosition = null;\n\n  // Textbox is open.\n  if (this.isTextInputHelperActive()) {\n    this.textInputHelper.acceptAndExit();\n    return;\n  }\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n  // User selected an already created markup.\n  if (this.selectedMarkup && !this.creating) {\n    return;\n  }\n\n  var isSnapped = this.editor.snapper.isSnapped();\n\n  // Picked first point.\n  if (!this.selectedMarkup && !this.creating && isSnapped) {\n    this.pickFirstAnchor();\n  }\n\n  // Picked second point.\n  else if (this.selectedMarkup && this.creating) {\n\n    if (isSnapped) {\n      this.pickSecondAnchor(true);\n    } else {\n      this.deleteMarkup(this.selectedMarkup, true);\n      this.creating = true;\n    }\n\n    this.updateViewportId();\n    this.creationEnd();\n  }\n};\n\nproto.onMouseUp = function (event) {\n\n  if (this.dragging) {\n    this.onMouseDown(event);\n    this.dragging = false;\n  }\n};\n\n\n/**\n * Handler to mouse move events, used to create markups.\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  _cursorPosition = null;\n\n  if (!this.selectedMarkup || !this.creating) {\n    return;\n  }\n\n  this.dragging = true;\n  this.pickSecondAnchor(false);\n};\n\nproto.getFinalMouseDraggingPosition = function () {\n\n  var editor = this.editor;\n  var bounds = editor.getBounds();\n  var mousePosition = editor.getMousePosition();\n\n  if (!editor.snapper.isSnapped()) {\n    if (editor.viewer.model && editor.viewer.model.is2d()) {\n      _cursorPosition = MeasureCommon.inverseProject(mousePosition, editor.viewer);\n    }\n  }\n\n  var initialX = this.initialX;\n  var initialY = this.initialY;\n\n  var finalX = Math.min(Math.max(bounds.x, mousePosition.x), bounds.x + bounds.width);\n  var finalY = Math.min(Math.max(bounds.y, mousePosition.y), bounds.y + bounds.height);\n\n  if (finalX == initialX &&\n  finalY == initialY) {\n    finalX++;\n    finalY++;\n  }\n\n  // Make straight line when shift key is down.\n  if (editor.input.constrainAxis && editor.viewer.model.is2d()) {\n    var dx = Math.abs(finalX - initialX);\n    var dy = Math.abs(finalY - initialY);\n\n    if (dx > dy) {\n      finalY = initialY;\n    } else\n    {\n      finalX = initialX;\n    }\n\n    editor.snapper.onMouseMove({ x: finalX, y: finalY });\n\n    if (editor.snapper.isSnapped()) {\n      editor.snapper.copyResults(this.measurement.getPick(2));\n      _cursorPosition = null;\n    } else {\n      _cursorPosition = MeasureCommon.inverseProject({ x: finalX, y: finalY }, editor.viewer);\n    }\n  }\n\n  return { x: finalX, y: finalY };\n};\n\nproto.isVisibleChar = function (keyCode) {\n\n  return keyCode > 47 && keyCode < 58 || // number keys\n  keyCode == 32 || // spacebar\n  keyCode > 64 && keyCode < 91 || // letter keys\n  keyCode > 95 && keyCode < 112 || // numpad keys\n  keyCode > 185 && keyCode < 193 || // ;=,-./` (in order)\n  keyCode > 218 && keyCode < 223; // [\\]' (in order)\n};\n\nproto.measureTextLine = function (text, markup, editor) {\n\n  text = text.replace(new RegExp(' ', 'g'), SPACE);\n  text = text.length === 0 ? markup.initialText : text;\n  return (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_8__.measureTextLines)([text + '|'], this.style, editor)[0];\n\n};\n\nproto.handleKeyDown = function (e) {\n  var textInputHelper = this.textInputHelper;\n\n  if (e.keyCode === Autodesk.Viewing.KeyCode.ENTER) {\n    return;\n  }\n\n  var markup = textInputHelper.textMarkup;\n  var text = textInputHelper.textArea.value;\n\n  if (e.keyCode === Autodesk.Viewing.KeyCode.BACKSPACE) {\n    text = text.substring(0, text.length - 1);\n  }\n\n  if (text.length < MAX_LETTERS && this.isVisibleChar(e.keyCode)) {\n    text = text + e.key;\n  }\n\n  var size = this.measureTextLine(text, markup, this.editor);\n\n  this.updateTextBox(markup, size);\n};\n\nproto.updateTextBox = function (markup, size) {\n\n  if (!this.textInputHelper) {\n    this.textInputHelper = new _EditorTextInput__WEBPACK_IMPORTED_MODULE_7__.EditorTextInput(this.viewer.container, this.editor, true, markup.initialText, MAX_LETTERS);\n    this.textInputHelper.addEventListener(this.textInputHelper.EVENT_TEXT_CHANGE, this.onHelperTextChange.bind(this), false);\n    this.handleKeyDownBinded = this.handleKeyDown.bind(this);\n  }\n\n  markup.text.style.display = 'none';\n\n  if (!size) {\n    size = this.measureTextLine(this.textInputHelper.textArea.value, markup, this.editor);\n  }\n\n  var transform = this.getTextAreaTransform(markup, size);\n\n  this.textInputHelper.styleTextArea.setAttribute('text-align', 'center');\n\n  this.textInputHelper.setActive(markup, false);\n\n\n  // Override textArea attributes\n  this.textInputHelper.textArea.style.position = 'static';\n  this.textInputHelper.textArea.style.padding = '0';\n  this.textInputHelper.textArea.style.width = size.width + 'px';\n  this.textInputHelper.textArea.style.height = size.height + 'px';\n  this.textInputHelper.textArea.style.transform = transform; // Maybe need to add 'allBrowsers' support\n\n  this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_6__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n  this.editor.actionManager.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_6__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n  this.textInputHelper.textArea.removeEventListener('keydown', this.handleKeyDownBinded);\n  this.textInputHelper.textArea.addEventListener('keydown', this.handleKeyDownBinded);\n\n};\n\nproto.getTextAreaTransform = function (markup, size) {\n\n  var position = markup.getClientPosition();\n  var rotation = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_8__.radiansToDegrees)(markup.rotation) % 360;\n\n  if (rotation > 90 && rotation <= 270 && markup.shouldFlip()) {\n    rotation = 180 + rotation;\n  }\n\n  return [\n  'translate(', position.x - size.width / 2 + 'px,', position.y - this.viewer.container.clientHeight - size.height + 'px)',\n  'rotate(', rotation + 'deg)',\n  'translate(0px,', size.height + 'px)'].\n  join(' ');\n};\n\nproto.onMouseDoubleClick = function (markup) {\n\n  if (markup === this.selectedMarkup) {\n    this.editor.selectMarkup(null);\n    this.updateTextBox(markup);\n  }\n};\n\nproto.onHelperTextChange = function (event) {\n\n  var dataBag = event.data;\n  var markup = dataBag.markup;\n  var textStyle = dataBag.style;\n  var editor = this.editor;\n\n  markup.text.style.display = 'block';\n\n  if (dataBag.newText === '') {\n    dataBag.newText = markup.initialText;\n  }\n\n  // When the text is created for the first time, an action group\n  // is already created and it includes the CreateText action.\n  // Thus, no need to begin another action group.\n  if (!dataBag.firstEdit) {\n    editor.beginActionGroup();\n  }\n\n  var setStyle = new _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_4__.SetStyle(editor, markup, textStyle);\n  setStyle.execute();\n\n  var setDimension = new _edit_actions_SetDimension__WEBPACK_IMPORTED_MODULE_3__.SetDimension(editor, markup, markup.firstAnchor, markup.secondAnchor, dataBag.newText);\n  setDimension.execute();\n\n  editor.closeActionGroup();\n  editor.selectMarkup(null);\n};\n\n/**\n * We want to make sure that the Input Helper gets removed from the screen\n * whenever the user attempts to perform an undo or redo action.\n * @param {Event} event\n * @private\n */\nproto.onHistoryChange = function (event) {\n  if (this.isTextInputHelperActive()) {\n    this.textInputHelper.textMarkup.text.style.display = 'block';\n    this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_6__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n    this.textInputHelper.setInactive();\n  }\n};\n\n/**\n * Notify the markup that the displayed markups are being saved so edit mode can finish current editions.\n */\nproto.onSave = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onSave.call(this);\n\n  // Close input helper if it's open.\n  if (this.isTextInputHelperActive()) {\n    var editor = this.editor;\n    editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_6__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n    var markup = this.textInputHelper.textMarkup;\n    this.textInputHelper.acceptAndExit();\n    markup.text.style.display = 'block';\n  }\n};\n\nproto.useWithSnapping = function () {\n  return true;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeDimension.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeFreehand.js":
/*!***************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeFreehand.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeFreehand: () => (/* binding */ EditModeFreehand)\n/* harmony export */ });\n/* harmony import */ var _EditModePen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditModePen */ \"./extensions/Markup/core/edit-modes/EditModePen.js\");\n/* harmony import */ var _edit_actions_DeleteFreehand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteFreehand */ \"./extensions/Markup/core/edit-actions/DeleteFreehand.js\");\n/* harmony import */ var _edit_actions_CreateFreehand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateFreehand */ \"./extensions/Markup/core/edit-actions/CreateFreehand.js\");\n/* harmony import */ var _edit_actions_SetFreehand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetFreehand */ \"./extensions/Markup/core/edit-actions/SetFreehand.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n\n\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModeFreehand(editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n  _EditModePen__WEBPACK_IMPORTED_MODULE_0__.EditModePen.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_FREEHAND, styleAttributes);\n}\n\nEditModeFreehand.prototype = Object.create(_EditModePen__WEBPACK_IMPORTED_MODULE_0__.EditModePen.prototype);\nEditModeFreehand.prototype.constructor = EditModeFreehand;\n\nvar proto = EditModeFreehand.prototype;\n\nproto.createPen = function (markupId, position, size, rotation, locations) {\n  return new _edit_actions_CreateFreehand__WEBPACK_IMPORTED_MODULE_2__.CreateFreehand(this.editor,\n  markupId,\n  position,\n  size,\n  rotation,\n  locations,\n  this.style);\n};\n\nproto.deletePen = function (markup) {\n  return new _edit_actions_DeleteFreehand__WEBPACK_IMPORTED_MODULE_1__.DeleteFreehand(this.editor, markup);\n};\n\nproto.setPen = function (position, size, locations, isAbsoluteCoords) {\n  return new _edit_actions_SetFreehand__WEBPACK_IMPORTED_MODULE_3__.SetFreehand(this.editor,\n  this.selectedMarkup,\n  position,\n  size,\n  locations,\n  isAbsoluteCoords);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVGcmVlaGFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTs7QUFFK0I7QUFDb0I7QUFDQTtBQUNOO0FBQ1o7O0FBRTFDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDVyxTQUFTSyxnQkFBZ0JBLENBQUNDLE1BQU0sRUFBRTs7RUFFckMsSUFBSUMsZUFBZSxHQUFHLENBQUMsY0FBYyxFQUFFLGNBQWMsRUFBRSxnQkFBZ0IsQ0FBQztFQUN4RVAscURBQVcsQ0FBQ1EsSUFBSSxDQUFDLElBQUksRUFBRUYsTUFBTSxFQUFFRiw4REFBZ0MsRUFBRUcsZUFBZSxDQUFDO0FBQ3JGOztBQUVBRixnQkFBZ0IsQ0FBQ0ssU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ1oscURBQVcsQ0FBQ1UsU0FBUyxDQUFDO0FBQ2pFTCxnQkFBZ0IsQ0FBQ0ssU0FBUyxDQUFDRyxXQUFXLEdBQUdSLGdCQUFnQjs7QUFFekQsSUFBSVMsS0FBSyxHQUFHVCxnQkFBZ0IsQ0FBQ0ssU0FBUzs7QUFFdENJLEtBQUssQ0FBQ0MsU0FBUyxHQUFHLFVBQVNDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFO0VBQ3RFLE9BQU8sSUFBSWxCLHdFQUFjLENBQUMsSUFBSSxDQUFDSSxNQUFNO0VBQ2pDVSxRQUFRO0VBQ1JDLFFBQVE7RUFDUkMsSUFBSTtFQUNKQyxRQUFRO0VBQ1JDLFNBQVM7RUFDVCxJQUFJLENBQUNDLEtBQUssQ0FBQztBQUNuQixDQUFDOztBQUVEUCxLQUFLLENBQUNRLFNBQVMsR0FBRyxVQUFTQyxNQUFNLEVBQUU7RUFDL0IsT0FBTyxJQUFJdEIsd0VBQWMsQ0FBQyxJQUFJLENBQUNLLE1BQU0sRUFBRWlCLE1BQU0sQ0FBQztBQUNsRCxDQUFDOztBQUVEVCxLQUFLLENBQUNVLE1BQU0sR0FBRyxVQUFTUCxRQUFRLEVBQUVDLElBQUksRUFBRUUsU0FBUyxFQUFFSyxnQkFBZ0IsRUFBRTtFQUNqRSxPQUFPLElBQUl0QixrRUFBVyxDQUFDLElBQUksQ0FBQ0csTUFBTTtFQUM5QixJQUFJLENBQUNvQixjQUFjO0VBQ25CVCxRQUFRO0VBQ1JDLElBQUk7RUFDSkUsU0FBUztFQUNUSyxnQkFBZ0IsQ0FBQztBQUN6QixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZUZyZWVoYW5kLmpzPzRlZWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0TW9kZVBlbiB9IGZyb20gJy4vRWRpdE1vZGVQZW4nO1xuaW1wb3J0IHsgRGVsZXRlRnJlZWhhbmQgfSBmcm9tICcuLi9lZGl0LWFjdGlvbnMvRGVsZXRlRnJlZWhhbmQnO1xuaW1wb3J0IHsgQ3JlYXRlRnJlZWhhbmQgfSBmcm9tICcuLi9lZGl0LWFjdGlvbnMvQ3JlYXRlRnJlZWhhbmQnO1xuaW1wb3J0IHsgU2V0RnJlZWhhbmQgfSBmcm9tICcuLi9lZGl0LWFjdGlvbnMvU2V0RnJlZWhhbmQnO1xuaW1wb3J0ICogYXMgTWFya3VwVHlwZXMgZnJvbSAnLi4vTWFya3VwVHlwZXMnO1xuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZWRpdG9yXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZXhwb3J0IGZ1bmN0aW9uIEVkaXRNb2RlRnJlZWhhbmQoZWRpdG9yKSB7XG5cbiAgICAgICAgdmFyIHN0eWxlQXR0cmlidXRlcyA9IFsnc3Ryb2tlLXdpZHRoJywgJ3N0cm9rZS1jb2xvcicsICdzdHJva2Utb3BhY2l0eSddO1xuICAgICAgICBFZGl0TW9kZVBlbi5jYWxsKHRoaXMsIGVkaXRvciwgTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfRlJFRUhBTkQsIHN0eWxlQXR0cmlidXRlcyk7XG4gICAgfVxuXG4gICAgRWRpdE1vZGVGcmVlaGFuZC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVkaXRNb2RlUGVuLnByb3RvdHlwZSk7XG4gICAgRWRpdE1vZGVGcmVlaGFuZC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBFZGl0TW9kZUZyZWVoYW5kO1xuXG4gICAgdmFyIHByb3RvID0gRWRpdE1vZGVGcmVlaGFuZC5wcm90b3R5cGU7XG5cbiAgICBwcm90by5jcmVhdGVQZW4gPSBmdW5jdGlvbihtYXJrdXBJZCwgcG9zaXRpb24sIHNpemUsIHJvdGF0aW9uLCBsb2NhdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBDcmVhdGVGcmVlaGFuZCh0aGlzLmVkaXRvcixcbiAgICAgICAgICAgIG1hcmt1cElkLFxuICAgICAgICAgICAgcG9zaXRpb24sXG4gICAgICAgICAgICBzaXplLFxuICAgICAgICAgICAgcm90YXRpb24sXG4gICAgICAgICAgICBsb2NhdGlvbnMsXG4gICAgICAgICAgICB0aGlzLnN0eWxlKTtcbiAgICB9O1xuXG4gICAgcHJvdG8uZGVsZXRlUGVuID0gZnVuY3Rpb24obWFya3VwKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGVsZXRlRnJlZWhhbmQodGhpcy5lZGl0b3IsIG1hcmt1cCk7XG4gICAgfTtcblxuICAgIHByb3RvLnNldFBlbiA9IGZ1bmN0aW9uKHBvc2l0aW9uLCBzaXplLCBsb2NhdGlvbnMsIGlzQWJzb2x1dGVDb29yZHMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTZXRGcmVlaGFuZCh0aGlzLmVkaXRvcixcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRNYXJrdXAsXG4gICAgICAgICAgICBwb3NpdGlvbixcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgICAgICBsb2NhdGlvbnMsXG4gICAgICAgICAgICBpc0Fic29sdXRlQ29vcmRzKTtcbiAgICB9O1xuXG4iXSwibmFtZXMiOlsiRWRpdE1vZGVQZW4iLCJEZWxldGVGcmVlaGFuZCIsIkNyZWF0ZUZyZWVoYW5kIiwiU2V0RnJlZWhhbmQiLCJNYXJrdXBUeXBlcyIsIkVkaXRNb2RlRnJlZWhhbmQiLCJlZGl0b3IiLCJzdHlsZUF0dHJpYnV0ZXMiLCJjYWxsIiwiTUFSS1VQX1RZUEVfRlJFRUhBTkQiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwiY3JlYXRlUGVuIiwibWFya3VwSWQiLCJwb3NpdGlvbiIsInNpemUiLCJyb3RhdGlvbiIsImxvY2F0aW9ucyIsInN0eWxlIiwiZGVsZXRlUGVuIiwibWFya3VwIiwic2V0UGVuIiwiaXNBYnNvbHV0ZUNvb3JkcyIsInNlbGVjdGVkTWFya3VwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeFreehand.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeHighlight.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeHighlight.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeHighlight: () => (/* binding */ EditModeHighlight)\n/* harmony export */ });\n/* harmony import */ var _EditModePen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditModePen */ \"./extensions/Markup/core/edit-modes/EditModePen.js\");\n/* harmony import */ var _edit_actions_DeleteHighlight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteHighlight */ \"./extensions/Markup/core/edit-actions/DeleteHighlight.js\");\n/* harmony import */ var _edit_actions_CreateHighlight__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateHighlight */ \"./extensions/Markup/core/edit-actions/CreateHighlight.js\");\n/* harmony import */ var _edit_actions_SetHighlight__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetHighlight */ \"./extensions/Markup/core/edit-actions/SetHighlight.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n\n\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModeHighlight(editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity'];\n  _EditModePen__WEBPACK_IMPORTED_MODULE_0__.EditModePen.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_HIGHLIGHT, styleAttributes);\n\n  var normaStrokeWidth = editor.getStrokeWidth();\n  this.style['stroke-opacity'] = 0.50;\n  this.style['stroke-color'] = '#ffff00';\n  this.style['stroke-width'] = 4 * normaStrokeWidth; // Very Thick\n}\n\nEditModeHighlight.prototype = Object.create(_EditModePen__WEBPACK_IMPORTED_MODULE_0__.EditModePen.prototype);\nEditModeHighlight.prototype.constructor = EditModeHighlight;\n\nvar proto = EditModeHighlight.prototype;\n\nproto.createPen = function (markupId, position, size, rotation, locations) {\n  return new _edit_actions_CreateHighlight__WEBPACK_IMPORTED_MODULE_2__.CreateHighlight(this.editor,\n  markupId,\n  position,\n  size,\n  rotation,\n  locations,\n  this.style);\n};\n\nproto.deletePen = function (markup) {\n  return new _edit_actions_DeleteHighlight__WEBPACK_IMPORTED_MODULE_1__.DeleteHighlight(this.editor, markup);\n};\n\nproto.setPen = function (position, size, locations, isAbsoluteCoords) {\n  return new _edit_actions_SetHighlight__WEBPACK_IMPORTED_MODULE_3__.SetHighlight(this.editor,\n  this.selectedMarkup,\n  position,\n  size,\n  locations,\n  isAbsoluteCoords);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVIaWdobGlnaHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7O0FBRStCO0FBQ3NCO0FBQ0E7QUFDTjtBQUNkOztBQUUxQztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ1csU0FBU0ssaUJBQWlCQSxDQUFDQyxNQUFNLEVBQUU7O0VBRXRDLElBQUlDLGVBQWUsR0FBRyxDQUFDLGNBQWMsRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLENBQUM7RUFDeEVQLHFEQUFXLENBQUNRLElBQUksQ0FBQyxJQUFJLEVBQUVGLE1BQU0sRUFBRUYsK0RBQWlDLEVBQUVHLGVBQWUsQ0FBQzs7RUFFbEYsSUFBSUcsZ0JBQWdCLEdBQUdKLE1BQU0sQ0FBQ0ssY0FBYyxDQUFDLENBQUM7RUFDOUMsSUFBSSxDQUFDQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxJQUFJO0VBQ25DLElBQUksQ0FBQ0EsS0FBSyxDQUFDLGNBQWMsQ0FBQyxHQUFHLFNBQVM7RUFDdEMsSUFBSSxDQUFDQSxLQUFLLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxHQUFHRixnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3ZEOztBQUVBTCxpQkFBaUIsQ0FBQ1EsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ2YscURBQVcsQ0FBQ2EsU0FBUyxDQUFDO0FBQ2xFUixpQkFBaUIsQ0FBQ1EsU0FBUyxDQUFDRyxXQUFXLEdBQUdYLGlCQUFpQjs7QUFFM0QsSUFBSVksS0FBSyxHQUFHWixpQkFBaUIsQ0FBQ1EsU0FBUzs7QUFFdkNJLEtBQUssQ0FBQ0MsU0FBUyxHQUFHLFVBQVNDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFO0VBQ3RFLE9BQU8sSUFBSXJCLDBFQUFlLENBQUMsSUFBSSxDQUFDSSxNQUFNO0VBQ2xDYSxRQUFRO0VBQ1JDLFFBQVE7RUFDUkMsSUFBSTtFQUNKQyxRQUFRO0VBQ1JDLFNBQVM7RUFDVCxJQUFJLENBQUNYLEtBQUssQ0FBQztBQUNuQixDQUFDOztBQUVESyxLQUFLLENBQUNPLFNBQVMsR0FBRyxVQUFTQyxNQUFNLEVBQUU7RUFDL0IsT0FBTyxJQUFJeEIsMEVBQWUsQ0FBQyxJQUFJLENBQUNLLE1BQU0sRUFBRW1CLE1BQU0sQ0FBQztBQUNuRCxDQUFDOztBQUVEUixLQUFLLENBQUNTLE1BQU0sR0FBRyxVQUFTTixRQUFRLEVBQUVDLElBQUksRUFBRUUsU0FBUyxFQUFFSSxnQkFBZ0IsRUFBRTtFQUNqRSxPQUFPLElBQUl4QixvRUFBWSxDQUFDLElBQUksQ0FBQ0csTUFBTTtFQUMvQixJQUFJLENBQUNzQixjQUFjO0VBQ25CUixRQUFRO0VBQ1JDLElBQUk7RUFDSkUsU0FBUztFQUNUSSxnQkFBZ0IsQ0FBQztBQUN6QixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZUhpZ2hsaWdodC5qcz8xYzhhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgRWRpdE1vZGVQZW4gfSBmcm9tICcuL0VkaXRNb2RlUGVuJztcbmltcG9ydCB7IERlbGV0ZUhpZ2hsaWdodCB9IGZyb20gJy4uL2VkaXQtYWN0aW9ucy9EZWxldGVIaWdobGlnaHQnO1xuaW1wb3J0IHsgQ3JlYXRlSGlnaGxpZ2h0IH0gZnJvbSAnLi4vZWRpdC1hY3Rpb25zL0NyZWF0ZUhpZ2hsaWdodCc7XG5pbXBvcnQgeyBTZXRIaWdobGlnaHQgfSBmcm9tICcuLi9lZGl0LWFjdGlvbnMvU2V0SGlnaGxpZ2h0JztcbmltcG9ydCAqIGFzIE1hcmt1cFR5cGVzIGZyb20gJy4uL01hcmt1cFR5cGVzJztcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIGVkaXRvclxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiBFZGl0TW9kZUhpZ2hsaWdodChlZGl0b3IpIHtcblxuICAgICAgICB2YXIgc3R5bGVBdHRyaWJ1dGVzID0gWydzdHJva2Utd2lkdGgnLCAnc3Ryb2tlLWNvbG9yJywgJ3N0cm9rZS1vcGFjaXR5J107XG4gICAgICAgIEVkaXRNb2RlUGVuLmNhbGwodGhpcywgZWRpdG9yLCBNYXJrdXBUeXBlcy5NQVJLVVBfVFlQRV9ISUdITElHSFQsIHN0eWxlQXR0cmlidXRlcyk7XG5cbiAgICAgICAgdmFyIG5vcm1hU3Ryb2tlV2lkdGggPSBlZGl0b3IuZ2V0U3Ryb2tlV2lkdGgoKTtcbiAgICAgICAgdGhpcy5zdHlsZVsnc3Ryb2tlLW9wYWNpdHknXSA9IDAuNTA7XG4gICAgICAgIHRoaXMuc3R5bGVbJ3N0cm9rZS1jb2xvciddID0gJyNmZmZmMDAnO1xuICAgICAgICB0aGlzLnN0eWxlWydzdHJva2Utd2lkdGgnXSA9IDQgKiBub3JtYVN0cm9rZVdpZHRoOyAvLyBWZXJ5IFRoaWNrXG4gICAgfVxuXG4gICAgRWRpdE1vZGVIaWdobGlnaHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFZGl0TW9kZVBlbi5wcm90b3R5cGUpO1xuICAgIEVkaXRNb2RlSGlnaGxpZ2h0LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEVkaXRNb2RlSGlnaGxpZ2h0O1xuXG4gICAgdmFyIHByb3RvID0gRWRpdE1vZGVIaWdobGlnaHQucHJvdG90eXBlO1xuXG4gICAgcHJvdG8uY3JlYXRlUGVuID0gZnVuY3Rpb24obWFya3VwSWQsIHBvc2l0aW9uLCBzaXplLCByb3RhdGlvbiwgbG9jYXRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgQ3JlYXRlSGlnaGxpZ2h0KHRoaXMuZWRpdG9yLFxuICAgICAgICAgICAgbWFya3VwSWQsXG4gICAgICAgICAgICBwb3NpdGlvbixcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgICAgICByb3RhdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9ucyxcbiAgICAgICAgICAgIHRoaXMuc3R5bGUpO1xuICAgIH07XG5cbiAgICBwcm90by5kZWxldGVQZW4gPSBmdW5jdGlvbihtYXJrdXApIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEZWxldGVIaWdobGlnaHQodGhpcy5lZGl0b3IsIG1hcmt1cCk7XG4gICAgfTtcblxuICAgIHByb3RvLnNldFBlbiA9IGZ1bmN0aW9uKHBvc2l0aW9uLCBzaXplLCBsb2NhdGlvbnMsIGlzQWJzb2x1dGVDb29yZHMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTZXRIaWdobGlnaHQodGhpcy5lZGl0b3IsXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkTWFya3VwLFxuICAgICAgICAgICAgcG9zaXRpb24sXG4gICAgICAgICAgICBzaXplLFxuICAgICAgICAgICAgbG9jYXRpb25zLFxuICAgICAgICAgICAgaXNBYnNvbHV0ZUNvb3Jkcyk7XG4gICAgfTtcblxuIl0sIm5hbWVzIjpbIkVkaXRNb2RlUGVuIiwiRGVsZXRlSGlnaGxpZ2h0IiwiQ3JlYXRlSGlnaGxpZ2h0IiwiU2V0SGlnaGxpZ2h0IiwiTWFya3VwVHlwZXMiLCJFZGl0TW9kZUhpZ2hsaWdodCIsImVkaXRvciIsInN0eWxlQXR0cmlidXRlcyIsImNhbGwiLCJNQVJLVVBfVFlQRV9ISUdITElHSFQiLCJub3JtYVN0cm9rZVdpZHRoIiwiZ2V0U3Ryb2tlV2lkdGgiLCJzdHlsZSIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicHJvdG8iLCJjcmVhdGVQZW4iLCJtYXJrdXBJZCIsInBvc2l0aW9uIiwic2l6ZSIsInJvdGF0aW9uIiwibG9jYXRpb25zIiwiZGVsZXRlUGVuIiwibWFya3VwIiwic2V0UGVuIiwiaXNBYnNvbHV0ZUNvb3JkcyIsInNlbGVjdGVkTWFya3VwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeHighlight.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModePen.js":
/*!**********************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModePen.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModePen: () => (/* binding */ EditModePen)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n\n\n\n\n\n/**\n * Base class for editing Pen tools (currently freehand and highlighter)\n *\n * Any class extending EditModePen should contain at least the following methods:\n * - createPen()\n * - deletePen()\n * - setPen()\n *\n * @param editor\n * @constructor\n */\nfunction EditModePen(editor, type, styleAttributes) {\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, type, styleAttributes);\n\n  this.smoothen = true;\n  this.bufferSize = 8;\n}\n\nEditModePen.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\n\nvar proto = EditModePen.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type === this.type) {\n    var deleteMarkup = this.deletePen(markup);\n    deleteMarkup.addToHistory = !cantUndo;\n    deleteMarkup.execute();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handler to mouse move events, used to create markups.\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  if (!_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseMove.call(this, event)) {\n    return false;\n  }\n\n\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n  var movements = this.movements;\n\n  var location = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n  if (this.smoothen) {\n    this.appendToBuffer(location);\n    this.amendPath();\n  } else {\n    var dx = this.lastX - mousePosition.x;\n    var dy = this.lastY - mousePosition.y;\n    var moveTol = 25; // 5^2, compare to square to avoid using square root of distance\n\n    if (movements.length > 1 && dx * dx + dy * dy < moveTol) {\n      movements[movements.length - 1] = location;\n      this.removeFromAbsolutePath(1);\n    } else {\n      movements.push(location);\n      this.lastX = mousePosition.x;\n      this.lastY = mousePosition.y;\n    }\n\n    this.addToAbsolutePath([location]);\n  }\n\n  var setPen = this.setPen(this.position, this.size, this.absolutePath, true);\n  setPen.execute();\n  return true;\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseDown = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n  if (this.selectedMarkup) {\n    return;\n  }\n\n  var editor = this.editor;\n\n  editor.snapper && editor.snapper.clearSnapped();\n  var mousePosition = editor.getMousePosition();\n\n  this.lastX = this.initialX = mousePosition.x;\n  this.lastY = this.initialY = mousePosition.y;\n\n  //set the starting point\n  var position = this.position = editor.clientToMarkups(this.initialX, this.initialY);\n  this.movements = [position];\n  if (this.smoothen) {\n    this.buffer = []; // Reset buffer\n    this.movementsLastIndex = null;\n    this.appendToBuffer(position);\n  }\n\n  var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n\n  // Create pen.\n  editor.beginActionGroup();\n\n  var markupId = editor.getId();\n  var create = this.createPen(markupId, position, size, 0, [{ x: 0, y: 0 }]);\n\n  create.execute();\n\n  this.createAbsolutePath(position);\n\n  this.selectedMarkup = editor.getMarkup(markupId);\n  this.creationBegin();\n};\n\nproto.onMouseUp = function () {\n\n  if (!this.creating) {\n    _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseUp.call(this);\n    return;\n  }\n\n  var movements = this.movements;\n  var cameraWidth = this.viewer.impl.camera.right - this.viewer.impl.camera.left;\n  var cameraHeight = this.viewer.impl.camera.top - this.viewer.impl.camera.bottom;\n  var cameraDiagSq = cameraWidth * cameraWidth + cameraHeight * cameraHeight;\n\n  movements = (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.simplify)(movements, cameraDiagSq * 0.00000001, true);\n\n  var xs = movements.map(function (item) {return item.x;});\n  var ys = movements.map(function (item) {return item.y;});\n\n  var l = Math.min.apply(null, xs);\n  var t = Math.min.apply(null, ys);\n  var r = Math.max.apply(null, xs);\n  var b = Math.max.apply(null, ys);\n\n  var width = r - l; // Already in markup coords space\n  var height = b - t; // Already in markup coords space\n\n  var position = {\n    x: l + width * 0.5,\n    y: t + height * 0.5\n  };\n  var size = this.size = { x: width, y: height };\n\n  // Adjust points to relate from the shape's center\n  var locations = movements.map(function (point) {\n    return {\n      x: point.x - position.x,\n      y: point.y - position.y\n    };\n  });\n\n  var setPen = this.setPen(position, size, locations, false);\n  setPen.execute();\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseUp.call(this);\n};\n\nproto.createPen = function () {\n  console.error('createPen not implemented');\n};\n\nproto.deletePen = function () {\n  console.error('deletePen not implemented');\n};\n\nproto.setPen = function () {\n  console.error('setPen not implemented');\n};\n\nproto.useWithSnapping = function () {\n  return false;\n};\n\nproto.createAbsolutePath = function (point) {\n\n  this.absolutePath = 'M' + +point.x.toFixed(6) + ' ' + +point.y.toFixed(6);\n  this.absolutePathIndexes = [0];\n};\n\nproto.removeFromAbsolutePath = function (numToRemove) {\n\n  numToRemove = Math.min(numToRemove, this.absolutePathIndexes.length);\n  if (numToRemove > 0) {\n    this.absolutePath = this.absolutePath.slice(0, this.absolutePathIndexes[this.absolutePathIndexes.length - numToRemove]);\n    this.absolutePathIndexes.splice(this.absolutePathIndexes.length - numToRemove);\n  }\n};\n\nproto.addToAbsolutePath = function (points) {\n\n  for (var i = 0; i < points.length; i++) {\n    this.absolutePathIndexes.push(this.absolutePath.length);\n    this.absolutePath += ' L' + +points[i].x.toFixed(6) + ' ' + +points[i].y.toFixed(6);\n  }\n};\n\nproto.appendToBuffer = function (point) {\n\n  this.buffer.push(point);\n  while (this.buffer.length > this.bufferSize) {\n    this.buffer.shift();\n  }\n};\n\nproto.amendPath = function () {\n\n  var point = this.getAveragePoint(0);\n  if (point) {\n    if (this.movementsLastIndex) {\n      this.removeFromAbsolutePath(this.movements.length - this.movementsLastIndex);\n      this.movements.splice(this.movementsLastIndex);\n    }\n\n    // Add the smoothed part of the path that will not change\n    var tmpBuffer = [point];\n    this.movementsLastIndex = this.movements.length + 1;\n\n    // Get the last part of the path (close to the current mouse position)\n    // This part will change if the mouse moves again\n    for (var offset = 2; offset < this.buffer.length; offset += 2) {\n      var pt = this.getAveragePoint(offset);\n      tmpBuffer.push(pt);\n    }\n\n    this.addToAbsolutePath(tmpBuffer);\n\n    // Set the complete current path coordinates\n    this.movements.push.apply(this.movements, tmpBuffer);\n\n  }\n};\n\n// Calculate the average point, starting at offset in the buffer\nproto.getAveragePoint = function (offset) {\n\n  var len = this.buffer.length;\n  if (len % 2 === 1 || len >= this.bufferSize) {\n    var totalX = 0;\n    var totalY = 0;\n    var pt;\n    var count = 0;\n    for (var i = offset; i < len; i++) {\n      count++;\n      pt = this.buffer[i];\n      totalX += pt.x;\n      totalY += pt.y;\n    }\n    return {\n      x: totalX / count,\n      y: totalY / count\n    };\n  }\n  return null;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModePen.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModePolycloud.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModePolycloud.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModePolycloud: () => (/* binding */ EditModePolycloud)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeletePolycloud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeletePolycloud */ \"./extensions/Markup/core/edit-actions/DeletePolycloud.js\");\n/* harmony import */ var _edit_actions_CreatePolycloud__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreatePolycloud */ \"./extensions/Markup/core/edit-actions/CreatePolycloud.js\");\n/* harmony import */ var _edit_actions_SetPolycloud__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetPolycloud */ \"./extensions/Markup/core/edit-actions/SetPolycloud.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n\n\n\n\n\n\n\n\n\nvar SNAP_RANGE = 25;\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModePolycloud(editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_POLYCLOUD, styleAttributes);\n\n  this.creationMethod = this.CREATION_METHOD_CLICKS;\n  this.movements = [];\n}\n\nEditModePolycloud.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModePolycloud.prototype.constructor = EditModePolycloud;\n\nvar proto = EditModePolycloud.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type == this.type) {\n    var movements = this.movements;\n    if (this.creating && movements.length >= 2) {\n      movements.pop();\n      movements.pop();\n      var lastIndex = movements.length - 1;\n      if (lastIndex >= 0) {\n        // duplicate last location\n        var lastMove = movements[lastIndex];\n        movements.push(lastMove);\n        var locations = setPositionAndSize(movements, this);\n        var setPolycloud = new _edit_actions_SetPolycloud__WEBPACK_IMPORTED_MODULE_3__.SetPolycloud(\n          this.editor,\n          markup,\n          this.position,\n          this.size,\n          locations);\n\n        setPolycloud.execute();\n      }\n    } else\n    {\n      var deletePolycloud = new _edit_actions_DeletePolycloud__WEBPACK_IMPORTED_MODULE_1__.DeletePolycloud(this.editor, markup);\n      deletePolycloud.addToHistory = !cantUndo;\n      deletePolycloud.execute();\n      this.creationEnd();\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Handler to mouse move events, used to create markups.\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  if (!_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseMove.call(this, event)) {\n    return false;\n  }\n\n  var selectedMarkup = this.selectedMarkup;\n\n  var editor = this.editor;\n\n  this.dragging = true;\n\n  var movements = this.movements;\n  movements.splice(movements.length - 1, 1);\n\n  var mousePosition = editor.getMousePosition();\n  mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n  // Close polycloud if user clicks close to initial point.\n  if (movements.length >= 2 &&\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_5__.areMarkupsPointsInClientRange)(movements[0], mousePosition, SNAP_RANGE, this.editor)) {\n    mousePosition = movements[0]; // Snap!\n  }\n\n  movements.push(mousePosition);\n\n  var locations = setPositionAndSize(movements, this);\n  var setPolycloud = new _edit_actions_SetPolycloud__WEBPACK_IMPORTED_MODULE_3__.SetPolycloud(\n    editor,\n    selectedMarkup,\n    this.position,\n    this.size,\n    locations);\n\n  setPolycloud.execute();\n  return true;\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseDown = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n  // User selected an already created markup.\n  if (this.selectedMarkup && !this.creating) {\n    return;\n  }\n\n  if (this.creating) {\n    return;\n  }\n\n  // Creation process.\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n\n  mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n  var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n  this.movements = [mousePosition, mousePosition];\n\n  editor.beginActionGroup();\n\n  var markupId = editor.getId();\n  var create = new _edit_actions_CreatePolycloud__WEBPACK_IMPORTED_MODULE_2__.CreatePolycloud(\n    editor,\n    markupId,\n    mousePosition,\n    size,\n    0,\n    [{ x: 0, y: 0 }],\n    this.style);\n\n  create.execute();\n\n  this.selectedMarkup = editor.getMarkup(markupId);\n  this.creationBegin();\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseUp = function (event) {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseUp.call(this);\n\n  if (!this.creating) {\n    return;\n  }\n\n  this.dragging = false;\n\n  // Creation process.\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n  var movements = this.movements;\n  var closed = false;\n\n  mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n  if (movements.length > 1 &&\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_5__.areMarkupsPointsInClientRange)(movements[movements.length - 2], mousePosition, SNAP_RANGE, this.editor)) {\n    return;\n  }\n\n  // Close polycloud if user clicks close to initial point.\n  if (movements.length > 2 &&\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_5__.areMarkupsPointsInClientRange)(movements[0], mousePosition, SNAP_RANGE, this.editor)) {\n    mousePosition = movements[0]; // Snap!\n    closed = true;\n  }\n\n  movements.splice(movements.length - 1, 1);\n\n  if (!closed) {\n    movements.push(mousePosition);\n    movements.push(mousePosition);\n  }\n\n  var polycloud = this.selectedMarkup;\n  var locations = setPositionAndSize(movements, polycloud);\n  var setPolycloud = new _edit_actions_SetPolycloud__WEBPACK_IMPORTED_MODULE_3__.SetPolycloud(\n    editor,\n    polycloud,\n    polycloud.position,\n    polycloud.size,\n    locations,\n    closed);\n\n  setPolycloud.execute();\n\n  if (closed) {\n    this.creationEnd();\n  }\n};\n\nproto.onMouseDoubleClick = function (event) {\n\n  if (!this.creating) {\n    return;\n  }\n\n  var movements = this.movements;\n  movements.splice(Math.max(0, movements.length - 1));\n\n  if (movements.length < 2) {\n\n    this.creationCancel();\n  } else {\n\n    var polycloud = this.selectedMarkup;\n    var locations = setPositionAndSize(movements, polycloud);\n    var setPolycloud = new _edit_actions_SetPolycloud__WEBPACK_IMPORTED_MODULE_3__.SetPolycloud(\n      this.editor,\n      polycloud,\n      polycloud.position,\n      polycloud.size,\n      locations,\n      true);\n\n    setPolycloud.execute();\n    this.creationEnd();\n  }\n};\n\nproto.destroy = function () {\n  this.onMouseDoubleClick();\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationEnd.call(this);\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.destroy.call(this);\n};\n\nproto.creationEnd = function () {\n\n  // To pass isMinSizeValid,\n  // probably that test should be done with the markup size (not the recorded by the edit mode).\n  if (this.selectedMarkup) {\n    this.size.x = this.selectedMarkup.size.x;\n    this.size.y = this.selectedMarkup.size.y;\n  }\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationEnd.call(this);\n\n  this.closed = false;\n  this.movements = [];\n  this.dragging = false;\n  this.creating = false;\n};\n\nproto.creationCancel = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationCancel.call(this);\n\n  this.closed = false;\n  this.movements = [];\n  this.dragging = false;\n  this.creating = false;\n};\n\nfunction setPositionAndSize(locations, markup) {\n\n  // determine the position of the top-left and bottom-right points\n  var minFn = function (collection, key) {\n    var targets = collection.map(function (item) {\n      return item[key];\n    });\n    return Math.min.apply(null, targets);\n  };\n\n  var maxFn = function (collection, key) {\n    var targets = collection.map(function (item) {\n      return item[key];\n    });\n    return Math.max.apply(null, targets);\n  };\n\n  var strokeWidth = markup.style['stroke-width'];\n  var radius = strokeWidth * 2 + strokeWidth * 0.5;\n\n  var l = minFn(locations, 'x') - radius;\n  var t = minFn(locations, 'y') - radius;\n  var r = maxFn(locations, 'x') + radius;\n  var b = maxFn(locations, 'y') + radius;\n  var w = r - l;\n  var h = b - t;\n\n  markup.size = { x: w, y: h };\n  markup.position = { x: l + w * 0.5, y: t + h * 0.5 };\n\n  // Adjust points to relate from the shape's center\n  var position = markup.position;\n  return locations.map(function (point) {\n    return {\n      x: point.x - position.x,\n      y: point.y - position.y\n    };\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModePolycloud.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModePolyline.js":
/*!***************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModePolyline.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModePolyline: () => (/* binding */ EditModePolyline)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeletePolyline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeletePolyline */ \"./extensions/Markup/core/edit-actions/DeletePolyline.js\");\n/* harmony import */ var _edit_actions_CreatePolyline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreatePolyline */ \"./extensions/Markup/core/edit-actions/CreatePolyline.js\");\n/* harmony import */ var _edit_actions_SetPolyline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetPolyline */ \"./extensions/Markup/core/edit-actions/SetPolyline.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n\n\n\n\n\n\n\n\n\nvar SNAP_RANGE = 25;\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModePolyline(editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_POLYLINE, styleAttributes);\n\n  this.creationMethod = this.CREATION_METHOD_CLICKS;\n  this.movements = [];\n}\n\nEditModePolyline.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModePolyline.prototype.constructor = EditModePolyline;\n\nvar proto = EditModePolyline.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type == this.type) {\n    var movements = this.movements;\n    if (this.creating && movements.length >= 2) {\n      movements.pop();\n      movements.pop();\n      var lastIndex = movements.length - 1;\n      if (lastIndex >= 0) {\n        // duplicate last location\n        var lastMove = movements[lastIndex];\n        movements.push(lastMove);\n        var locations = setPositionAndSize(movements, this);\n        var setPolyline = new _edit_actions_SetPolyline__WEBPACK_IMPORTED_MODULE_3__.SetPolyline(\n          this.editor,\n          markup,\n          this.position,\n          this.size,\n          locations);\n\n        setPolyline.execute();\n      }\n    } else\n    {\n      var deletePolyline = new _edit_actions_DeletePolyline__WEBPACK_IMPORTED_MODULE_1__.DeletePolyline(this.editor, markup);\n      deletePolyline.addToHistory = !cantUndo;\n      deletePolyline.execute();\n      this.creationEnd();\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Handler to mouse move events, used to create markups.\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  if (!_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseMove.call(this, event)) {\n    return false;\n  }\n\n  var selectedMarkup = this.selectedMarkup;\n\n  var editor = this.editor;\n\n  this.dragging = true;\n\n  var movements = this.movements;\n  movements.splice(movements.length - 1, 1);\n\n  var mousePosition = editor.getMousePosition();\n  mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n  // Close polyline if user clicks close to initial point.\n  if (movements.length >= 2 &&\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_5__.areMarkupsPointsInClientRange)(movements[0], mousePosition, SNAP_RANGE, this.editor)) {\n    mousePosition = movements[0]; // Snap!\n  }\n\n  movements.push(mousePosition);\n\n  var locations = setPositionAndSize(movements, this);\n  var setPolyline = new _edit_actions_SetPolyline__WEBPACK_IMPORTED_MODULE_3__.SetPolyline(\n    editor,\n    selectedMarkup,\n    this.position,\n    this.size,\n    locations);\n\n  setPolyline.execute();\n  return true;\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseDown = function (event) {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n  // User selected an already created markup.\n  if (this.selectedMarkup && !this.creating) {\n    return;\n  }\n\n  if (this.creating) {\n    return;\n  }\n\n  // Creation process.\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n\n  mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n  var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n  this.movements = [mousePosition, mousePosition];\n\n  editor.beginActionGroup();\n\n  var markupId = editor.getId();\n  var create = new _edit_actions_CreatePolyline__WEBPACK_IMPORTED_MODULE_2__.CreatePolyline(\n    editor,\n    markupId,\n    mousePosition,\n    size,\n    0,\n    [{ x: 0, y: 0 }],\n    this.style);\n\n  create.execute();\n\n  this.selectedMarkup = editor.getMarkup(markupId);\n  this.creationBegin();\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseUp = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseUp.call(this);\n\n  if (!this.creating) {\n    return;\n  }\n\n  this.dragging = false;\n\n  // Creation process.\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n  var movements = this.movements;\n  var closed = false;\n\n  mousePosition = editor.clientToMarkups(mousePosition.x, mousePosition.y);\n\n  if (movements.length > 1 &&\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_5__.areMarkupsPointsInClientRange)(movements[movements.length - 2], mousePosition, SNAP_RANGE, this.editor)) {\n    return;\n  }\n\n  // Close polyline if user clicks close to initial point.\n  if (movements.length > 2 &&\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_5__.areMarkupsPointsInClientRange)(movements[0], mousePosition, SNAP_RANGE, this.editor)) {\n    mousePosition = movements[0]; // Snap!\n    closed = true;\n  }\n\n  movements.splice(movements.length - 1, 1);\n\n  if (!closed) {\n    movements.push(mousePosition);\n    movements.push(mousePosition);\n  }\n\n  var polyline = this.selectedMarkup;\n  var locations = setPositionAndSize(movements, polyline);\n  var setPolyline = new _edit_actions_SetPolyline__WEBPACK_IMPORTED_MODULE_3__.SetPolyline(\n    editor,\n    polyline,\n    polyline.position,\n    polyline.size,\n    locations,\n    closed);\n\n  setPolyline.execute();\n\n  if (closed) {\n    this.creationEnd();\n  }\n};\n\nproto.destroy = function () {\n  this.onMouseDoubleClick();\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationEnd.call(this);\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.destroy.call(this);\n};\n\nproto.creationEnd = function () {\n\n  // To pass isMinSizeValid,\n  // probably that test should be done with the markup size (not the recorded by the edit mode).\n  if (this.selectedMarkup) {\n    this.size.x = this.selectedMarkup.size.x;\n    this.size.y = this.selectedMarkup.size.y;\n  }\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationEnd.call(this);\n\n  this.closed = false;\n  this.movements = [];\n  this.dragging = false;\n  this.creating = false;\n};\n\nproto.creationCancel = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.creationCancel.call(this);\n\n  this.closed = false;\n  this.movements = [];\n  this.dragging = false;\n  this.creating = false;\n};\n\n\nproto.onMouseDoubleClick = function (event) {\n\n  if (!this.creating) {\n    return;\n  }\n\n  var movements = this.movements;\n  movements.splice(Math.max(0, movements.length - 1));\n\n  if (movements.length < 2) {\n\n    this.creationCancel();\n  } else {\n\n    var polyline = this.selectedMarkup;\n    var locations = setPositionAndSize(movements, polyline);\n    var setPolyline = new _edit_actions_SetPolyline__WEBPACK_IMPORTED_MODULE_3__.SetPolyline(\n      this.editor,\n      polyline,\n      polyline.position,\n      polyline.size,\n      locations,\n      this.closed);\n\n    setPolyline.execute();\n    this.creationEnd();\n  }\n};\n\nfunction setPositionAndSize(locations, markup) {\n\n  // determine the position of the top-left and bottom-right points\n  var minFn = function (collection, key) {\n    var targets = collection.map(function (item) {\n      return item[key];\n    });\n    return Math.min.apply(null, targets);\n  };\n\n  var maxFn = function (collection, key) {\n    var targets = collection.map(function (item) {\n      return item[key];\n    });\n    return Math.max.apply(null, targets);\n  };\n\n  var l = minFn(locations, 'x');\n  var t = minFn(locations, 'y');\n  var r = maxFn(locations, 'x');\n  var b = maxFn(locations, 'y');\n  var w = r - l;\n  var h = b - t;\n\n  markup.size = { x: w, y: h };\n  markup.position = { x: l + w * 0.5, y: t + h * 0.5 };\n\n  // Adjust points to relate from the shape's center\n  var position = markup.position;\n  return locations.map(function (point) {\n    return {\n      x: point.x - position.x,\n      y: point.y - position.y\n    };\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModePolyline.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeRectangle.js":
/*!****************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeRectangle.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeRectangle: () => (/* binding */ EditModeRectangle)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeleteRectangle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteRectangle */ \"./extensions/Markup/core/edit-actions/DeleteRectangle.js\");\n/* harmony import */ var _edit_actions_CreateRectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateRectangle */ \"./extensions/Markup/core/edit-actions/CreateRectangle.js\");\n/* harmony import */ var _edit_actions_SetRectangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetRectangle */ \"./extensions/Markup/core/edit-actions/SetRectangle.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n\n\n\n\n\n\n\n\nvar MeasureCommon = Autodesk.Viewing.MeasureCommon;\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModeRectangle(editor) {\n\n  var styleAttributes = ['stroke-width', 'stroke-color', 'stroke-opacity', 'fill-color', 'fill-opacity'];\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_RECTANGLE, styleAttributes);\n}\n\nEditModeRectangle.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModeRectangle.prototype.constructor = EditModeRectangle;\n\nvar proto = EditModeRectangle.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type == this.type) {\n    var deleteRectangle = new _edit_actions_DeleteRectangle__WEBPACK_IMPORTED_MODULE_1__.DeleteRectangle(this.editor, markup);\n    deleteRectangle.addToHistory = !cantUndo;\n    deleteRectangle.execute();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Handler to mouse move events, used to create markups.\n * @param {MouseEvent} event Mouse event.\n * @private\n */\nproto.onMouseMove = function (event) {\n\n  if (!_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseMove.call(this, event)) {\n    return false;\n  }\n\n  var selectedMarkup = this.selectedMarkup;\n\n  var editor = this.editor;\n\n  var pos = this.getFinalMouseDraggingPosition();\n  var final = editor.clientToMarkups(pos.x, pos.y);\n  var position = { x: (this.firstCorner.x + final.x) / 2, y: (this.firstCorner.y + final.y) / 2 };\n\n  var width, height;\n  // Snap to parallel/perpendicular of underlying vectors\n  if (editor.snapper && this.lineSnapped) {\n    var start = editor.project(this.lineSnapped.vertices[0]);\n    var end = editor.project(this.lineSnapped.vertices[1]);\n\n    var startZ = start.z;\n\n    start = editor.clientToMarkups(start.x, start.y);\n    end = editor.clientToMarkups(end.x, end.y);\n\n    start = new THREE.Vector3(start.x, start.y, startZ);\n    end = new THREE.Vector3(end.x, end.y, startZ);\n\n    var p = new THREE.Vector3(final.x, final.y, startZ);\n\n    var parallel = MeasureCommon.nearestPointInPointToLine(p, start, end);\n    height = p.distanceTo(parallel);\n\n    // select an arbitrary point on the perpendicular line\n    var k = -(start.x - end.x) / (start.y - end.y);\n    var b = this.firstCorner.y - k * this.firstCorner.x;\n    var x = this.firstCorner.x + 1;\n    var y = k * x + b;\n    var pEnd = new THREE.Vector3(x, y, startZ);\n\n    var pStart = new THREE.Vector3(this.firstCorner.x, this.firstCorner.y, startZ);\n    var perpendicular = MeasureCommon.nearestPointInPointToLine(p, pStart, pEnd);\n    width = p.distanceTo(perpendicular);\n  } else\n  {\n    width = final.x - this.firstCorner.x;\n    height = final.y - this.firstCorner.y;\n  }\n\n  var size = this.size = { x: Math.abs(width), y: Math.abs(height) };\n\n  var setRectangle = new _edit_actions_SetRectangle__WEBPACK_IMPORTED_MODULE_3__.SetRectangle(\n    editor,\n    selectedMarkup,\n    position,\n    size);\n\n  setRectangle.execute();\n  return true;\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n * @private\n */\nproto.onMouseDown = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n  if (this.selectedMarkup) {\n    return;\n  }\n\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n\n  this.initialX = mousePosition.x;\n  this.initialY = mousePosition.y;\n\n  // Calculate center and size.\n  var position = this.firstCorner = editor.clientToMarkups(this.initialX, this.initialY);\n  var size = this.size = editor.sizeFromClientToMarkups(1, 1);\n\n  // Calculate rotation\n  var rotation = 0;\n  this.lineSnapped = null;\n  if (editor.snapper) {\n    // Snap to parallel/perpendicular of underlying vectors\n    var geomType = editor.snapper.getGeometryType();\n    if (geomType === MeasureCommon.SnapType.SNAP_EDGE) {\n      this.lineSnapped = editor.snapper.getEdge();\n      var start = editor.project(this.lineSnapped.vertices[0]);\n      var end = editor.project(this.lineSnapped.vertices[1]);\n      var dx = end.x - start.x;\n      var dy = end.y - start.y;\n      rotation = this.rotation = Math.atan2(dy, dx);\n    }\n  }\n\n  // Create rectangle.\n  editor.beginActionGroup();\n\n  var markupId = editor.getId();\n  var create = new _edit_actions_CreateRectangle__WEBPACK_IMPORTED_MODULE_2__.CreateRectangle(\n    editor,\n    markupId,\n    position,\n    size,\n    rotation,\n    this.style);\n\n  create.execute();\n\n  this.selectedMarkup = editor.getMarkup(markupId);\n  this.creationBegin();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeRectangle.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeStamp.js":
/*!************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeStamp.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeStamp: () => (/* binding */ EditModeStamp)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeleteStamp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteStamp */ \"./extensions/Markup/core/edit-actions/DeleteStamp.js\");\n/* harmony import */ var _edit_actions_CreateStamp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/CreateStamp */ \"./extensions/Markup/core/edit-actions/CreateStamp.js\");\n/* harmony import */ var _edit_actions_SetStamp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/SetStamp */ \"./extensions/Markup/core/edit-actions/SetStamp.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n\n\n\n\n\n\n\n\n\n\nclass EditModeStamp extends _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode {\n  constructor(editor, svgData) {\n    var styleAttributes = [\n    'text-data'];\n\n    super(editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_4__.MARKUP_TYPE_STAMP, styleAttributes);\n    this.svgData = svgData;\n  }\n\n  deleteMarkup(markup, cantUndo) {\n    markup = markup || this.selectedMarkup;\n    if (markup && markup.type == this.type) {\n      var deleteStamp = new _edit_actions_DeleteStamp__WEBPACK_IMPORTED_MODULE_1__.DeleteStamp(this.editor, markup);\n      deleteStamp.addToHistory = !cantUndo;\n      deleteStamp.execute();\n      return true;\n    }\n    return false;\n  }\n\n  onMouseMove(event) {\n    if (!_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseMove.call(this, event)) {\n      return false;\n    }\n\n    const { selectedMarkup, editor } = this;\n\n    let final = this.getFinalMouseDraggingPosition();\n    final = editor.clientToMarkups(final.x, final.y);\n    let position = {\n      x: (this.firstPosition.x + final.x) / 2,\n      y: (this.firstPosition.y + final.y) / 2\n    };\n    let size = this.size = {\n      x: Math.abs(final.x - this.firstPosition.x),\n      y: Math.abs(final.y - this.firstPosition.y)\n    };\n\n    const action = new _edit_actions_SetStamp__WEBPACK_IMPORTED_MODULE_3__.SetStamp(editor, selectedMarkup, position, size);\n    action.execute();\n    return true;\n  }\n\n  onMouseDown() {\n    _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onMouseDown.call(this);\n\n    if (this.selectedMarkup) {\n      return;\n    }\n\n    const editor = this.editor;\n    let mousePosition = editor.getMousePosition();\n\n    this.initialX = mousePosition.x;\n    this.initialY = mousePosition.y;\n    this.firstPosition = editor.clientToMarkups(this.initialX, this.initialY);\n    this.size = editor.sizeFromClientToMarkups(1, 1);\n\n    editor.beginActionGroup();\n    const markupId = editor.getId();\n    const action = new _edit_actions_CreateStamp__WEBPACK_IMPORTED_MODULE_2__.CreateStamp(editor, markupId, this.firstPosition, this.size, 0, this.style, this.svgData);\n    action.execute();\n\n    // maybe this isn't being called right, that would explain it\n    this.selectedMarkup = editor.getMarkup(markupId);\n    this.creationBegin();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL2VkaXQtbW9kZXMvRWRpdE1vZGVTdGFtcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTs7QUFFeUI7QUFDb0I7QUFDQTtBQUNOO0FBQ047O0FBRXJCOztBQUV6QixNQUFNSyxhQUFhLFNBQVNMLCtDQUFRLENBQUM7RUFDakNNLFdBQVdBLENBQUNDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO0lBQ3pCLElBQUlDLGVBQWUsR0FBRztJQUNsQixXQUFXLENBQ2Q7O0lBQ0QsS0FBSyxDQUFDRixNQUFNLEVBQUVILDJEQUE2QixFQUFFSyxlQUFlLENBQUM7SUFDN0QsSUFBSSxDQUFDRCxPQUFPLEdBQUdBLE9BQU87RUFDMUI7O0VBRUFHLFlBQVlBLENBQUNDLE1BQU0sRUFBRUMsUUFBUSxFQUFFO0lBQzNCRCxNQUFNLEdBQUdBLE1BQU0sSUFBSSxJQUFJLENBQUNFLGNBQWM7SUFDdEMsSUFBSUYsTUFBTSxJQUFJQSxNQUFNLENBQUNHLElBQUksSUFBSSxJQUFJLENBQUNBLElBQUksRUFBRTtNQUNwQyxJQUFJQyxXQUFXLEdBQUcsSUFBSWYsa0VBQVcsQ0FBQyxJQUFJLENBQUNNLE1BQU0sRUFBRUssTUFBTSxDQUFDO01BQ3RESSxXQUFXLENBQUNDLFlBQVksR0FBRyxDQUFDSixRQUFRO01BQ3BDRyxXQUFXLENBQUNFLE9BQU8sQ0FBQyxDQUFDO01BQ3JCLE9BQU8sSUFBSTtJQUNmO0lBQ0EsT0FBTyxLQUFLO0VBQ2hCOztFQUVBQyxXQUFXQSxDQUFDQyxLQUFLLEVBQUU7SUFDZixJQUFJLENBQUNwQiwrQ0FBUSxDQUFDcUIsU0FBUyxDQUFDRixXQUFXLENBQUNHLElBQUksQ0FBRSxJQUFJLEVBQUVGLEtBQU0sQ0FBQyxFQUFFO01BQ3JELE9BQU8sS0FBSztJQUNoQjs7SUFFQSxNQUFNLEVBQUVOLGNBQWMsRUFBRVAsTUFBTSxDQUFDLENBQUMsR0FBRyxJQUFJOztJQUV2QyxJQUFJZ0IsS0FBSyxHQUFHLElBQUksQ0FBQ0MsNkJBQTZCLENBQUMsQ0FBQztJQUNoREQsS0FBSyxHQUFHaEIsTUFBTSxDQUFDa0IsZUFBZSxDQUFDRixLQUFLLENBQUNHLENBQUMsRUFBRUgsS0FBSyxDQUFDSSxDQUFDLENBQUM7SUFDaEQsSUFBSUMsUUFBUSxHQUFHO01BQ1hGLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQ0csYUFBYSxDQUFDSCxDQUFDLEdBQUdILEtBQUssQ0FBQ0csQ0FBQyxJQUFJLENBQUM7TUFDdkNDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQ0UsYUFBYSxDQUFDRixDQUFDLEdBQUdKLEtBQUssQ0FBQ0ksQ0FBQyxJQUFJO0lBQzFDLENBQUM7SUFDRCxJQUFJRyxJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJLEdBQUc7TUFDbkJKLENBQUMsRUFBRUssSUFBSSxDQUFDQyxHQUFHLENBQUNULEtBQUssQ0FBQ0csQ0FBQyxHQUFHLElBQUksQ0FBQ0csYUFBYSxDQUFDSCxDQUFDLENBQUM7TUFDM0NDLENBQUMsRUFBRUksSUFBSSxDQUFDQyxHQUFHLENBQUNULEtBQUssQ0FBQ0ksQ0FBQyxHQUFHLElBQUksQ0FBQ0UsYUFBYSxDQUFDRixDQUFDO0lBQzlDLENBQUM7O0lBRUQsTUFBTU0sTUFBTSxHQUFHLElBQUk5Qiw0REFBUSxDQUFDSSxNQUFNLEVBQUVPLGNBQWMsRUFBRWMsUUFBUSxFQUFFRSxJQUFJLENBQUM7SUFDbkVHLE1BQU0sQ0FBQ2YsT0FBTyxDQUFDLENBQUM7SUFDaEIsT0FBTyxJQUFJO0VBQ2Y7O0VBRUFnQixXQUFXQSxDQUFBLEVBQUc7SUFDVmxDLCtDQUFRLENBQUNxQixTQUFTLENBQUNhLFdBQVcsQ0FBQ1osSUFBSSxDQUFDLElBQUksQ0FBQzs7SUFFekMsSUFBSSxJQUFJLENBQUNSLGNBQWMsRUFBRTtNQUNyQjtJQUNKOztJQUVBLE1BQU1QLE1BQU0sR0FBRyxJQUFJLENBQUNBLE1BQU07SUFDMUIsSUFBSTRCLGFBQWEsR0FBRzVCLE1BQU0sQ0FBQzZCLGdCQUFnQixDQUFDLENBQUM7O0lBRTdDLElBQUksQ0FBQ0MsUUFBUSxHQUFHRixhQUFhLENBQUNULENBQUM7SUFDL0IsSUFBSSxDQUFDWSxRQUFRLEdBQUdILGFBQWEsQ0FBQ1IsQ0FBQztJQUMvQixJQUFJLENBQUNFLGFBQWEsR0FBR3RCLE1BQU0sQ0FBQ2tCLGVBQWUsQ0FBQyxJQUFJLENBQUNZLFFBQVEsRUFBRSxJQUFJLENBQUNDLFFBQVEsQ0FBQztJQUN6RSxJQUFJLENBQUNSLElBQUksR0FBR3ZCLE1BQU0sQ0FBQ2dDLHVCQUF1QixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7O0lBRWhEaEMsTUFBTSxDQUFDaUMsZ0JBQWdCLENBQUMsQ0FBQztJQUN6QixNQUFNQyxRQUFRLEdBQUdsQyxNQUFNLENBQUNtQyxLQUFLLENBQUMsQ0FBQztJQUMvQixNQUFNVCxNQUFNLEdBQUcsSUFBSS9CLGtFQUFXLENBQUNLLE1BQU0sRUFBRWtDLFFBQVEsRUFBRSxJQUFJLENBQUNaLGFBQWEsRUFBRSxJQUFJLENBQUNDLElBQUksRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDYSxLQUFLLEVBQUUsSUFBSSxDQUFDbkMsT0FBTyxDQUFDO0lBQzVHeUIsTUFBTSxDQUFDZixPQUFPLENBQUMsQ0FBQzs7SUFFaEI7SUFDQSxJQUFJLENBQUNKLGNBQWMsR0FBR1AsTUFBTSxDQUFDcUMsU0FBUyxDQUFDSCxRQUFRLENBQUM7SUFDaEQsSUFBSSxDQUFDSSxhQUFhLENBQUMsQ0FBQztFQUN4QjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2NvcmUvZWRpdC1tb2Rlcy9FZGl0TW9kZVN0YW1wLmpzPzBmNDUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBFZGl0TW9kZSB9IGZyb20gJy4vRWRpdE1vZGUnO1xuaW1wb3J0IHsgRGVsZXRlU3RhbXAgfSBmcm9tICcuLi9lZGl0LWFjdGlvbnMvRGVsZXRlU3RhbXAnO1xuaW1wb3J0IHsgQ3JlYXRlU3RhbXAgfSBmcm9tICcuLi9lZGl0LWFjdGlvbnMvQ3JlYXRlU3RhbXAnO1xuaW1wb3J0IHsgU2V0U3RhbXAgfSBmcm9tICcuLi9lZGl0LWFjdGlvbnMvU2V0U3RhbXAnO1xuaW1wb3J0ICogYXMgTWFya3VwVHlwZXMgZnJvbSAnLi4vTWFya3VwVHlwZXMnO1xuXG5leHBvcnQgeyBFZGl0TW9kZVN0YW1wIH07XG5cbmNsYXNzIEVkaXRNb2RlU3RhbXAgZXh0ZW5kcyBFZGl0TW9kZSB7XG4gICAgY29uc3RydWN0b3IoZWRpdG9yLCBzdmdEYXRhKSB7XG4gICAgICAgIHZhciBzdHlsZUF0dHJpYnV0ZXMgPSBbXG4gICAgICAgICAgICAndGV4dC1kYXRhJ1xuICAgICAgICBdO1xuICAgICAgICBzdXBlcihlZGl0b3IsIE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX1NUQU1QLCBzdHlsZUF0dHJpYnV0ZXMpO1xuICAgICAgICB0aGlzLnN2Z0RhdGEgPSBzdmdEYXRhO1xuICAgIH1cblxuICAgIGRlbGV0ZU1hcmt1cChtYXJrdXAsIGNhbnRVbmRvKSB7XG4gICAgICAgIG1hcmt1cCA9IG1hcmt1cCB8fCB0aGlzLnNlbGVjdGVkTWFya3VwO1xuICAgICAgICBpZiAobWFya3VwICYmIG1hcmt1cC50eXBlID09IHRoaXMudHlwZSkge1xuICAgICAgICAgICAgdmFyIGRlbGV0ZVN0YW1wID0gbmV3IERlbGV0ZVN0YW1wKHRoaXMuZWRpdG9yLCBtYXJrdXApO1xuICAgICAgICAgICAgZGVsZXRlU3RhbXAuYWRkVG9IaXN0b3J5ID0gIWNhbnRVbmRvO1xuICAgICAgICAgICAgZGVsZXRlU3RhbXAuZXhlY3V0ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIG9uTW91c2VNb3ZlKGV2ZW50KSB7XG4gICAgICAgIGlmICghRWRpdE1vZGUucHJvdG90eXBlLm9uTW91c2VNb3ZlLmNhbGwoIHRoaXMsIGV2ZW50ICkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHsgc2VsZWN0ZWRNYXJrdXAsIGVkaXRvciB9ID0gdGhpcztcblxuICAgICAgICBsZXQgZmluYWwgPSB0aGlzLmdldEZpbmFsTW91c2VEcmFnZ2luZ1Bvc2l0aW9uKCk7XG4gICAgICAgIGZpbmFsID0gZWRpdG9yLmNsaWVudFRvTWFya3VwcyhmaW5hbC54LCBmaW5hbC55KTtcbiAgICAgICAgbGV0IHBvc2l0aW9uID0ge1xuICAgICAgICAgICAgeDogKHRoaXMuZmlyc3RQb3NpdGlvbi54ICsgZmluYWwueCkgLyAyLFxuICAgICAgICAgICAgeTogKHRoaXMuZmlyc3RQb3NpdGlvbi55ICsgZmluYWwueSkgLyAyXG4gICAgICAgIH07XG4gICAgICAgIGxldCBzaXplID0gdGhpcy5zaXplID0ge1xuICAgICAgICAgICAgeDogTWF0aC5hYnMoZmluYWwueCAtIHRoaXMuZmlyc3RQb3NpdGlvbi54KSxcbiAgICAgICAgICAgIHk6IE1hdGguYWJzKGZpbmFsLnkgLSB0aGlzLmZpcnN0UG9zaXRpb24ueSlcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBhY3Rpb24gPSBuZXcgU2V0U3RhbXAoZWRpdG9yLCBzZWxlY3RlZE1hcmt1cCwgcG9zaXRpb24sIHNpemUpO1xuICAgICAgICBhY3Rpb24uZXhlY3V0ZSgpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBvbk1vdXNlRG93bigpIHtcbiAgICAgICAgRWRpdE1vZGUucHJvdG90eXBlLm9uTW91c2VEb3duLmNhbGwodGhpcyk7XG5cbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRNYXJrdXApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGVkaXRvciA9IHRoaXMuZWRpdG9yO1xuICAgICAgICBsZXQgbW91c2VQb3NpdGlvbiA9IGVkaXRvci5nZXRNb3VzZVBvc2l0aW9uKCk7XG5cbiAgICAgICAgdGhpcy5pbml0aWFsWCA9IG1vdXNlUG9zaXRpb24ueDtcbiAgICAgICAgdGhpcy5pbml0aWFsWSA9IG1vdXNlUG9zaXRpb24ueTtcbiAgICAgICAgdGhpcy5maXJzdFBvc2l0aW9uID0gZWRpdG9yLmNsaWVudFRvTWFya3Vwcyh0aGlzLmluaXRpYWxYLCB0aGlzLmluaXRpYWxZKTtcbiAgICAgICAgdGhpcy5zaXplID0gZWRpdG9yLnNpemVGcm9tQ2xpZW50VG9NYXJrdXBzKDEsIDEpO1xuXG4gICAgICAgIGVkaXRvci5iZWdpbkFjdGlvbkdyb3VwKCk7XG4gICAgICAgIGNvbnN0IG1hcmt1cElkID0gZWRpdG9yLmdldElkKCk7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IG5ldyBDcmVhdGVTdGFtcChlZGl0b3IsIG1hcmt1cElkLCB0aGlzLmZpcnN0UG9zaXRpb24sIHRoaXMuc2l6ZSwgMCwgdGhpcy5zdHlsZSwgdGhpcy5zdmdEYXRhKTtcbiAgICAgICAgYWN0aW9uLmV4ZWN1dGUoKTtcblxuICAgICAgICAvLyBtYXliZSB0aGlzIGlzbid0IGJlaW5nIGNhbGxlZCByaWdodCwgdGhhdCB3b3VsZCBleHBsYWluIGl0XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRNYXJrdXAgPSBlZGl0b3IuZ2V0TWFya3VwKG1hcmt1cElkKTtcbiAgICAgICAgdGhpcy5jcmVhdGlvbkJlZ2luKCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIkVkaXRNb2RlIiwiRGVsZXRlU3RhbXAiLCJDcmVhdGVTdGFtcCIsIlNldFN0YW1wIiwiTWFya3VwVHlwZXMiLCJFZGl0TW9kZVN0YW1wIiwiY29uc3RydWN0b3IiLCJlZGl0b3IiLCJzdmdEYXRhIiwic3R5bGVBdHRyaWJ1dGVzIiwiTUFSS1VQX1RZUEVfU1RBTVAiLCJkZWxldGVNYXJrdXAiLCJtYXJrdXAiLCJjYW50VW5kbyIsInNlbGVjdGVkTWFya3VwIiwidHlwZSIsImRlbGV0ZVN0YW1wIiwiYWRkVG9IaXN0b3J5IiwiZXhlY3V0ZSIsIm9uTW91c2VNb3ZlIiwiZXZlbnQiLCJwcm90b3R5cGUiLCJjYWxsIiwiZmluYWwiLCJnZXRGaW5hbE1vdXNlRHJhZ2dpbmdQb3NpdGlvbiIsImNsaWVudFRvTWFya3VwcyIsIngiLCJ5IiwicG9zaXRpb24iLCJmaXJzdFBvc2l0aW9uIiwic2l6ZSIsIk1hdGgiLCJhYnMiLCJhY3Rpb24iLCJvbk1vdXNlRG93biIsIm1vdXNlUG9zaXRpb24iLCJnZXRNb3VzZVBvc2l0aW9uIiwiaW5pdGlhbFgiLCJpbml0aWFsWSIsInNpemVGcm9tQ2xpZW50VG9NYXJrdXBzIiwiYmVnaW5BY3Rpb25Hcm91cCIsIm1hcmt1cElkIiwiZ2V0SWQiLCJzdHlsZSIsImdldE1hcmt1cCIsImNyZWF0aW9uQmVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeStamp.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditModeText.js":
/*!***********************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditModeText.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditModeText: () => (/* binding */ EditModeText)\n/* harmony export */ });\n/* harmony import */ var _EditMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditMode */ \"./extensions/Markup/core/edit-modes/EditMode.js\");\n/* harmony import */ var _edit_actions_DeleteText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../edit-actions/DeleteText */ \"./extensions/Markup/core/edit-actions/DeleteText.js\");\n/* harmony import */ var _edit_actions_DeleteCallout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../edit-actions/DeleteCallout */ \"./extensions/Markup/core/edit-actions/DeleteCallout.js\");\n/* harmony import */ var _edit_actions_CreateText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../edit-actions/CreateText */ \"./extensions/Markup/core/edit-actions/CreateText.js\");\n/* harmony import */ var _edit_actions_SetText__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../edit-actions/SetText */ \"./extensions/Markup/core/edit-actions/SetText.js\");\n/* harmony import */ var _edit_actions_SetSize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../edit-actions/SetSize */ \"./extensions/Markup/core/edit-actions/SetSize.js\");\n/* harmony import */ var _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../edit-actions/SetStyle */ \"./extensions/Markup/core/edit-actions/SetStyle.js\");\n/* harmony import */ var _MarkupTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _MarkupEvents__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _EditorTextInput__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EditorTextInput */ \"./extensions/Markup/core/edit-modes/EditorTextInput.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n *\n * @param editor\n * @constructor\n */\nfunction EditModeText(editor) {\n\n  var styleAttributes = [\n  'font-size',\n  'stroke-color',\n  'stroke-opacity',\n  'fill-color',\n  'fill-opacity',\n  'font-family',\n  'font-style',\n  'font-weight'];\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.call(this, editor, _MarkupTypes__WEBPACK_IMPORTED_MODULE_7__.MARKUP_TYPE_TEXT, styleAttributes);\n\n  var helper = new _EditorTextInput__WEBPACK_IMPORTED_MODULE_9__.EditorTextInput(this.viewer.container, this.editor, false, 'Text', 260);\n  helper.addEventListener(helper.EVENT_TEXT_CHANGE, this.onHelperTextChange.bind(this), false);\n  helper.addEventListener(helper.EVENT_TEXT_SET_ACTIVE, this.onHelperSetActive.bind(this), false);\n  helper.addEventListener(helper.EVENT_TEXT_SET_INACTIVE, this.onHelperSetActive.bind(this), false);\n\n  this.textInputHelper = helper;\n  this.onHistoryChangeBinded = this.onHistoryChange.bind(this);\n  this.minSize = 0; // No need to size it initially\n  this.creationMethod = this.CREATION_METHOD_CLICK;\n}\n\nEditModeText.prototype = Object.create(_EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype);\nEditModeText.prototype.constructor = EditModeText;\n\nvar proto = EditModeText.prototype;\n\nproto.deleteMarkup = function (markup, cantUndo) {\n\n  markup = markup || this.selectedMarkup;\n  if (markup && markup.type == this.type) {\n    var deleteText = new _edit_actions_DeleteText__WEBPACK_IMPORTED_MODULE_1__.DeleteText(this.editor, markup);\n    deleteText.addToHistory = !cantUndo;\n    deleteText.execute();\n    return true;\n  }\n  return false;\n};\n\n/**\n *\n * @param style\n */\nproto.setStyle = function (style) {\n\n  if (this.textInputHelper && this.textInputHelper.isActive()) {\n\n    this.textInputHelper.setStyle(style);\n  } else {\n    _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.setStyle.call(this, style);\n  }\n};\n\nproto.notifyAllowNavigation = function (allows) {\n\n  if (allows && this.textInputHelper && this.textInputHelper.isActive()) {\n    this.textInputHelper.acceptAndExit();\n  }\n};\n\nproto.destroy = function () {\n\n  if (this.textInputHelper) {\n    if (this.textInputHelper.isActive()) {\n      this.textInputHelper.acceptAndExit();\n    }\n    this.textInputHelper.destroy();\n    this.textInputHelper = null;\n  }\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.destroy.call(this);\n};\n\n/**\n * Handler to mouse down events, used to start markups creation.\n */\nproto.onMouseDown = function () {\n\n  if (this.textInputHelper && this.textInputHelper.isActive()) {\n    this.textInputHelper.acceptAndExit();\n    return;\n  }\n\n  if (this.selectedMarkup) {\n    return;\n  }\n\n  var editor = this.editor;\n  var mousePosition = editor.getMousePosition();\n  var clientFontSize = editor.sizeFromMarkupsToClient(0, this.style['font-size']).y;\n  var initialWidth = clientFontSize * 15; // Find better way to initialize size.\n  var initialHeight = clientFontSize * 1;\n\n  // Center position.\n  var size = this.size = editor.sizeFromClientToMarkups(initialWidth, initialHeight);\n  var position = editor.positionFromClientToMarkups(\n    mousePosition.x + initialWidth * 0.5,\n    mousePosition.y + initialHeight * 0.5);\n\n  this.creationBegin();\n  editor.beginActionGroup();\n\n  // Given the initial width and font size, we assume that the text fits in one line.\n  var createText = new _edit_actions_CreateText__WEBPACK_IMPORTED_MODULE_3__.CreateText(\n    editor,\n    editor.getId(),\n    position,\n    size,\n    '',\n    this.style);\n\n  createText.execute();\n  this.creationEnd();\n\n  this.selectedMarkup = editor.getMarkup(createText.targetId);\n  this.textInputHelper && this.textInputHelper.setActive(this.selectedMarkup, true);\n  this.editor.actionManager.addEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_8__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n};\n\nproto.updateTextBoxStyle = function () {\n  if (this.isTextInputHelperActive()) {\n    this.textInputHelper.onCameraChanged();\n  }\n};\n\nproto.onMouseUp = function (event) {\n\n};\n\nproto.onMouseDoubleClick = function (markup) {\n\n  if (markup === this.selectedMarkup) {\n    this.editor.selectMarkup(markup);\n    this.editor.editFrame.setMarkup(markup);\n    this.textInputHelper && this.textInputHelper.setActive(markup, false);\n  }\n};\n\nproto.onHelperSetActive = function (event) {\n  var databag = event.data;\n  var markup = databag.markup;\n  if (markup) {\n    markup.setIsHelperTextActive(databag.isActive);\n    markup.setIsShapeVisible(!databag.isActive);\n  }\n};\n\nproto.onHelperTextChange = function (event) {\n\n  var dataBag = event.data;\n  var textMarkup = dataBag.markup;\n  var textStyle = dataBag.style;\n  var curSelection = this.selectedMarkup;\n\n  this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_8__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n\n  // Deal with edge case first: Creating a Label without text\n  if (dataBag.newText === '') {\n    this.editor.cancelActionGroup();\n\n    var deleteCallout = new _edit_actions_DeleteCallout__WEBPACK_IMPORTED_MODULE_2__.DeleteCallout(this.editor, textMarkup);\n    deleteCallout.execute();\n\n    if (textMarkup !== curSelection) {\n      this.editor.selectMarkup(curSelection);\n    }\n\n    return;\n  }\n\n  // When the text is created for the first time, an action group\n  // is already created and it includes the CreateText action.\n  // Thus, no need to begin another action group.\n  if (!dataBag.firstEdit) {\n    this.editor.beginActionGroup();\n  }\n\n  // Size change action //\n  var position = this.editor.positionFromClientToMarkups(\n    dataBag.newPos.x, dataBag.newPos.y\n  );\n  var size = this.editor.sizeFromClientToMarkups(\n    dataBag.width, dataBag.height\n  );\n  var setSize = new _edit_actions_SetSize__WEBPACK_IMPORTED_MODULE_5__.SetSize(\n    this.editor,\n    textMarkup,\n    position,\n    size.x,\n    size.y);\n  setSize.execute();\n\n  // Text change action //\n  var setText = new _edit_actions_SetText__WEBPACK_IMPORTED_MODULE_4__.SetText(\n    this.editor,\n    textMarkup,\n    textMarkup.position,\n    textMarkup.size,\n    dataBag.newText);\n  setText.execute();\n\n  var setStyle = new _edit_actions_SetStyle__WEBPACK_IMPORTED_MODULE_6__.SetStyle(\n    this.editor,\n    textMarkup,\n    textStyle\n  );\n  setStyle.execute();\n\n  // However, we do need to close the action group at this point. For both cases.\n  this.editor.closeActionGroup();\n  this.editor.selectMarkup(curSelection);\n};\n\n/**\n * We want to make sure that the Input Helper gets removed from the screen\n * whenever the user attempts to perform an undo or redo action.\n * @param {Event} event\n * @private\n */\nproto.onHistoryChange = function (event) {\n\n  if (this.textInputHelper && this.textInputHelper.isActive()) {\n    this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_8__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n    this.textInputHelper.setInactive();\n  }\n};\n\n/**\n * Notify the markup that the displayed markups are being saved so edit mode can finish current editions.\n */\nproto.onSave = function () {\n\n  _EditMode__WEBPACK_IMPORTED_MODULE_0__.EditMode.prototype.onSave.call(this);\n\n  // Close input helper if it's open.\n  if (this.textInputHelper && this.textInputHelper.isActive()) {\n    var firstEdit = this.textInputHelper.firstEdit;\n\n    this.editor.actionManager.removeEventListener(_MarkupEvents__WEBPACK_IMPORTED_MODULE_8__.EVENT_HISTORY_CHANGED, this.onHistoryChangeBinded);\n    this.textInputHelper.setInactive();\n\n    // Close action group if open (first edit).s\n    if (firstEdit) {\n      this.editor.cancelActionGroup();\n    }\n\n    this.editor.selectMarkup(null);\n    this.selectedMarkup = null;\n  }\n};\n\nproto.updateTextBoxStyle = function () {\n  if (this.isTextInputHelperActive()) {\n    this.textInputHelper.onCameraChanged();\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditModeText.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditorTextAutosize.js":
/*!*****************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditorTextAutosize.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autosize: () => (/* binding */ autosize)\n/* harmony export */ });\n\n\n\n/*!\n    Based on Autosize 4.0.0\n    license: MIT\n    http://www.jacklmoore.com/autosize\n*/\nvar map = typeof Map === \"function\" ? new Map() : function () {\n  var keys = [];\n  var values = [];\n\n  return {\n    has: function has(key) {\n      return keys.indexOf(key) > -1;\n    },\n    get: function get(key) {\n      return values[keys.indexOf(key)];\n    },\n    set: function set(key, value) {\n      if (keys.indexOf(key) === -1) {\n        keys.push(key);\n        values.push(value);\n      }\n    },\n    'delete': function _delete(key) {\n      var index = keys.indexOf(key);\n      if (index > -1) {\n        keys.splice(index, 1);\n        values.splice(index, 1);\n      }\n    }\n  };\n}();\n\nvar createEvent = function createEvent(name) {\n  return new Event(name, { bubbles: true });\n};\n\nfunction assign(ta) {\n  if (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n  var heightOffset = null;\n  var clientWidth = ta.clientWidth;\n  var cachedHeight = null;\n\n  const self = this;\n  function init() {\n    const _window = self.getWindow();\n    var style = _window.getComputedStyle(ta, null);\n\n    if (style.resize === 'vertical') {\n      ta.style.resize = 'none';\n    } else if (style.resize === 'both') {\n      ta.style.resize = 'horizontal';\n    }\n\n    if (style.boxSizing === 'content-box') {\n      heightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n    } else {\n      heightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n    }\n    // Fix when a textarea is not on document body and heightOffset is Not a Number\n    if (isNaN(heightOffset)) {\n      heightOffset = 0;\n    }\n\n    update();\n  }\n\n  function changeOverflow(value) {\n    {\n      // Chrome/Safari-specific fix:\n      // When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n      // made available by removing the scrollbar. The following forces the necessary text reflow.\n      var width = ta.style.width;\n      ta.style.width = '0px';\n      // Force reflow:\n      /* jshint ignore:start */\n      ta.offsetWidth;\n      /* jshint ignore:end */\n      ta.style.width = width;\n    }\n\n    ta.style.overflow = value;\n  }\n\n  function getParentOverflows(el) {\n    var arr = [];\n\n    while (el && el.parentNode && el.parentNode instanceof Element) {\n      if (el.parentNode.scrollTop) {\n        arr.push({\n          node: el.parentNode,\n          scrollTop: el.parentNode.scrollTop\n        });\n      }\n      el = el.parentNode;\n    }\n\n    return arr;\n  }\n\n  function resize() {\n    var originalHeight = ta.style.height;\n    var overflows = getParentOverflows(ta);\n    const _document = self.getDocument();\n    var docTop = _document.documentElement && _document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n    ta.style.height = '';\n\n    var endHeight = ta.scrollHeight + heightOffset;\n\n    if (ta.scrollHeight === 0) {\n      // If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n      ta.style.height = originalHeight;\n      return;\n    }\n\n    ta.style.height = endHeight + 'px';\n\n    // used to check if an update is actually necessary on window.resize\n    clientWidth = ta.clientWidth;\n\n    // prevents scroll-position jumping\n    overflows.forEach(function (el) {\n      // This condition is necessary for iOS 11, where you can't assign value to body.scrollTop\n      if (el.node.scrollTop !== el.scrollTop) {\n        el.node.scrollTop = el.scrollTop;\n      }\n    });\n\n    if (docTop) {\n      _document.documentElement.scrollTop = docTop;\n    }\n  }\n\n  function update() {\n    resize();\n\n    const _window = self.getWindow();\n    var styleHeight = Math.round(parseFloat(ta.style.height));\n    var computed = _window.getComputedStyle(ta, null);\n\n    // Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n    var actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n    // The actual height not matching the style height (set via the resize method) indicates that\n    // the max-height has been exceeded, in which case the overflow should be allowed.\n    if (actualHeight !== styleHeight) {\n      if (computed.overflow === 'hidden') {\n        changeOverflow('scroll');\n        resize();\n        actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n      }\n    } else {\n      // Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n      if (computed.overflow !== 'hidden') {\n        changeOverflow('hidden');\n        resize();\n        actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n      }\n    }\n\n    if (cachedHeight !== actualHeight) {\n      cachedHeight = actualHeight;\n      var evt = createEvent('autosize:resized');\n      try {\n        ta.dispatchEvent(evt);\n      } catch (err) {\n\n\n        // Firefox will throw an error on dispatchEvent for a detached element\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n      }}}\n\n  var pageResize = function pageResize() {\n    if (ta.clientWidth !== clientWidth) {\n      update();\n    }\n  };\n\n  var destroy = function (style) {\n    self.removeWindowEventListener('resize', pageResize, false);\n    ta.removeEventListener('input', update, false);\n    ta.removeEventListener('keyup', update, false);\n    ta.removeEventListener('autosize:destroy', destroy, false);\n    ta.removeEventListener('autosize:update', update, false);\n\n    Object.keys(style).forEach(function (key) {\n      ta.style[key] = style[key];\n    });\n\n    map['delete'](ta);\n  }.bind(ta, {\n    height: ta.style.height,\n    resize: ta.style.resize,\n    overflow: ta.style.overflow,\n    overflowX: ta.style.overflowX,\n    wordWrap: ta.style.wordWrap\n  });\n\n  ta.addEventListener('autosize:destroy', destroy, false);\n\n  // IE9 does not fire onpropertychange or oninput for deletions,\n  // so binding to onkeyup to catch most of those events.\n  // There is no way that I know of to detect something like 'cut' in IE9.\n  if ('onpropertychange' in ta && 'oninput' in ta) {\n    ta.addEventListener('keyup', update, false);\n  }\n\n  self.addWindowEventListener('resize', pageResize, false);\n  ta.addEventListener('input', update, false);\n  ta.addEventListener('autosize:update', update, false);\n  ta.style.overflowX = 'hidden';\n  ta.style.wordWrap = 'break-word';\n\n  map.set(ta, {\n    destroy: destroy,\n    update: update\n  });\n\n  init();\n}\n\nfunction destroy(ta) {\n  var methods = map.get(ta);\n  if (methods) {\n    methods.destroy();\n  }\n}\n\nfunction update(ta) {\n  var methods = map.get(ta);\n  if (methods) {\n    methods.update();\n  }\n}\n\nfunction isRuntimeSupported() {\n  // Don't support Node.js and IE8 (or lower)\n  if (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function')\n  return false;\n  return true;\n}\n\nconst RUNTIME_SUPPORTED = isRuntimeSupported();\n\n\nvar autosize = function (el, options) {\n  const self = this;\n  if (RUNTIME_SUPPORTED && el) {\n    Array.prototype.forEach.call(el.length ? el : [el], function (x) {\n      return assign.bind(self)(x, options);\n    });\n  }\n  return el;\n};\n\nautosize.destroy = function (el) {\n  if (RUNTIME_SUPPORTED && el) {\n    Array.prototype.forEach.call(el.length ? el : [el], destroy);\n  }\n  return el;\n};\n\nautosize.update = function (el) {\n  if (RUNTIME_SUPPORTED && el) {\n    Array.prototype.forEach.call(el.length ? el : [el], update);\n  }\n  return el;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditorTextAutosize.js\n");

/***/ }),

/***/ "./extensions/Markup/core/edit-modes/EditorTextInput.js":
/*!**************************************************************!*\
  !*** ./extensions/Markup/core/edit-modes/EditorTextInput.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditorTextInput: () => (/* binding */ EditorTextInput)\n/* harmony export */ });\n/* harmony import */ var _EditorTextAutosize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditorTextAutosize */ \"./extensions/Markup/core/edit-modes/EditorTextAutosize.js\");\n/* harmony import */ var _MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MarkupsCoreUtils */ \"./extensions/Markup/core/MarkupsCoreUtils.js\");\n/* harmony import */ var _StyleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _DomElementStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../DomElementStyle */ \"./extensions/Markup/core/DomElementStyle.js\");\n\n\n\n\n\n\n\nconst av = Autodesk.Viewing;\n\n/**\n * Auxiliary class that handles all input for the Label Markup (MarkupText.js)\n * It instantiates a TEXTAREA where the user can input text. When user input is\n * disabled, the textarea gets hidden and further rendering is delegated to\n * MarkupText.js\n *\n * @param {HTMLElement} parentDiv\n * @param {Object} editor - Core Extension\n * @constructor\n */\nfunction EditorTextInput(parentDiv, editor, singleLine, defaultText, maxLength) {\n\n  this.parentDiv = parentDiv;\n  this.editor = editor;\n  this.setGlobalManager(editor.viewer.globalManager);\n\n  // Constants\n  this.EVENT_TEXT_CHANGE = 'EVENT_CO2_TEXT_CHANGE';\n  this.EVENT_TEXT_SET_ACTIVE = 'EVENT_CO2_TEXT_SET_ACTIVE';\n  this.EVENT_TEXT_SET_INACTIVE = 'EVENT_CO2_TEXT_SET_INACTIVE';\n\n  const _document = this.getDocument();\n  // The actual TextArea input\n  if (singleLine) {\n    this.textArea = _document.createElement('input');\n    this.textArea.setAttribute('type', 'text');\n  } else\n  {\n    this.textArea = _document.createElement('textarea');\n    this.textArea.rows = '1';\n    this.textArea.dir = 'auto';\n  }\n\n  this.firstEdit = true;\n  this.defaultText = defaultText;\n  this.textArea.setAttribute('maxlength', maxLength); // TODO: Make constant? Change value?\n  this.textArea.setAttribute('data-i18n', defaultText);\n  this.startingHeight = 0;\n\n  _EditorTextAutosize__WEBPACK_IMPORTED_MODULE_0__.autosize.bind(this)(this.textArea);\n\n  var ro = new ResizeObserver(function (entries, observer) {\n    this.setEditFrame();\n  }.bind(this));\n\n  ro.observe(this.textArea);\n\n  this.styleTextArea = new _DomElementStyle__WEBPACK_IMPORTED_MODULE_3__.DomElementStyle(); // TODO: Move this to EditMode.\n  this.styleTextArea.\n  setAttribute('position', 'absolute').\n  setAttribute('resize', 'none').\n  setAttribute('box-sizing', 'border-box').\n  setAttribute('-moz-box-sizing', 'border-box').\n  setAttribute('-webkit-box-sizing', 'border-box').\n  setAttribute('overflow', 'hidden').\n  setAttribute('outline', 'none').\n  setAttribute('border', 'none').\n  setAttribute('z-index', '1').\n  setAttribute('padding', '10px');\n\n  // Helper div to measure text width\n  this.measureDiv = _document.createElement('div');\n\n  // Become an event dispatcher\n  (0,_MarkupsCoreUtils__WEBPACK_IMPORTED_MODULE_1__.addTraitEventDispatcher)(this);\n}\n\nav.GlobalManagerMixin.call(EditorTextInput.prototype);\nvar proto = EditorTextInput.prototype;\n\nproto.destroy = function () {\n\n  this.setInactive();\n};\n\n/**\n * Initializes itself given an Label Markup (textMarkup)\n * @param {Object} textMarkup\n * @param {Boolean} firstEdit - Whether the markup is being edited for the first time.\n */\nproto.setActive = function (textMarkup, firstEdit) {\n\n  if (this.textMarkup === textMarkup) {\n    return;\n  }\n\n  var placeholderText = Autodesk.Viewing.i18n.translate(this.defaultText);\n  this.textArea.setAttribute('placeholder', placeholderText);\n\n  this.setInactive();\n  this.parentDiv.appendChild(this.textArea);\n  this.textMarkup = textMarkup;\n  this.firstEdit = firstEdit || false;\n\n  this.constrainToCanvas = firstEdit;\n\n  this.initFromMarkup();\n\n  this.constrainToCanvas = false;\n\n  // On iOS this doesn't work quite well, the keyboard will dismiss after call focus programatically.\n  // http://stackoverflow.com/questions/32407185/wkwebview-cant-open-keyboard-for-input-field\n  if (!Autodesk.Viewing.isIOSDevice()) {\n    // Focus on next frame\n    var txtArea = this.textArea;\n    const _window = this.getWindow();\n    _window.requestAnimationFrame(function () {\n      txtArea.focus();\n    });\n  }\n\n  var dataBag = {\n    markup: this.textMarkup,\n    firstEdit: this.firstEdit,\n    isActive: true\n  };\n  this.dispatchEvent({ type: this.EVENT_TEXT_SET_ACTIVE, data: dataBag });\n};\n\n/**\n * Closes the editor text input and goes back into normal markup edition mode.\n */\nproto.setInactive = function () {\n  var dataBag = {\n    markup: this.textMarkup,\n    isActive: false\n  };\n\n  // In iOS10, the keyboard always show on screen after tap screen out of text\n  // area or save markup to end text edit, call blur to make sure keyboard dismiss.\n  if (Autodesk.Viewing.isIOSDevice())\n  {\n    this.textArea.blur();\n  }\n\n  this.removeWindowEventListener('resize', this.onResizeBinded);\n\n  if (this.textMarkup) {\n    this.textMarkup = null;\n    this.parentDiv.removeChild(this.textArea);\n  }\n  this.style = null;\n\n  this.dispatchEvent({ type: this.EVENT_TEXT_SET_INACTIVE, data: dataBag });\n};\n\nproto.isActive = function () {\n\n  return !!this.textMarkup;\n};\n\nproto.setEditFrame = function () {\n  if (this.editor.editFrame.markup && this.textMarkup && this.editor.editFrame.markup === this.textMarkup) {\n    var frameWidth = parseFloat(this.textArea.style.width);\n    var frameHeight = parseFloat(this.textArea.style.height);\n\n    var position = this.textMarkup.getClientPosition();\n    var rotation = this.textMarkup.getRotation();\n\n    var xPos = position.x - frameWidth / 2;\n    var yPos = position.y - this.startingHeight / 2;\n\n    this.editor.editFrame.setSelection(xPos, yPos, frameWidth, frameHeight, rotation);\n  }\n};\n\n/**\n * Applies Markup styles to TextArea used for editing.\n * It also saves a copy of the style object.\n * @private\n */\nproto.initFromMarkup = function (updateStyleFirst) {\n\n  var markup = this.textMarkup;\n  var position = markup.getClientPosition();\n  var size = markup.getClientSize();\n\n  // Text area padding is relative to the current font size\n  var padding = markup.getClientFontSize() / 2;\n\n  this.startingHeight = size.y;\n\n  var left = position.x - size.x * 0.5;\n  var top = position.y - size.y * 0.5;\n\n  var lineHeightPercentage = markup.lineHeight + \"%\";\n  this.styleTextArea.setAttribute('line-height', lineHeightPercentage);\n  this.styleTextArea.setAttribute('padding', padding + 'px');\n\n  this.setPosAndSize(left, top, size.x, size.y);\n  if (updateStyleFirst) {\n    this.setStyle(markup.getStyle());\n    this.textArea.value = markup.getText();\n  } else {\n    this.textArea.value = markup.getText();\n    this.setStyle(markup.getStyle());\n  }\n};\n\nproto.setPosAndSize = function (left, top, width, height) {\n  if (this.constrainToCanvas) {\n    // Check that it doesn't overflow out of the canvas\n    if (left + width >= this.editor.viewer.container.clientWidth) {\n      left = this.editor.viewer.container.clientWidth - (width + 10);\n    }\n    if (top + height >= this.editor.viewer.container.clientHeight) {\n      top = this.editor.viewer.container.clientHeight - (height + 10);\n    }\n\n    // Make sure text input left side always in the canvas area.\n    // Especially on iPhone6 & iPhone7\n    if (left < 5) {\n      left = 5;\n      width = this.editor.viewer.container.clientWidth - 10;\n    }\n  }\n\n  this.styleTextArea\n  // Size and position\n  .setAttribute('left', left + 'px').\n  setAttribute('top', top + 'px').\n  setAttribute('width', width + 'px').\n  setAttribute('height', height + 'px');\n};\n\nproto.setStyle = function (style) {\n\n  if (this.style) {\n    // An already present style means that the user\n    // has changed the style using the UI buttons.\n    // We need to account for the user having changed the\n    // width/height of the TextArea. Since there is no event\n    // we can detect for it, we do it here.\n    var temp = {};\n    this.injectSizeValues(temp);\n    this.setPosAndSize(\n      temp.newPos.x - temp.width * 0.5,\n      temp.newPos.y - temp.height * 0.5,\n      temp.width, temp.height);\n  }\n  var fontHeight = this.editor.sizeFromMarkupsToClient(0, style['font-size']).y;\n  var strokeWidth = this.editor.sizeFromMarkupsToClient(0, style['stroke-width']).y;\n  var textAreaStyle = this.styleTextArea\n  // Visuals\n  .setAttribute('color', style['stroke-color']).\n  setAttribute('outline', strokeWidth + 'px solid ' + style['stroke-color']).\n  setAttribute('font-family', style['font-family']).\n  setAttribute('font-size', fontHeight + 'px').\n  setAttribute('font-weight', style['font-weight']).\n  setAttribute('font-style', style['font-style']).\n  getStyleString();\n  this.textArea.setAttribute('style', textAreaStyle);\n  this.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(style);\n  _EditorTextAutosize__WEBPACK_IMPORTED_MODULE_0__.autosize.update(this.textArea);\n};\n\n/**\n * Helper function that, for a given markup with some text in it\n * returns an Array of lines in it.\n * @param {Object} markup\n * @returns {{text, lines}|{text: String, lines: Array.<String>}}\n */\nproto.getTextValuesForMarkup = function (markup, sizeUpdateRequired) {\n  var active = this.isActive();\n  var activeMarkup = this.textMarkup;\n  var activeFirstEdit = this.firstEdit;\n\n  this.setActive(markup, false);\n  var textValues = this.getTextValues();\n\n  var dataBag = {\n    markup: markup,\n    textValues: textValues\n  };\n\n  if (active) {\n    this.setActive(activeMarkup, activeFirstEdit);\n  } else {\n    if (sizeUpdateRequired) {\n      this.injectSizeValues(dataBag);\n    }\n\n    this.setInactive();\n  }\n\n  return dataBag;\n};\n\n/**\n * Returns the current text as one string and an array of lines\n * of how the text is being rendered (1 string per line)\n * @returns {{text: String, lines: Array.<String>}}\n */\nproto.getTextValues = function () {\n\n  var newText = this.textArea.value;\n  if (newText === this.defaultText) {\n    newText = '';\n  }\n  return {\n    text: newText,\n    lines: this.generateLines()\n  };\n};\n\n/**\n * Function called by UI\n */\nproto.acceptAndExit = function () {\n\n  // If placeholder text, then remove.\n  var textValues = this.getTextValues();\n  var textMarkup = this.textMarkup;\n\n  var dataBag = {\n    markup: this.textMarkup,\n    style: this.style,\n    firstEdit: this.firstEdit,\n    newText: textValues.text,\n    newLines: textValues.lines\n  };\n  this.injectSizeValues(dataBag);\n\n  this.dispatchEvent({ type: this.EVENT_TEXT_CHANGE, data: dataBag });\n  this.setInactive();\n  textMarkup.updateStyle(true); // Hack: LMV-3628\n};\n\n/**\n * Injects position, width and height of the textarea rect\n * @param {Object} dataBag\n * @private\n */\nproto.injectSizeValues = function (dataBag) {\n\n  // Explicit usage of parseFloat to remove the 'px' suffix.\n  var width = parseFloat(this.textArea.style.width);\n  var height = parseFloat(this.textArea.style.height);\n  var ox = parseFloat(this.textArea.style.left);\n  var oy = parseFloat(this.textArea.style.top);\n\n  dataBag.width = width;\n  dataBag.height = height;\n  dataBag.newPos = {\n    x: ox + width * 0.5,\n    y: oy + height * 0.5\n  };\n};\n\n/**\n * Handler for when the camera moves\n * @param {Object} event - Camera moves event\n * @private\n */\nproto.onCameraChanged = function (event) {\n  var str = this.textArea.value;\n  this.textMarkup.style = (0,_StyleUtils__WEBPACK_IMPORTED_MODULE_2__.cloneStyle)(this.style);\n  this.style = null; // TODO: Revisit this code because style changes are lost by doing this.\n  this.initFromMarkup(true);\n  this.textArea.value = str;\n  this.setEditFrame();\n};\n\n/**\n * Grabs the text content of the textarea and returns\n * an Array of lines.  Wrapped lines are returned as 2 lines.\n */\nproto.generateLines = function () {\n\n  // First, get lines separated by line breaks:\n  var textContent = this.textArea.value;\n  var linesBreaks = textContent.split(/\\r*\\n/);\n\n  var styleMeasureStr = this.styleTextArea.clone().\n  removeAttribute(['top', 'left', 'width', 'height']).\n  setAttribute('position', 'absolute').\n  setAttribute('white-space', 'nowrap').\n  setAttribute('float', 'left').\n  setAttribute('visibility', 'hidden').\n  getStyleString();\n  this.measureDiv.setAttribute('style', styleMeasureStr);\n  this.parentDiv.appendChild(this.measureDiv);\n\n  var maxLineLength = this.textArea.clientWidth - 2 * parseFloat(this.textArea.style.padding);\n\n  // Now check whether the lines are wrapped.\n  // If so, subdivide into other lines.\n  var linesOutput = [];\n\n  for (var i = 0, len = linesBreaks.length; i < len; ++i) {\n    var line = trimRight(linesBreaks[i]);\n\n    // Add a space in an empty line so it appears in the lines output\n    line = line === '' ? ' ' : line;\n    this.splitLine(line, maxLineLength, linesOutput);\n  }\n\n  this.parentDiv.removeChild(this.measureDiv);\n  return linesOutput;\n};\n\n/**\n * Given a String that represents one line of text that is\n * longer than the max length a line is allowed, this method\n * cuts text into several ones that are no longer than the max\n * length.\n *\n * @param {String} text\n * @param {Number} maxLength\n * @param {Array} output\n * @private\n */\nproto.splitLine = function (text, maxLength, output) {\n\n  // End condition\n  if (text === '') {\n    return;\n  }\n\n  var remaining = '';\n  var done = false;\n\n  while (!done) {\n    this.measureDiv.innerText = text;\n    var lineLen = this.measureDiv.clientWidth - 2 * parseFloat(this.measureDiv.style.padding);\n    if (lineLen <= maxLength) {\n      output.push(text);\n      this.splitLine(trimLeft(remaining), maxLength, output);\n      done = true;\n    } else {\n      // Need to try with a shorter word!\n      var parts = this.getShorterLine(text);\n      if (parts.length === 1) {\n        // text is only one word that is way too long.\n        this.splitWord(text, remaining, maxLength, output);\n        done = true;\n      } else {\n        text = parts[0];\n        remaining = parts[1] + remaining;\n      }\n    }\n  }\n};\n\n/**\n * Given a line of text such as \"hi there programmer\", it returns\n * an array with 2 parts: [\"hi there\", \" programmer\"].\n *\n * It accounts for special cases with multi-spaces, such as for\n * \"hi there  two-spaces\" returns [\"hi there\", \"  two-spaces\"]\n *\n * When there is only one word, it returns the whole word:\n * \"JustOneWord\" returns [\"JustOneWord\"] (an array of 1 element)\n *\n * @param {String} line\n * @returns {Array}\n */\nproto.getShorterLine = function (line) {\n\n  // TODO: Account for TABs\n  // Will probably never do unless a bug is reported.\n\n  var iLastSpace = line.lastIndexOf(' ');\n  if (iLastSpace === -1) {\n    return [line]; // This is a single word\n  }\n\n  // Else\n  // Iterate back removing additional spaces (multi spaces)\n  while (line.charAt(iLastSpace - 1) === ' ') {\n    iLastSpace--;\n  }\n\n  var trailingWord = line.substr(iLastSpace); // Contains the spaces\n  var shorterLine = line.substr(0, iLastSpace);\n  return [shorterLine, trailingWord];\n};\n\n/**\n * Given a single word, splits it into multiple lines that fits in maxWidth\n * @param {String} word\n * @param {String} remaining\n * @param {Number} maxLength\n * @param {Array} output\n */\nproto.splitWord = function (word, remaining, maxLength, output) {\n\n  var lenSoFar = 1;\n  var fits = true;\n  while (fits) {\n\n    var part = word.substr(0, lenSoFar);\n    this.measureDiv.innerText = part;\n    var lineLen = this.measureDiv.clientWidth - 2 * parseFloat(this.measureDiv.style.padding);\n\n    if (lineLen > maxLength) {\n\n      if (lenSoFar === 1) {\n        // we can't split 1 character any longer.\n        output.push(part);\n        this.splitWord(word.substr(1), remaining, maxLength, output);\n        return;\n      }\n\n      // It was fine until one less char //\n      var okayWord = word.substr(0, lenSoFar - 1);\n      output.push(okayWord);\n      var extraWord = word.substr(lenSoFar - 1);\n      this.splitLine(extraWord + remaining, maxLength, output);\n      return;\n    }\n\n    // Try one more character\n    lenSoFar++;\n\n    // Check if we are done with all characters\n    if (lenSoFar > word.length) {\n      // Okay it fits\n      output.push(word);\n      return;\n    }\n  }\n};\n\nfunction trimRight(text) {\n  if (text.length === 0) {\n    return \"\";\n  }\n  var lastNonSpace = text.length - 1;\n  for (var i = lastNonSpace; i >= 0; --i) {\n    if (text.charAt(i) !== ' ') {\n      lastNonSpace = i;\n      break;\n    }\n  }\n  return text.substr(0, lastNonSpace + 1);\n}\n\nfunction trimLeft(text) {\n  if (text.length === 0) {\n    return \"\";\n  }\n  var firstNonSpace = 0;\n  for (var i = 0; i < text.length; ++i) {\n    if (text.charAt(i) !== ' ') {\n      firstNonSpace = i;\n      break;\n    }\n  }\n  return text.substr(firstNonSpace);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/Markup/core/edit-modes/EditorTextInput.js\n");

/***/ }),

/***/ "./extensions/Markup/gui/MarkupsGui.js":
/*!*********************************************!*\
  !*** ./extensions/Markup/gui/MarkupsGui.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkupsGui: () => (/* binding */ MarkupsGui)\n/* harmony export */ });\n/* harmony import */ var _core_StyleUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/StyleUtils */ \"./extensions/Markup/core/StyleUtils.js\");\n/* harmony import */ var _core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/MarkupEvents */ \"./extensions/Markup/core/MarkupEvents.js\");\n/* harmony import */ var _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/MarkupTypes */ \"./extensions/Markup/core/MarkupTypes.js\");\n/* harmony import */ var _core_EditModeManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/EditModeManager */ \"./extensions/Markup/core/EditModeManager.js\");\n/* harmony import */ var _MarkupsGui_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MarkupsGui.css */ \"./extensions/Markup/gui/MarkupsGui.css\");\n\n\n\n\n\n // IMPORTANT!!\n\nvar CORE_EXTENSION = 'Autodesk.Viewing.MarkupsCore';\n\nfunction MarkupsGui(viewer, options) {\n  Autodesk.Viewing.Extension.call(this, viewer, options);\n  this.domEvents = [];\n  this.name = 'markup';\n  this.onEditModeEnter = this.onEditModeEnter.bind(this);\n  this.onEditModeLeave = this.onEditModeLeave.bind(this);\n  this.onEditModeChange = this.onEditModeChange.bind(this);\n  this.onMarkupSelected = this.onMarkupSelected.bind(this);\n}\n\nMarkupsGui.prototype = Object.create(Autodesk.Viewing.Extension.prototype);\nMarkupsGui.prototype.constructor = MarkupsGui;\nvar proto = MarkupsGui.prototype;\nvar av = Autodesk.Viewing;\nvar avp = av.Private;\n\nproto.load = function () {\n\n  this.viewer.loadExtension(CORE_EXTENSION).then((coreExt) => {\n\n    this.core = coreExt;\n\n    // Hook into markup core events\n    this.core.addEventListener(_core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_ENTER, this.onEditModeEnter);\n    this.core.addEventListener(_core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_LEAVE, this.onEditModeLeave);\n    this.core.addEventListener(_core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_CHANGED, this.onEditModeChange);\n    this.core.addEventListener(_core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_SELECTED, this.onMarkupSelected);\n  });\n\n  return true;\n};\n\nproto.unload = function () {\n\n  this.deactivate(); // not necessary, but leaves the viewer in an unusable state without it\n  this.unhookAllEvents();\n\n  this.core.removeEventListener(_core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_ENTER, this.onEditModeEnter);\n  this.core.removeEventListener(_core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_LEAVE, this.onEditModeLeave);\n  this.core.removeEventListener(_core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_EDITMODE_CHANGED, this.onEditModeChange);\n  this.core.removeEventListener(_core_MarkupEvents__WEBPACK_IMPORTED_MODULE_1__.EVENT_MARKUP_SELECTED, this.onMarkupSelected);\n\n  this.destroyToolUi();\n  this.destroyToolbarUI();\n  this.core = null;\n\n  return true;\n};\n\nproto.onToolbarCreated = function (toolbar) {\n\n  var self = this;\n\n  this.markupToolButton = new Autodesk.Viewing.UI.Button(\"toolbar-markupTool\");\n  this.markupToolButton.setToolTip(\"Markup\");\n  this.markupToolButton.setIcon(\"adsk-icon-markup\");\n  this.markupToolButton.onClick = function () {\n    // Since the bar will get hidden when closed, there\n    // is no need to track button state (active or not)\n    self.activate();\n  };\n\n  var modelTools = toolbar.getControl(Autodesk.Viewing.TOOLBAR.MODELTOOLSID);\n  if (modelTools) {\n    modelTools.addControl(this.markupToolButton, { index: 0 });\n  }\n};\n\nproto.destroyToolbarUI = function () {\n  if (this.markupToolButton) {\n    var toolbar = this.viewer.getToolbar();\n    if (toolbar) {\n      this.markupToolButton.removeFromParent();\n    }\n    this.markupToolButton = null;\n  }\n};\n\nproto.onEditModeEnter = function () {\n  avp.logger.log('ENTER edit mode');\n  this.showToolsUi();\n};\n\nproto.onEditModeLeave = function () {\n  avp.logger.log('LEAVE edit mode');\n  this.hideToolsUi();\n};\n\nproto.onEditModeChange = function (event) {\n  if (!this.domToolSelect || this.ignoreChangeEvent)\n  return;\n  var editMode = this.core.editMode;\n  var optionList = this.domToolSelect.options;\n  for (var i = 0, len = optionList.length; i < len; i++) {\n    var option = optionList[i];\n    if (option.value === editMode.type) {\n      this.domToolSelect.selectedIndex = i; // doesn't fire event\n      break;\n    }\n  }\n};\n\nproto.onMarkupSelected = function (event) {\n\n  var markup = event.markup;\n  var editMode = this.core.editMode;\n  this.setStylesUi(editMode, markup);\n};\n\nproto.showToolsUi = function () {\n  this.createToolsUi();\n\n  // Hide some UI\n  var canNavigate = this.core.isNavigationAllowed();\n  this.setControlVisibility('.lmv-markup-gui-enterNavMode', canNavigate, 'inline-block');\n  this.exitNavigationMode();\n  this.domContent.style.display = 'block'; // remove collapsed state\n\n  // It's okay if we call these many times in a row, no biggie.\n  this.viewer.container.appendChild(this.domRoot);\n};\n\nproto.hideToolsUi = function () {\n  if (this.domRoot && this.domRoot.parentNode) {\n    this.domRoot.parentNode.removeChild(this.domRoot);\n  }\n};\n\nproto.createToolsUi = function () {\n\n  if (this.domRoot)\n  return;\n\n  function createEditModeOption(locLabel, editModeType) {\n    return [\n    '<option value=\"', editModeType, '\">',\n    locLabel,\n    '</option>'].\n    join('');\n  }\n\n  var html = [\n  '<div class=\"lmv-markup-gui-toolbar-content\">',\n\n  '<button class=\"lmv-markup-gui-collapse-btn\">&lt;-&gt;</button>',\n  '<button class=\"lmv-markup-editmode-done\">Exit</button>',\n  '<div class=\"lmv-markup-gui-collapse-content\">',\n  '<div class=\"lmv-markup-gui-editMode\">',\n  '<button class=\"lmv-markup-gui-enterNavMode\">Navigate</button>',\n  '<button class=\"lmv-markup-gui-undo\">&#8617;</button>',\n  '<button class=\"lmv-markup-gui-redo\">&#8618;</button>',\n  '<br>',\n  '<button class=\"lmv-markup-gui-delete\">Delete</button>',\n  '<button class=\"lmv-markup-gui-duplicate\">Duplicate</button>',\n  '<br>',\n  '<button class=\"lmv-markup-gui-cut\">Cut</button>',\n  '<button class=\"lmv-markup-gui-copy\">Copy</button>',\n  '<button class=\"lmv-markup-gui-paste\">Paste</button>',\n  '<br>',\n  '<span>Markup:</span>', // TODO: Localize\n  '<select class=\"lmv-markup-tool-select\">',\n  createEditModeOption('Arrow', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_ARROW),\n  createEditModeOption('Rectangle', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_RECTANGLE),\n  createEditModeOption('Circle', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_CIRCLE),\n  createEditModeOption('Text', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_TEXT),\n  createEditModeOption('Callout', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_CALLOUT),\n  createEditModeOption('Cloud', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_CLOUD),\n  createEditModeOption('PolyLine', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_POLYLINE),\n  createEditModeOption('Polycloud', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_POLYCLOUD),\n  createEditModeOption('Freehand', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_FREEHAND),\n  createEditModeOption('Highlight', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_HIGHLIGHT),\n  createEditModeOption('Dimension', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_DIMENSION),\n  createEditModeOption('SVG Stamp', _core_MarkupTypes__WEBPACK_IMPORTED_MODULE_2__.MARKUP_TYPE_STAMP),\n  '</select>',\n  '<br>',\n  '<div class=\"lmv-markup-gui-style-options\"></div>',\n  '</div>',\n  '<div class=\"lmv-markup-gui-navMode\" style=\"display:none;\">',\n  '<button class=\"lmv-markup-gui-exitNavMode\">Back to Markup</button>',\n  '</div>',\n  '</div>',\n  '</div>'].\n  join('');\n\n  const _document = this.getDocument();\n  this.domRoot = _document.createElement('div');\n  this.domRoot.className = 'lmv-markup-gui-toolbar';\n  this.domRoot.innerHTML = html;\n\n  this.domContent = this.domRoot.querySelector('.lmv-markup-gui-collapse-content');\n  this.domToolSelect = this.domRoot.querySelector('.lmv-markup-tool-select');\n  this.domStylesRoot = this.domRoot.querySelector('.lmv-markup-gui-style-options');\n\n  // General\n  this.hookEvent('click', '.lmv-markup-gui-collapse-btn', this.onToggleCollapse.bind(this));\n  this.hookEvent('click', '.lmv-markup-editmode-done', this.onEditModeDone.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-enterNavMode', this.enterNavigationMode.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-exitNavMode', this.exitNavigationMode.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-undo', this.onUndoClick.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-redo', this.onRedoClick.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-delete', this.onDeleteClick.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-cut', this.onCutClick.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-copy', this.onCopyClick.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-paste', this.onPasteClick.bind(this));\n  this.hookEvent('click', '.lmv-markup-gui-duplicate', this.onDuplicateClick.bind(this));\n  // Tools\n  this.hookEvent('change', '.lmv-markup-tool-select', this.onSelectEditMode.bind(this));\n  this.hookEvent('change', '.lmv-markup-gui-style-select', this.onStyleChange.bind(this));\n  // Text input fields for tools\n  this.hookEvent('input', '.lmv-markup-gui-style-textarea', this.onStyleChange.bind(this));\n  this.hookEvent('propertychange', '.lmv-markup-gui-style-textarea', this.onStyleChange.bind(this));\n\n  this.setStylesUi(this.core.editMode);\n};\n\nproto.destroyToolUi = function () {\n  if (this.domRoot) {\n    this.hideToolsUi();\n    this.domRoot = null;\n  }\n};\n\nproto.getEditMode = function (editModeType) {\n  var EditModeClass = _core_EditModeManager__WEBPACK_IMPORTED_MODULE_3__.theEditModeManager.getClass(editModeType);\n  if (!EditModeClass)\n  return null;\n\n  var editMode = new EditModeClass(this.core);\n  return editMode;\n};\n\nproto.onToggleCollapse = function () {\n  var curr = this.domContent.style.display;\n  if (curr === 'none')\n  this.domContent.style.display = 'block';else\n\n  this.domContent.style.display = 'none';\n};\n\nproto.onEditModeDone = function () {\n  this.deactivate();\n};\n\nproto.enterNavigationMode = function () {\n  this.core.allowNavigation(true);\n  this.setControlVisibility('.lmv-markup-gui-editMode', false);\n  this.setControlVisibility('.lmv-markup-gui-navMode', true);\n};\nproto.exitNavigationMode = function () {\n  this.core.allowNavigation(false);\n  this.setControlVisibility('.lmv-markup-gui-editMode', true);\n  this.setControlVisibility('.lmv-markup-gui-navMode', false);\n};\n\nproto.onUndoClick = function () {\n  this.core.undo();\n};\nproto.onRedoClick = function () {\n  this.core.redo();\n};\nproto.onDeleteClick = function () {\n  var markup = this.core.getSelection();\n  if (markup) {\n    this.core.deleteMarkup(markup);\n  }\n};\nproto.onCutClick = function () {\n  this.core.cut();\n};\nproto.onCopyClick = function () {\n  this.core.copy();\n};\nproto.onPasteClick = function () {\n  this.core.paste();\n};\nproto.onDuplicateClick = function () {\n  // only when there's a selection\n  var markup = this.core.getSelection();\n  if (markup) {\n    this.core.copy();\n    this.core.paste();\n  }\n};\n\nproto.onSelectEditMode = function (event) {\n  var editModeType = event.target.value;\n  var editMode = this.getEditMode(editModeType);\n  if (!editMode) {\n    avp.logger.error('Markup editMode not found for type: ' + editModeType);\n    return;\n  }\n\n  if (editMode.cancelEditModeChange) {\n    avp.logger.warn('There was a problem selecting current editMode');\n    return;\n  }\n\n  this.ignoreChangeEvent = true;\n  this.core.changeEditMode(editMode);\n  this.ignoreChangeEvent = false;\n  this.setStylesUi(editMode);\n  this.domToolSelect.blur(); // remove focus from UI\n};\n\nproto.onStyleChange = function (event) {\n  var select = event.target;\n  var styleKey = select.getAttribute('style-key');\n  var valueType = select.getAttribute('value-type');\n\n  var markup = this.core.getSelection();\n  var style = markup ? markup.getStyle() : this.core.getStyle();\n\n  // if it's a string input, just take the raw value\n  if (valueType === 'string') {\n    style[styleKey] = select.value;\n  } else {\n    var option = select.options[select.selectedIndex];\n    style[styleKey] = getTypedValue(option.value, valueType);\n    select.blur(); // remove focus from UI\n  }\n  this.core.setStyle(style);\n\n  function getTypedValue(val, type) {\n    if (type === 'number')\n    return Number(val);\n    if (type === 'boolean')\n    return val === 'true';\n    return val;\n  }\n};\n\nproto.setStylesUi = function (editMode, markup) {\n\n  var style = markup ? markup.style : editMode.style;\n  var defaults = (0,_core_StyleUtils__WEBPACK_IMPORTED_MODULE_0__.getStyleDefaultValues)(style, this.core);\n\n  this.domStylesRoot.innerHTML = ''; // flush UI\n  for (var key in defaults) {\n    // Quite inefiient because we are re-creating DOM constantly\n    // Consider optimize if it becomes a problem\n    var domElem = this.getUiForStyleKey(key, defaults[key], style[key]);\n    this.domStylesRoot.appendChild(domElem);\n  }\n};\n\nproto.getUiForStyleKey = function (key, defaults, current) {\n\n  var selectionIndex = defaults.default;\n  var options = [];\n  var values = defaults.values;\n  for (var i = 0, len = values.length; i < len; ++i) {\n    var optLine = [\n    '<option value=\"', values[i].value, '\">',\n    values[i].name,\n    '</option>'].\n    join('');\n    options.push(optLine);\n\n    if (this.valueEquals(values[i].value, current)) {\n      selectionIndex = i;\n    }\n  }\n\n  var valueType = typeof values[0].value;\n\n  // TODO: Build specialized controls for each style-attribute\n  const _document = this.getDocument();\n  var domElem = _document.createElement('div');\n  var html = [];\n  let isText = key.includes('text');\n\n  if (isText) {\n    html = [\n    '<span>', key, '</span>',\n    '<br>',\n    '<textarea class=\"lmv-markup-gui-style-textarea\" style-key=\"', key, '\" value-type=\"', valueType, '\">',\n    current || '',\n    '</textarea>'].\n    join('');\n  } else {\n    html = [\n    '<span>', key, '</span>',\n    '<select class=\"lmv-markup-gui-style-select\" style-key=\"', key, '\" value-type=\"', valueType, '\">',\n    options.join(''),\n    '</select>'].\n    join('');\n  }\n\n  domElem.innerHTML = html;\n\n  if (!isText) {\n    // select index\n    var domSelect = domElem.querySelector('select');\n    domSelect.selectedIndex = selectionIndex;\n  }\n\n  return domElem;\n};\nproto.valueEquals = function (value1, value2) {\n\n  return value1 === value2;\n};\n\nproto.setControlVisibility = function (selector, isVisible, visibleValue) {\n  var elem = this.domRoot.querySelector(selector);\n  if (!visibleValue)\n  visibleValue = 'block';\n  elem.style.display = isVisible ? visibleValue : 'none';\n};\n\nproto.hookEvent = function (eventStr, selector, callbackFn) {\n  var handler = function (event) {\n    if (this.matchesSelector(event.target, selector)) {\n      callbackFn(event);\n    }\n  }.bind(this);\n  this.domRoot.addEventListener(eventStr, handler);\n  this.domEvents.push({ str: eventStr, handler: handler });\n};\n\nproto.unhookAllEvents = function () {\n  var domRoot = this.domRoot;\n  this.domEvents.forEach(function (event) {\n    domRoot.removeEventListener(event.str, event.handler);\n  });\n  this.domEvents = [];\n};\n\nproto.matchesSelector = function (domElem, selector) {\n  if (domElem.matches) return domElem.matches(selector); //Un-prefixed\n  if (domElem.msMatchesSelector) return domElem.msMatchesSelector(selector); //IE\n  if (domElem.mozMatchesSelector) return domElem.mozMatchesSelector(selector); //Firefox (Gecko)\n  if (domElem.webkitMatchesSelector) return domElem.webkitMatchesSelector(selector); // Opera, Safari, Chrome\n  return false;\n};\n\nproto.getStyleOptions = function (editMode) {\n  var style = editMode.getStyle();\n  return (0,_core_StyleUtils__WEBPACK_IMPORTED_MODULE_0__.getStyleDefaultValues)(style, this.core);\n};\n\nproto.activate = function () {\n  if (!this.activeStatus) {\n    this.core.enterEditMode();\n    this.activeStatus = true;\n  }\n  return true;\n};\n\nproto.deactivate = function () {\n  if (this.activeStatus) {\n    this.core.hide();\n    this.activeStatus = false;\n  }\n  return true;\n};\n\n\nAutodesk.Viewing.theExtensionManager.registerExtension('Autodesk.Viewing.MarkupsGui', MarkupsGui);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9ndWkvTWFya3Vwc0d1aS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkQ7QUFDTjtBQUNGO0FBQ1U7O0FBRW5DLENBQUM7O0FBRXZCLElBQUlJLGNBQWMsR0FBRyw4QkFBOEI7O0FBRTVDLFNBQVNDLFVBQVVBLENBQUNDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO0VBQ3hDQyxRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsU0FBUyxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFTCxNQUFNLEVBQUVDLE9BQU8sQ0FBQztFQUN0RCxJQUFJLENBQUNLLFNBQVMsR0FBRyxFQUFFO0VBQ25CLElBQUksQ0FBQ0MsSUFBSSxHQUFHLFFBQVE7RUFDcEIsSUFBSSxDQUFDQyxlQUFlLEdBQUcsSUFBSSxDQUFDQSxlQUFlLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUM7RUFDdEQsSUFBSSxDQUFDQyxlQUFlLEdBQUcsSUFBSSxDQUFDQSxlQUFlLENBQUNELElBQUksQ0FBQyxJQUFJLENBQUM7RUFDdEQsSUFBSSxDQUFDRSxnQkFBZ0IsR0FBRyxJQUFJLENBQUNBLGdCQUFnQixDQUFDRixJQUFJLENBQUMsSUFBSSxDQUFDO0VBQ3hELElBQUksQ0FBQ0csZ0JBQWdCLEdBQUcsSUFBSSxDQUFDQSxnQkFBZ0IsQ0FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQztBQUM1RDs7QUFFQVYsVUFBVSxDQUFDYyxTQUFTLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDYixRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsU0FBUyxDQUFDUyxTQUFTLENBQUM7QUFDMUVkLFVBQVUsQ0FBQ2MsU0FBUyxDQUFDRyxXQUFXLEdBQUdqQixVQUFVO0FBQzdDLElBQUlrQixLQUFLLEdBQUdsQixVQUFVLENBQUNjLFNBQVM7QUFDaEMsSUFBSUssRUFBRSxHQUFHaEIsUUFBUSxDQUFDQyxPQUFPO0FBQ3pCLElBQUlnQixHQUFHLEdBQUdELEVBQUUsQ0FBQ0UsT0FBTzs7QUFFcEJILEtBQUssQ0FBQ0ksSUFBSSxHQUFHLFlBQVk7O0VBRXJCLElBQUksQ0FBQ3JCLE1BQU0sQ0FBQ3NCLGFBQWEsQ0FBQ3hCLGNBQWMsQ0FBQyxDQUFDeUIsSUFBSSxDQUFFLENBQUFDLE9BQU8sS0FBSTs7SUFFdkQsSUFBSSxDQUFDQyxJQUFJLEdBQUdELE9BQU87O0lBRW5CO0lBQ0EsSUFBSSxDQUFDQyxJQUFJLENBQUNDLGdCQUFnQixDQUFDL0Isb0VBQWlDLEVBQUUsSUFBSSxDQUFDYSxlQUFlLENBQUM7SUFDbkYsSUFBSSxDQUFDaUIsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQy9CLG9FQUFpQyxFQUFFLElBQUksQ0FBQ2UsZUFBZSxDQUFDO0lBQ25GLElBQUksQ0FBQ2UsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQy9CLHNFQUFtQyxFQUFFLElBQUksQ0FBQ2dCLGdCQUFnQixDQUFDO0lBQ3RGLElBQUksQ0FBQ2MsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQy9CLHFFQUFrQyxFQUFFLElBQUksQ0FBQ2lCLGdCQUFnQixDQUFDO0VBQ3pGLENBQUMsQ0FBQzs7RUFFRixPQUFPLElBQUk7QUFDZixDQUFDOztBQUVESyxLQUFLLENBQUNjLE1BQU0sR0FBRyxZQUFXOztFQUV0QixJQUFJLENBQUNDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNuQixJQUFJLENBQUNDLGVBQWUsQ0FBQyxDQUFDOztFQUV0QixJQUFJLENBQUNSLElBQUksQ0FBQ1MsbUJBQW1CLENBQUN2QyxvRUFBaUMsRUFBRSxJQUFJLENBQUNhLGVBQWUsQ0FBQztFQUN0RixJQUFJLENBQUNpQixJQUFJLENBQUNTLG1CQUFtQixDQUFDdkMsb0VBQWlDLEVBQUUsSUFBSSxDQUFDZSxlQUFlLENBQUM7RUFDdEYsSUFBSSxDQUFDZSxJQUFJLENBQUNTLG1CQUFtQixDQUFDdkMsc0VBQW1DLEVBQUUsSUFBSSxDQUFDZ0IsZ0JBQWdCLENBQUM7RUFDekYsSUFBSSxDQUFDYyxJQUFJLENBQUNTLG1CQUFtQixDQUFDdkMscUVBQWtDLEVBQUUsSUFBSSxDQUFDaUIsZ0JBQWdCLENBQUM7O0VBRXhGLElBQUksQ0FBQ3VCLGFBQWEsQ0FBQyxDQUFDO0VBQ3BCLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUMsQ0FBQztFQUN2QixJQUFJLENBQUNYLElBQUksR0FBRyxJQUFJOztFQUVoQixPQUFPLElBQUk7QUFDZixDQUFDOztBQUVEUixLQUFLLENBQUNvQixnQkFBZ0IsR0FBRyxVQUFTQyxPQUFPLEVBQUU7O0VBRXZDLElBQUlDLElBQUksR0FBRyxJQUFJOztFQUVmLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUcsSUFBSXRDLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDc0MsRUFBRSxDQUFDQyxNQUFNLENBQUMsb0JBQW9CLENBQUM7RUFDNUUsSUFBSSxDQUFDRixnQkFBZ0IsQ0FBQ0csVUFBVSxDQUFDLFFBQVEsQ0FBQztFQUMxQyxJQUFJLENBQUNILGdCQUFnQixDQUFDSSxPQUFPLENBQUMsa0JBQWtCLENBQUM7RUFDakQsSUFBSSxDQUFDSixnQkFBZ0IsQ0FBQ0ssT0FBTyxHQUFHLFlBQVk7SUFDeEM7SUFDQTtJQUNBTixJQUFJLENBQUNPLFFBQVEsQ0FBQyxDQUFDO0VBQ25CLENBQUM7O0VBRUQsSUFBSUMsVUFBVSxHQUFHVCxPQUFPLENBQUNVLFVBQVUsQ0FBQzlDLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDOEMsT0FBTyxDQUFDQyxZQUFZLENBQUM7RUFDMUUsSUFBSUgsVUFBVSxFQUFFO0lBQ1pBLFVBQVUsQ0FBQ0ksVUFBVSxDQUFDLElBQUksQ0FBQ1gsZ0JBQWdCLEVBQUUsRUFBQ1ksS0FBSyxFQUFDLENBQUMsRUFBQyxDQUFDO0VBQzNEO0FBQ0osQ0FBQzs7QUFFRG5DLEtBQUssQ0FBQ21CLGdCQUFnQixHQUFHLFlBQVc7RUFDaEMsSUFBSSxJQUFJLENBQUNJLGdCQUFnQixFQUFFO0lBQ3ZCLElBQUlGLE9BQU8sR0FBRyxJQUFJLENBQUN0QyxNQUFNLENBQUNxRCxVQUFVLENBQUMsQ0FBQztJQUN0QyxJQUFJZixPQUFPLEVBQUU7TUFDVCxJQUFJLENBQUNFLGdCQUFnQixDQUFDYyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzVDO0lBQ0EsSUFBSSxDQUFDZCxnQkFBZ0IsR0FBRyxJQUFJO0VBQ2hDO0FBQ0osQ0FBQzs7QUFFRHZCLEtBQUssQ0FBQ1QsZUFBZSxHQUFHLFlBQVc7RUFDL0JXLEdBQUcsQ0FBQ29DLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQixDQUFDO0VBQ2pDLElBQUksQ0FBQ0MsV0FBVyxDQUFDLENBQUM7QUFDdEIsQ0FBQzs7QUFFRHhDLEtBQUssQ0FBQ1AsZUFBZSxHQUFHLFlBQVc7RUFDL0JTLEdBQUcsQ0FBQ29DLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQixDQUFDO0VBQ2pDLElBQUksQ0FBQ0UsV0FBVyxDQUFDLENBQUM7QUFDdEIsQ0FBQzs7QUFFRHpDLEtBQUssQ0FBQ04sZ0JBQWdCLEdBQUcsVUFBU2dELEtBQUssRUFBRTtFQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDQyxhQUFhLElBQUksSUFBSSxDQUFDQyxpQkFBaUI7RUFDN0M7RUFDSixJQUFJQyxRQUFRLEdBQUcsSUFBSSxDQUFDckMsSUFBSSxDQUFDcUMsUUFBUTtFQUNqQyxJQUFJQyxVQUFVLEdBQUcsSUFBSSxDQUFDSCxhQUFhLENBQUMzRCxPQUFPO0VBQzNDLEtBQUssSUFBSStELENBQUMsR0FBQyxDQUFDLEVBQUVDLEdBQUcsR0FBQ0YsVUFBVSxDQUFDRyxNQUFNLEVBQUVGLENBQUMsR0FBQ0MsR0FBRyxFQUFFRCxDQUFDLEVBQUUsRUFBRTtJQUM3QyxJQUFJRyxNQUFNLEdBQUdKLFVBQVUsQ0FBQ0MsQ0FBQyxDQUFDO0lBQzFCLElBQUlHLE1BQU0sQ0FBQ0MsS0FBSyxLQUFLTixRQUFRLENBQUNPLElBQUksRUFBRTtNQUNoQyxJQUFJLENBQUNULGFBQWEsQ0FBQ1UsYUFBYSxHQUFHTixDQUFDLENBQUMsQ0FBQztNQUN0QztJQUNKO0VBQ0o7QUFDSixDQUFDOztBQUVEL0MsS0FBSyxDQUFDTCxnQkFBZ0IsR0FBRyxVQUFTK0MsS0FBSyxFQUFFOztFQUVyQyxJQUFJWSxNQUFNLEdBQUdaLEtBQUssQ0FBQ1ksTUFBTTtFQUN6QixJQUFJVCxRQUFRLEdBQUcsSUFBSSxDQUFDckMsSUFBSSxDQUFDcUMsUUFBUTtFQUNqQyxJQUFJLENBQUNVLFdBQVcsQ0FBQ1YsUUFBUSxFQUFFUyxNQUFNLENBQUM7QUFDdEMsQ0FBQzs7QUFFRHRELEtBQUssQ0FBQ3dDLFdBQVcsR0FBRyxZQUFXO0VBQzNCLElBQUksQ0FBQ2dCLGFBQWEsQ0FBQyxDQUFDOztFQUVwQjtFQUNBLElBQUlDLFdBQVcsR0FBRyxJQUFJLENBQUNqRCxJQUFJLENBQUNrRCxtQkFBbUIsQ0FBQyxDQUFDO0VBQ2pELElBQUksQ0FBQ0Msb0JBQW9CLENBQUMsOEJBQThCLEVBQUVGLFdBQVcsRUFBRSxjQUFjLENBQUM7RUFDdEYsSUFBSSxDQUFDRyxrQkFBa0IsQ0FBQyxDQUFDO0VBQ3pCLElBQUksQ0FBQ0MsVUFBVSxDQUFDQyxLQUFLLENBQUNDLE9BQU8sR0FBRyxPQUFPLENBQUMsQ0FBQzs7RUFFekM7RUFDQSxJQUFJLENBQUNoRixNQUFNLENBQUNpRixTQUFTLENBQUNDLFdBQVcsQ0FBQyxJQUFJLENBQUNDLE9BQU8sQ0FBQztBQUNuRCxDQUFDOztBQUVEbEUsS0FBSyxDQUFDeUMsV0FBVyxHQUFHLFlBQVc7RUFDM0IsSUFBSSxJQUFJLENBQUN5QixPQUFPLElBQUksSUFBSSxDQUFDQSxPQUFPLENBQUNDLFVBQVUsRUFBRTtJQUN6QyxJQUFJLENBQUNELE9BQU8sQ0FBQ0MsVUFBVSxDQUFDQyxXQUFXLENBQUMsSUFBSSxDQUFDRixPQUFPLENBQUM7RUFDckQ7QUFDSixDQUFDOztBQUVEbEUsS0FBSyxDQUFDd0QsYUFBYSxHQUFHLFlBQVc7O0VBRTdCLElBQUksSUFBSSxDQUFDVSxPQUFPO0VBQ1o7O0VBRUosU0FBU0csb0JBQW9CQSxDQUFDQyxRQUFRLEVBQUVDLFlBQVksRUFBRTtJQUNsRCxPQUFPO0lBQ0gsaUJBQWlCLEVBQUVBLFlBQVksRUFBRSxJQUFJO0lBQ2pDRCxRQUFRO0lBQ1osV0FBVyxDQUNkO0lBQUNFLElBQUksQ0FBQyxFQUFFLENBQUM7RUFDZDs7RUFFQSxJQUFJQyxJQUFJLEdBQUc7RUFDUCw4Q0FBOEM7O0VBRTFDLGdFQUFnRTtFQUNoRSx3REFBd0Q7RUFDeEQsK0NBQStDO0VBQzNDLHVDQUF1QztFQUNuQywrREFBK0Q7RUFDL0Qsc0RBQXNEO0VBQ3RELHNEQUFzRDtFQUN0RCxNQUFNO0VBQ04sdURBQXVEO0VBQ3ZELDZEQUE2RDtFQUM3RCxNQUFNO0VBQ04saURBQWlEO0VBQ2pELG1EQUFtRDtFQUNuRCxxREFBcUQ7RUFDckQsTUFBTTtFQUNOLHNCQUFzQixFQUFFO0VBQ3hCLHlDQUF5QztFQUNyQ0osb0JBQW9CLENBQUMsT0FBTyxFQUFFMUYsZ0VBQTZCLENBQUM7RUFDNUQwRixvQkFBb0IsQ0FBQyxXQUFXLEVBQUUxRixvRUFBaUMsQ0FBQztFQUNwRTBGLG9CQUFvQixDQUFDLFFBQVEsRUFBRTFGLGlFQUE4QixDQUFDO0VBQzlEMEYsb0JBQW9CLENBQUMsTUFBTSxFQUFFMUYsK0RBQTRCLENBQUM7RUFDMUQwRixvQkFBb0IsQ0FBQyxTQUFTLEVBQUUxRixrRUFBK0IsQ0FBQztFQUNoRTBGLG9CQUFvQixDQUFDLE9BQU8sRUFBRTFGLGdFQUE2QixDQUFDO0VBQzVEMEYsb0JBQW9CLENBQUMsVUFBVSxFQUFFMUYsbUVBQWdDLENBQUM7RUFDbEUwRixvQkFBb0IsQ0FBQyxXQUFXLEVBQUUxRixvRUFBaUMsQ0FBQztFQUNwRTBGLG9CQUFvQixDQUFDLFVBQVUsRUFBRTFGLG1FQUFnQyxDQUFDO0VBQ2xFMEYsb0JBQW9CLENBQUMsV0FBVyxFQUFFMUYsb0VBQWlDLENBQUM7RUFDcEUwRixvQkFBb0IsQ0FBQyxXQUFXLEVBQUUxRixvRUFBaUMsQ0FBQztFQUNwRTBGLG9CQUFvQixDQUFDLFdBQVcsRUFBRTFGLGdFQUE2QixDQUFDO0VBQ3BFLFdBQVc7RUFDWCxNQUFNO0VBQ04sa0RBQWtEO0VBQ3RELFFBQVE7RUFDUiw0REFBNEQ7RUFDeEQsb0VBQW9FO0VBQ3hFLFFBQVE7RUFDWixRQUFRO0VBQ1osUUFBUSxDQUNYO0VBQUM2RixJQUFJLENBQUMsRUFBRSxDQUFDOztFQUVWLE1BQU1jLFNBQVMsR0FBRyxJQUFJLENBQUNDLFdBQVcsQ0FBQyxDQUFDO0VBQ3BDLElBQUksQ0FBQ3JCLE9BQU8sR0FBR29CLFNBQVMsQ0FBQ0UsYUFBYSxDQUFDLEtBQUssQ0FBQztFQUM3QyxJQUFJLENBQUN0QixPQUFPLENBQUN1QixTQUFTLEdBQUcsd0JBQXdCO0VBQ2pELElBQUksQ0FBQ3ZCLE9BQU8sQ0FBQ3dCLFNBQVMsR0FBR2pCLElBQUk7O0VBRTdCLElBQUksQ0FBQ1osVUFBVSxHQUFHLElBQUksQ0FBQ0ssT0FBTyxDQUFDeUIsYUFBYSxDQUFDLGtDQUFrQyxDQUFDO0VBQ2hGLElBQUksQ0FBQ2hELGFBQWEsR0FBRyxJQUFJLENBQUN1QixPQUFPLENBQUN5QixhQUFhLENBQUMseUJBQXlCLENBQUM7RUFDMUUsSUFBSSxDQUFDQyxhQUFhLEdBQUcsSUFBSSxDQUFDMUIsT0FBTyxDQUFDeUIsYUFBYSxDQUFDLCtCQUErQixDQUFDOztFQUVoRjtFQUNBLElBQUksQ0FBQ0UsU0FBUyxDQUFDLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxJQUFJLENBQUNDLGdCQUFnQixDQUFDdEcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQ3pGLElBQUksQ0FBQ3FHLFNBQVMsQ0FBQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsSUFBSSxDQUFDRSxjQUFjLENBQUN2RyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDcEYsSUFBSSxDQUFDcUcsU0FBUyxDQUFDLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxJQUFJLENBQUNHLG1CQUFtQixDQUFDeEcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQzVGLElBQUksQ0FBQ3FHLFNBQVMsQ0FBQyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsSUFBSSxDQUFDakMsa0JBQWtCLENBQUNwRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDMUYsSUFBSSxDQUFDcUcsU0FBUyxDQUFDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxJQUFJLENBQUNJLFdBQVcsQ0FBQ3pHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUM1RSxJQUFJLENBQUNxRyxTQUFTLENBQUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLElBQUksQ0FBQ0ssV0FBVyxDQUFDMUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQzVFLElBQUksQ0FBQ3FHLFNBQVMsQ0FBQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsSUFBSSxDQUFDTSxhQUFhLENBQUMzRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDaEYsSUFBSSxDQUFDcUcsU0FBUyxDQUFDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxJQUFJLENBQUNPLFVBQVUsQ0FBQzVHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUMxRSxJQUFJLENBQUNxRyxTQUFTLENBQUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLElBQUksQ0FBQ1EsV0FBVyxDQUFDN0csSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQzVFLElBQUksQ0FBQ3FHLFNBQVMsQ0FBQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxDQUFDUyxZQUFZLENBQUM5RyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDOUUsSUFBSSxDQUFDcUcsU0FBUyxDQUFDLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxJQUFJLENBQUNVLGdCQUFnQixDQUFDL0csSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQ3RGO0VBQ0EsSUFBSSxDQUFDcUcsU0FBUyxDQUFDLFFBQVEsRUFBRSx5QkFBeUIsRUFBRSxJQUFJLENBQUNXLGdCQUFnQixDQUFDaEgsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQ3JGLElBQUksQ0FBQ3FHLFNBQVMsQ0FBQyxRQUFRLEVBQUUsOEJBQThCLEVBQUUsSUFBSSxDQUFDWSxhQUFhLENBQUNqSCxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDdkY7RUFDQSxJQUFJLENBQUNxRyxTQUFTLENBQUMsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLElBQUksQ0FBQ1ksYUFBYSxDQUFDakgsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQ3hGLElBQUksQ0FBQ3FHLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxnQ0FBZ0MsRUFBRSxJQUFJLENBQUNZLGFBQWEsQ0FBQ2pILElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzs7RUFFakcsSUFBSSxDQUFDK0QsV0FBVyxDQUFDLElBQUksQ0FBQy9DLElBQUksQ0FBQ3FDLFFBQVEsQ0FBQztBQUN4QyxDQUFDOztBQUVEN0MsS0FBSyxDQUFDa0IsYUFBYSxHQUFHLFlBQVc7RUFDN0IsSUFBSSxJQUFJLENBQUNnRCxPQUFPLEVBQUU7SUFDZCxJQUFJLENBQUN6QixXQUFXLENBQUMsQ0FBQztJQUNsQixJQUFJLENBQUN5QixPQUFPLEdBQUcsSUFBSTtFQUN2QjtBQUNKLENBQUM7O0FBRURsRSxLQUFLLENBQUMwRyxXQUFXLEdBQUcsVUFBU25DLFlBQVksRUFBRTtFQUN2QyxJQUFJb0MsYUFBYSxHQUFHL0gscUVBQWtCLENBQUNnSSxRQUFRLENBQUNyQyxZQUFZLENBQUM7RUFDN0QsSUFBSSxDQUFDb0MsYUFBYTtFQUNkLE9BQU8sSUFBSTs7RUFFZixJQUFJOUQsUUFBUSxHQUFHLElBQUk4RCxhQUFhLENBQUMsSUFBSSxDQUFDbkcsSUFBSSxDQUFDO0VBQzNDLE9BQU9xQyxRQUFRO0FBQ25CLENBQUM7O0FBRUQ3QyxLQUFLLENBQUM4RixnQkFBZ0IsR0FBRyxZQUFXO0VBQ2hDLElBQUllLElBQUksR0FBRyxJQUFJLENBQUNoRCxVQUFVLENBQUNDLEtBQUssQ0FBQ0MsT0FBTztFQUN4QyxJQUFJOEMsSUFBSSxLQUFLLE1BQU07RUFDZixJQUFJLENBQUNoRCxVQUFVLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE9BQU8sQ0FBQzs7RUFFeEMsSUFBSSxDQUFDRixVQUFVLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07QUFDOUMsQ0FBQzs7QUFFRC9ELEtBQUssQ0FBQytGLGNBQWMsR0FBRyxZQUFXO0VBQzlCLElBQUksQ0FBQ2hGLFVBQVUsQ0FBQyxDQUFDO0FBQ3JCLENBQUM7O0FBRURmLEtBQUssQ0FBQ2dHLG1CQUFtQixHQUFHLFlBQVc7RUFDbkMsSUFBSSxDQUFDeEYsSUFBSSxDQUFDc0csZUFBZSxDQUFDLElBQUksQ0FBQztFQUMvQixJQUFJLENBQUNuRCxvQkFBb0IsQ0FBQywwQkFBMEIsRUFBRSxLQUFLLENBQUM7RUFDNUQsSUFBSSxDQUFDQSxvQkFBb0IsQ0FBQyx5QkFBeUIsRUFBRSxJQUFJLENBQUM7QUFDOUQsQ0FBQztBQUNEM0QsS0FBSyxDQUFDNEQsa0JBQWtCLEdBQUcsWUFBVztFQUNsQyxJQUFJLENBQUNwRCxJQUFJLENBQUNzRyxlQUFlLENBQUMsS0FBSyxDQUFDO0VBQ2hDLElBQUksQ0FBQ25ELG9CQUFvQixDQUFDLDBCQUEwQixFQUFFLElBQUksQ0FBQztFQUMzRCxJQUFJLENBQUNBLG9CQUFvQixDQUFDLHlCQUF5QixFQUFFLEtBQUssQ0FBQztBQUMvRCxDQUFDOztBQUVEM0QsS0FBSyxDQUFDaUcsV0FBVyxHQUFHLFlBQVc7RUFDM0IsSUFBSSxDQUFDekYsSUFBSSxDQUFDdUcsSUFBSSxDQUFDLENBQUM7QUFDcEIsQ0FBQztBQUNEL0csS0FBSyxDQUFDa0csV0FBVyxHQUFHLFlBQVc7RUFDM0IsSUFBSSxDQUFDMUYsSUFBSSxDQUFDd0csSUFBSSxDQUFDLENBQUM7QUFDcEIsQ0FBQztBQUNEaEgsS0FBSyxDQUFDbUcsYUFBYSxHQUFHLFlBQVc7RUFDN0IsSUFBSTdDLE1BQU0sR0FBRyxJQUFJLENBQUM5QyxJQUFJLENBQUN5RyxZQUFZLENBQUMsQ0FBQztFQUNyQyxJQUFJM0QsTUFBTSxFQUFFO0lBQ1IsSUFBSSxDQUFDOUMsSUFBSSxDQUFDMEcsWUFBWSxDQUFDNUQsTUFBTSxDQUFDO0VBQ2xDO0FBQ0osQ0FBQztBQUNEdEQsS0FBSyxDQUFDb0csVUFBVSxHQUFHLFlBQVc7RUFDMUIsSUFBSSxDQUFDNUYsSUFBSSxDQUFDMkcsR0FBRyxDQUFDLENBQUM7QUFDbkIsQ0FBQztBQUNEbkgsS0FBSyxDQUFDcUcsV0FBVyxHQUFHLFlBQVc7RUFDM0IsSUFBSSxDQUFDN0YsSUFBSSxDQUFDNEcsSUFBSSxDQUFDLENBQUM7QUFDcEIsQ0FBQztBQUNEcEgsS0FBSyxDQUFDc0csWUFBWSxHQUFHLFlBQVc7RUFDNUIsSUFBSSxDQUFDOUYsSUFBSSxDQUFDNkcsS0FBSyxDQUFDLENBQUM7QUFDckIsQ0FBQztBQUNEckgsS0FBSyxDQUFDdUcsZ0JBQWdCLEdBQUcsWUFBVztFQUNoQztFQUNBLElBQUlqRCxNQUFNLEdBQUcsSUFBSSxDQUFDOUMsSUFBSSxDQUFDeUcsWUFBWSxDQUFDLENBQUM7RUFDckMsSUFBSTNELE1BQU0sRUFBRTtJQUNSLElBQUksQ0FBQzlDLElBQUksQ0FBQzRHLElBQUksQ0FBQyxDQUFDO0lBQ2hCLElBQUksQ0FBQzVHLElBQUksQ0FBQzZHLEtBQUssQ0FBQyxDQUFDO0VBQ3JCO0FBQ0osQ0FBQzs7QUFFRHJILEtBQUssQ0FBQ3dHLGdCQUFnQixHQUFHLFVBQVM5RCxLQUFLLEVBQUU7RUFDckMsSUFBSTZCLFlBQVksR0FBRzdCLEtBQUssQ0FBQzRFLE1BQU0sQ0FBQ25FLEtBQUs7RUFDckMsSUFBSU4sUUFBUSxHQUFHLElBQUksQ0FBQzZELFdBQVcsQ0FBQ25DLFlBQVksQ0FBQztFQUM3QyxJQUFJLENBQUMxQixRQUFRLEVBQUU7SUFDWDNDLEdBQUcsQ0FBQ29DLE1BQU0sQ0FBQ2lGLEtBQUssQ0FBQyxzQ0FBc0MsR0FBR2hELFlBQVksQ0FBQztJQUN2RTtFQUNKOztFQUVBLElBQUkxQixRQUFRLENBQUMyRSxvQkFBb0IsRUFBRTtJQUMvQnRILEdBQUcsQ0FBQ29DLE1BQU0sQ0FBQ21GLElBQUksQ0FBQyxnREFBZ0QsQ0FBQztJQUNqRTtFQUNKOztFQUVBLElBQUksQ0FBQzdFLGlCQUFpQixHQUFHLElBQUk7RUFDN0IsSUFBSSxDQUFDcEMsSUFBSSxDQUFDa0gsY0FBYyxDQUFDN0UsUUFBUSxDQUFDO0VBQ2xDLElBQUksQ0FBQ0QsaUJBQWlCLEdBQUcsS0FBSztFQUM5QixJQUFJLENBQUNXLFdBQVcsQ0FBQ1YsUUFBUSxDQUFDO0VBQzFCLElBQUksQ0FBQ0YsYUFBYSxDQUFDZ0YsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9CLENBQUM7O0FBRUQzSCxLQUFLLENBQUN5RyxhQUFhLEdBQUcsVUFBUy9ELEtBQUssRUFBRTtFQUNsQyxJQUFJa0YsTUFBTSxHQUFHbEYsS0FBSyxDQUFDNEUsTUFBTTtFQUN6QixJQUFJTyxRQUFRLEdBQUdELE1BQU0sQ0FBQ0UsWUFBWSxDQUFDLFdBQVcsQ0FBQztFQUMvQyxJQUFJQyxTQUFTLEdBQUdILE1BQU0sQ0FBQ0UsWUFBWSxDQUFDLFlBQVksQ0FBQzs7RUFFakQsSUFBSXhFLE1BQU0sR0FBRyxJQUFJLENBQUM5QyxJQUFJLENBQUN5RyxZQUFZLENBQUMsQ0FBQztFQUNyQyxJQUFJbkQsS0FBSyxHQUFHUixNQUFNLEdBQUdBLE1BQU0sQ0FBQzBFLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDeEgsSUFBSSxDQUFDd0gsUUFBUSxDQUFDLENBQUM7O0VBRTdEO0VBQ0EsSUFBSUQsU0FBUyxLQUFLLFFBQVEsRUFBRTtJQUN4QmpFLEtBQUssQ0FBQytELFFBQVEsQ0FBQyxHQUFHRCxNQUFNLENBQUN6RSxLQUFLO0VBQ2xDLENBQUMsTUFBTTtJQUNILElBQUlELE1BQU0sR0FBRzBFLE1BQU0sQ0FBQzVJLE9BQU8sQ0FBQzRJLE1BQU0sQ0FBQ3ZFLGFBQWEsQ0FBQztJQUNqRFMsS0FBSyxDQUFDK0QsUUFBUSxDQUFDLEdBQUdJLGFBQWEsQ0FBQy9FLE1BQU0sQ0FBQ0MsS0FBSyxFQUFFNEUsU0FBUyxDQUFDO0lBQ3hESCxNQUFNLENBQUNELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNuQjtFQUNBLElBQUksQ0FBQ25ILElBQUksQ0FBQzBILFFBQVEsQ0FBQ3BFLEtBQUssQ0FBQzs7RUFFekIsU0FBU21FLGFBQWFBLENBQUNFLEdBQUcsRUFBRS9FLElBQUksRUFBRTtJQUM5QixJQUFJQSxJQUFJLEtBQUssUUFBUTtJQUNqQixPQUFPZ0YsTUFBTSxDQUFDRCxHQUFHLENBQUM7SUFDdEIsSUFBSS9FLElBQUksS0FBSyxTQUFTO0lBQ2xCLE9BQU8rRSxHQUFHLEtBQUssTUFBTTtJQUN6QixPQUFPQSxHQUFHO0VBQ2Q7QUFDSixDQUFDOztBQUVEbkksS0FBSyxDQUFDdUQsV0FBVyxHQUFHLFVBQVNWLFFBQVEsRUFBRVMsTUFBTSxFQUFFOztFQUUzQyxJQUFJUSxLQUFLLEdBQUdSLE1BQU0sR0FBR0EsTUFBTSxDQUFDUSxLQUFLLEdBQUdqQixRQUFRLENBQUNpQixLQUFLO0VBQ2xELElBQUl1RSxRQUFRLEdBQUc1Six1RUFBcUIsQ0FBQ3FGLEtBQUssRUFBRSxJQUFJLENBQUN0RCxJQUFJLENBQUM7O0VBRXRELElBQUksQ0FBQ29GLGFBQWEsQ0FBQ0YsU0FBUyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0VBQ25DLEtBQUssSUFBSTRDLEdBQUcsSUFBSUQsUUFBUSxFQUFFO0lBQ3RCO0lBQ0E7SUFDQSxJQUFJRSxPQUFPLEdBQUcsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQ0YsR0FBRyxFQUFFRCxRQUFRLENBQUNDLEdBQUcsQ0FBQyxFQUFFeEUsS0FBSyxDQUFDd0UsR0FBRyxDQUFDLENBQUM7SUFDbkUsSUFBSSxDQUFDMUMsYUFBYSxDQUFDM0IsV0FBVyxDQUFDc0UsT0FBTyxDQUFDO0VBQzNDO0FBQ0osQ0FBQzs7QUFFRHZJLEtBQUssQ0FBQ3dJLGdCQUFnQixHQUFHLFVBQVNGLEdBQUcsRUFBRUQsUUFBUSxFQUFFSSxPQUFPLEVBQUU7O0VBRXRELElBQUlDLGNBQWMsR0FBR0wsUUFBUSxDQUFDTSxPQUFPO0VBQ3JDLElBQUkzSixPQUFPLEdBQUcsRUFBRTtFQUNoQixJQUFJNEosTUFBTSxHQUFHUCxRQUFRLENBQUNPLE1BQU07RUFDNUIsS0FBSyxJQUFJN0YsQ0FBQyxHQUFDLENBQUMsRUFBRUMsR0FBRyxHQUFDNEYsTUFBTSxDQUFDM0YsTUFBTSxFQUFFRixDQUFDLEdBQUNDLEdBQUcsRUFBRSxFQUFFRCxDQUFDLEVBQUU7SUFDekMsSUFBSThGLE9BQU8sR0FBRztJQUNWLGlCQUFpQixFQUFFRCxNQUFNLENBQUM3RixDQUFDLENBQUMsQ0FBQ0ksS0FBSyxFQUFDLElBQUk7SUFDbkN5RixNQUFNLENBQUM3RixDQUFDLENBQUMsQ0FBQ3pELElBQUk7SUFDbEIsV0FBVyxDQUNkO0lBQUNrRixJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ1Z4RixPQUFPLENBQUM4SixJQUFJLENBQUNELE9BQU8sQ0FBQzs7SUFFckIsSUFBSSxJQUFJLENBQUNFLFdBQVcsQ0FBQ0gsTUFBTSxDQUFDN0YsQ0FBQyxDQUFDLENBQUNJLEtBQUssRUFBRXNGLE9BQU8sQ0FBQyxFQUFFO01BQzVDQyxjQUFjLEdBQUczRixDQUFDO0lBQ3RCO0VBQ0o7O0VBRUEsSUFBSWdGLFNBQVMsR0FBRyxPQUFPYSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUN6RixLQUFLOztFQUV0QztFQUNBLE1BQU1tQyxTQUFTLEdBQUcsSUFBSSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUNwQyxJQUFJZ0QsT0FBTyxHQUFHakQsU0FBUyxDQUFDRSxhQUFhLENBQUMsS0FBSyxDQUFDO0VBQzVDLElBQUlmLElBQUksR0FBRyxFQUFFO0VBQ2IsSUFBSXVFLE1BQU0sR0FBR1YsR0FBRyxDQUFDVyxRQUFRLENBQUMsTUFBTSxDQUFDOztFQUVqQyxJQUFJRCxNQUFNLEVBQUU7SUFDUnZFLElBQUksR0FBRztJQUNILFFBQVEsRUFBQzZELEdBQUcsRUFBQyxTQUFTO0lBQ3RCLE1BQU07SUFDTiw2REFBNkQsRUFBRUEsR0FBRyxFQUFFLGdCQUFnQixFQUFFUCxTQUFTLEVBQUMsSUFBSTtJQUNuR1UsT0FBTyxJQUFJLEVBQUU7SUFDZCxhQUFhLENBQ2hCO0lBQUNqRSxJQUFJLENBQUMsRUFBRSxDQUFDO0VBQ2QsQ0FBQyxNQUFNO0lBQ0hDLElBQUksR0FBRztJQUNILFFBQVEsRUFBQzZELEdBQUcsRUFBQyxTQUFTO0lBQ3RCLHlEQUF5RCxFQUFFQSxHQUFHLEVBQUUsZ0JBQWdCLEVBQUVQLFNBQVMsRUFBQyxJQUFJO0lBQzVGL0ksT0FBTyxDQUFDd0YsSUFBSSxDQUFDLEVBQUUsQ0FBQztJQUNwQixXQUFXLENBQ2Q7SUFBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQztFQUNkOztFQUVBK0QsT0FBTyxDQUFDN0MsU0FBUyxHQUFHakIsSUFBSTs7RUFFeEIsSUFBSSxDQUFDdUUsTUFBTSxFQUFFO0lBQ1Q7SUFDQSxJQUFJRSxTQUFTLEdBQUdYLE9BQU8sQ0FBQzVDLGFBQWEsQ0FBQyxRQUFRLENBQUM7SUFDL0N1RCxTQUFTLENBQUM3RixhQUFhLEdBQUdxRixjQUFjO0VBQzVDOztFQUVBLE9BQU9ILE9BQU87QUFDbEIsQ0FBQztBQUNEdkksS0FBSyxDQUFDK0ksV0FBVyxHQUFHLFVBQVNJLE1BQU0sRUFBRUMsTUFBTSxFQUFFOztFQUV6QyxPQUFPRCxNQUFNLEtBQUtDLE1BQU07QUFDNUIsQ0FBQzs7QUFFRHBKLEtBQUssQ0FBQzJELG9CQUFvQixHQUFHLFVBQVMwRixRQUFRLEVBQUVDLFNBQVMsRUFBRUMsWUFBWSxFQUFFO0VBQ3JFLElBQUlDLElBQUksR0FBRyxJQUFJLENBQUN0RixPQUFPLENBQUN5QixhQUFhLENBQUMwRCxRQUFRLENBQUM7RUFDL0MsSUFBSSxDQUFDRSxZQUFZO0VBQ2JBLFlBQVksR0FBRyxPQUFPO0VBQzFCQyxJQUFJLENBQUMxRixLQUFLLENBQUNDLE9BQU8sR0FBR3VGLFNBQVMsR0FBR0MsWUFBWSxHQUFHLE1BQU07QUFDMUQsQ0FBQzs7QUFFRHZKLEtBQUssQ0FBQzZGLFNBQVMsR0FBRyxVQUFTNEQsUUFBUSxFQUFFSixRQUFRLEVBQUVLLFVBQVUsRUFBRTtFQUN2RCxJQUFJQyxPQUFPLEdBQUcsVUFBU2pILEtBQUssRUFBQztJQUN6QixJQUFJLElBQUksQ0FBQ2tILGVBQWUsQ0FBQ2xILEtBQUssQ0FBQzRFLE1BQU0sRUFBRStCLFFBQVEsQ0FBQyxFQUFDO01BQzdDSyxVQUFVLENBQUNoSCxLQUFLLENBQUM7SUFDckI7RUFDSixDQUFDLENBQUNsRCxJQUFJLENBQUMsSUFBSSxDQUFDO0VBQ1osSUFBSSxDQUFDMEUsT0FBTyxDQUFDekQsZ0JBQWdCLENBQUNnSixRQUFRLEVBQUVFLE9BQU8sQ0FBQztFQUNoRCxJQUFJLENBQUN0SyxTQUFTLENBQUN5SixJQUFJLENBQUMsRUFBQ2UsR0FBRyxFQUFFSixRQUFRLEVBQUVFLE9BQU8sRUFBRUEsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUMzRCxDQUFDOztBQUVEM0osS0FBSyxDQUFDZ0IsZUFBZSxHQUFHLFlBQVc7RUFDL0IsSUFBSWtELE9BQU8sR0FBRyxJQUFJLENBQUNBLE9BQU87RUFDMUIsSUFBSSxDQUFDN0UsU0FBUyxDQUFDeUssT0FBTyxDQUFDLFVBQVNwSCxLQUFLLEVBQUU7SUFDbkN3QixPQUFPLENBQUNqRCxtQkFBbUIsQ0FBQ3lCLEtBQUssQ0FBQ21ILEdBQUcsRUFBRW5ILEtBQUssQ0FBQ2lILE9BQU8sQ0FBQztFQUN6RCxDQUFDLENBQUM7RUFDRixJQUFJLENBQUN0SyxTQUFTLEdBQUcsRUFBRTtBQUN2QixDQUFDOztBQUVEVyxLQUFLLENBQUM0SixlQUFlLEdBQUcsVUFBU3JCLE9BQU8sRUFBRWMsUUFBUSxFQUFFO0VBQ2hELElBQUlkLE9BQU8sQ0FBQ3dCLE9BQU8sRUFBRSxPQUFPeEIsT0FBTyxDQUFDd0IsT0FBTyxDQUFDVixRQUFRLENBQUMsQ0FBQyxDQUFDO0VBQ3ZELElBQUlkLE9BQU8sQ0FBQ3lCLGlCQUFpQixFQUFFLE9BQU96QixPQUFPLENBQUN5QixpQkFBaUIsQ0FBQ1gsUUFBUSxDQUFDLENBQUMsQ0FBRTtFQUM1RSxJQUFJZCxPQUFPLENBQUMwQixrQkFBa0IsRUFBRSxPQUFPMUIsT0FBTyxDQUFDMEIsa0JBQWtCLENBQUNaLFFBQVEsQ0FBQyxDQUFDLENBQUM7RUFDN0UsSUFBSWQsT0FBTyxDQUFDMkIscUJBQXFCLEVBQUUsT0FBTzNCLE9BQU8sQ0FBQzJCLHFCQUFxQixDQUFDYixRQUFRLENBQUMsQ0FBQyxDQUFDO0VBQ25GLE9BQU8sS0FBSztBQUNoQixDQUFDOztBQUVEckosS0FBSyxDQUFDbUssZUFBZSxHQUFHLFVBQVN0SCxRQUFRLEVBQUU7RUFDdkMsSUFBSWlCLEtBQUssR0FBR2pCLFFBQVEsQ0FBQ21GLFFBQVEsQ0FBQyxDQUFDO0VBQy9CLE9BQU92Six1RUFBcUIsQ0FBQ3FGLEtBQUssRUFBRSxJQUFJLENBQUN0RCxJQUFJLENBQUM7QUFDbEQsQ0FBQzs7QUFFRFIsS0FBSyxDQUFDNkIsUUFBUSxHQUFHLFlBQVk7RUFDekIsSUFBRyxDQUFDLElBQUksQ0FBQ3VJLFlBQVksRUFBRTtJQUNuQixJQUFJLENBQUM1SixJQUFJLENBQUM2SixhQUFhLENBQUMsQ0FBQztJQUN6QixJQUFJLENBQUNELFlBQVksR0FBRyxJQUFJO0VBQzVCO0VBQ0EsT0FBTyxJQUFJO0FBQ2YsQ0FBQzs7QUFFRHBLLEtBQUssQ0FBQ2UsVUFBVSxHQUFHLFlBQVk7RUFDM0IsSUFBRyxJQUFJLENBQUNxSixZQUFZLEVBQUU7SUFDbEIsSUFBSSxDQUFDNUosSUFBSSxDQUFDOEosSUFBSSxDQUFDLENBQUM7SUFDaEIsSUFBSSxDQUFDRixZQUFZLEdBQUcsS0FBSztFQUM3QjtFQUNBLE9BQU8sSUFBSTtBQUNmLENBQUM7OztBQUdEbkwsUUFBUSxDQUFDQyxPQUFPLENBQUNxTCxtQkFBbUIsQ0FBQ0MsaUJBQWlCLENBQUMsNkJBQTZCLEVBQUUxTCxVQUFVLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvZ3VpL01hcmt1cHNHdWkuanM/NjlhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRTdHlsZURlZmF1bHRWYWx1ZXMgfSBmcm9tICcuLi9jb3JlL1N0eWxlVXRpbHMnO1xuaW1wb3J0ICogYXMgTWFya3VwRXZlbnRzIGZyb20gJy4uL2NvcmUvTWFya3VwRXZlbnRzJztcbmltcG9ydCAqIGFzIE1hcmt1cFR5cGVzIGZyb20gJy4uL2NvcmUvTWFya3VwVHlwZXMnO1xuaW1wb3J0IHsgdGhlRWRpdE1vZGVNYW5hZ2VyIH0gZnJvbSAnLi4vY29yZS9FZGl0TW9kZU1hbmFnZXInO1xuXG5pbXBvcnQgJy4vTWFya3Vwc0d1aS5jc3MnOyAvLyBJTVBPUlRBTlQhIVxuXG4gICAgdmFyIENPUkVfRVhURU5TSU9OID0gJ0F1dG9kZXNrLlZpZXdpbmcuTWFya3Vwc0NvcmUnO1xuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIE1hcmt1cHNHdWkodmlld2VyLCBvcHRpb25zKSB7XG4gICAgICAgIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9uLmNhbGwodGhpcywgdmlld2VyLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5kb21FdmVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ21hcmt1cCc7XG4gICAgICAgIHRoaXMub25FZGl0TW9kZUVudGVyID0gdGhpcy5vbkVkaXRNb2RlRW50ZXIuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5vbkVkaXRNb2RlTGVhdmUgPSB0aGlzLm9uRWRpdE1vZGVMZWF2ZS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLm9uRWRpdE1vZGVDaGFuZ2UgPSB0aGlzLm9uRWRpdE1vZGVDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5vbk1hcmt1cFNlbGVjdGVkID0gdGhpcy5vbk1hcmt1cFNlbGVjdGVkLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgTWFya3Vwc0d1aS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9uLnByb3RvdHlwZSk7XG4gICAgTWFya3Vwc0d1aS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBNYXJrdXBzR3VpO1xuICAgIHZhciBwcm90byA9IE1hcmt1cHNHdWkucHJvdG90eXBlO1xuICAgIHZhciBhdiA9IEF1dG9kZXNrLlZpZXdpbmc7XG4gICAgdmFyIGF2cCA9IGF2LlByaXZhdGU7XG5cbiAgICBwcm90by5sb2FkID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHRoaXMudmlld2VyLmxvYWRFeHRlbnNpb24oQ09SRV9FWFRFTlNJT04pLnRoZW4oIGNvcmVFeHQgPT4ge1xuXG4gICAgICAgICAgICB0aGlzLmNvcmUgPSBjb3JlRXh0O1xuXG4gICAgICAgICAgICAvLyBIb29rIGludG8gbWFya3VwIGNvcmUgZXZlbnRzXG4gICAgICAgICAgICB0aGlzLmNvcmUuYWRkRXZlbnRMaXN0ZW5lcihNYXJrdXBFdmVudHMuRVZFTlRfRURJVE1PREVfRU5URVIsIHRoaXMub25FZGl0TW9kZUVudGVyKTtcbiAgICAgICAgICAgIHRoaXMuY29yZS5hZGRFdmVudExpc3RlbmVyKE1hcmt1cEV2ZW50cy5FVkVOVF9FRElUTU9ERV9MRUFWRSwgdGhpcy5vbkVkaXRNb2RlTGVhdmUpO1xuICAgICAgICAgICAgdGhpcy5jb3JlLmFkZEV2ZW50TGlzdGVuZXIoTWFya3VwRXZlbnRzLkVWRU5UX0VESVRNT0RFX0NIQU5HRUQsIHRoaXMub25FZGl0TW9kZUNoYW5nZSk7XG4gICAgICAgICAgICB0aGlzLmNvcmUuYWRkRXZlbnRMaXN0ZW5lcihNYXJrdXBFdmVudHMuRVZFTlRfTUFSS1VQX1NFTEVDVEVELCB0aGlzLm9uTWFya3VwU2VsZWN0ZWQpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuXG4gICAgcHJvdG8udW5sb2FkID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5kZWFjdGl2YXRlKCk7IC8vIG5vdCBuZWNlc3NhcnksIGJ1dCBsZWF2ZXMgdGhlIHZpZXdlciBpbiBhbiB1bnVzYWJsZSBzdGF0ZSB3aXRob3V0IGl0XG4gICAgICAgIHRoaXMudW5ob29rQWxsRXZlbnRzKCk7XG5cbiAgICAgICAgdGhpcy5jb3JlLnJlbW92ZUV2ZW50TGlzdGVuZXIoTWFya3VwRXZlbnRzLkVWRU5UX0VESVRNT0RFX0VOVEVSLCB0aGlzLm9uRWRpdE1vZGVFbnRlcik7XG4gICAgICAgIHRoaXMuY29yZS5yZW1vdmVFdmVudExpc3RlbmVyKE1hcmt1cEV2ZW50cy5FVkVOVF9FRElUTU9ERV9MRUFWRSwgdGhpcy5vbkVkaXRNb2RlTGVhdmUpO1xuICAgICAgICB0aGlzLmNvcmUucmVtb3ZlRXZlbnRMaXN0ZW5lcihNYXJrdXBFdmVudHMuRVZFTlRfRURJVE1PREVfQ0hBTkdFRCwgdGhpcy5vbkVkaXRNb2RlQ2hhbmdlKTtcbiAgICAgICAgdGhpcy5jb3JlLnJlbW92ZUV2ZW50TGlzdGVuZXIoTWFya3VwRXZlbnRzLkVWRU5UX01BUktVUF9TRUxFQ1RFRCwgdGhpcy5vbk1hcmt1cFNlbGVjdGVkKTtcblxuICAgICAgICB0aGlzLmRlc3Ryb3lUb29sVWkoKTtcbiAgICAgICAgdGhpcy5kZXN0cm95VG9vbGJhclVJKCk7XG4gICAgICAgIHRoaXMuY29yZSA9IG51bGw7XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcblxuICAgIHByb3RvLm9uVG9vbGJhckNyZWF0ZWQgPSBmdW5jdGlvbih0b29sYmFyKSB7XG5cbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICAgIHRoaXMubWFya3VwVG9vbEJ1dHRvbiA9IG5ldyBBdXRvZGVzay5WaWV3aW5nLlVJLkJ1dHRvbihcInRvb2xiYXItbWFya3VwVG9vbFwiKTtcbiAgICAgICAgdGhpcy5tYXJrdXBUb29sQnV0dG9uLnNldFRvb2xUaXAoXCJNYXJrdXBcIik7XG4gICAgICAgIHRoaXMubWFya3VwVG9vbEJ1dHRvbi5zZXRJY29uKFwiYWRzay1pY29uLW1hcmt1cFwiKTtcbiAgICAgICAgdGhpcy5tYXJrdXBUb29sQnV0dG9uLm9uQ2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvLyBTaW5jZSB0aGUgYmFyIHdpbGwgZ2V0IGhpZGRlbiB3aGVuIGNsb3NlZCwgdGhlcmVcbiAgICAgICAgICAgIC8vIGlzIG5vIG5lZWQgdG8gdHJhY2sgYnV0dG9uIHN0YXRlIChhY3RpdmUgb3Igbm90KVxuICAgICAgICAgICAgc2VsZi5hY3RpdmF0ZSgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBtb2RlbFRvb2xzID0gdG9vbGJhci5nZXRDb250cm9sKEF1dG9kZXNrLlZpZXdpbmcuVE9PTEJBUi5NT0RFTFRPT0xTSUQpO1xuICAgICAgICBpZiAobW9kZWxUb29scykge1xuICAgICAgICAgICAgbW9kZWxUb29scy5hZGRDb250cm9sKHRoaXMubWFya3VwVG9vbEJ1dHRvbiwge2luZGV4OjB9KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBwcm90by5kZXN0cm95VG9vbGJhclVJID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLm1hcmt1cFRvb2xCdXR0b24pIHtcbiAgICAgICAgICAgIHZhciB0b29sYmFyID0gdGhpcy52aWV3ZXIuZ2V0VG9vbGJhcigpO1xuICAgICAgICAgICAgaWYgKHRvb2xiYXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1hcmt1cFRvb2xCdXR0b24ucmVtb3ZlRnJvbVBhcmVudCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5tYXJrdXBUb29sQnV0dG9uID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBwcm90by5vbkVkaXRNb2RlRW50ZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgYXZwLmxvZ2dlci5sb2coJ0VOVEVSIGVkaXQgbW9kZScpO1xuICAgICAgICB0aGlzLnNob3dUb29sc1VpKCk7XG4gICAgfTtcblxuICAgIHByb3RvLm9uRWRpdE1vZGVMZWF2ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBhdnAubG9nZ2VyLmxvZygnTEVBVkUgZWRpdCBtb2RlJyk7XG4gICAgICAgIHRoaXMuaGlkZVRvb2xzVWkoKTtcbiAgICB9O1xuXG4gICAgcHJvdG8ub25FZGl0TW9kZUNoYW5nZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGlmICghdGhpcy5kb21Ub29sU2VsZWN0IHx8IHRoaXMuaWdub3JlQ2hhbmdlRXZlbnQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBlZGl0TW9kZSA9IHRoaXMuY29yZS5lZGl0TW9kZTtcbiAgICAgICAgdmFyIG9wdGlvbkxpc3QgPSB0aGlzLmRvbVRvb2xTZWxlY3Qub3B0aW9ucztcbiAgICAgICAgZm9yICh2YXIgaT0wLCBsZW49b3B0aW9uTGlzdC5sZW5ndGg7IGk8bGVuOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBvcHRpb24gPSBvcHRpb25MaXN0W2ldO1xuICAgICAgICAgICAgaWYgKG9wdGlvbi52YWx1ZSA9PT0gZWRpdE1vZGUudHlwZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZG9tVG9vbFNlbGVjdC5zZWxlY3RlZEluZGV4ID0gaTsgLy8gZG9lc24ndCBmaXJlIGV2ZW50XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcHJvdG8ub25NYXJrdXBTZWxlY3RlZCA9IGZ1bmN0aW9uKGV2ZW50KSB7XG5cbiAgICAgICAgdmFyIG1hcmt1cCA9IGV2ZW50Lm1hcmt1cDtcbiAgICAgICAgdmFyIGVkaXRNb2RlID0gdGhpcy5jb3JlLmVkaXRNb2RlO1xuICAgICAgICB0aGlzLnNldFN0eWxlc1VpKGVkaXRNb2RlLCBtYXJrdXApO1xuICAgIH07XG5cbiAgICBwcm90by5zaG93VG9vbHNVaSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmNyZWF0ZVRvb2xzVWkoKTtcblxuICAgICAgICAvLyBIaWRlIHNvbWUgVUlcbiAgICAgICAgdmFyIGNhbk5hdmlnYXRlID0gdGhpcy5jb3JlLmlzTmF2aWdhdGlvbkFsbG93ZWQoKTtcbiAgICAgICAgdGhpcy5zZXRDb250cm9sVmlzaWJpbGl0eSgnLmxtdi1tYXJrdXAtZ3VpLWVudGVyTmF2TW9kZScsIGNhbk5hdmlnYXRlLCAnaW5saW5lLWJsb2NrJyk7XG4gICAgICAgIHRoaXMuZXhpdE5hdmlnYXRpb25Nb2RlKCk7XG4gICAgICAgIHRoaXMuZG9tQ29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsgLy8gcmVtb3ZlIGNvbGxhcHNlZCBzdGF0ZVxuXG4gICAgICAgIC8vIEl0J3Mgb2theSBpZiB3ZSBjYWxsIHRoZXNlIG1hbnkgdGltZXMgaW4gYSByb3csIG5vIGJpZ2dpZS5cbiAgICAgICAgdGhpcy52aWV3ZXIuY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuZG9tUm9vdCk7XG4gICAgfTtcblxuICAgIHByb3RvLmhpZGVUb29sc1VpID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLmRvbVJvb3QgJiYgdGhpcy5kb21Sb290LnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgIHRoaXMuZG9tUm9vdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuZG9tUm9vdCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcHJvdG8uY3JlYXRlVG9vbHNVaSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGlmICh0aGlzLmRvbVJvb3QpXG4gICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlRWRpdE1vZGVPcHRpb24obG9jTGFiZWwsIGVkaXRNb2RlVHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAnPG9wdGlvbiB2YWx1ZT1cIicsIGVkaXRNb2RlVHlwZSwgJ1wiPicsXG4gICAgICAgICAgICAgICAgICAgIGxvY0xhYmVsLFxuICAgICAgICAgICAgICAgICc8L29wdGlvbj4nXG4gICAgICAgICAgICBdLmpvaW4oJycpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGh0bWwgPSBbXG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cImxtdi1tYXJrdXAtZ3VpLXRvb2xiYXItY29udGVudFwiPicsXG5cbiAgICAgICAgICAgICAgICAnPGJ1dHRvbiBjbGFzcz1cImxtdi1tYXJrdXAtZ3VpLWNvbGxhcHNlLWJ0blwiPiZsdDstJmd0OzwvYnV0dG9uPicsXG4gICAgICAgICAgICAgICAgJzxidXR0b24gY2xhc3M9XCJsbXYtbWFya3VwLWVkaXRtb2RlLWRvbmVcIj5FeGl0PC9idXR0b24+JyxcbiAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImxtdi1tYXJrdXAtZ3VpLWNvbGxhcHNlLWNvbnRlbnRcIj4nLFxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImxtdi1tYXJrdXAtZ3VpLWVkaXRNb2RlXCI+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnV0dG9uIGNsYXNzPVwibG12LW1hcmt1cC1ndWktZW50ZXJOYXZNb2RlXCI+TmF2aWdhdGU8L2J1dHRvbj4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgJzxidXR0b24gY2xhc3M9XCJsbXYtbWFya3VwLWd1aS11bmRvXCI+JiM4NjE3OzwvYnV0dG9uPicsXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGJ1dHRvbiBjbGFzcz1cImxtdi1tYXJrdXAtZ3VpLXJlZG9cIj4mIzg2MTg7PC9idXR0b24+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnI+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnV0dG9uIGNsYXNzPVwibG12LW1hcmt1cC1ndWktZGVsZXRlXCI+RGVsZXRlPC9idXR0b24+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnV0dG9uIGNsYXNzPVwibG12LW1hcmt1cC1ndWktZHVwbGljYXRlXCI+RHVwbGljYXRlPC9idXR0b24+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnI+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnV0dG9uIGNsYXNzPVwibG12LW1hcmt1cC1ndWktY3V0XCI+Q3V0PC9idXR0b24+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnV0dG9uIGNsYXNzPVwibG12LW1hcmt1cC1ndWktY29weVwiPkNvcHk8L2J1dHRvbj4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgJzxidXR0b24gY2xhc3M9XCJsbXYtbWFya3VwLWd1aS1wYXN0ZVwiPlBhc3RlPC9idXR0b24+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnI+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8c3Bhbj5NYXJrdXA6PC9zcGFuPicsIC8vIFRPRE86IExvY2FsaXplXG4gICAgICAgICAgICAgICAgICAgICAgICAnPHNlbGVjdCBjbGFzcz1cImxtdi1tYXJrdXAtdG9vbC1zZWxlY3RcIj4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZUVkaXRNb2RlT3B0aW9uKCdBcnJvdycsIE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX0FSUk9XKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVFZGl0TW9kZU9wdGlvbignUmVjdGFuZ2xlJywgTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfUkVDVEFOR0xFKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVFZGl0TW9kZU9wdGlvbignQ2lyY2xlJywgTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfQ0lSQ0xFKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVFZGl0TW9kZU9wdGlvbignVGV4dCcsIE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX1RFWFQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZUVkaXRNb2RlT3B0aW9uKCdDYWxsb3V0JywgTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfQ0FMTE9VVCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlRWRpdE1vZGVPcHRpb24oJ0Nsb3VkJywgTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfQ0xPVUQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZUVkaXRNb2RlT3B0aW9uKCdQb2x5TGluZScsIE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX1BPTFlMSU5FKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVFZGl0TW9kZU9wdGlvbignUG9seWNsb3VkJywgTWFya3VwVHlwZXMuTUFSS1VQX1RZUEVfUE9MWUNMT1VEKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVFZGl0TW9kZU9wdGlvbignRnJlZWhhbmQnLCBNYXJrdXBUeXBlcy5NQVJLVVBfVFlQRV9GUkVFSEFORCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlRWRpdE1vZGVPcHRpb24oJ0hpZ2hsaWdodCcsIE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX0hJR0hMSUdIVCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlRWRpdE1vZGVPcHRpb24oJ0RpbWVuc2lvbicsIE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX0RJTUVOU0lPTiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlRWRpdE1vZGVPcHRpb24oJ1NWRyBTdGFtcCcsIE1hcmt1cFR5cGVzLk1BUktVUF9UWVBFX1NUQU1QKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L3NlbGVjdD4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgJzxicj4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJsbXYtbWFya3VwLWd1aS1zdHlsZS1vcHRpb25zXCI+PC9kaXY+JyxcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicsXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwibG12LW1hcmt1cC1ndWktbmF2TW9kZVwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPicsXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGJ1dHRvbiBjbGFzcz1cImxtdi1tYXJrdXAtZ3VpLWV4aXROYXZNb2RlXCI+QmFjayB0byBNYXJrdXA8L2J1dHRvbj4nLFxuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyxcbiAgICAgICAgICAgICAgICAnPC9kaXY+JyxcbiAgICAgICAgICAgICc8L2Rpdj4nXG4gICAgICAgIF0uam9pbignJyk7XG5cbiAgICAgICAgY29uc3QgX2RvY3VtZW50ID0gdGhpcy5nZXREb2N1bWVudCgpO1xuICAgICAgICB0aGlzLmRvbVJvb3QgPSBfZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRoaXMuZG9tUm9vdC5jbGFzc05hbWUgPSAnbG12LW1hcmt1cC1ndWktdG9vbGJhcic7XG4gICAgICAgIHRoaXMuZG9tUm9vdC5pbm5lckhUTUwgPSBodG1sO1xuXG4gICAgICAgIHRoaXMuZG9tQ29udGVudCA9IHRoaXMuZG9tUm9vdC5xdWVyeVNlbGVjdG9yKCcubG12LW1hcmt1cC1ndWktY29sbGFwc2UtY29udGVudCcpO1xuICAgICAgICB0aGlzLmRvbVRvb2xTZWxlY3QgPSB0aGlzLmRvbVJvb3QucXVlcnlTZWxlY3RvcignLmxtdi1tYXJrdXAtdG9vbC1zZWxlY3QnKTtcbiAgICAgICAgdGhpcy5kb21TdHlsZXNSb290ID0gdGhpcy5kb21Sb290LnF1ZXJ5U2VsZWN0b3IoJy5sbXYtbWFya3VwLWd1aS1zdHlsZS1vcHRpb25zJyk7XG5cbiAgICAgICAgLy8gR2VuZXJhbFxuICAgICAgICB0aGlzLmhvb2tFdmVudCgnY2xpY2snLCAnLmxtdi1tYXJrdXAtZ3VpLWNvbGxhcHNlLWJ0bicsIHRoaXMub25Ub2dnbGVDb2xsYXBzZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5ob29rRXZlbnQoJ2NsaWNrJywgJy5sbXYtbWFya3VwLWVkaXRtb2RlLWRvbmUnLCB0aGlzLm9uRWRpdE1vZGVEb25lLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmhvb2tFdmVudCgnY2xpY2snLCAnLmxtdi1tYXJrdXAtZ3VpLWVudGVyTmF2TW9kZScsIHRoaXMuZW50ZXJOYXZpZ2F0aW9uTW9kZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5ob29rRXZlbnQoJ2NsaWNrJywgJy5sbXYtbWFya3VwLWd1aS1leGl0TmF2TW9kZScsIHRoaXMuZXhpdE5hdmlnYXRpb25Nb2RlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmhvb2tFdmVudCgnY2xpY2snLCAnLmxtdi1tYXJrdXAtZ3VpLXVuZG8nLCB0aGlzLm9uVW5kb0NsaWNrLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmhvb2tFdmVudCgnY2xpY2snLCAnLmxtdi1tYXJrdXAtZ3VpLXJlZG8nLCB0aGlzLm9uUmVkb0NsaWNrLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmhvb2tFdmVudCgnY2xpY2snLCAnLmxtdi1tYXJrdXAtZ3VpLWRlbGV0ZScsIHRoaXMub25EZWxldGVDbGljay5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5ob29rRXZlbnQoJ2NsaWNrJywgJy5sbXYtbWFya3VwLWd1aS1jdXQnLCB0aGlzLm9uQ3V0Q2xpY2suYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuaG9va0V2ZW50KCdjbGljaycsICcubG12LW1hcmt1cC1ndWktY29weScsIHRoaXMub25Db3B5Q2xpY2suYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuaG9va0V2ZW50KCdjbGljaycsICcubG12LW1hcmt1cC1ndWktcGFzdGUnLCB0aGlzLm9uUGFzdGVDbGljay5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy5ob29rRXZlbnQoJ2NsaWNrJywgJy5sbXYtbWFya3VwLWd1aS1kdXBsaWNhdGUnLCB0aGlzLm9uRHVwbGljYXRlQ2xpY2suYmluZCh0aGlzKSk7XG4gICAgICAgIC8vIFRvb2xzXG4gICAgICAgIHRoaXMuaG9va0V2ZW50KCdjaGFuZ2UnLCAnLmxtdi1tYXJrdXAtdG9vbC1zZWxlY3QnLCB0aGlzLm9uU2VsZWN0RWRpdE1vZGUuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuaG9va0V2ZW50KCdjaGFuZ2UnLCAnLmxtdi1tYXJrdXAtZ3VpLXN0eWxlLXNlbGVjdCcsIHRoaXMub25TdHlsZUNoYW5nZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgLy8gVGV4dCBpbnB1dCBmaWVsZHMgZm9yIHRvb2xzXG4gICAgICAgIHRoaXMuaG9va0V2ZW50KCdpbnB1dCcsICcubG12LW1hcmt1cC1ndWktc3R5bGUtdGV4dGFyZWEnLCB0aGlzLm9uU3R5bGVDaGFuZ2UuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuaG9va0V2ZW50KCdwcm9wZXJ0eWNoYW5nZScsICcubG12LW1hcmt1cC1ndWktc3R5bGUtdGV4dGFyZWEnLCB0aGlzLm9uU3R5bGVDaGFuZ2UuYmluZCh0aGlzKSk7XG5cbiAgICAgICAgdGhpcy5zZXRTdHlsZXNVaSh0aGlzLmNvcmUuZWRpdE1vZGUpO1xuICAgIH07XG5cbiAgICBwcm90by5kZXN0cm95VG9vbFVpID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLmRvbVJvb3QpIHtcbiAgICAgICAgICAgIHRoaXMuaGlkZVRvb2xzVWkoKTtcbiAgICAgICAgICAgIHRoaXMuZG9tUm9vdCA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcHJvdG8uZ2V0RWRpdE1vZGUgPSBmdW5jdGlvbihlZGl0TW9kZVR5cGUpIHtcbiAgICAgICAgdmFyIEVkaXRNb2RlQ2xhc3MgPSB0aGVFZGl0TW9kZU1hbmFnZXIuZ2V0Q2xhc3MoZWRpdE1vZGVUeXBlKTtcbiAgICAgICAgaWYgKCFFZGl0TW9kZUNsYXNzKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG5cbiAgICAgICAgdmFyIGVkaXRNb2RlID0gbmV3IEVkaXRNb2RlQ2xhc3ModGhpcy5jb3JlKTtcbiAgICAgICAgcmV0dXJuIGVkaXRNb2RlO1xuICAgIH07XG5cbiAgICBwcm90by5vblRvZ2dsZUNvbGxhcHNlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBjdXJyID0gdGhpcy5kb21Db250ZW50LnN0eWxlLmRpc3BsYXk7XG4gICAgICAgIGlmIChjdXJyID09PSAnbm9uZScpXG4gICAgICAgICAgICB0aGlzLmRvbUNvbnRlbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRoaXMuZG9tQ29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH07XG5cbiAgICBwcm90by5vbkVkaXRNb2RlRG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmRlYWN0aXZhdGUoKTtcbiAgICB9O1xuXG4gICAgcHJvdG8uZW50ZXJOYXZpZ2F0aW9uTW9kZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmNvcmUuYWxsb3dOYXZpZ2F0aW9uKHRydWUpO1xuICAgICAgICB0aGlzLnNldENvbnRyb2xWaXNpYmlsaXR5KCcubG12LW1hcmt1cC1ndWktZWRpdE1vZGUnLCBmYWxzZSk7XG4gICAgICAgIHRoaXMuc2V0Q29udHJvbFZpc2liaWxpdHkoJy5sbXYtbWFya3VwLWd1aS1uYXZNb2RlJywgdHJ1ZSk7XG4gICAgfTtcbiAgICBwcm90by5leGl0TmF2aWdhdGlvbk1vZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5jb3JlLmFsbG93TmF2aWdhdGlvbihmYWxzZSk7XG4gICAgICAgIHRoaXMuc2V0Q29udHJvbFZpc2liaWxpdHkoJy5sbXYtbWFya3VwLWd1aS1lZGl0TW9kZScsIHRydWUpO1xuICAgICAgICB0aGlzLnNldENvbnRyb2xWaXNpYmlsaXR5KCcubG12LW1hcmt1cC1ndWktbmF2TW9kZScsIGZhbHNlKTtcbiAgICB9O1xuXG4gICAgcHJvdG8ub25VbmRvQ2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5jb3JlLnVuZG8oKTtcbiAgICB9O1xuICAgIHByb3RvLm9uUmVkb0NsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuY29yZS5yZWRvKCk7XG4gICAgfTtcbiAgICBwcm90by5vbkRlbGV0ZUNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBtYXJrdXAgPSB0aGlzLmNvcmUuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICAgIGlmIChtYXJrdXApIHtcbiAgICAgICAgICAgIHRoaXMuY29yZS5kZWxldGVNYXJrdXAobWFya3VwKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcHJvdG8ub25DdXRDbGljayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmNvcmUuY3V0KCk7XG4gICAgfTtcbiAgICBwcm90by5vbkNvcHlDbGljayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmNvcmUuY29weSgpO1xuICAgIH07XG4gICAgcHJvdG8ub25QYXN0ZUNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuY29yZS5wYXN0ZSgpO1xuICAgIH07XG4gICAgcHJvdG8ub25EdXBsaWNhdGVDbGljayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBvbmx5IHdoZW4gdGhlcmUncyBhIHNlbGVjdGlvblxuICAgICAgICB2YXIgbWFya3VwID0gdGhpcy5jb3JlLmdldFNlbGVjdGlvbigpO1xuICAgICAgICBpZiAobWFya3VwKSB7XG4gICAgICAgICAgICB0aGlzLmNvcmUuY29weSgpO1xuICAgICAgICAgICAgdGhpcy5jb3JlLnBhc3RlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcHJvdG8ub25TZWxlY3RFZGl0TW9kZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHZhciBlZGl0TW9kZVR5cGUgPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgICAgIHZhciBlZGl0TW9kZSA9IHRoaXMuZ2V0RWRpdE1vZGUoZWRpdE1vZGVUeXBlKTtcbiAgICAgICAgaWYgKCFlZGl0TW9kZSkge1xuICAgICAgICAgICAgYXZwLmxvZ2dlci5lcnJvcignTWFya3VwIGVkaXRNb2RlIG5vdCBmb3VuZCBmb3IgdHlwZTogJyArIGVkaXRNb2RlVHlwZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZWRpdE1vZGUuY2FuY2VsRWRpdE1vZGVDaGFuZ2UpIHtcbiAgICAgICAgICAgIGF2cC5sb2dnZXIud2FybignVGhlcmUgd2FzIGEgcHJvYmxlbSBzZWxlY3RpbmcgY3VycmVudCBlZGl0TW9kZScpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5pZ25vcmVDaGFuZ2VFdmVudCA9IHRydWU7XG4gICAgICAgIHRoaXMuY29yZS5jaGFuZ2VFZGl0TW9kZShlZGl0TW9kZSk7XG4gICAgICAgIHRoaXMuaWdub3JlQ2hhbmdlRXZlbnQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zZXRTdHlsZXNVaShlZGl0TW9kZSk7XG4gICAgICAgIHRoaXMuZG9tVG9vbFNlbGVjdC5ibHVyKCk7IC8vIHJlbW92ZSBmb2N1cyBmcm9tIFVJXG4gICAgfTtcblxuICAgIHByb3RvLm9uU3R5bGVDaGFuZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICB2YXIgc2VsZWN0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICB2YXIgc3R5bGVLZXkgPSBzZWxlY3QuZ2V0QXR0cmlidXRlKCdzdHlsZS1rZXknKTtcbiAgICAgICAgdmFyIHZhbHVlVHlwZSA9IHNlbGVjdC5nZXRBdHRyaWJ1dGUoJ3ZhbHVlLXR5cGUnKTtcblxuICAgICAgICB2YXIgbWFya3VwID0gdGhpcy5jb3JlLmdldFNlbGVjdGlvbigpO1xuICAgICAgICB2YXIgc3R5bGUgPSBtYXJrdXAgPyBtYXJrdXAuZ2V0U3R5bGUoKSA6IHRoaXMuY29yZS5nZXRTdHlsZSgpO1xuXG4gICAgICAgIC8vIGlmIGl0J3MgYSBzdHJpbmcgaW5wdXQsIGp1c3QgdGFrZSB0aGUgcmF3IHZhbHVlXG4gICAgICAgIGlmICh2YWx1ZVR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzdHlsZVtzdHlsZUtleV0gPSBzZWxlY3QudmFsdWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgb3B0aW9uID0gc2VsZWN0Lm9wdGlvbnNbc2VsZWN0LnNlbGVjdGVkSW5kZXhdO1xuICAgICAgICAgICAgc3R5bGVbc3R5bGVLZXldID0gZ2V0VHlwZWRWYWx1ZShvcHRpb24udmFsdWUsIHZhbHVlVHlwZSk7XG4gICAgICAgICAgICBzZWxlY3QuYmx1cigpOyAvLyByZW1vdmUgZm9jdXMgZnJvbSBVSVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29yZS5zZXRTdHlsZShzdHlsZSk7XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0VHlwZWRWYWx1ZSh2YWwsIHR5cGUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlID09PSAnbnVtYmVyJylcbiAgICAgICAgICAgICAgICByZXR1cm4gTnVtYmVyKHZhbCk7XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ2Jvb2xlYW4nKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWwgPT09ICd0cnVlJztcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcHJvdG8uc2V0U3R5bGVzVWkgPSBmdW5jdGlvbihlZGl0TW9kZSwgbWFya3VwKSB7XG5cbiAgICAgICAgdmFyIHN0eWxlID0gbWFya3VwID8gbWFya3VwLnN0eWxlIDogZWRpdE1vZGUuc3R5bGU7XG4gICAgICAgIHZhciBkZWZhdWx0cyA9IGdldFN0eWxlRGVmYXVsdFZhbHVlcyhzdHlsZSwgdGhpcy5jb3JlKTtcblxuICAgICAgICB0aGlzLmRvbVN0eWxlc1Jvb3QuaW5uZXJIVE1MID0gJyc7IC8vIGZsdXNoIFVJXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBkZWZhdWx0cykge1xuICAgICAgICAgICAgLy8gUXVpdGUgaW5lZmlpZW50IGJlY2F1c2Ugd2UgYXJlIHJlLWNyZWF0aW5nIERPTSBjb25zdGFudGx5XG4gICAgICAgICAgICAvLyBDb25zaWRlciBvcHRpbWl6ZSBpZiBpdCBiZWNvbWVzIGEgcHJvYmxlbVxuICAgICAgICAgICAgdmFyIGRvbUVsZW0gPSB0aGlzLmdldFVpRm9yU3R5bGVLZXkoa2V5LCBkZWZhdWx0c1trZXldLCBzdHlsZVtrZXldKTtcbiAgICAgICAgICAgIHRoaXMuZG9tU3R5bGVzUm9vdC5hcHBlbmRDaGlsZChkb21FbGVtKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBwcm90by5nZXRVaUZvclN0eWxlS2V5ID0gZnVuY3Rpb24oa2V5LCBkZWZhdWx0cywgY3VycmVudCkge1xuXG4gICAgICAgIHZhciBzZWxlY3Rpb25JbmRleCA9IGRlZmF1bHRzLmRlZmF1bHQ7XG4gICAgICAgIHZhciBvcHRpb25zID0gW107XG4gICAgICAgIHZhciB2YWx1ZXMgPSBkZWZhdWx0cy52YWx1ZXM7XG4gICAgICAgIGZvciAodmFyIGk9MCwgbGVuPXZhbHVlcy5sZW5ndGg7IGk8bGVuOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBvcHRMaW5lID0gW1xuICAgICAgICAgICAgICAgICc8b3B0aW9uIHZhbHVlPVwiJywgdmFsdWVzW2ldLnZhbHVlLCdcIj4nLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZXNbaV0ubmFtZSxcbiAgICAgICAgICAgICAgICAnPC9vcHRpb24+J1xuICAgICAgICAgICAgXS5qb2luKCcnKTtcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaChvcHRMaW5lKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMudmFsdWVFcXVhbHModmFsdWVzW2ldLnZhbHVlLCBjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgIHNlbGVjdGlvbkluZGV4ID0gaTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciB2YWx1ZVR5cGUgPSB0eXBlb2YgdmFsdWVzWzBdLnZhbHVlO1xuXG4gICAgICAgIC8vIFRPRE86IEJ1aWxkIHNwZWNpYWxpemVkIGNvbnRyb2xzIGZvciBlYWNoIHN0eWxlLWF0dHJpYnV0ZVxuICAgICAgICBjb25zdCBfZG9jdW1lbnQgPSB0aGlzLmdldERvY3VtZW50KCk7XG4gICAgICAgIHZhciBkb21FbGVtID0gX2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB2YXIgaHRtbCA9IFtdO1xuICAgICAgICBsZXQgaXNUZXh0ID0ga2V5LmluY2x1ZGVzKCd0ZXh0Jyk7XG5cbiAgICAgICAgaWYgKGlzVGV4dCkge1xuICAgICAgICAgICAgaHRtbCA9IFtcbiAgICAgICAgICAgICAgICAnPHNwYW4+JyxrZXksJzwvc3Bhbj4nLFxuICAgICAgICAgICAgICAgICc8YnI+JyxcbiAgICAgICAgICAgICAgICAnPHRleHRhcmVhIGNsYXNzPVwibG12LW1hcmt1cC1ndWktc3R5bGUtdGV4dGFyZWFcIiBzdHlsZS1rZXk9XCInLCBrZXksICdcIiB2YWx1ZS10eXBlPVwiJywgdmFsdWVUeXBlLCdcIj4nLFxuICAgICAgICAgICAgICAgIChjdXJyZW50IHx8ICcnKSxcbiAgICAgICAgICAgICAgICAnPC90ZXh0YXJlYT4nXG4gICAgICAgICAgICBdLmpvaW4oJycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaHRtbCA9IFtcbiAgICAgICAgICAgICAgICAnPHNwYW4+JyxrZXksJzwvc3Bhbj4nLFxuICAgICAgICAgICAgICAgICc8c2VsZWN0IGNsYXNzPVwibG12LW1hcmt1cC1ndWktc3R5bGUtc2VsZWN0XCIgc3R5bGUta2V5PVwiJywga2V5LCAnXCIgdmFsdWUtdHlwZT1cIicsIHZhbHVlVHlwZSwnXCI+JyxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5qb2luKCcnKSxcbiAgICAgICAgICAgICAgICAnPC9zZWxlY3Q+J1xuICAgICAgICAgICAgXS5qb2luKCcnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRvbUVsZW0uaW5uZXJIVE1MID0gaHRtbDtcblxuICAgICAgICBpZiAoIWlzVGV4dCkge1xuICAgICAgICAgICAgLy8gc2VsZWN0IGluZGV4XG4gICAgICAgICAgICB2YXIgZG9tU2VsZWN0ID0gZG9tRWxlbS5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKTtcbiAgICAgICAgICAgIGRvbVNlbGVjdC5zZWxlY3RlZEluZGV4ID0gc2VsZWN0aW9uSW5kZXg7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZG9tRWxlbTtcbiAgICB9O1xuICAgIHByb3RvLnZhbHVlRXF1YWxzID0gZnVuY3Rpb24odmFsdWUxLCB2YWx1ZTIpIHtcblxuICAgICAgICByZXR1cm4gdmFsdWUxID09PSB2YWx1ZTI7XG4gICAgfTtcblxuICAgIHByb3RvLnNldENvbnRyb2xWaXNpYmlsaXR5ID0gZnVuY3Rpb24oc2VsZWN0b3IsIGlzVmlzaWJsZSwgdmlzaWJsZVZhbHVlKSB7XG4gICAgICAgIHZhciBlbGVtID0gdGhpcy5kb21Sb290LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgICAgICBpZiAoIXZpc2libGVWYWx1ZSlcbiAgICAgICAgICAgIHZpc2libGVWYWx1ZSA9ICdibG9jayc7XG4gICAgICAgIGVsZW0uc3R5bGUuZGlzcGxheSA9IGlzVmlzaWJsZSA/IHZpc2libGVWYWx1ZSA6ICdub25lJztcbiAgICB9O1xuXG4gICAgcHJvdG8uaG9va0V2ZW50ID0gZnVuY3Rpb24oZXZlbnRTdHIsIHNlbGVjdG9yLCBjYWxsYmFja0ZuKSB7XG4gICAgICAgIHZhciBoYW5kbGVyID0gZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgICAgICAgaWYgKHRoaXMubWF0Y2hlc1NlbGVjdG9yKGV2ZW50LnRhcmdldCwgc2VsZWN0b3IpKXtcbiAgICAgICAgICAgICAgICBjYWxsYmFja0ZuKGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmRvbVJvb3QuYWRkRXZlbnRMaXN0ZW5lcihldmVudFN0ciwgaGFuZGxlcik7XG4gICAgICAgIHRoaXMuZG9tRXZlbnRzLnB1c2goe3N0cjogZXZlbnRTdHIsIGhhbmRsZXI6IGhhbmRsZXIgfSk7XG4gICAgfTtcblxuICAgIHByb3RvLnVuaG9va0FsbEV2ZW50cyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZG9tUm9vdCA9IHRoaXMuZG9tUm9vdDtcbiAgICAgICAgdGhpcy5kb21FdmVudHMuZm9yRWFjaChmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgZG9tUm9vdC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LnN0ciwgZXZlbnQuaGFuZGxlcik7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmRvbUV2ZW50cyA9IFtdO1xuICAgIH07XG5cbiAgICBwcm90by5tYXRjaGVzU2VsZWN0b3IgPSBmdW5jdGlvbihkb21FbGVtLCBzZWxlY3Rvcikge1xuICAgICAgICBpZiAoZG9tRWxlbS5tYXRjaGVzKSByZXR1cm4gZG9tRWxlbS5tYXRjaGVzKHNlbGVjdG9yKTsgLy9Vbi1wcmVmaXhlZFxuICAgICAgICBpZiAoZG9tRWxlbS5tc01hdGNoZXNTZWxlY3RvcikgcmV0dXJuIGRvbUVsZW0ubXNNYXRjaGVzU2VsZWN0b3Ioc2VsZWN0b3IpOyAgLy9JRVxuICAgICAgICBpZiAoZG9tRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IpIHJldHVybiBkb21FbGVtLm1vek1hdGNoZXNTZWxlY3RvcihzZWxlY3Rvcik7IC8vRmlyZWZveCAoR2Vja28pXG4gICAgICAgIGlmIChkb21FbGVtLndlYmtpdE1hdGNoZXNTZWxlY3RvcikgcmV0dXJuIGRvbUVsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yKHNlbGVjdG9yKTsgLy8gT3BlcmEsIFNhZmFyaSwgQ2hyb21lXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgcHJvdG8uZ2V0U3R5bGVPcHRpb25zID0gZnVuY3Rpb24oZWRpdE1vZGUpIHtcbiAgICAgICAgdmFyIHN0eWxlID0gZWRpdE1vZGUuZ2V0U3R5bGUoKTtcbiAgICAgICAgcmV0dXJuIGdldFN0eWxlRGVmYXVsdFZhbHVlcyhzdHlsZSwgdGhpcy5jb3JlKTtcbiAgICB9O1xuXG4gICAgcHJvdG8uYWN0aXZhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmKCF0aGlzLmFjdGl2ZVN0YXR1cykge1xuICAgICAgICAgICAgdGhpcy5jb3JlLmVudGVyRWRpdE1vZGUoKTtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlU3RhdHVzID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuXG4gICAgcHJvdG8uZGVhY3RpdmF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYodGhpcy5hY3RpdmVTdGF0dXMpIHtcbiAgICAgICAgICAgIHRoaXMuY29yZS5oaWRlKCk7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZVN0YXR1cyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG5cblxuICAgIEF1dG9kZXNrLlZpZXdpbmcudGhlRXh0ZW5zaW9uTWFuYWdlci5yZWdpc3RlckV4dGVuc2lvbignQXV0b2Rlc2suVmlld2luZy5NYXJrdXBzR3VpJywgTWFya3Vwc0d1aSk7XG4iXSwibmFtZXMiOlsiZ2V0U3R5bGVEZWZhdWx0VmFsdWVzIiwiTWFya3VwRXZlbnRzIiwiTWFya3VwVHlwZXMiLCJ0aGVFZGl0TW9kZU1hbmFnZXIiLCJDT1JFX0VYVEVOU0lPTiIsIk1hcmt1cHNHdWkiLCJ2aWV3ZXIiLCJvcHRpb25zIiwiQXV0b2Rlc2siLCJWaWV3aW5nIiwiRXh0ZW5zaW9uIiwiY2FsbCIsImRvbUV2ZW50cyIsIm5hbWUiLCJvbkVkaXRNb2RlRW50ZXIiLCJiaW5kIiwib25FZGl0TW9kZUxlYXZlIiwib25FZGl0TW9kZUNoYW5nZSIsIm9uTWFya3VwU2VsZWN0ZWQiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInByb3RvIiwiYXYiLCJhdnAiLCJQcml2YXRlIiwibG9hZCIsImxvYWRFeHRlbnNpb24iLCJ0aGVuIiwiY29yZUV4dCIsImNvcmUiLCJhZGRFdmVudExpc3RlbmVyIiwiRVZFTlRfRURJVE1PREVfRU5URVIiLCJFVkVOVF9FRElUTU9ERV9MRUFWRSIsIkVWRU5UX0VESVRNT0RFX0NIQU5HRUQiLCJFVkVOVF9NQVJLVVBfU0VMRUNURUQiLCJ1bmxvYWQiLCJkZWFjdGl2YXRlIiwidW5ob29rQWxsRXZlbnRzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRlc3Ryb3lUb29sVWkiLCJkZXN0cm95VG9vbGJhclVJIiwib25Ub29sYmFyQ3JlYXRlZCIsInRvb2xiYXIiLCJzZWxmIiwibWFya3VwVG9vbEJ1dHRvbiIsIlVJIiwiQnV0dG9uIiwic2V0VG9vbFRpcCIsInNldEljb24iLCJvbkNsaWNrIiwiYWN0aXZhdGUiLCJtb2RlbFRvb2xzIiwiZ2V0Q29udHJvbCIsIlRPT0xCQVIiLCJNT0RFTFRPT0xTSUQiLCJhZGRDb250cm9sIiwiaW5kZXgiLCJnZXRUb29sYmFyIiwicmVtb3ZlRnJvbVBhcmVudCIsImxvZ2dlciIsImxvZyIsInNob3dUb29sc1VpIiwiaGlkZVRvb2xzVWkiLCJldmVudCIsImRvbVRvb2xTZWxlY3QiLCJpZ25vcmVDaGFuZ2VFdmVudCIsImVkaXRNb2RlIiwib3B0aW9uTGlzdCIsImkiLCJsZW4iLCJsZW5ndGgiLCJvcHRpb24iLCJ2YWx1ZSIsInR5cGUiLCJzZWxlY3RlZEluZGV4IiwibWFya3VwIiwic2V0U3R5bGVzVWkiLCJjcmVhdGVUb29sc1VpIiwiY2FuTmF2aWdhdGUiLCJpc05hdmlnYXRpb25BbGxvd2VkIiwic2V0Q29udHJvbFZpc2liaWxpdHkiLCJleGl0TmF2aWdhdGlvbk1vZGUiLCJkb21Db250ZW50Iiwic3R5bGUiLCJkaXNwbGF5IiwiY29udGFpbmVyIiwiYXBwZW5kQ2hpbGQiLCJkb21Sb290IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiY3JlYXRlRWRpdE1vZGVPcHRpb24iLCJsb2NMYWJlbCIsImVkaXRNb2RlVHlwZSIsImpvaW4iLCJodG1sIiwiTUFSS1VQX1RZUEVfQVJST1ciLCJNQVJLVVBfVFlQRV9SRUNUQU5HTEUiLCJNQVJLVVBfVFlQRV9DSVJDTEUiLCJNQVJLVVBfVFlQRV9URVhUIiwiTUFSS1VQX1RZUEVfQ0FMTE9VVCIsIk1BUktVUF9UWVBFX0NMT1VEIiwiTUFSS1VQX1RZUEVfUE9MWUxJTkUiLCJNQVJLVVBfVFlQRV9QT0xZQ0xPVUQiLCJNQVJLVVBfVFlQRV9GUkVFSEFORCIsIk1BUktVUF9UWVBFX0hJR0hMSUdIVCIsIk1BUktVUF9UWVBFX0RJTUVOU0lPTiIsIk1BUktVUF9UWVBFX1NUQU1QIiwiX2RvY3VtZW50IiwiZ2V0RG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiaW5uZXJIVE1MIiwicXVlcnlTZWxlY3RvciIsImRvbVN0eWxlc1Jvb3QiLCJob29rRXZlbnQiLCJvblRvZ2dsZUNvbGxhcHNlIiwib25FZGl0TW9kZURvbmUiLCJlbnRlck5hdmlnYXRpb25Nb2RlIiwib25VbmRvQ2xpY2siLCJvblJlZG9DbGljayIsIm9uRGVsZXRlQ2xpY2siLCJvbkN1dENsaWNrIiwib25Db3B5Q2xpY2siLCJvblBhc3RlQ2xpY2siLCJvbkR1cGxpY2F0ZUNsaWNrIiwib25TZWxlY3RFZGl0TW9kZSIsIm9uU3R5bGVDaGFuZ2UiLCJnZXRFZGl0TW9kZSIsIkVkaXRNb2RlQ2xhc3MiLCJnZXRDbGFzcyIsImN1cnIiLCJhbGxvd05hdmlnYXRpb24iLCJ1bmRvIiwicmVkbyIsImdldFNlbGVjdGlvbiIsImRlbGV0ZU1hcmt1cCIsImN1dCIsImNvcHkiLCJwYXN0ZSIsInRhcmdldCIsImVycm9yIiwiY2FuY2VsRWRpdE1vZGVDaGFuZ2UiLCJ3YXJuIiwiY2hhbmdlRWRpdE1vZGUiLCJibHVyIiwic2VsZWN0Iiwic3R5bGVLZXkiLCJnZXRBdHRyaWJ1dGUiLCJ2YWx1ZVR5cGUiLCJnZXRTdHlsZSIsImdldFR5cGVkVmFsdWUiLCJzZXRTdHlsZSIsInZhbCIsIk51bWJlciIsImRlZmF1bHRzIiwia2V5IiwiZG9tRWxlbSIsImdldFVpRm9yU3R5bGVLZXkiLCJjdXJyZW50Iiwic2VsZWN0aW9uSW5kZXgiLCJkZWZhdWx0IiwidmFsdWVzIiwib3B0TGluZSIsInB1c2giLCJ2YWx1ZUVxdWFscyIsImlzVGV4dCIsImluY2x1ZGVzIiwiZG9tU2VsZWN0IiwidmFsdWUxIiwidmFsdWUyIiwic2VsZWN0b3IiLCJpc1Zpc2libGUiLCJ2aXNpYmxlVmFsdWUiLCJlbGVtIiwiZXZlbnRTdHIiLCJjYWxsYmFja0ZuIiwiaGFuZGxlciIsIm1hdGNoZXNTZWxlY3RvciIsInN0ciIsImZvckVhY2giLCJtYXRjaGVzIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJnZXRTdHlsZU9wdGlvbnMiLCJhY3RpdmVTdGF0dXMiLCJlbnRlckVkaXRNb2RlIiwiaGlkZSIsInRoZUV4dGVuc2lvbk1hbmFnZXIiLCJyZWdpc3RlckV4dGVuc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/gui/MarkupsGui.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!./node_modules/css-unicode-loader/index.js!./node_modules/sass-loader/dist/cjs.js!./extensions/Markup/core/Markups.css":
/*!**********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!./node_modules/css-unicode-loader/index.js!./node_modules/sass-loader/dist/cjs.js!./extensions/Markup/core/Markups.css ***!
  \**********************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.adsk-viewing-viewer .autodesk-markups-extension-core-make-me-bigger:after {\n  content: \"\";\n  position: absolute;\n  top: -15px;\n  bottom: -15px;\n  left: -15px;\n  right: -15px;\n}\n\n.adsk-viewing-viewer .autodesk-markups-extension-core-make-me-bigger.rotation-bridge:after {\n  top: 0;\n  bottom: 0px;\n}\n\n.adsk-viewing-viewer .selector-box {\n  position: absolute;\n  border: 1px dashed #0696D7;\n  background: rgba(6, 150, 215, 0.05);\n  z-index: 1;\n  cursor: move;\n  box-sizing: border-box;\n}\n\n.adsk-viewing-viewer .selector-drag-point,\n.adsk-viewing-viewer .selector-rotate-point {\n  position: absolute;\n  height: 8px;\n  width: 8px;\n  border-radius: 8px; /*HANDLE_SIZE*/\n  background: #FFFFFF; /*HANDLE_BACKGROUND_COLOR*/\n  border-color: rgba(107, 120, 127, 0.7); /* HANDLE_BORDER_COLOR; */\n  border-width: 1px; /* BORDER_WIDTH */\n  border-style: solid;\n}\n\n.adsk-viewing-viewer .selector-rotate-point {\n  top: calc(100% + 22px); /* 30 - 8 = 22 */\n  left: calc(50% + 1px);\n  transform: translate3d(-50%, 0px, 0px);\n}\n\n.adsk-viewing-viewer .selector-drag-point.selected,\n.adsk-viewing-viewer .selector-rotate-point.selected:not(.rotation-bridge) {\n  background: #0696D7;\n  border-color: #0696D7;\n}\n\n.adsk-viewing-viewer .rotation-bridge {\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0);\n  height: 30px;\n  width: 0px;\n  top: 100%;\n  left: calc(50% + 1px);\n  border: unset;\n  border-left: 1px dashed #0696D7;\n}\n\n/*var placementOffset = -6;*/\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-n {\n  top: -6px;\n  left: calc(50% - 4px);\n  position: relative;\n}\n\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-s {\n  top: calc(100% - 14px);\n  left: calc(50% - 4px);\n  position: relative;\n}\n\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-w {\n  left: -6px;\n  top: 50%;\n  transform: translate3d(0, -50%, 0);\n}\n\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-e {\n  right: -6px;\n  top: 50%;\n  transform: translate3d(0, -50%, 0);\n}\n\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-nw {\n  top: -6px;\n  left: -6px;\n}\n\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-ne {\n  top: -6px;\n  right: -6px;\n}\n\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-sw {\n  bottom: -6px;\n  left: -6px;\n}\n\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-se {\n  bottom: -6px;\n  right: -6px;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./extensions/Markup/core/Markups.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,aAAa;EACb,WAAW;EACX,YAAY;AACd;;AAEA;EACE,MAAM;EACN,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,0BAA0B;EAC1B,mCAAmC;EACnC,UAAU;EACV,YAAY;EACZ,sBAAsB;AACxB;;AAEA;;EAEE,kBAAkB;EAClB,WAAW;EACX,UAAU;EACV,kBAAkB,EAAE,cAAc;EAClC,mBAAmB,EAAE,0BAA0B;EAC/C,sCAAsC,EAAE,yBAAyB;EACjE,iBAAiB,EAAE,iBAAiB;EACpC,mBAAmB;AACrB;;AAEA;EACE,sBAAsB,EAAE,gBAAgB;EACxC,qBAAqB;EACrB,sCAAsC;AACxC;;AAEA;;EAEE,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;EAClB,kCAAkC;EAClC,YAAY;EACZ,UAAU;EACV,SAAS;EACT,qBAAqB;EACrB,aAAa;EACb,+BAA+B;AACjC;;AAEA,4BAA4B;AAC5B;EACE,SAAS;EACT,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,QAAQ;EACR,kCAAkC;AACpC;;AAEA;EACE,WAAW;EACX,QAAQ;EACR,kCAAkC;AACpC;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,SAAS;EACT,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,WAAW;AACb\",\"sourcesContent\":[\".adsk-viewing-viewer .autodesk-markups-extension-core-make-me-bigger:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: -15px;\\n  bottom: -15px;\\n  left: -15px;\\n  right: -15px;\\n}\\n\\n.adsk-viewing-viewer .autodesk-markups-extension-core-make-me-bigger.rotation-bridge:after {\\n  top: 0;\\n  bottom: 0px;\\n}\\n\\n.adsk-viewing-viewer .selector-box {\\n  position: absolute;\\n  border: 1px dashed #0696D7;\\n  background: rgba(6, 150, 215, 0.05);\\n  z-index: 1;\\n  cursor: move;\\n  box-sizing: border-box;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point,\\n.adsk-viewing-viewer .selector-rotate-point {\\n  position: absolute;\\n  height: 8px;\\n  width: 8px;\\n  border-radius: 8px; /*HANDLE_SIZE*/\\n  background: #FFFFFF; /*HANDLE_BACKGROUND_COLOR*/\\n  border-color: rgba(107, 120, 127, 0.7); /* HANDLE_BORDER_COLOR; */\\n  border-width: 1px; /* BORDER_WIDTH */\\n  border-style: solid;\\n}\\n\\n.adsk-viewing-viewer .selector-rotate-point {\\n  top: calc(100% + 22px); /* 30 - 8 = 22 */\\n  left: calc(50% + 1px);\\n  transform: translate3d(-50%, 0px, 0px);\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.selected,\\n.adsk-viewing-viewer .selector-rotate-point.selected:not(.rotation-bridge) {\\n  background: #0696D7;\\n  border-color: #0696D7;\\n}\\n\\n.adsk-viewing-viewer .rotation-bridge {\\n  position: absolute;\\n  background-color: rgba(0, 0, 0, 0);\\n  height: 30px;\\n  width: 0px;\\n  top: 100%;\\n  left: calc(50% + 1px);\\n  border: unset;\\n  border-left: 1px dashed #0696D7;\\n}\\n\\n/*var placementOffset = -6;*/\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-n {\\n  top: -6px;\\n  left: calc(50% - 4px);\\n  position: relative;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-s {\\n  top: calc(100% - 14px);\\n  left: calc(50% - 4px);\\n  position: relative;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-w {\\n  left: -6px;\\n  top: 50%;\\n  transform: translate3d(0, -50%, 0);\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-e {\\n  right: -6px;\\n  top: 50%;\\n  transform: translate3d(0, -50%, 0);\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-nw {\\n  top: -6px;\\n  left: -6px;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-ne {\\n  top: -6px;\\n  right: -6px;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-sw {\\n  bottom: -6px;\\n  left: -6px;\\n}\\n\\n.adsk-viewing-viewer .selector-drag-point.sdp-handle-se {\\n  bottom: -6px;\\n  right: -6px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!./node_modules/css-unicode-loader/index.js!./node_modules/sass-loader/dist/cjs.js!./extensions/Markup/core/Markups.css\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!./node_modules/css-unicode-loader/index.js!./node_modules/sass-loader/dist/cjs.js!./extensions/Markup/gui/MarkupsGui.css":
/*!************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!./node_modules/css-unicode-loader/index.js!./node_modules/sass-loader/dist/cjs.js!./extensions/Markup/gui/MarkupsGui.css ***!
  \************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.adsk-icon-markup:before {\n  content: \"a\";\n}\n\n.lmv-markup-gui-toolbar {\n  position: absolute;\n  top: 0;\n  margin: 5px 5px;\n  color: #000000;\n}\n\n.lmv-markup-gui-toolbar-content > * {\n  margin: 0 2px;\n}\n\n.lmv-markup-gui-style-options {\n  display: inline-block;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./extensions/Markup/gui/MarkupsGui.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,qBAAqB;AACvB\",\"sourcesContent\":[\".adsk-icon-markup:before {\\n  content: \\\"a\\\";\\n}\\n\\n.lmv-markup-gui-toolbar {\\n  position: absolute;\\n  top: 0;\\n  margin: 5px 5px;\\n  color: #000000;\\n}\\n\\n.lmv-markup-gui-toolbar-content > * {\\n  margin: 0 2px;\\n}\\n\\n.lmv-markup-gui-style-options {\\n  display: inline-block;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzJdIS4vbm9kZV9tb2R1bGVzL2Nzcy11bmljb2RlLWxvYWRlci9pbmRleC5qcyEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2V4dGVuc2lvbnMvTWFya3VwL2d1aS9NYXJrdXBzR3VpLmNzcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2dIO0FBQ2pCO0FBQy9GLDhCQUE4QixtRkFBMkIsQ0FBQyw0RkFBcUM7QUFDL0Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQyxPQUFPLHVHQUF1RyxVQUFVLE1BQU0sS0FBSyxZQUFZLFdBQVcsVUFBVSxVQUFVLE9BQU8sS0FBSyxVQUFVLE1BQU0sS0FBSyxZQUFZLG9EQUFvRCxtQkFBbUIsR0FBRyw2QkFBNkIsdUJBQXVCLFdBQVcsb0JBQW9CLG1CQUFtQixHQUFHLHlDQUF5QyxrQkFBa0IsR0FBRyxtQ0FBbUMsMEJBQTBCLEdBQUcsbUJBQW1CO0FBQ2hpQjtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvTWFya3VwL2d1aS9NYXJrdXBzR3VpLmNzcz9jZDJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuYWRzay1pY29uLW1hcmt1cDpiZWZvcmUge1xuICBjb250ZW50OiBcImFcIjtcbn1cblxuLmxtdi1tYXJrdXAtZ3VpLXRvb2xiYXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbWFyZ2luOiA1cHggNXB4O1xuICBjb2xvcjogIzAwMDAwMDtcbn1cblxuLmxtdi1tYXJrdXAtZ3VpLXRvb2xiYXItY29udGVudCA+ICoge1xuICBtYXJnaW46IDAgMnB4O1xufVxuXG4ubG12LW1hcmt1cC1ndWktc3R5bGUtb3B0aW9ucyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2V4dGVuc2lvbnMvTWFya3VwL2d1aS9NYXJrdXBzR3VpLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sZUFBZTtFQUNmLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmFkc2staWNvbi1tYXJrdXA6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6IFxcXCJhXFxcIjtcXG59XFxuXFxuLmxtdi1tYXJrdXAtZ3VpLXRvb2xiYXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbWFyZ2luOiA1cHggNXB4O1xcbiAgY29sb3I6ICMwMDAwMDA7XFxufVxcblxcbi5sbXYtbWFya3VwLWd1aS10b29sYmFyLWNvbnRlbnQgPiAqIHtcXG4gIG1hcmdpbjogMCAycHg7XFxufVxcblxcbi5sbXYtbWFya3VwLWd1aS1zdHlsZS1vcHRpb25zIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!./node_modules/css-unicode-loader/index.js!./node_modules/sass-loader/dist/cjs.js!./extensions/Markup/gui/MarkupsGui.css\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGNBQWM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/sourceMaps.js\n");

/***/ }),

/***/ "./extensions/Markup/core/Markups.css":
/*!********************************************!*\
  !*** ./extensions/Markup/core/Markups.css ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_Markups_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!../../../node_modules/css-unicode-loader/index.js!../../../node_modules/sass-loader/dist/cjs.js!./Markups.css */ \"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!./node_modules/css-unicode-loader/index.js!./node_modules/sass-loader/dist/cjs.js!./extensions/Markup/core/Markups.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_Markups_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_Markups_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_Markups_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_Markups_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9jb3JlL01hcmt1cHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE1BQXFHO0FBQ3JHLE1BQTJGO0FBQzNGLE1BQWtHO0FBQ2xHLE1BQXFIO0FBQ3JILE1BQThHO0FBQzlHLE1BQThHO0FBQzlHLE1BQW9UO0FBQ3BUO0FBQ0E7O0FBRUE7O0FBRUEsNEJBQTRCLHFHQUFtQjtBQUMvQyx3QkFBd0Isa0hBQWE7O0FBRXJDLHVCQUF1Qix1R0FBYTtBQUNwQztBQUNBLGlCQUFpQiwrRkFBTTtBQUN2Qiw2QkFBNkIsc0dBQWtCOztBQUUvQyxhQUFhLDBHQUFHLENBQUMsOFBBQU87Ozs7QUFJOFA7QUFDdFIsT0FBTyxpRUFBZSw4UEFBTyxJQUFJLDhQQUFPLFVBQVUsOFBBQU8sbUJBQW1CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9NYXJrdXAvY29yZS9NYXJrdXBzLmNzcz9jNDFhIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzFdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMl0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy11bmljb2RlLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9NYXJrdXBzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzJdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtdW5pY29kZS1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vTWFya3Vwcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/Markup/core/Markups.css\n");

/***/ }),

/***/ "./extensions/Markup/gui/MarkupsGui.css":
/*!**********************************************!*\
  !*** ./extensions/Markup/gui/MarkupsGui.css ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_MarkupsGui_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!../../../node_modules/css-unicode-loader/index.js!../../../node_modules/sass-loader/dist/cjs.js!./MarkupsGui.css */ \"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!./node_modules/css-unicode-loader/index.js!./node_modules/sass-loader/dist/cjs.js!./extensions/Markup/gui/MarkupsGui.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_MarkupsGui_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_MarkupsGui_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_MarkupsGui_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_use_2_node_modules_css_unicode_loader_index_js_node_modules_sass_loader_dist_cjs_js_MarkupsGui_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL01hcmt1cC9ndWkvTWFya3Vwc0d1aS5jc3MiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsTUFBcUc7QUFDckcsTUFBMkY7QUFDM0YsTUFBa0c7QUFDbEcsTUFBcUg7QUFDckgsTUFBOEc7QUFDOUcsTUFBOEc7QUFDOUcsTUFBdVQ7QUFDdlQ7QUFDQTs7QUFFQTs7QUFFQSw0QkFBNEIscUdBQW1CO0FBQy9DLHdCQUF3QixrSEFBYTs7QUFFckMsdUJBQXVCLHVHQUFhO0FBQ3BDO0FBQ0EsaUJBQWlCLCtGQUFNO0FBQ3ZCLDZCQUE2QixzR0FBa0I7O0FBRS9DLGFBQWEsMEdBQUcsQ0FBQyxpUUFBTzs7OztBQUlpUTtBQUN6UixPQUFPLGlFQUFlLGlRQUFPLElBQUksaVFBQU8sVUFBVSxpUUFBTyxtQkFBbUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9leHRlbnNpb25zL01hcmt1cC9ndWkvTWFya3Vwc0d1aS5jc3M/MDY0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsxXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbNl0udXNlWzJdIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtdW5pY29kZS1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vTWFya3Vwc0d1aS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1s2XS51c2VbMV0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzZdLnVzZVsyXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLXVuaWNvZGUtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL01hcmt1cHNHdWkuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./extensions/Markup/gui/MarkupsGui.css\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzJkYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzP2IyMTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertBySelector.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanM/ZGU2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertStyleElement.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjtBQUNqRjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleDomAPI.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0F1dG9kZXNrLkV4dGVuc2lvbnMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleTagTransform.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./extensions/Markup/Markup.js");
/******/ 	Autodesk.Extensions.Markup = __webpack_exports__;
/******/ 	
/******/ })()
;