{"version":3,"file":"Section/Section.min.js","mappings":"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","sources":["webpack://Autodesk.Extensions/./extensions/Section/Section.css","webpack://Autodesk.Extensions/./node_modules/css-loader/dist/runtime/api.js","webpack://Autodesk.Extensions/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://Autodesk.Extensions/./node_modules/lodash/_Symbol.js","webpack://Autodesk.Extensions/./node_modules/lodash/_baseGetTag.js","webpack://Autodesk.Extensions/./node_modules/lodash/_baseTrim.js","webpack://Autodesk.Extensions/./node_modules/lodash/_freeGlobal.js","webpack://Autodesk.Extensions/./node_modules/lodash/_getRawTag.js","webpack://Autodesk.Extensions/./node_modules/lodash/_objectToString.js","webpack://Autodesk.Extensions/./node_modules/lodash/_root.js","webpack://Autodesk.Extensions/./node_modules/lodash/_trimmedEndIndex.js","webpack://Autodesk.Extensions/./node_modules/lodash/debounce.js","webpack://Autodesk.Extensions/./node_modules/lodash/isObject.js","webpack://Autodesk.Extensions/./node_modules/lodash/isObjectLike.js","webpack://Autodesk.Extensions/./node_modules/lodash/isSymbol.js","webpack://Autodesk.Extensions/./node_modules/lodash/now.js","webpack://Autodesk.Extensions/./node_modules/lodash/toNumber.js","webpack://Autodesk.Extensions/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://Autodesk.Extensions/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://Autodesk.Extensions/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://Autodesk.Extensions/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://Autodesk.Extensions/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://Autodesk.Extensions/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://Autodesk.Extensions/webpack/bootstrap","webpack://Autodesk.Extensions/webpack/runtime/compat get default export","webpack://Autodesk.Extensions/webpack/runtime/define property getters","webpack://Autodesk.Extensions/webpack/runtime/global","webpack://Autodesk.Extensions/webpack/runtime/hasOwnProperty shorthand","webpack://Autodesk.Extensions/webpack/runtime/make namespace object","webpack://Autodesk.Extensions/webpack/runtime/nonce","webpack://Autodesk.Extensions/./extensions/Section/SectionTool.js","webpack://Autodesk.Extensions/./thirdparty/three.js/TransformControls.js","webpack://Autodesk.Extensions/./extensions/Section/Section.css?c7ba","webpack://Autodesk.Extensions/./extensions/Section/Section.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.sectionPanel{line-height:14px;text-align:left;z-index:10}.section-horizontal-divider{height:1px;border-top:1px solid rgba(200,200,200,.8)}.section-submenu-select{display:block;position:relative;width:calc(100% - 40px);padding:10px 20px 0px 20px;opacity:.3}.section-panel:hover .section-submenu-select{opacity:.8}.section-submenu-selectlabel{position:relative;display:inline-block;padding-right:20px;padding-bottom:4px}.section-restart{margin:10px 20px 15px 20px;padding:6px 10px 6px 10px;width:calc(100% - 55px);cursor:pointer}.docking-panel:hover .section-restart{background-color:rgba(255,255,255,.12)}.docking-panel .section-restart:hover{background-color:rgba(166,194,255,.7);-webkit-transition:all .2s ease;-moz-transition:all .2s ease;-ms-transition:all .2s ease;-o-transition:all .2s ease;transition:all .2s ease}`, \"\",{\"version\":3,\"sources\":[\"webpack://./extensions/Section/Section.css\"],\"names\":[],\"mappings\":\"AAAA,cAAc,gBAAgB,CAAC,eAAe,CAAC,UAAU,CAAC,4BAA4B,UAAU,CAAC,yCAAyC,CAAC,wBAAwB,aAAa,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,0BAA0B,CAAC,UAAU,CAAC,6CAA6C,UAAU,CAAC,6BAA6B,iBAAiB,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,iBAAiB,0BAA0B,CAAC,yBAAyB,CAAC,uBAAuB,CAAC,cAAc,CAAC,sCAAsC,sCAAsC,CAAC,sCAAsC,qCAAqC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,2BAA2B,CAAC,0BAA0B,CAAC,uBAAuB\",\"sourcesContent\":[\".sectionPanel{line-height:14px;text-align:left;z-index:10}.section-horizontal-divider{height:1px;border-top:1px solid rgba(200,200,200,.8)}.section-submenu-select{display:block;position:relative;width:calc(100% - 40px);padding:10px 20px 0px 20px;opacity:.3}.section-panel:hover .section-submenu-select{opacity:.8}.section-submenu-selectlabel{position:relative;display:inline-block;padding-right:20px;padding-bottom:4px}.section-restart{margin:10px 20px 15px 20px;padding:6px 10px 6px 10px;width:calc(100% - 55px);cursor:pointer}.docking-panel:hover .section-restart{background-color:rgba(255,255,255,.12)}.docking-panel .section-restart:hover{background-color:rgba(166,194,255,.7);-webkit-transition:all .2s ease;-moz-transition:all .2s ease;-ms-transition:all .2s ease;-o-transition:all .2s ease;transition:all .2s ease}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","\nimport { init_TransformGizmos } from '../../thirdparty/three.js/TransformControls';\nconst debounce = require(\"lodash/debounce\");\n\n// Declared at the bottom, inside a function.\nvar SectionMeshClass = null;\nvar avp = Autodesk.Viewing.Private;\n\n/**\n * Tool that provides visual controls for the user to change the cutplane's position and angle.\n * It can (and should) be hooked to [ToolController's registerTool]{@Autodesk.Viewing.ToolController#registerTool}\n *\n * The tool can operate in a rotated coordinate system to align cutplanes and boxes for example with the project\n * north instead of true north. Cutplanes, normals etc. are internally managed in local space to align with canonical axes.\n * Therefore the coordinate system transformation has to be applied when passing values in and out.\n * By default alignment with project north of the first 3D model is used if loaded with 'applyRefPoint=true', true north otherwise.\n *\n * @param {Autodesk.Viewing.Viewer3D} viewer - Viewer3D instance\n * @param {Object} config - Configuration values\n * @param {Object} options.tintColor - Object containing attributes r, g, b in the range [0..1]\n * @param {Number} options.tintIntensity - Value range [0..1]\n * @param {Number} [options.gizmoOffsetRight] - Right bound for the gizmo position in pixel\n * @param {Number} [options.gizmoOffsetLeft] - Left bound for the gizmo position in pixel\n * @param {Number} [options.gizmoOffsetTop] - Top bound for the gizmo position in pixel\n * @param {Number} [options.gizmoOffsetBottom] - Bottom bound for the gizmo position in pixel\n * @constructor\n */\nexport var SectionTool = function(viewer, options)\n{\n    var _viewer  = viewer.impl;\n\n    var _names = [\"section\"];\n    var _active = false;\n\n    var _isDragging = false;\n    var _boxChanged = false;\n    var _isPlaneOn = true;\n    var _tintColor = options.tintColor;\n    var _tintIntensity = options.tintIntensity;\n\n    var _transRotControl;\n    var _transControl;\n    var _gizmoOffsetRight = isNaN(options.gizmoOffsetRight) ? 200 : options.gizmoOffsetRight; // 200 So the gizmo won't be covered by the View Cube.\n    var _gizmoOffsetLeft = isNaN(options.gizmoOffsetLeft) ? 80 : options.gizmoOffsetLeft;\n    var _gizmoOffsetTop = isNaN(options.gizmoOffsetTop) ? 80 : options.gizmoOffsetTop;\n    var _gizmoOffsetBottom = isNaN(options.gizmoOffsetBottom) ? 80 : options.gizmoOffsetBottom;\n    var _controlOffset = new THREE.Vector3();\n    var _controlNewPosition = new THREE.Vector3();\n\n    var _sectionGroups = [];\n    var _sectionPlanes = [];\n    var _sectionPicker = [];\n    var _activeMode = \"\";\n    var _overlayName = \"gizmo\";\n    var _touchType = null;\n    var _initialized = false;\n    var _visibleAtFirst = true;\n    var _outlineIndices = [\n        0, 1,\n        1, 3,\n        3, 2,\n        2, 0\n    ];\n    var _priority = 70;\n    var _selectionOpacity = 0.25;\n    var _selectionColor = 0x287EEA;\n\n    var _displaySectionHatches = true;\n\n    let _transform, _inverseTransform, _normalMatrix, _inverseNormalMatrix;\n\n    let _auxVec3 = new THREE.Vector3();\n\n    /**\n     * Stores a custom transform to apply to the section planes and gizmos\n     * @param {THREE.Matrix4} transform - Transformation\n     */\n    function setTransform(transform) {\n        _transform = transform;\n        _inverseTransform = _transform.clone().invert();\n        _normalMatrix = new THREE.Matrix3().getNormalMatrix(_transform);\n        _inverseNormalMatrix = new THREE.Matrix3().getNormalMatrix(_inverseTransform);\n    }\n\n    /**\n     * If the RefPoint transform is applied to the first model (we ignore other models at the moment), we return\n     * the rotational part of it to align the section planes to project north. Otherwise we return an identity transform\n     * to align with true north.\n     *\n     * @returns {THREE.Matrix4} Transformation matrix\n     */\n    function getDefaultTransform() {\n        let transform = new THREE.Matrix4();\n\n        const first3DModelData = _viewer.get3DModels()[0]?.getData();\n        if (first3DModelData && first3DModelData.loadOptions?.applyRefPoint && first3DModelData.refPointTransform) {\n            const refPointTransform = first3DModelData.refPointTransform;\n\n            const position = new THREE.Vector3();\n            const quaternion = new THREE.Quaternion();\n            const scale = new THREE.Vector3();\n            refPointTransform.decompose( position, quaternion, scale );\n\n            transform.makeRotationFromQuaternion(quaternion);\n        }\n\n        return transform;\n    }\n\n    setTransform(getDefaultTransform());\n\n    const sendAnalyticsDebounced = debounce((from, type, action) => {\n        avp.analytics.track('viewer.section', {\n            from: from,\n            type: type,\n            action: action,\n        });\n    }, 2000);\n\n    init_TransformGizmos();\n    init_SectionMesh();\n\n    function initControl() {\n\n        if (_initialized) {\n            // Verify overlays are added.\n            _viewer.addOverlay(_overlayName, _transRotControl);\n            _viewer.addOverlay(_overlayName, _transControl);\n            return;\n        }\n\n        _transRotControl = new THREE.TransformControls(_viewer.camera, _viewer.canvas, \"transrotate\");\n        _transRotControl.addEventListener('change', updateViewer);\n        _transRotControl.setSnap(Math.PI/2, Math.PI/36); // snap to 90 degs within 5 degs range\n\n        _transControl = new THREE.TransformControls(_viewer.camera, _viewer.canvas, \"translate\");\n        _transControl.addEventListener('change', updateViewer);\n        _transControl.addEventListener('change', adjustGizmoToBounds);\n\n        // add to overlay scene\n        if (_viewer.overlayScenes[_overlayName] === undefined) {\n            _viewer.createOverlayScene(_overlayName);\n        }\n        _viewer.addOverlay(_overlayName, _transRotControl);\n        _viewer.addOverlay(_overlayName, _transControl);\n\n        viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, updateControls);\n        viewer.addEventListener(Autodesk.Viewing.ISOLATE_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.HIDE_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.SHOW_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.MODEL_TRANSFORM_CHANGED_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.FRAGMENTS_LOADED_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.FRAGMENTS_UNLOADED_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.SCENE_UPDATED_EVENT, onSceneUpdated);\n\n        _initialized = true;\n    }\n\n    function deinitControl() {\n\n        if (!_initialized)\n            return;\n\n        _viewer.removeOverlay(_overlayName, _transRotControl);\n        _transRotControl.removeEventListener('change', updateViewer);\n        _transRotControl = null;\n        _viewer.removeOverlay(_overlayName, _transControl);\n        _transControl.removeEventListener('change', updateViewer);\n        _transControl.removeEventListener('change', adjustGizmoToBounds);\n        _transControl = null;\n        _viewer.removeOverlayScene(_overlayName);\n\n        viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, updateControls);\n        viewer.removeEventListener(Autodesk.Viewing.ISOLATE_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.HIDE_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.SHOW_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.MODEL_TRANSFORM_CHANGED_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.FRAGMENTS_LOADED_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.FRAGMENTS_UNLOADED_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.SCENE_UPDATED_EVENT, onSceneUpdated);\n\n        _initialized = false;\n    }\n\n    function updateViewer() {\n        _viewer.invalidate(false, false, true);\n    }\n\n    function updateControls() {\n\n        adjustGizmoToBounds();\n\n        if (_transRotControl) {\n            _transRotControl.update();\n        }\n        if (_transControl) {\n            _transControl.update();\n        }\n    }\n\n    /**\n     * Clamp position to screen bounds\n     * @param {THREE.Vector3} position - Position in world space to test\n     * @returns {THREE.Vector3|undefined} Clamped if position was out of bounds, undefined otherwise\n     */\n    function getClampedGizmoPosition(position) {\n        const client = _viewer.worldToClient(position);\n        const rect = _viewer.getCanvasBoundingClientRect();\n        let target = new THREE.Vector3().copy(client);\n\n        if (client.x < _gizmoOffsetLeft) {\n            target.x = _gizmoOffsetLeft;\n        } else if (client.x > rect.width - _gizmoOffsetRight) {\n            target.x = rect.width - _gizmoOffsetRight;\n        }\n\n        if (client.y < _gizmoOffsetTop) {\n            target.y = _gizmoOffsetTop;\n        } else if (client.y > rect.height - _gizmoOffsetBottom) {\n            target.y = rect.height - _gizmoOffsetBottom;\n        }\n\n        return target.x !== client.x || target.y !== client.y ? target : undefined;\n    }\n\n    /**\n     * Try to keep the gizmo in the valid screen bounds\n     */\n    function adjustGizmoToBounds() {\n\n        if (!_transRotControl || !_transRotControl.object) {\n            return;\n        }\n\n        // Adjust gizmo position if it is out of bounds\n        let gizmoNewClientPos = getClampedGizmoPosition(_transRotControl.position);\n        if (gizmoNewClientPos) {\n            const intersection = THREE.TransformControls.intersectObjects(gizmoNewClientPos.x, gizmoNewClientPos.y, [_transRotControl.object], _viewer.camera, false);\n            if (intersection) {\n                _transRotControl.object.getWorldPosition(_controlOffset);\n                _controlNewPosition.copy(intersection.point).sub(_controlOffset);\n                _transRotControl.setGizmoOffset(_controlNewPosition);\n            }\n        }\n    }\n\n    function updateSections() {\n        if (_active && _sectionPlanes.length === 1) {\n            updatePlaneMeshes(true);\n            updateControls();\n            updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n        }\n    }\n\n    function onSceneUpdated({ objectsMoved }) {\n        if (objectsMoved) {\n            updateSections();\n        }\n    }\n\n    /*function mix(a, b, val) {\n        return a * (1.0 - val) + b * val;\n    }*/\n\n    function getDiffuseColor(material) {\n       return (material && material.color) || new THREE.Color(0xffffff);\n    }\n\n    /*function getSpecularColor(material) {\n        return (material && material.specular) || new THREE.Color(0xffffff);\n    }\n\n    function tintColor(c) {\n        var intensity = Autodesk.Viewing.Extensions.Section.tintIntensity;\n        var tc = _tintColor;\n        c.r = mix(c.r, tc.r, intensity);\n        c.g = mix(c.g, tc.g, intensity);\n        c.b = mix(c.b, tc.b, intensity);\n    }*/\n\n    // Use the same fragment iterator for all fragments\n    var _fragIterator = new avp.FragmentIterator({ delay: 50 });\n\n    function updateCapMeshes(plane) {\n        if (!_displaySectionHatches) {\n            // LMV-5781: Do not render the section hatches if the preference is turned on.\n            return;\n        }\n        const cg = Autodesk.Viewing.Extensions.CompGeom;\n\n        //When drawing a 2D material in 3D space we will want to skip binding the G-buffer\n        //when rendering the scene that contains that material\n        _viewer.sceneAfter.skipDepthTarget = true;\n\n        _removeSections();\n\n        var section3D = new THREE.Object3D();\n        section3D.name = \"section3D\";\n        _viewer.scene.add(section3D);\n\n        var section2D = new THREE.Object3D();\n        section2D.name = \"section2D\";\n        _viewer.sceneAfter.add(section2D);\n\n        var toPlaneCoords = cg.makePlaneBasis(plane);\n        var fromPaneCoords = toPlaneCoords.clone().invert();\n\n        var mat2dname = _viewer.matman().create2DMaterial(null, {skipCircles:true, skipEllipticals:true, isScreenSpace: true, noIdOutput: true}, false, false);\n        var mat2d = _viewer.matman().findMaterial(null, mat2dname);\n        mat2d.transparent = true;\n        mat2d.depthTest = true;\n        mat2d.polygonOffset = true;\n        mat2d.polygonOffsetFactor = -1;\n        mat2d.polygonOffsetUnits = 0.1;    // 1.0 is usually way too high, see LMV-1072\n        mat2d.cutplanes = _otherCutPlanes; // make sure that cap meshes respect cutplanes from other tools\n        mat2d.doNotCut = true;\n\n        var box = new THREE.Box3();\n\n        var models = _viewer.modelQueue().getModels().filter(m => !m.getDoNotCut());\n\n        var intersects = [];\n        var material;\n        const matrixWorld = new THREE.Matrix4();\n\n        // Start iterating the fragments\n        _fragIterator.start(models, function(fragId, dbId, model, lastFrag) {\n\n            // Collect intersections for this fragment\n            var frags = model.getFragmentList();\n            if (frags.isFragVisible(fragId)) {\n                frags.getWorldBounds(fragId, box);\n                if (cg.xBoxPlane(plane, box)) {\n                    const geometry = frags.getGeometry(fragId);\n                    const _material = frags.getMaterial(fragId);\n\n                    if (geometry && !geometry.is2d && !geometry.isLines && _material.cutplanes) {\n                        material = _material;\n                        frags.getWorldMatrix(fragId, matrixWorld);\n                        cg.xMeshPlane(plane, {geometry, matrixWorld, fragId}, intersects);\n                    }\n                }\n            }\n\n            // If this is the last fragment for dbId, process the intersections\n            if (lastFrag) {\n                if (intersects.length) {\n\n                    var bbox = new THREE.Box3();\n                    cg.convertToPlaneCoords(toPlaneCoords, intersects, bbox);\n\n                    //Create the 2D line geometry\n                    var vbb = new avp.VertexBufferBuilder(false, 8 * intersects.length);\n\n                    var color = getDiffuseColor(material);\n                    var r = 0|(color.r * 0.25)*255.5;\n                    var g = 0|(color.g * 0.25)*255.5;\n                    var b = 0|(color.b * 0.25)*255.5;\n\n                    var c = 0xff000000 | (b<<16) | (g<<8) | r;\n\n\n                    var eset = new cg.EdgeSet(intersects, bbox, bbox.getSize(new THREE.Vector3()).length() * 1e-6);\n                    eset.snapEdges();\n                    eset.sanitizeEdges();\n                    eset.stitchContours();\n\n                    //Create the 3D mesh\n                    var cset = eset.triangulate({skipOpenContour: true});\n\n                    if (cset) {\n\n                        for (let j=0; j<cset.contours.length; j++) {\n\n                            var cntr = cset.contours[j];\n\n                            for (var k=1; k<cntr.length; k++) {\n                                var pt1 = cset.pts[cntr[k-1]];\n                                var pt2 = cset.pts[cntr[k]];\n                                vbb.addSegment(pt1.x, pt1.y, pt2.x, pt2.y, 0, -2.0, /*isClosed ? c : rc*/c, dbId, 0);\n                            }\n\n                        }\n\n\n                        var mdata = { mesh: vbb.toMesh() };\n\n                        var bg2d = avp.BufferGeometryUtils.meshToGeometry(mdata);\n\n                        bg2d.streamingDraw = true;\n                        bg2d.streamingIndex = true;\n\n                        var mesh2d = new THREE.Mesh(bg2d, mat2d);\n\n                        mesh2d.matrix.copy(fromPaneCoords);\n                        mesh2d.matrixAutoUpdate = false;\n                        mesh2d.frustumCulled = false;\n                        mesh2d.modelId = model.id;      // So we can look it up later\n                        mesh2d.dbId = dbId;\n                        section2D.add(mesh2d);\n\n                        //Create triangulated capping polygon\n                        {\n                            if (!cset.triangulationFailed) {\n\n                                var bg = cset.toPolygonMesh(material.packedNormals);\n\n                                var mat = _viewer.matman().cloneMaterial(material, model);\n\n                                // If the material is prism, clear all the map definitions.\n                                if (mat.prismType != null) {\n                                    mat.defines = {};\n                                    mat.defines[mat.prismType.toUpperCase()] = \"\";\n                                    if (mat.prismType == \"PrismWood\") {\n                                        mat.defines[\"NO_UVW\"] = \"\";\n                                    }\n                                }\n\n                                mat.packedNormals = material.packedNormals;\n                                mat.mrtIdBuffer = material.mrtIdBuffer;\n                                mat.mrtNormals = material.mrtNormals;\n                                mat.cutplanes = _otherCutPlanes; // make sure that cap meshes respect cutplanes from other tools\n                                mat.side = THREE.FrontSide;\n                                mat.depthTest = true;\n                                mat.map = null;\n                                mat.bumpMap = null;\n                                mat.normalMap = null;\n                                mat.alphaMap = null;\n                                mat.specularMap = null;\n                                mat.transparent = false;\n                                mat.depthWrite = true;\n                                mat.hatchPattern = true;\n                                mat.needsUpdate = true;\n                                mat.doNotCut = true;\n\n                                var materialId = material.id + 2;\n                                var angle = materialId * Math.PI * 0.125;\n                                var tan = Math.tan(angle);\n                                mat.hatchParams = new THREE.Vector2(tan, 10.0);\n                                mat.hatchTintColor = new THREE.Color(_tintColor.r, _tintColor.g, _tintColor.b);\n                                mat.hatchTintIntensity = _tintIntensity;\n\n                                var capmesh = new THREE.Mesh(bg, mat);\n                                capmesh.matrix.copy(fromPaneCoords);\n                                capmesh.matrixAutoUpdate = false;\n                                capmesh.modelId = model.id;      // So we can look it up later\n                                capmesh.dbId = dbId;\n                                capmesh.fragId = intersects.fragId;\n\n                                section3D.add(capmesh);\n                            }\n\n                        }\n\n                    }\n                }\n\n                // Clear intersections for the next dbId\n                intersects.length = 0;\n            } // last Fragment for dbId\n\n        }, () => {\n            // The cap scene is in sceneAfter, so we need to redraw the model to see the caps.\n            // LMV-2571 - clear the render, as otherwise we will draw transparent objects atop themselves.\n            _viewer.invalidate(true, true);\n        }); //_fragIterator.start\n\n    }\n\n    // We use an own cut plane set to distinguish our own cut planes from others.\n    var _ownCutPlaneSet = 'Autodesk.Viewing.Extension.Section.SectionTool';\n\n    // Make sure that the viewer always uses the SectionTool's plane to adjust 2D rendering resolution.\n    _viewer.setCutPlaneSetFor2DRendering(_ownCutPlaneSet);\n\n    // Keep track of cutplanes that are not our own, because we have to apply them to our cap meshes\n    var _otherCutPlanes = [];\n\n    // Trigger update of cap mesh materials if number of cutplanes have changed by other tools\n    function updateCapMaterials(mrtOnly) {\n\n        function update(section) {\n            // apply cutplanes to all active cap meshes\n            if (!section) {\n                return;\n            }\n\n            section.traverse(function(obj) {\n                // we only care for THREE.Mesh with material\n                if (!(obj instanceof THREE.Mesh) || !obj.material) {\n                    return;\n                }\n                if (mrtOnly) {\n                    _viewer.matman().adjustMaterialMRTSetting(obj.material);\n                } else {\n                    obj.material.needsUpdate = true;\n                }\n            });\n        }\n\n        update(_viewer.scene.getObjectByName(\"section3D\"));\n        update(_viewer.sceneAfter.getObjectByName(\"section2D\"));\n    }\n\n    /**\n     * Returns all transformed bounding box corners\n     * @param {THREE.Box3} bbox - Input Bounding Box\n     * @param {THREE.Matrix4} transform - Transformation to apply to each point\n     * @returns {THREE.Vector3[]} Transformed corners\n     */\n    function getBBoxCorners(bbox, transform) {\n        var points = [\n            new THREE.Vector3(bbox.min.x, bbox.min.y, bbox.min.z).applyMatrix4(transform),\n            new THREE.Vector3(bbox.min.x, bbox.min.y, bbox.max.z).applyMatrix4(transform),\n            new THREE.Vector3(bbox.min.x, bbox.max.y, bbox.min.z).applyMatrix4(transform),\n            new THREE.Vector3(bbox.min.x, bbox.max.y, bbox.max.z).applyMatrix4(transform),\n            new THREE.Vector3(bbox.max.x, bbox.min.y, bbox.min.z).applyMatrix4(transform),\n            new THREE.Vector3(bbox.max.x, bbox.min.y, bbox.max.z).applyMatrix4(transform),\n            new THREE.Vector3(bbox.max.x, bbox.max.y, bbox.min.z).applyMatrix4(transform),\n            new THREE.Vector3(bbox.max.x, bbox.max.y, bbox.max.z).applyMatrix4(transform),\n        ];\n        return points;\n    }\n\n    /**\n     * Creates quadratic triangle and outline meshes for the given plane\n     * @param {THREE.Plane} plane\n     * @param {THREE.Vector3} position - Mesh position, will be reprojected to plane\n     * @param {Number} [size] - Size of the plane mesh\n     * @returns {SectionMesh}\n     */\n    function createPlaneMesh(plane, position, size = 1) {\n        var quat = new THREE.Quaternion().setFromUnitVectors(new THREE.Vector3(0, 0, 1), plane.normal);\n        var geometry;\n\n        geometry = new THREE.PlaneBufferGeometry(size, size);\n\n        var material = new THREE.MeshBasicMaterial({\n            opacity: 0,\n            color: _selectionColor,\n            side: THREE.DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n            transparent: true\n        });\n\n        var mesh = new SectionMeshClass(geometry, material, plane);\n        const pt = plane.projectPoint(position, new THREE.Vector3());\n        mesh.position.copy(pt);\n        mesh.quaternion.multiply(quat);\n\n        // add outline with inverted background color\n        var presetIndex = _viewer.currentLightPreset();\n        presetIndex = Math.max(0, presetIndex);\n        var bgColor = Autodesk.Viewing.Private.LightPresets[presetIndex].bgColorGradient;\n        // TODO: these calculations can lead to float colors, which are ignored by three.js and instead interpreted as white\n        // In r125 the float colors generate an \"Unknown color\" warning\n        var color = \"rgb(\" + (255-bgColor[0]) + \",\" + (255-bgColor[1]) + \",\" + (255-bgColor[2]) + \")\";\n        var lineMaterial = new THREE.LineBasicMaterial({color: color, linewidth:1, depthTest: false, depthWrite: false, transparent: true});\n\n        var pos = mesh.geometry.getAttribute('position');\n        const vertices = [];\n        for (var i = 0; i < _outlineIndices.length; i++) {\n            vertices.push(new THREE.Vector3().fromBufferAttribute(pos, _outlineIndices[i]));\n        }\n\n        const lineGeometry = new THREE.BufferGeometry().setFromPoints(vertices);\n        lineGeometry.isLines = true;\n\n        const line = new THREE.Line(lineGeometry, lineMaterial);\n        mesh.add(line);\n        mesh.outline = line;\n\n        return mesh;\n    }\n\n    function updatePlaneMeshes(rebuild) {\n\n        traverseSections(function(child) {\n            if (child instanceof SectionMeshClass) {\n\n                let pos;\n                if (child.connectivity.length > 0) {\n                    // section box\n                    var minv = child.matrixWorld.clone().invert();\n                    const pt = new THREE.Vector3();\n                    pos = child.geometry.getAttribute('position');\n                    for (let i = 0; i < pos.count; i++) {\n                        var connect = child.connectivity[i];\n                        if (intersectPlanes(child.plane, connect[0], connect[1], pt) !== null) {\n                            pt.applyMatrix4(minv);\n                            pos.setXYZ(i, pt.x, pt.y, pt.z);\n                        }\n                    }\n                    pos.needsUpdate = true;\n                    child.geometry.computeBoundingBox();\n                    child.geometry.computeBoundingSphere();\n                } else if (rebuild) {\n                    // section plane\n                    var bbox = _viewer.getVisibleBounds();\n                    var size = 2.0 * bbox.getBoundingSphere(new THREE.Sphere()).radius;\n                    const pt = child.plane.projectPoint(bbox.getCenter(new THREE.Vector3()), new THREE.Vector3());\n                    child.geometry = new THREE.PlaneBufferGeometry(size, size);\n                    child.position.copy(pt);\n\n                    pos = child.geometry.getAttribute('position');\n                }\n                if (pos) {\n                    for (let i = 0; i < _outlineIndices.length; i++) {\n                        child.outline.geometry.attributes.position.setXYZ(i,\n                            pos.getX(_outlineIndices[i]),\n                            pos.getY(_outlineIndices[i]),\n                            pos.getZ(_outlineIndices[i])\n                        );\n                    }\n                    child.outline.geometry.attributes.position.needsUpdate = true;\n                }\n            }\n        });\n    }\n\n    function traverseSections(callback) {\n        for (var i = 0; i < _sectionGroups.length; i++) {\n            _sectionGroups[i].traverse(callback);\n        }\n    }\n\n    function setSectionPlanes(fireEvent=true) {\n        traverseSections(function(child) {\n            if (child instanceof SectionMeshClass) {\n                child.update();\n            }\n        });\n        if (_sectionPlanes.length === 1) {\n            updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n        }\n        _viewer.setCutPlaneSet(_ownCutPlaneSet, _sectionPlanes, fireEvent);\n    }\n\n    function showPlane(set) {\n        for (var i = 0; i < _sectionGroups.length; i++) {\n            _sectionGroups[i].visible = set;\n        }\n\n        if (_isPlaneOn !== set)\n            updateViewer();\n\n        _isPlaneOn = set;\n    }\n\n    function showSection(set) {\n        if (set && _sectionPlanes.length > 0) {\n            if (_sectionPlanes.length === 1) {\n                updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n            }\n            _viewer.setCutPlaneSet(_ownCutPlaneSet, _sectionPlanes);\n        }\n        showPlane(set);\n    }\n\n    function attachControl(control, mesh) {\n        control.attach(mesh);\n        control.setPosition(mesh.position);\n        control.visible = true;\n    }\n\n    /**\n     * Checks whether the normal points away from the camera and if so flips it\n     * @param {THREE.Vector3} normal\n     * @returns true, if normal was flipped\n     */\n    function checkNormal(normal) {\n        // flip normal if facing inward as eye direction\n        var eyeVec = _viewer.api.navigation.getEyeVector();\n        if (eyeVec.dot(normal) > 0) {\n            normal.negate();\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Does the normal need to be flipped to point to the camera ?\n     * @param {THREE.Vector3} normal\n     * @returns {Boolean} True, if it needs to be flipped\n     */\n    function shouldFlipNormal(normal) {\n        // flip normal if facing inward as eye direction\n        var eyeVec = _viewer.api.navigation.getEyeVector();\n        return eyeVec.dot(normal) > 0;\n    }\n\n    /**\n     * Define plane in local space\n     * @param {THREE.Vector3} normal - Plane normal in local space\n     */\n    this.setPlaneLocal = function(normal) {\n        let normalWorld = normal.clone().applyMatrix3(_normalMatrix).normalize();\n        this.setPlane(normalWorld, undefined, true, true);\n    };\n\n    /**\n     * Define plane in world space\n     * @param {THREE.Vector3} normal - Plane normal in world space\n     * @param {Number} [distance] - Plane distance in world space,\n     *                              uses distance to intersection through screen center if none is provided\n     * @param {Boolean} [fireEvent] - If ture, fire cutplane change event\n     * @param {Boolean} [checkNormal] - If true, plane gets oriented towards the camera\n     */\n    this.setPlane = function(normal, distance, fireEvent=true, checkNormal=false) {\n        var obbox = _viewer.getVisibleBounds();\n        var center = obbox.getCenter(new THREE.Vector3());\n        var group = new THREE.Group();\n\n        group.applyMatrix4(_transform);\n        group.updateMatrixWorld();\n\n        if (!distance)\n            distance = this.getSectionDistance(normal);\n\n        if (checkNormal && shouldFlipNormal(normal)) {\n            normal.negate();\n            distance = -distance;\n        }\n\n        // Calculate the plane signed distance using the dot product of the center point of the scene bounding box\n        // and the normal vector.\n        distance = (distance !== undefined) ? distance : -1 * center.dot(normal);\n\n        // Plane and mesh are defined in local space so we need to transform normal and center first\n        var plane = new THREE.Plane(normal.clone().applyMatrix3(_inverseNormalMatrix).normalize(), distance);\n        var mesh = createPlaneMesh(plane,\n                                   center.clone().applyMatrix4(_inverseTransform),\n                                   2.0 * obbox.getBoundingSphere(new THREE.Sphere()).radius);\n\n        group.add(mesh);\n\n        // Apply transformations before using the plane info\n        mesh.update();\n\n        _sectionPlanes.push(mesh.planeVec);\n        _sectionGroups.push(group);\n        _viewer.addOverlay(_overlayName, group);\n        if (_transRotControl) {\n            attachControl(_transRotControl, mesh);\n            mesh.material.opacity = 0;\n            centerPlaneArrow(mesh);\n            _transRotControl.showRotationGizmos(true);\n            _sectionPicker = _transRotControl.getPicker();\n\n        }\n        setSectionPlanes(fireEvent);\n        if (_active) {\n            updateControls();\n        }\n    };\n\n    function getCenterPoint(mesh) {\n        var middle = new THREE.Vector3();\n        var geometry = mesh.geometry;\n\n        geometry.computeBoundingBox();\n\n        middle.x = (geometry.boundingBox.max.x + geometry.boundingBox.min.x) / 2;\n        middle.y = (geometry.boundingBox.max.y + geometry.boundingBox.min.y) / 2;\n        middle.z = (geometry.boundingBox.max.z + geometry.boundingBox.min.z) / 2;\n\n        mesh.localToWorld( middle );\n        return middle;\n    }\n\n    /**\n     * Places the arrow at the center of the passed mesh.\n     * @param {THREE.Mesh} mesh - Plane mesh\n     * @returns {Boolean} True, if the arrow could be placed\n     */\n    function centerPlaneArrow(mesh) {\n        if (!_transRotControl || !mesh) return false;\n        // Get the center of the plane and\n        // calculate the x,y,z offset between the plane position and the plane center\n        var centerOffset = getCenterPoint(mesh).sub(mesh.getWorldPosition(new THREE.Vector3()));\n\n        // Set the gizmo offset\n        _transRotControl.setGizmoOffset(centerOffset);\n        return true;\n    }\n\n    /**\n     * Computes the maximal distance between the transformed corner points of the AABox and a plane\n     * @param {THREE.Box3} bbox - Axis Aligned Bounding Box\n     * @param {THREE.Plane} plane\n     * @param {THREE.Matrix4} [transform] - Transform to apply\n     * @returns {Number} Maximal distance\n     */\n    function getMaxDistanceToPlane(bbox, plane, transform = new THREE.Matrix4()) {\n        let points = getBBoxCorners(bbox, transform);\n        let max = Number.MIN_VALUE;\n\n        for (let i = 0; i < points.length; ++i) {\n            const perpendicularMagnitude = plane.distanceToPoint( points[i] );\n            if (perpendicularMagnitude > max)\n                max = perpendicularMagnitude;\n        }\n        return max;\n    }\n\n    function setBox(planeSet) {\n        var normals = [\n            new THREE.Vector3(1, 0, 0),\n            new THREE.Vector3(0, 1, 0),\n            new THREE.Vector3(0, 0, 1),\n            new THREE.Vector3(-1, 0, 0),\n            new THREE.Vector3(0, -1, 0),\n            new THREE.Vector3(0, 0, -1)\n        ];\n\n        var connectivities = [\n            [[1, 2], [1, 5], [2, 4], [4, 5]], // 0\n            [[3, 5], [0, 5], [2, 3], [0, 2]], // 1\n            [[1, 3], [0, 1], [3, 4], [0, 4]], // 2\n            [[1, 5], [1, 2], [4, 5], [2, 4]], // 3\n            [[2, 3], [0, 2], [3, 5], [0, 5]], // 4\n            [[0, 1], [3, 1], [0, 4], [3, 4]]  // 5\n        ];\n\n        var group = new THREE.Group();\n        var obbox = _viewer.getVisibleBounds();\n        var bbox = new THREE.Box3(obbox.min, obbox.getCenter(new THREE.Vector3()));\n        var centerGlobal = bbox.getCenter(new THREE.Vector3());\n        var planes = [], meshes = [];\n        var mesh, plane;\n\n        // Initialize from planeSet ONLY if it's an AABB.\n        var loadingBox = false;\n        if (planeSet && planeSet.length === 6) {\n            // Transform planes to local space\n            for (let i = 0; i < planeSet.length; ++i) {\n                let plane = new THREE.Plane(new THREE.Vector3(planeSet[i].x, planeSet[i].y, planeSet[i].z), planeSet[i].w);\n                plane.applyMatrix4(_inverseTransform);\n                planes.push(plane);\n            }\n\n            if (1.0 - planes[0].normal.x <= Number.EPSILON) {\n                // Assume that the order on planes is the same as in Array of normals defined above\n                bbox = new THREE.Box3(\n                    new THREE.Vector3(planes[3].constant, planes[4].constant, planes[5].constant),\n                    new THREE.Vector3(-planes[0].constant, -planes[1].constant, -planes[2].constant)\n                );\n\n                centerGlobal = bbox.getCenter(new THREE.Vector3()).applyMatrix4(_transform);\n                loadingBox = true;\n            }\n        }\n\n        ////center = obbox.max;   // Use this to initialize the box around the model\n        ////bbox = obbox.clone(); // Use this to initialize the box around the model\n\n        group.applyMatrix4(_transform);\n        group.updateMatrixWorld();\n\n        for (let i = 0; i < normals.length; i++) {\n            if (!loadingBox) {\n                plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normals[i], centerGlobal.clone().applyMatrix4(_inverseTransform));\n                let offset = getMaxDistanceToPlane(bbox, plane, _inverseTransform);\n\n                plane.constant -= offset;\n                planes.push(plane);\n            }\n\n            mesh = createPlaneMesh(planes[i], centerGlobal);\n\n            group.add(mesh);\n            meshes.push(mesh);\n            mesh.update();\n\n            _sectionPlanes.push(mesh.planeVec);\n        }\n\n        // build connectivity\n        for (let i = 0; i < meshes.length; i++) {\n            mesh = meshes[i];\n            var connectivity = connectivities[i];\n            for (var j = 0; j < connectivity.length; j++) {\n                var nc = [];\n                var ct = connectivity[j];\n                for (var k = 0; k < ct.length; k++) {\n                    nc.push(planes[ct[k]]);\n                }\n                mesh.connectivity.push(nc);\n            }\n        }\n\n        _sectionGroups.push(group);\n        _viewer.addOverlay(_overlayName, group);\n\n        setSectionPlanes();\n        updatePlaneMeshes();\n\n        plane = _sectionGroups[0].children[0];\n        attachControl(_transRotControl, plane);\n        // Set the plane opacity\n        plane.material.opacity = _selectionOpacity;\n        centerPlaneArrow(plane);\n\n        attachControl(_transControl, _sectionGroups[0]);\n        _transRotControl.showRotationGizmos(false);\n        _sectionPicker = _transRotControl.getPicker().concat(_transControl.getPicker());\n        // Calculate the offset to the max point of the bounding box.\n        var cornerOffset = new THREE.Vector3();\n        if (intersectPlanes(planes[0], planes[1], planes[2], cornerOffset) !== null) {\n            _transControl.setGizmoOffset(cornerOffset.add(new THREE.Vector3().setFromMatrixPosition(_transform).negate()));\n        }\n    }\n\n    var intersectPlanes = (function () {\n        var m = new THREE.Matrix3();\n        var n23 = new THREE.Vector3();\n        var n31 = new THREE.Vector3();\n        var n12 = new THREE.Vector3();\n        return function(plane1, plane2, plane3, optionalTarget) {\n            m.set(plane1.normal.x, plane1.normal.y, plane1.normal.z,\n                  plane2.normal.x, plane2.normal.y, plane2.normal.z,\n                  plane3.normal.x, plane3.normal.y, plane3.normal.z);\n\n            var det = m.determinant();\n            if (det === 0) return null;\n\n            n23.crossVectors(plane2.normal, plane3.normal).multiplyScalar(-plane1.constant);\n            n31.crossVectors(plane3.normal, plane1.normal).multiplyScalar(-plane2.constant);\n            n12.crossVectors(plane1.normal, plane2.normal).multiplyScalar(-plane3.constant);\n\n            var result = optionalTarget || new THREE.Vector3();\n            return result.copy(n23).add(n31).add(n12).divideScalar(det);\n        };\n    })();\n\n    var intersectObjects = function(pointer, objects, recursive) {\n        return THREE.TransformControls.intersectObjects(pointer.canvasX, pointer.canvasY, objects, _viewer.camera, recursive);\n    };\n\n    // public functions\n\n    /**\n     * When active, the geometry will be sectioned by the current set cut plane.\n     * @returns {boolean}\n     */\n    this.isActive = function() {\n        return _active;\n    };\n\n    /**\n     * Returns the signed distance of the sectioning plane from the origin\n     * @returns {Number} distance. Null distance is returned if there is no hit found from raycast\n     */\n    this.getSectionDistance = function(normal) {\n        // Find a target point in the direction of the camera\n        var eyeVec = _viewer.api.navigation.getEyeVector();\n        var hit = _viewer.rayIntersect(new THREE.Ray(_viewer.camera.position, eyeVec));\n\n        // Distance\n        return hit && hit.intersectPoint && -1 * hit.intersectPoint.dot(normal);\n    };\n\n    /**\n     * Enables the cut planes that were created by the viewer.setCutPlanes() function.\n     * @param {boolean} [fireEvent] - if set to false the av.CUTPLANES_CHANGE_EVENT event will not be fired.\n     */\n    this.setViewerSection = function(fireEvent=true) {\n        this.clearSection(fireEvent);\n        var normal;\n        // Attempt to initialize the tool with a plane that is already set.\n        var planeSet = _viewer.getCutPlaneSet('__set_view');\n        if (planeSet.length !== 1) return;\n\n        _transRotControl.clientScale = 1;\n        var v4 = planeSet[0];\n        normal = new THREE.Vector3(v4.x, v4.y, v4.z);\n        var distance = v4.w;\n        this.setPlane(normal, distance, fireEvent);\n        _activeMode = 'SET_VIEW_PLANE';\n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined, fireEvent);\n    };\n\n\n\n    /**\n     * Facilitates the initialization of a cut plane\n     *\n     * @param {String} name - Either 'X', 'Y', 'Z', 'BOX', 'OBJ_BOX', 'OBJ_SET_VIEW_PLANE' or 'SET_VIEW_PLANE'\n     */\n    this.setSection = function(name) {\n        this.clearSection();\n        var normal;\n        _transRotControl.clientScale = 1;\n\n        // Attempt to initialize the tool with a plane that is already set.\n        var planeSet = _viewer.getCutPlaneSet('__set_view');\n        if (planeSet.length === 1 && name !== 'BOX' && name !== 'OBJ_SET_VIEW_PLANE') {\n            name = 'SET_VIEW_PLANE';\n        }\n        switch (name) {\n            case 'X':\n                normal = new THREE.Vector3(1, 0, 0);\n                this.setPlaneLocal(normal);\n                break;\n            case 'Y':\n                normal = new THREE.Vector3(0, 1, 0);\n                this.setPlaneLocal(normal);\n                break;\n            case 'Z':\n                normal = new THREE.Vector3(0, 0, 1);\n                this.setPlaneLocal(normal);\n                break;\n            case 'OBJ_SET_VIEW_PLANE':\n            case 'SET_VIEW_PLANE':\n                var v4 = planeSet[0];\n                normal = new THREE.Vector3(v4.x, v4.y, v4.z);\n                this.setPlane(normal, v4.w);\n                break;\n            case 'OBJ_BOX':\n            case 'BOX':\n                setBox(planeSet);\n                _transRotControl.clientScale = 2;\n                this.recomputePivot();\n                break;\n        }\n        _activeMode = name;\n\n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined);\n    };\n\n    /**\n     * Facilitates the initialization of a cut plane from a normal and distance\n     *\n     * @param {THREE.Vector4} normal (x,y,z) and distance (w)\n     * @param {Number} distance\n     */\n    this.setSectionFromPlane = function(cutplane) {\n        this.clearSection();\n        this.setPlane(new THREE.Vector3(cutplane.x, cutplane.y, cutplane.z), cutplane.w);\n        _activeMode = \"\";\n\n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined);\n    };\n\n    /**\n     * Set the active mode\n     * @param {string} [name] - active mode name\n     * @private\n     */\n    this.setActiveMode = function(name) {\n        _activeMode = name || \"\";\n    };\n\n    /**\n     * Remove the section graphics\n     */\n    function _removeSections() {\n        var oldsection3D = _viewer.scene.getObjectByName(\"section3D\");\n        if (oldsection3D)\n            _viewer.scene.remove(oldsection3D);\n        var oldsection2D = _viewer.sceneAfter.getObjectByName(\"section2D\");\n        if (oldsection2D)\n            _viewer.sceneAfter.remove(oldsection2D);\n    }\n\n    this.setDisplaySectionHatches = function(value) {\n        _displaySectionHatches = value;\n    };\n\n    this.clearCapMeshes = function() {\n        _removeSections();\n    };\n\n    this.updateCapMeshes = function(plane, capMeshOnly) {\n        if (!plane) {\n            return;\n        }\n\n        if (!capMeshOnly) {\n            this.setPlane(plane.normal, plane.constant);\n        }\n        updateCapMeshes(plane);\n    };\n\n    /**\n     * Removes any (and all) currently set cut plane(s).\n     * @param {boolean} [fireEvent] - if set to false the av.CUTPLANES_CHANGE_EVENT event will not be fired.\n     */\n    this.clearSection = function(fireEvent=true) {\n\n        if (_transRotControl)\n            _transRotControl.detach();\n\n        if (_transControl)\n            _transControl.detach();\n\n        // remove all sections\n        while(_sectionPlanes.length > 0) {\n            _sectionPlanes.pop();\n        }\n\n        while(_sectionGroups.length > 0) {\n            var group = _sectionGroups.pop();\n            _viewer.removeOverlay(_overlayName, group);\n        }\n\n        _fragIterator.start(null);      // Shutdown iterator\n        _removeSections();\n\n        _viewer.setCutPlaneSet(_ownCutPlaneSet, null, fireEvent);\n    };\n\n    this.isPlaneOn = function() {\n        return _isPlaneOn;\n    };\n\n    this.showPlane = function(set) {\n        showPlane(set);\n    };\n\n    /**\n     * Whether translation and rotation controls are visible or not.\n     * @param {Boolean} set\n     */\n    this.attachControl = function(set) {\n        if (!_transRotControl || !_transControl) {\n            return;\n        }\n\n        if (set) {\n            attachControl(_transRotControl, _sectionGroups[0].children[0]);\n            _transRotControl.highlight();\n            if (_activeMode === 'BOX')\n                attachControl(_transControl, _sectionGroups[0]);\n        } else {\n            _transRotControl.detach();\n            _transControl.detach();\n        }\n    };\n\n    /**\n     * Invokes setSection with the last set of parameters used.\n     */\n    this.resetSection = function() {\n        this.setSection(_activeMode);\n    };\n\n    // tool interface\n\n    this.getNames = function() {\n        return _names;\n    };\n\n    this.getName = function() {\n        return _names[0];\n    };\n\n    this.register = function() {\n    };\n\n    this.deregister = function() {\n        this.clearSection();\n        deinitControl();\n    };\n\n    this.getPriority = function() {\n        return _priority;\n    };\n\n    /**\n     * [ToolInterface] Activates the tool\n     * @param {String} name - unused\n     */\n    this.activate = function(/*name*/) {\n\n        setTransform(getDefaultTransform());\n\n        initControl();\n\n        _active = true;\n        _isDragging = false;\n        _visibleAtFirst = true;\n\n        // keep only one section all the time per design\n        _sectionPlanes = _sectionPlanes || [];\n\n        showSection(true);\n    };\n\n    /**\n     * [ToolInterface] Deactivates the tool\n     * @param {String} name - unused\n     */\n    this.deactivate = function(/*name*/) {\n        _active = false;\n        _isDragging = false;\n\n        if (!this.keepCutPlanesOnDeactivate) {\n            // Clean sections and gizmos when deactivating the tool.\n            _fragIterator.start(null); // Shutdown iterator\n            _removeSections();\n\n            showSection(false);\n            _viewer.setCutPlaneSet(_ownCutPlaneSet);\n        } else {\n            // In case that keepCutPlanesOnDeactivate is set, the control gizmos will disappear, but the sections will stay.\n            _viewer.removeOverlay(_overlayName, _transRotControl);\n            _viewer.removeOverlay(_overlayName, _transControl);\n\n            for (let i = 0; i < _sectionGroups.length; i++) {\n                _viewer.removeOverlay(_overlayName, _sectionGroups[i]);\n            }\n        }\n\n        _transRotControl.detach();\n        _transControl.detach();\n    };\n\n    this.update = function(/*highResTimestamp*/) {\n        return false;\n    };\n\n    this.handleSingleClick = function(event/*, button*/) {\n        var pointer = event;\n        var result = intersectObjects(pointer, _sectionGroups[0]?.children);\n        _sectionGroups[0].children.forEach(function(child) {\n            child.material.opacity = 0;\n        });\n\n        if (result) {\n            const prevObject = _transRotControl.object;\n            attachControl(_transRotControl, result.object);\n            _transRotControl.highlight();\n            result.object.material.opacity = _sectionPlanes.length > 1 ? _selectionOpacity : 0;\n            // Only in case of a section box, and only when clicking on a different plane - re-center the arrow.\n            if (_sectionGroups[0]?.children.length > 1 && prevObject !== result.object) {\n                centerPlaneArrow(result.object);\n            }\n            updateViewer();\n            adjustGizmoToBounds();\n        }\n\n        return false;\n    };\n\n    this.handleDoubleClick = function(/*event, button*/) {\n        return false;\n    };\n\n    this.handleSingleTap = function(event) {\n        return this.handleSingleClick(event, 0);\n    };\n\n    this.handleDoubleTap = function(/*event*/) {\n        return false;\n    };\n\n    this.handleKeyDown = function(/*event, keyCode*/) {\n        return false;\n    };\n\n     this.handleKeyUp = function(/*event, keyCode*/) {\n        return false;\n    };\n\n    this.handleWheelInput = function(/*delta*/) {\n        return false;\n    };\n\n    this.handleButtonDown = function(event/*, button*/) {\n        _isDragging = true;\n        if (_transControl.onPointerDown(event))\n            return true;\n        return _transRotControl.onPointerDown(event);\n    };\n\n    this.handleButtonUp = function(event/*, button*/) {\n        _isDragging = false;\n        if (_boxChanged) {\n            _boxChanged = false;\n            this.recomputePivot();\n        }\n        if (_transControl.onPointerUp(event))\n            return true;\n        return _transRotControl.onPointerUp(event);\n    };\n\n    this.handleMouseMove = function(event) {\n        if (_isDragging) {\n            if (_transControl.onPointerMove(event) ) {\n                _boxChanged = true;\n                setSectionPlanes();\n                _transRotControl.update();\n\n                sendAnalyticsDebounced('Canvas', 'Box', 'translate');\n\n                return true;\n            }\n            if (_transRotControl.onPointerMove(event)) {\n                _boxChanged = true;\n                setSectionPlanes();\n                updatePlaneMeshes();\n                // TODO: Try to position the triad to the max corner of the section box when moving the plane arrow.\n                // Currently, it is positioned at the max point of the section box.\n\n                if ( _activeMode.includes('BOX') )\n                    sendAnalyticsDebounced('Canvas', 'Box', 'transform');\n                else {\n                    const mode = _transRotControl.axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n                    sendAnalyticsDebounced('Canvas', 'Plane', mode);\n                }\n\n                return true;\n            }\n        }\n\n        _transControl.visible = _transControl.object !== undefined;\n\n        if (event.pointerType !== 'touch') {\n            var pointer = event;\n            var result = intersectObjects(pointer, _sectionGroups[0]?.children);\n            if (result) {\n                _visibleAtFirst = false;\n            }\n\n            // show gizmo + plane when intersecting on non-touch\n            var visible = _visibleAtFirst || (result || intersectObjects(pointer, _sectionPicker, true)) ? true : false;\n            _transRotControl.visible = visible;\n            _transControl.visible = _transControl.visible && visible;\n            showPlane(visible);\n        }\n\n        if (_transControl.onPointerHover(event))\n            return true;\n\n        return _transRotControl.onPointerHover(event);\n    };\n\n    this.handleGesture = function(event) {\n        switch (event.type) {\n            case \"dragstart\":\n                _touchType = \"drag\";\n                // Single touch, fake the mouse for now...\n                return this.handleButtonDown(event, 0);\n\n            case \"dragmove\":\n                return (_touchType === \"drag\") ? this.handleMouseMove(event) : false;\n\n            case \"dragend\":\n                if (_touchType === \"drag\") {\n                    _touchType = null;\n                    return this.handleButtonUp(event, 0);\n                }\n                return false;\n        }\n        return false;\n    };\n\n    this.handleBlur = function(/*event*/) {\n        return false;\n    };\n\n    this.handleResize = function() {\n    };\n\n    this.handlePressHold = function(/*event*/) {\n        // When this method returns true, it will not call the DefaultHandler's handlePressHold.\n        // This makes it not possible to open the context menu on mobile.\n        return false;\n    };\n\n    this.recomputePivot = function() {\n\n        var values = this.getSectionBoxValues(true);\n        if (!values) return;\n\n        var aabb = values.sectionBox;\n\n        _viewer.api.navigation.setPivotPoint(new THREE.Vector3(\n            aabb[0] + (aabb[3] - aabb[0]) * 0.5,\n            aabb[1] + (aabb[4] - aabb[1]) * 0.5,\n            aabb[2] + (aabb[5] - aabb[2]) * 0.5,\n        ));\n    };\n\n    this.getSectionBoxValues = function(ignoreGlobalOffset) {\n\n        var group = _sectionGroups[0];\n        if (!group) {\n            return null;\n        }\n\n        var planes = group.children;\n        if (planes.length < 6) {\n            return null;\n        }\n\n        var right = planes[0].position.x;\n        var top   = planes[1].position.y;\n        var front = planes[2].position.z;\n        var left  = planes[3].position.x;\n        var bttm  = planes[4].position.y;\n        var back  = planes[5].position.z;\n\n        var off = {x:0, y:0, z:0};\n        if (!ignoreGlobalOffset) {\n            off = _viewer.model.getData().globalOffset || off;\n        }\n\n        var aabb = [\n            Math.min(left, right)   + off.x,\n            Math.min(top,bttm)      + off.y,\n            Math.min(front,back)    + off.z,\n            Math.max(left, right)   + off.x,\n            Math.max(top,bttm)      + off.y,\n            Math.max(front,back)    + off.z,\n        ];\n\n        // Box doesn't support rotation at the moment.\n        // Will have to take it into account if that becomes a feature.\n        var transform = new THREE.Matrix4().identity().toArray();\n\n        return {\n            sectionBox: aabb,\n            sectionBoxTransform: transform,\n        };\n    };\n\n    this.getSectionPlaneValues = function(ignoreGlobalOffset) {\n\n        var group = _sectionGroups[0];\n        if (!group) {\n            return null;\n        }\n\n        var planes = group.children;\n        if (planes.length !== 1) {\n            return null;\n        }\n\n        var off = {x:0, y:0, z:0};\n        if (!ignoreGlobalOffset) {\n            off = _viewer.model.getData().globalOffset || off;\n        }\n\n        var plane = planes[0].plane;\n        var constant = plane.constant - THREE.Vector3.prototype.dot.call( off, plane.normal );\n\n        return {\n            sectionPlane: [\n                plane.normal.x,\n                plane.normal.y,\n                plane.normal.z,\n                constant\n            ]\n        };\n    };\n\n    this.getSectionPlaneSet = function() {\n        return _viewer.getCutPlaneSet(_ownCutPlaneSet);\n    };\n\n    this.getSectionPlanes = function() {\n        // When restoring a viewer state it is put in __set_view, so return from that set\n        // However, the notifyCutplanesChanged function can call setViewerSection which would\n        // move the planes from __set_view into _ownCutPlaneSet\n        const viewSet = _viewer.getCutPlaneSet('__set_view');\n        if (viewSet.length > 0) {\n            return viewSet;\n        }\n\n        return _viewer.getCutPlaneSet(_ownCutPlaneSet);\n    };\n\n    // Called by viewer if any cutplanes are modified. It makes sure that cutplanes controlled by separate tools\n    // (with own cutplane sets) are considered by our cap meshes.\n    this.notifyCutplanesChanged = function() {\n\n        var numCutPlanesBefore = _otherCutPlanes.length;\n\n        // Collect all active cutplanes from other tools\n        //\n        // NOTE: It's essential that we don't create a new array, but just refill the same one.\n        //       Since the cap meshes are created async, the cutPlaneChange event may come in the middle of\n        //       the cap mesh generation. For consistency, we want all cap meshes to share the same cutplane array.\n        _otherCutPlanes.length = 0;\n        var cpSets = _viewer.getCutPlaneSets();\n        for (var i=0; i<cpSets.length; i++) {\n\n            // skip our own cut planes\n            var cpName = cpSets[i];\n            if (cpName === _ownCutPlaneSet) {\n                continue;\n            }\n\n            // add cutplanes of this set\n            var cp = _viewer.getCutPlaneSet(cpName);\n            for (var j = 0; j < cp.length; j++) {\n                _otherCutPlanes.push(cp[j]);\n            }\n        }\n\n        // Set the section tool to the viewer defined cutplane.\n        if (cpSets.includes(\"__set_view\") && _activeMode !== \"\" && _activeMode.indexOf(\"OBJ_\") === -1) {\n            this.setViewerSection(false);\n        }\n\n        // If the number of cutplanes changed, this requires a shader recompile of the cap materials\n        if (numCutPlanesBefore !== _otherCutPlanes.length) {\n            updateCapMaterials(false);\n        }\n    };\n\n    // Sections use cloned materials outside the control of MaterialManager. Thus, when rendering options change, materials need to get recompiled\n    this.notifyRenderOptionChanged = function() {\n        updateCapMaterials(true);\n    };\n\n    /**\n     * Set a section box around the passed in bounding box.\n     * @param {THREE.Box3} box\n     * @returns {boolean} - true if the section box was set\n     */\n    this.setSectionBox = function(box) {\n        if (!box) return false;\n        const name = 'OBJ_BOX';\n        // Convert the bounding box to planes\n\n        let bbox = box;\n        let transform = box.transform;\n\n        // If a transform is specified on the bbox, we use it, otherwise we align the box with project north\n        if (!box.transform) {\n            bbox = bbox.clone().applyMatrix4(_inverseTransform);\n            transform = _transform;\n        }\n\n        const planes = Autodesk.Viewing.Private.SceneMath.box2CutPlanes(bbox, transform);\n        _activeMode = name;\n        _viewer.setCutPlaneSet('__set_view', planes);\n        this.setSection(name);\n        return true;\n    };\n\n    /**\n     * Set a section plane at the intersection position.\n     * @param {Three.Vector3} normal - plane normal.\n     * @param {Three.Vector3} position - position to place the plane.\n     * @returns {boolean} - true if the section plane was set\n     */\n    this.setSectionPlane = function(normal, position, enableRotationGizmo = true) {\n        if (!normal || !position) return false;\n\n        const name = 'OBJ_SET_VIEW_PLANE';\n        const distance = -1 * position.dot(normal);\n        const plane = new THREE.Plane(normal, distance);\n        _activeMode = name;\n        const planeVecs = [new THREE.Vector4(plane.normal.x, plane.normal.y, plane.normal.z, plane.constant)];\n        _viewer.setCutPlaneSet('__set_view', planeVecs);\n        this.setSection(name);\n        // RotationGizmos are turned on by default.\n        // The option to disable it, is for cases like activating the section tool from the context menu.\n        _transRotControl?.showRotationGizmos(enableRotationGizmo);\n\n        const pos = position.clone().sub(_sectionGroups[0].children[0].getWorldPosition(_auxVec3));\n        _transRotControl?.setGizmoOffset(pos);\n\n        return true;\n    };\n};\n\nfunction init_SectionMesh() {\n\n    if (SectionMeshClass)\n        return;\n\n    const tmpWorldPosition = new THREE.Vector3();\n    const tmpNormalMatrix = new THREE.Matrix3();\n\n    class SectionMesh extends THREE.Mesh {\n        constructor(geometry, material, plane) {\n\n            super(geometry, material, false);\n\n            this.plane = plane;\n            this.planeVec = new THREE.Vector4(plane.normal.x, plane.normal.y, plane.normal.z, plane.constant);\n            this.connectivity = [];\n            this.outline = null;\n        }\n\n        update() {\n            this.updateMatrixWorld();\n            this.plane.normal.set(0, 0, 1);\n\n            var normal = this.plane.normal;\n            normal.applyMatrix3(tmpNormalMatrix.getNormalMatrix(this.matrixWorld));\n\n            var d = -1 * this.getWorldPosition(tmpWorldPosition).dot(normal);\n            this.planeVec.set(normal.x, normal.y, normal.z, d);\n            this.plane.constant = d;\n        }\n    }\n    SectionMeshClass = SectionMesh;\n}\n","/**\n * @author arodic / https://github.com/arodic\n *\n * @author chiena -- Modified for Autodesk LMV web viewer\n */\n /*jshint sub:true*/\n\nexport function init_TransformGizmos() {\n\n    'use strict';\n\n    class GizmoMaterial extends THREE.MeshBasicMaterial {\n        constructor ( parameters ) {\n\n            super();\n\n            this.depthTest = false;\n            this.depthWrite = false;\n            this.side = THREE.FrontSide;\n            this.transparent = true;\n\n            this.setValues( parameters );\n\n            this.oldColor = this.color.clone();\n            this.oldOpacity = this.opacity;\n\n            this.highlight = function( highlighted ) {\n\n                if ( highlighted ) {\n\n                    this.color.setRGB( 1, 230/255, 3/255 );\n                    this.opacity = 1;\n                    this.uniformsNeedUpdate = true; // needed by WebGPU\n\n                } else {\n\n                    this.color.copy( this.oldColor );\n                    this.opacity = this.oldOpacity;\n                    this.uniformsNeedUpdate = true; // needed by WebGPU\n                }\n\n            };\n\n        }\n    }\n\n    class GizmoLineMaterial extends THREE.LineBasicMaterial {\n\n        constructor ( parameters ) {\n\n            super();\n\n            this.depthTest = false;\n            this.depthWrite = false;\n            this.transparent = true;\n            this.linewidth = 1;\n\n            this.setValues( parameters );\n\n            this.oldColor = this.color.clone();\n            this.oldOpacity = this.opacity;\n\n            this.highlight = function( highlighted ) {\n\n                if ( highlighted ) {\n\n                    this.color.setRGB( 1, 230/255, 3/255 );\n                    this.opacity = 1;\n\n                } else {\n\n                    this.color.copy( this.oldColor );\n                    this.opacity = this.oldOpacity;\n\n                }\n\n            };\n\n        }\n    }\n\n    var createCircleGeometry = function ( radius, facing, arc ) {\n        const vertices = [];\n        arc = arc ? arc : 1;\n        for ( var i = 0; i <= 64 * arc; ++i ) {\n            if ( facing == 'x' ) vertices.push( new THREE.Vector3( 0, Math.cos( i / 32 * Math.PI ), Math.sin( i / 32 * Math.PI ) ).multiplyScalar(radius) );\n            if ( facing == 'y' ) vertices.push( new THREE.Vector3( Math.cos( i / 32 * Math.PI ), 0, Math.sin( i / 32 * Math.PI ) ).multiplyScalar(radius) );\n            if ( facing == 'z' ) vertices.push( new THREE.Vector3( Math.sin( i / 32 * Math.PI ), Math.cos( i / 32 * Math.PI ), 0 ).multiplyScalar(radius) );\n        }\n\n        return new THREE.BufferGeometry().setFromPoints(vertices);\n    };\n\n    var createArrowGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {\n        const arrowGeometry = new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded );\n        return arrowGeometry.applyMatrix4(new THREE.Matrix4().makeTranslation(0, 0.5, 0));\n    };\n\n    var createLineGeometry = function ( axis ) {\n        const vertices = [];\n        if ( axis === 'X')\n            vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 1, 0, 0 ) );\n        else if ( axis === 'Y' )\n            vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\n        else if ( axis === 'Z' )\n            vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0, 1 ) );\n\n        const lineGeometry = new THREE.BufferGeometry().setFromPoints(vertices);\n        lineGeometry.isLines = true;\n\n        return lineGeometry;\n    };\n\n    class TransformGizmo extends THREE.Object3D {\n        constructor (includeAxis) {\n\n            super();\n\n            var scope = this;\n            var showPickers = false; //debug\n            var showActivePlane = false; //debug\n\n\n            this.init = function () {\n                this.handles = new THREE.Object3D();\n                this.pickers = new THREE.Object3D();\n                this.planes = new THREE.Object3D();\n                this.highlights = new THREE.Object3D();\n                this.hemiPicker = new THREE.Object3D();\n                this.subPickers = new THREE.Object3D();\n\n                this.add(this.handles);\n                this.add(this.pickers);\n                this.add(this.planes);\n                this.add(this.highlights);\n                this.add(this.hemiPicker);\n                this.add(this.subPickers);\n\n                //// PLANES\n\n                var planeGeometry = new THREE.PlaneBufferGeometry( 50, 50, 2, 2 );\n                var planeMaterial = new THREE.MeshBasicMaterial( { wireframe: true } );\n                planeMaterial.side = THREE.DoubleSide;\n\n                var planes = {\n                    \"XY\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                    \"YZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                    \"XZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                    \"XYZE\": new THREE.Mesh( planeGeometry, planeMaterial )\n                };\n\n                this.activePlane = planes[\"XYZE\"];\n\n                planes[\"YZ\"].rotation.set( 0, Math.PI/2, 0 );\n                planes[\"XZ\"].rotation.set( -Math.PI/2, 0, 0 );\n\n                for (var i in planes) {\n                    planes[i].name = i;\n                    this.planes.add(planes[i]);\n                    this.planes[i] = planes[i];\n                    planes[i].visible = false;\n                }\n\n                this.setupGizmos();\n                this.activeMode = \"\";\n\n                // reset Transformations\n\n                this.traverse(function ( child ) {\n                    if (child instanceof THREE.Mesh) {\n                        child.updateMatrix();\n\n                        const tempGeometry = child.geometry.clone();\n                        tempGeometry.applyMatrix4(child.matrix);\n                        child.geometry = tempGeometry;\n\n                        child.position.set( 0, 0, 0 );\n                        child.rotation.set( 0, 0, 0 );\n                        child.scale.set( 1, 1, 1 );\n                    }\n                });\n\n            };\n\n            this.hide = function () {\n                this.traverse(function( child ) {\n                    child.visible = false;\n                });\n            };\n\n            this.show = function () {\n                this.traverse(function( child ) {\n                    child.visible = true;\n                    if (child.parent == scope.pickers || child.parent == scope.hemiPicker ) child.visible = showPickers;\n                    if (child.parent == scope.planes ) child.visible = false;\n                });\n                this.activePlane.visible = showActivePlane;\n            };\n\n            this.highlight = function ( axis ) {\n                this.traverse(function( child ) {\n                    if ( child.material && child.material.highlight ) {\n                        if ( child.name == axis ) {\n                            child.material.highlight( true );\n                        } else {\n                            child.material.highlight( false );\n                        }\n                    }\n                });\n            };\n\n            this.setupGizmos = function () {\n\n                var addGizmos = function( gizmoMap, parent ) {\n\n                    for ( var name in gizmoMap ) {\n\n                        for ( var i = gizmoMap[name].length; i--;) {\n\n                            var object = gizmoMap[name][i][0];\n                            var position = gizmoMap[name][i][1];\n                            var rotation = gizmoMap[name][i][2];\n                            var visble = gizmoMap[name][i][3];\n\n                            object.name = name;\n\n                            if ( position ) object.position.set( position[0], position[1], position[2] );\n                            if ( rotation ) object.rotation.set( rotation[0], rotation[1], rotation[2] );\n                            if ( visble ) object.visble = visble;\n\n                            parent.add( object );\n\n                        }\n\n                    }\n\n                };\n\n                this.setHandlePickerGizmos();\n\n                if (includeAxis) {\n                    var axisNames = Object.keys(this.handleGizmos);\n\n                    for (var i = 0; i < axisNames.length; i++) {\n                        var axisName = axisNames[i];\n\n                        if (includeAxis.indexOf(axisName) === -1) {\n                            delete this.handleGizmos[axisName];\n                            delete this.pickerGizmos[axisName];\n                            delete this.hemiPickerGizmos[axisName];\n                        }\n                    }\n                }\n\n                addGizmos(this.handleGizmos, this.handles);\n                addGizmos(this.pickerGizmos, this.pickers);\n                addGizmos(this.highlightGizmos, this.highlights);\n                addGizmos(this.hemiPickerGizmos, this.hemiPicker);\n                addGizmos(this.subPickerGizmos, this.subPickers);\n\n                this.hide();\n                this.show();\n\n            };\n\n        }\n\n        update ( rotation, eye ) {\n\n            var vec1 = new THREE.Vector3( 0, 0, 0 );\n            var vec2 = new THREE.Vector3( 0, 1, 0 );\n            var lookAtMatrix = new THREE.Matrix4();\n\n            this.traverse(function(child) {\n                if ( child.name ) {\n                    if ( child.name.search(\"E\") != -1 ) {\n                        child.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( eye, vec1, vec2 ) );\n                    } else if ( child.name.search(\"X\") != -1 || child.name.search(\"Y\") != -1 || child.name.search(\"Z\") != -1 ) {\n                        child.quaternion.setFromEuler( rotation );\n                    }\n                }\n            });\n\n        }\n    }\n    THREE.TransformGizmo = TransformGizmo;\n\n    class TransformGizmoTranslate extends TransformGizmo {\n        constructor (includeAxis) {\n\n            super( includeAxis );\n\n            this.setHandlePickerGizmos = function () {\n\n                var arrowGeometry = createArrowGeometry( 0, 0.05, 0.2, 12, 1, false );\n                var lineXGeometry = createLineGeometry( 'X' );\n                var lineYGeometry = createLineGeometry( 'Y' );\n                var lineZGeometry = createLineGeometry( 'Z' );\n\n                this.handleGizmos = {\n                    X: [\n                        [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xf12c2c } ) ), [ 0.5, 0, 0 ], [ 0, 0, -Math.PI/2 ] ],\n                        [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xf12c2c } ) ) ]\n                    ],\n                    Y: [\n                        [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0bb80b } ) ), [ 0, 0.5, 0 ] ],\n                        [   new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x0bb80b } ) ) ]\n                    ],\n                    Z: [\n                        [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x2c2cf1 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ],\n                        [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x2c2cf1 } ) ) ]\n                    ],\n                    XYZ: [\n                        [ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.1, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, 0 ] ]\n                    ],\n                    XY: [\n                        [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.15, 0.15, 0 ] ]\n                    ],\n                    YZ: [\n                        [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.15, 0.15 ], [ 0, Math.PI/2, 0 ] ]\n                    ],\n                    XZ: [\n                        [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.15, 0, 0.15 ], [ -Math.PI/2, 0, 0 ] ]\n                    ]\n                };\n\n                this.pickerGizmos = {\n                    X: [\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0.6, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                    ],\n                    Y: [\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0.6, 0 ] ]\n                    ],\n                    Z: [\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.6 ], [ Math.PI/2, 0, 0 ] ]\n                    ],\n                    XYZ: [\n                        [ new THREE.Mesh( new THREE.OctahedronBufferGeometry( 0.2, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                    ],\n                    XY: [\n                        [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.2, 0.2, 0 ] ]\n                    ],\n                    YZ: [\n                        [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.2, 0.2 ], [ 0, Math.PI/2, 0 ] ]\n                    ],\n                    XZ: [\n                        [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.2, 0, 0.2 ], [ -Math.PI/2, 0, 0 ] ]\n                    ]\n                };\n\n                this.hemiPickerGizmos = {\n                    XYZ: [\n                        [ new THREE.Mesh( new THREE.BoxBufferGeometry( 1.2, 1.2, 1.2 ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0.5, 0.5, 0.5 ], null, false ]\n                    ]\n                };\n\n            };\n\n            this.setActivePlane = function ( axis, eye, isLocalSpace ) {\n\n                var tempMatrix = new THREE.Matrix4();\n                eye.applyMatrix4( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ).invert() );\n\n                if ( axis == \"X\" ) {\n                    this.activePlane = this.planes[ \"XY\" ];\n                    if ( !isLocalSpace && Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n                }\n\n                if ( axis == \"Y\" ){\n                    this.activePlane = this.planes[ \"XY\" ];\n                    if ( !isLocalSpace && Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n                }\n\n                if ( axis == \"Z\" ){\n                    this.activePlane = this.planes[ \"XZ\" ];\n                    if ( !isLocalSpace && Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n                }\n\n                if ( axis == \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n                if ( axis == \"XY\" ) this.activePlane = this.planes[ \"XY\" ];\n\n                if ( axis == \"YZ\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n                if ( axis == \"XZ\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n                this.hide();\n                this.show();\n\n            };\n\n            this.init();\n\n        }\n    }\n    THREE.TransformGizmoTranslate = TransformGizmoTranslate;\n\n    class TransformGizmoRotate extends TransformGizmo {\n        constructor (includeAxis) {\n\n            super( includeAxis );\n\n            this.setHandlePickerGizmos = function () {\n\n                this.handleGizmos = {\n                    RX: [\n                        [ new THREE.Line( createCircleGeometry(1,'x',0.5), new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n                    ],\n                    RY: [\n                        [ new THREE.Line( createCircleGeometry(1,'y',0.5), new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n                    ],\n                    RZ: [\n                        [ new THREE.Line( createCircleGeometry(1,'z',0.5), new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n                    ],\n                    RE: [\n                        [ new THREE.Line( createCircleGeometry(1.25,'z',1), new GizmoLineMaterial( { color: 0x00ffff } ) ) ]\n                    ],\n                    RXYZE: [\n                        [ new THREE.Line( createCircleGeometry(1,'z',1), new GizmoLineMaterial( { color: 0xff00ff } ) ) ]\n                    ]\n                };\n\n                this.pickerGizmos = {\n                    RX: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, -Math.PI/2, -Math.PI/2 ] ]\n                    ],\n                    RY: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, 0 ] ]\n                    ],\n                    RZ: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                    ],\n                    RE: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1.25, 0.12, 2, 24 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ) ]\n                    ],\n                    RXYZE: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 2, 24 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ) ]\n                    ]\n                };\n\n            };\n\n            this.setActivePlane = function ( axis ) {\n\n                if ( axis == \"RE\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n                if ( axis == \"RX\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n                if ( axis == \"RY\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n                if ( axis == \"RZ\" ) this.activePlane = this.planes[ \"XY\" ];\n\n                this.hide();\n                this.show();\n\n            };\n\n            this.update = function ( rotation, eye2 ) {\n\n                THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n                var tempMatrix = new THREE.Matrix4();\n                var worldRotation = new THREE.Euler( 0, 0, 1 );\n                var tempQuaternion = new THREE.Quaternion();\n                var unitX = new THREE.Vector3( 1, 0, 0 );\n                var unitY = new THREE.Vector3( 0, 1, 0 );\n                var unitZ = new THREE.Vector3( 0, 0, 1 );\n                var quaternionX = new THREE.Quaternion();\n                var quaternionY = new THREE.Quaternion();\n                var quaternionZ = new THREE.Quaternion();\n                var eye = eye2.clone();\n\n                worldRotation.copy( this.planes[\"XY\"].rotation );\n                tempQuaternion.setFromEuler( worldRotation );\n\n                tempMatrix.makeRotationFromQuaternion( tempQuaternion ).invert();\n                eye.applyMatrix4( tempMatrix );\n\n                this.traverse(function(child) {\n\n                    tempQuaternion.setFromEuler( worldRotation );\n\n                    if ( child.name == \"RX\" ) {\n                        quaternionX.setFromAxisAngle( unitX, Math.atan2( -eye.y, eye.z ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                    if ( child.name == \"RY\" ) {\n                        quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                    if ( child.name == \"RZ\" ) {\n                        quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                });\n\n            };\n\n            this.init();\n\n        }\n    }\n    THREE.TransformGizmoRotate = TransformGizmoRotate;\n\n    class TransformGizmoTranslateRotate extends TransformGizmo {\n        constructor (includeAxis) {\n\n            super( includeAxis );\n\n            var scope = this;\n\n            this.setHandlePickerGizmos = function () {\n\n                var arrowGeometry = createArrowGeometry( 0, 0.05, 0.2, 12, 1, false );\n                var theta = 0.15;\n\n                this.handleGizmos = {\n                    Z: [\n                        [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xffffff } ) ), [ 0, 0, 0.25 ], [ Math.PI/2, 0, 0 ] ],\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.015, 0.015, 0.6, 4, 1, false ), new GizmoMaterial( { color: 0xffffff } ) ), [ 0, 0, 0.5 ],[ Math.PI/2, 0, 0 ] ]\n                    ],\n                    RX: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.015, 12, 60, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000 } ) ), [ 0, 0, 0 ], [ theta * Math.PI, -Math.PI/2, 0 ] ],\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.05, 0.05, 0.015, 60, 1, false ), new GizmoMaterial( { color: 0xff0000 } ) ), [ 0, 0, 1 ], [ Math.PI/2, 0, 0 ] ]\n                    ],\n                    RY: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.015, 12, 60, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, (0.5-theta)*Math.PI ] ],\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.05, 0.05, 0.01, 60, 1, false ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 1 ] ]\n                    ]\n                };\n\n                this.pickerGizmos = {\n                    Z: [\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.12, 0.12, 0.65, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ]\n                    ],\n                    RX: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ theta * Math.PI, -Math.PI/2, 0 ] ]\n                    ],\n                    RY: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, (0.5-theta)*Math.PI ] ]\n                    ]\n                };\n\n                this.subPickerGizmos = {\n                    Z: [\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.12, 0.12, 0.65, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ]\n                    ]\n                };\n\n                this.highlightGizmos = {\n                    Z: [\n                    ],\n                    RX: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.02, 12, 60, 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 1 } ) ), [ 0, 0, 0 ], [ 0, -Math.PI/2, -Math.PI/2 ], false ]\n                    ],\n                    RY: [\n                        [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.02, 12, 60, 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 1 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, 0 ], false ]\n                    ]\n                };\n\n                this.hemiPickerGizmos = {\n                    XYZ: [\n                        [ new THREE.Mesh( new THREE.SphereBufferGeometry( 1.2, 8, 8, 0, Math.PI ), new GizmoMaterial( { color: 0x0000ff } ) ), null, null, false ]\n                    ]\n                };\n\n            };\n\n            this.setActivePlane = function ( axis, eye, isLocalSpace ) {\n\n                if ( this.activeMode == \"translate\" ) {\n\n                    var tempMatrix = new THREE.Matrix4();\n                    eye.applyMatrix4( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ).invert() );\n\n                    if ( axis == \"X\" ) {\n                        this.activePlane = this.planes[ \"XY\" ];\n                        if ( !isLocalSpace && Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n                    }\n\n                    if ( axis == \"Y\" ){\n                        this.activePlane = this.planes[ \"XY\" ];\n                        if ( !isLocalSpace && Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n                    }\n\n                    if ( axis == \"Z\" ){\n                        this.activePlane = this.planes[ \"XZ\" ];\n                        if ( !isLocalSpace && Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n                    }\n\n                } else if ( this.activeMode == \"rotate\" ){\n\n                    if ( axis == \"RX\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n                    if ( axis == \"RY\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n                    if ( axis == \"RZ\" ) this.activePlane = this.planes[ \"XY\" ];\n\n                }\n\n                this.hide();\n                this.show();\n\n            };\n\n            this.update = function ( rotation, eye2 ) {\n\n                if ( this.activeMode == \"translate\" ) {\n\n                    THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n                } else if ( this.activeMode == \"rotate\" ) {\n\n                    THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n                    var tempMatrix = new THREE.Matrix4();\n                    var worldRotation = new THREE.Euler( 0, 0, 1 );\n                    var tempQuaternion = new THREE.Quaternion();\n                    var unitX = new THREE.Vector3( 1, 0, 0 );\n                    var unitY = new THREE.Vector3( 0, 1, 0 );\n                    var unitZ = new THREE.Vector3( 0, 0, 1 );\n                    var quaternionX = new THREE.Quaternion();\n                    var quaternionY = new THREE.Quaternion();\n                    var quaternionZ = new THREE.Quaternion();\n                    var eye = eye2.clone();\n\n                    worldRotation.copy( this.planes[\"XY\"].rotation );\n                    tempQuaternion.setFromEuler( worldRotation );\n\n                    tempMatrix.makeRotationFromQuaternion( tempQuaternion ).invert();\n                    eye.applyMatrix4( tempMatrix );\n\n                    this.traverse(function(child) {\n\n                        tempQuaternion.setFromEuler( worldRotation );\n\n                        if ( child.name == \"RX\" ) {\n                            quaternionX.setFromAxisAngle( unitX, Math.atan2( -eye.y, eye.z ) );\n                            tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                            child.quaternion.copy( tempQuaternion );\n                        }\n\n                        if ( child.name == \"RY\" ) {\n                            quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n                            tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                            child.quaternion.copy( tempQuaternion );\n                        }\n\n                        if ( child.name == \"RZ\" ) {\n                            quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n                            tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n                            child.quaternion.copy( tempQuaternion );\n                        }\n\n                    });\n\n                }\n\n            };\n\n            this.show = function () {\n                this.traverse(function( child ) {\n                    if ( scope.parent == null || (scope.parent.useAllPickers || child.parent != scope.handles) ) child.visible = true;\n                    if ( child.material ) child.material.opacity = child.material.oldOpacity;\n                    if ( child.parent == scope.pickers || child.parent == scope.hemiPicker || child.parent == scope.subPickers) child.visible = false;\n                    if ( child.parent == scope.planes || child.parent == scope.highlights ) child.visible = false;\n                });\n                this.activePlane.visible = false;\n            };\n\n            this.highlight = function ( axis ) {\n                this.traverse(function( child ) {\n                    if ( child.material && child.material.highlight ) {\n                        if ( child.name == axis ) {\n                            if ( child.parent == scope.highlights || child.parent == scope.handles ) child.visible = true;\n                            child.material.highlight( true );\n                        } else {\n                            child.material.highlight( false );\n                            child.material.opacity = 0.1;\n                        }\n                    }\n                });\n            };\n\n            this.init();\n\n        }\n    }\n    THREE.TransformGizmoTranslateRotate = TransformGizmoTranslateRotate;\n\n    class TransformGizmoScale extends TransformGizmo {\n        constructor (includeAxis) {\n\n            super( includeAxis );\n\n            this.setHandlePickerGizmos = function () {\n\n                var arrowGeometry = createArrowGeometry( 0.125, 0.125, 0.125 );\n                var lineXGeometry = createLineGeometry( 'X' );\n                var lineYGeometry = createLineGeometry( 'Y' );\n                var lineZGeometry = createLineGeometry( 'Z' );\n\n                this.handleGizmos = {\n                    X: [\n                        [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, -Math.PI/2 ] ],\n                        [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n                    ],\n                    Y: [\n                        [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\n                        [ new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n                    ],\n                    Z: [\n                        [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ],\n                        [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n                    ],\n                    XYZ: [\n                        [ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                    ]\n                };\n\n                this.pickerGizmos = {\n                    X: [\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0.6, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                    ],\n                    Y: [\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0.6, 0 ] ]\n                    ],\n                    Z: [\n                        [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.6 ], [ Math.PI/2, 0, 0 ] ]\n                    ],\n                    XYZ: [\n                        [ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.4, 0.4, 0.4 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                    ]\n                };\n\n            };\n\n            this.setActivePlane = function ( axis, eye, isLocalSpace ) {\n\n                var tempMatrix = new THREE.Matrix4();\n                eye.applyMatrix4( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ).invert() );\n\n                if ( axis == \"X\" ) {\n                    this.activePlane = this.planes[ \"XY\" ];\n                    if ( !isLocalSpace && Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n                }\n\n                if ( axis == \"Y\" ){\n                    this.activePlane = this.planes[ \"XY\" ];\n                    if ( !isLocalSpace && Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n                }\n\n                if ( axis == \"Z\" ){\n                    this.activePlane = this.planes[ \"XZ\" ];\n                    if ( !isLocalSpace && Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n                }\n\n                if ( axis == \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n                this.hide();\n                this.show();\n\n            };\n\n            this.init();\n\n        }\n    }\n    THREE.TransformGizmoScale = TransformGizmoScale;\n\n    const _pointerVector = new THREE.Vector3();\n    const _pointerDir = new THREE.Vector3();\n    const _ray = new THREE.Raycaster();\n    class TransformControls extends THREE.Object3D {\n        constructor ( camera, domElement, mode, includeAxis ) {\n\n            // TODO: Make non-uniform scale and rotate play nice in hierarchies\n            // TODO: ADD RXYZ contol\n\n            super();\n\n            domElement = ( domElement !== undefined ) ? domElement : document;\n\n            this.gizmo = {};\n            switch ( mode ) {\n                case \"translate\":\n                    this.gizmo[mode] = new THREE.TransformGizmoTranslate(includeAxis);\n                    break;\n                case \"rotate\":\n                this.gizmo[mode] = new THREE.TransformGizmoRotate(includeAxis);\n                break;\n                case \"transrotate\":\n                    this.gizmo[mode] = new THREE.TransformGizmoTranslateRotate(includeAxis);\n                    break;\n                case \"scale\":\n                    this.gizmo[mode] = new THREE.TransformGizmoScale(includeAxis);\n                    break;\n            }\n\n            this.add(this.gizmo[mode]);\n            this.gizmo[mode].hide();\n\n            this.object = undefined;\n            this.snap = null;\n            this.snapDelta = 0;\n            this.space = \"world\";\n            this.size = 1;\n            this.axis = null;\n            this.useAllPickers = true;\n\n            this.unitX = new THREE.Vector3( 1, 0, 0 );\n            this.unitY = new THREE.Vector3( 0, 1, 0 );\n            this.unitZ = new THREE.Vector3( 0, 0, 1 );\n            this.normal = new THREE.Vector3(0, 0, 1);\n\n            if ( mode === \"transrotate\" ) {\n                var vertices = [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1)];\n                var geometry = new THREE.BufferGeometry().setFromPoints(vertices);\n                var material = new THREE.LineBasicMaterial( {color: 0x000000, linewidth:2, depthTest: false} );\n                this.startLine = new THREE.Line( geometry, material );\n\n                var vertices = [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1)];\n                var geometry = new THREE.BufferGeometry().setFromPoints(vertices);\n                var material = new THREE.LineBasicMaterial( {color: 0xffe603, linewidth:2, depthTest: false} );\n                this.endLine = new THREE.Line( geometry, material );\n\n                var vertices = [new THREE.Vector3(0, -1, 0), new THREE.Vector3(0, 1, 0)];\n                var geometry = new THREE.BufferGeometry().setFromPoints(vertices);\n                var material = new THREE.LineDashedMaterial({color: 0x000000, linewidth:1, depthTest: false});\n                this.centerLine = new THREE.Line( geometry, material );\n\n                var map = THREE.ImageUtils.loadTexture(Autodesk.Viewing.Private.getResourceUrl(\"res/textures/centerMarker_X.png\"));\n                map.magFilter = map.minFilter = THREE.NearestFilter;\n                var geometry = new THREE.CircleBufferGeometry( 0.1, 32 );\n                var material = new THREE.MeshBasicMaterial({opacity: 1, side: THREE.DoubleSide, transparent:true, map:map});\n                this.centerMark = new THREE.Mesh( geometry, material );\n                this.centerMark.rotation.set(Math.PI/2, 0, 0);\n\n                this.ticks = {};\n                var map = THREE.ImageUtils.loadTexture(Autodesk.Viewing.Private.getResourceUrl(\"res/textures/cardinalPoint.png\"));\n                map.magFilter = map.minFilter = THREE.NearestFilter;\n                var material = new THREE.MeshBasicMaterial({depthTest: false, opacity: 1, transparent:true, side: THREE.DoubleSide, map:map});\n                var w = 0.12, h = 0.25, d = 1.15;\n\n                this.ticks[\"RX\"] = new THREE.Object3D();\n                var geometry = new THREE.PlaneBufferGeometry(w, h);\n                var mesh = new THREE.Mesh(geometry, material);\n                mesh.position.set(0, 0, -d-h/2);\n                mesh.rotation.set(Math.PI/2, Math.PI/2, 0);\n                this.ticks[\"RX\"].add(mesh);\n\n                mesh = mesh.clone();\n                mesh.position.set(0, d+h/2, 0);\n                mesh.rotation.set(0, Math.PI/2, 0);\n                this.ticks[\"RX\"].add(mesh);\n\n                mesh = mesh.clone();\n                mesh.position.set(0, 0, d+h/2);\n                mesh.rotation.set(0, Math.PI/2, Math.PI/2);\n                this.ticks[\"RX\"].add(mesh);\n\n                mesh = mesh.clone();\n                mesh.position.set(0, -d-h/2, 0);\n                mesh.rotation.set(0, Math.PI/2, 0);\n                this.ticks[\"RX\"].add(mesh);\n\n                this.ticks[\"RY\"] = new THREE.Object3D();\n                mesh = mesh.clone();\n                mesh.position.set(0, 0, -d-h/2);\n                mesh.rotation.set(Math.PI/2, 0, 0);\n                this.ticks[\"RY\"].add(mesh);\n\n                mesh = mesh.clone();\n                mesh.position.set(-d-h/2, 0, 0);\n                mesh.rotation.set(Math.PI/2, 0, Math.PI/2);\n                this.ticks[\"RY\"].add(mesh);\n\n                mesh = mesh.clone();\n                mesh.position.set(0, 0, d+h/2);\n                mesh.rotation.set(Math.PI/2, 0, 0);\n                this.ticks[\"RY\"].add(mesh);\n\n                mesh = mesh.clone();\n                mesh.position.set(d+h/2, 0, 0);\n                mesh.rotation.set(Math.PI/2, 0, Math.PI/2);\n                this.ticks[\"RY\"].add(mesh);\n            }\n\n            var scope = this;\n\n            var _dragging = false;\n            var _mode = mode;\n            var _plane = \"XY\";\n\n            var changeEvent = { type: \"change\" };\n            var mouseDownEvent = { type: \"mouseDown\" };\n            var mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n            var objectChangeEvent = { type: \"objectChange\" };\n\n            var point = new THREE.Vector3();\n            var offset = new THREE.Vector3();\n\n            var rotation = new THREE.Vector3();\n            var offsetRotation = new THREE.Vector3();\n            var scale = 1;\n            this.clientScale = 1;\n\n            var lookAtMatrix = new THREE.Matrix4();\n            var eye = new THREE.Vector3();\n\n            var tempMatrix = new THREE.Matrix4();\n            var tempVector = new THREE.Vector3();\n            var tempQuaternion = new THREE.Quaternion();\n            var projX = new THREE.Vector3();\n            var projY = new THREE.Vector3();\n            var projZ = new THREE.Vector3();\n\n            var quaternionXYZ = new THREE.Quaternion();\n            var quaternionX = new THREE.Quaternion();\n            var quaternionY = new THREE.Quaternion();\n            var quaternionZ = new THREE.Quaternion();\n            var quaternionE = new THREE.Quaternion();\n\n            var oldPosition = new THREE.Vector3();\n            var oldScale = new THREE.Vector3();\n            var oldRotationMatrix = new THREE.Matrix4();\n\n            var parentRotationMatrix  = new THREE.Matrix4();\n            var parentScale = new THREE.Vector3();\n\n            var worldPosition = new THREE.Vector3();\n            var worldRotation = new THREE.Euler();\n            var worldRotationMatrix  = new THREE.Matrix4();\n            var camPosition = new THREE.Vector3();\n            var camRotation = new THREE.Euler();\n\n            this.attach = function ( object ) {\n\n                scope.object = object;\n\n                this.gizmo[_mode].show();\n\n                scope.update();\n\n                scope.updateUnitVectors();\n\n            };\n\n            this.detach = function ( object ) {\n\n                scope.object = undefined;\n                this.axis = null;\n\n                this.gizmo[_mode].hide();\n\n            };\n\n            this.setMode = function ( mode ) {\n\n                _mode = mode ? mode : _mode;\n\n                if ( _mode == \"scale\" ) scope.space = \"local\";\n\n                this.gizmo[_mode].show();\n\n                this.update();\n                scope.dispatchEvent( changeEvent );\n\n            };\n\n            this.getPicker = function () {\n\n                return scope.gizmo[_mode].hemiPicker.children;\n\n            };\n\n            this.setPosition = function ( position ) {\n\n                this.object.position.copy ( position );\n                this.update();\n\n            };\n\n            this.setNormal = function ( normal ) {\n\n                tempQuaternion.setFromUnitVectors( this.normal, normal );\n                this.unitX.applyQuaternion( tempQuaternion );\n                this.unitY.applyQuaternion( tempQuaternion );\n                this.unitZ.applyQuaternion( tempQuaternion );\n                this.normal.copy( normal );\n                if (this.object) {\n                    this.object.quaternion.multiply ( tempQuaternion );\n                }\n                this.update();\n            };\n\n            this.setRotation = function (rotationMatrix) {\n                if (this.object) {\n                    this.object.quaternion.setFromRotationMatrix(rotationMatrix);\n                    this.update();\n                    this.updateUnitVectors();\n                }\n            };\n\n            this.setSnap = function ( snap, delta ) {\n\n                scope.snap = snap;\n                scope.snapDelta = delta;\n\n            };\n\n            this.setSize = function ( size ) {\n\n                scope.size = size;\n                this.update();\n                scope.dispatchEvent( changeEvent );\n\n            };\n\n            this.setSpace = function ( space ) {\n\n                scope.space = space;\n                this.update();\n                scope.dispatchEvent( changeEvent );\n\n            };\n\n            this.update = function (highlight) {\n\n                if ( scope.object === undefined ) return;\n\n                scope.object.updateMatrixWorld();\n                worldPosition.setFromMatrixPosition( scope.object.matrixWorld );\n                worldRotation.setFromRotationMatrix( tempMatrix.extractRotation( scope.object.matrixWorld ) );\n\n                camera.updateMatrixWorld();\n                camPosition.setFromMatrixPosition( camera.matrixWorld );\n                //camRotation.setFromRotationMatrix( tempMatrix.extractRotation( camera.matrixWorld ) );\n\n                this.position.copy( worldPosition );\n\n                // Set the gizmo position with the specified offset.\n                if(this.gizmoOffset) {\n                    this.position.add(this.gizmoOffset);\n                }\n                this.updateMatrixWorld();\n\n                this.quaternion.setFromEuler( worldRotation );\n\n                this.normal.set( 0, 0, 1 );\n                this.normal.applyEuler( worldRotation );\n\n                // keep same screen height (100px)\n                var height;\n                if ( camera.isPerspective ) {\n                    var dist = this.position.distanceTo( camPosition );\n                    height = 2 * Math.tan( camera.fov * Math.PI / 360 ) * dist;\n                } else {\n                    // orthographic, so the world height is simply top minus bottom\n                    height = camera.top - camera.bottom;\n                }\n                var rect = domElement.getBoundingClientRect();\n                // multiply 100 pixels by world height for the window, divide by window height in pixels,\n                // to get world height equivalent to 100 pixels.\n                scale = this.clientScale * 100 * height / rect.height;\n                this.scale.set( scale, scale, scale );\n\n                //eye.copy( camPosition ).sub( worldPosition ).normalize();\n\n                //if ( scope.space == \"local\" )\n                //    this.gizmo[_mode].update( worldRotation, eye );\n                //else if ( scope.space == \"world\" )\n                //    this.gizmo[_mode].update( new THREE.Euler(), eye );\n\n                if (highlight)\n                    this.gizmo[_mode].highlight( scope.axis );\n\n            };\n\n            this.setGizmoOffset = function(vec) {\n                // Reset the gizmo if no vector passed in.\n                this.gizmoOffset = !vec ? new THREE.Vector3(0,0,0) : vec;\n                this.update();\n            }\n\n            this.updateUnitVectors = function () {\n\n                this.unitX.set( 1, 0, 0 );\n                this.unitY.set( 0, 1, 0 );\n                this.unitZ.set( 0, 0, 1 );\n                this.unitX.applyEuler( worldRotation );\n                this.unitY.applyEuler( worldRotation );\n                this.unitZ.applyEuler( worldRotation );\n\n            };\n\n            this.showRotationGizmos = function (set) {\n\n                var handles = this.gizmo[_mode].handles.children;\n                for ( var i = 0; i < handles.length; i++ ) {\n                    var child = handles[i];\n                    child.visible = true;\n                    if ( child.name.search(\"R\") !== -1 ) child.visible = set;\n                }\n                this.useAllPickers = set;\n\n            };\n\n            this.highlight = function () {\n\n                this.gizmo[_mode].highlight( this.axis || \"Z\" );\n\n            };\n\n            this.onPointerHover = function( event ) {\n\n                if ( scope.object === undefined || _dragging === true ) return false;\n\n                var pointer = event;\n\n                var intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n                var axis = null;\n                var mode = \"\";\n\n                if ( intersect ) {\n\n                    axis = intersect.object.name;\n                    mode = axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n\n                }\n\n                if ( scope.axis !== axis ) {\n\n                    scope.axis = axis;\n                    scope.gizmo[_mode].activeMode = mode;\n                    scope.update(true);\n                    scope.dispatchEvent( changeEvent );\n\n                }\n\n                if (scope.axis === null) {\n\n                    scope.gizmo[_mode].show();\n\n                }\n\n                return intersect? true : false;\n\n            };\n\n            this.isDragging = function() {\n                return _dragging;\n            };\n\n            this.onPointerDown = function( event ) {\n\n                if ( scope.object === undefined || _dragging === true ) return false;\n\n                var pointer = event;\n\n                if ( event.pointerType === 'touch' ) {\n\n                    var intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n                    var axis = null;\n                    var mode = \"\";\n\n                    if ( intersect ) {\n\n                        axis = intersect.object.name;\n                        mode = axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n\n                    }\n\n                    if ( scope.axis !== axis ) {\n\n                        scope.axis = axis;\n                        scope.gizmo[_mode].activeMode = mode;\n                    }\n                }\n\n                var intersect = null;\n\n                if ( pointer.button === 0 || pointer.button === -1 || pointer.button === undefined ) {\n\n                    intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n                    if ( intersect ) {\n\n                        scope.dispatchEvent( mouseDownEvent );\n\n                        scope.axis = intersect.object.name;\n\n                        scope.update();\n\n                        eye.copy( camera.position ).sub( worldPosition ).normalize();\n\n                        // The eye vector is used to ensure that we choose a plane that is not parallel to the view direction.\n                        // When using an orthographic camera, the direction from gizmo to camera (as used above) doesn't matter for this,\n                        // because the view rays for any pixel is always parallel to the camera world direction.\n                        //\n                        // E.g. it may happen that the axis of largest extent in the eye vector above is x, while the ortho-camera direction\n                        // is actually y. In this case, setAxisPlane() would choose the \"YZ\"-plane for dragging along z-axis, so that hittests\n                        // with this plane will not work (see FLUENT-6543).\n                        if (!camera.isPerspective) {\n                            camera.getWorldDirection(eye);\n                        }\n\n                        scope.gizmo[_mode].setActivePlane( scope.axis, eye, scope.space === \"local\" );\n\n                        var planeIntersect = intersectObjects( pointer, [scope.gizmo[_mode].activePlane] );\n\n                        if ( planeIntersect )\n                            offset.copy( planeIntersect.point );\n\n                        oldPosition.copy( scope.object.position );\n                        oldScale.copy( scope.object.scale );\n\n                        oldRotationMatrix.extractRotation( scope.object.matrix );\n                        worldRotationMatrix.extractRotation( scope.object.matrixWorld );\n\n                        if ( scope.object.parent ) {\n                            parentRotationMatrix.extractRotation( scope.object.parent.matrixWorld );\n                            parentScale.setFromMatrixScale( tempMatrix.copy( scope.object.parent.matrixWorld ).invert() );\n                        } else {\n                            parentRotationMatrix.extractRotation( scope.object.matrixWorld );\n                            parentScale.setFromMatrixScale( tempMatrix.copy( scope.object.matrixWorld ).invert() );\n                        }\n\n                        // show rotation start line and ticks\n                        if ( _mode === \"transrotate\" && scope.gizmo[_mode].activeMode === \"rotate\" ) {\n                            {\n                                const startLinePositions = scope.startLine.geometry.getAttribute('position');\n                                startLinePositions.setXYZ(0, 0, 0, 0);\n                                startLinePositions.setXYZ(1, 0, 0, 1);\n                                startLinePositions.applyMatrix4(scope.matrixWorld);\n                                startLinePositions.needsUpdate = true;\n                                scope.parent.add( scope.startLine );\n                            }\n\n                            var pos = scope.object.geometry.getAttribute('position');\n                            var pt1 = new THREE.Vector3().fromBufferAttribute(pos, 0).applyMatrix4( scope.object.matrixWorld );\n                            var pt2 = new THREE.Vector3().fromBufferAttribute(pos, 1).applyMatrix4( scope.object.matrixWorld );\n                            var pt3 = new THREE.Vector3().fromBufferAttribute(pos, 2).applyMatrix4( scope.object.matrixWorld );\n                            var pt4 = new THREE.Vector3().fromBufferAttribute(pos, 3).applyMatrix4( scope.object.matrixWorld );\n\n                            const centerLinePositions = scope.centerLine.geometry.getAttribute('position');\n                            if (scope.axis === \"RX\") {\n                                pt1.lerp(pt3, 0.5);\n                                pt2.lerp(pt4, 0.5);\n                                var dist = pt1.distanceTo(pt2);\n                                scope.centerLine.material.dashSize = dist / 15;\n                                scope.centerLine.material.gapSize = dist / 30;\n                                centerLinePositions.setXYZ(0, pt1.x, pt1.y, pt1.z);\n                                centerLinePositions.setXYZ(1, pt2.x, pt2.y, pt2.z);\n                            } else {\n                                pt1.lerp(pt2, 0.5);\n                                pt3.lerp(pt4, 0.5);\n                                var dist = pt1.distanceTo(pt3);\n                                scope.centerLine.material.dashSize = dist / 15;\n                                scope.centerLine.material.gapSize = dist / 30;\n                                centerLinePositions.setXYZ(0, pt1.x, pt1.y, pt1.z);\n                                centerLinePositions.setXYZ(1, pt3.x, pt3.y, pt3.z);\n                            }\n                            scope.centerLine.computeLineDistances();\n                            centerLinePositions.needsUpdate = true;\n                            scope.parent.add( scope.centerLine );\n\n                            scope.ticks[scope.axis].position.copy( scope.position );\n                            scope.ticks[scope.axis].quaternion.copy( scope.quaternion );\n                            scope.ticks[scope.axis].scale.copy( scope.scale );\n                            scope.parent.add( scope.ticks[scope.axis] );\n                        }\n\n                    }\n\n                }\n\n                _dragging = true;\n\n                return intersect? true: false;\n\n            }\n\n            this.onPointerMove = function( event ) {\n\n                if ( scope.object === undefined || scope.axis === null || _dragging === false ) return false;\n\n                var pointer = event;\n\n                var planeIntersect = intersectObjects( pointer, [scope.gizmo[_mode].activePlane] );\n\n                if ( planeIntersect )\n                    point.copy( planeIntersect.point );\n\n                var mode = scope.gizmo[_mode].activeMode;\n                if ( mode == \"translate\" ) {\n\n                    point.sub( offset );\n                    point.multiply(parentScale);\n\n                    if ( scope.space == \"local\" ) {\n\n                        point.applyMatrix4( tempMatrix.copy( worldRotationMatrix ).invert() );\n\n                        if ( scope.axis.search(\"X\") == -1 ) point.x = 0;\n                        if ( scope.axis.search(\"Y\") == -1 ) point.y = 0;\n                        if ( scope.axis.search(\"Z\") == -1 ) point.z = 0;\n\n                        point.applyMatrix4( oldRotationMatrix );\n\n                        scope.object.position.copy( oldPosition );\n                        scope.object.position.add( point );\n\n                    }\n\n                    if ( scope.space == \"world\" || scope.axis.search(\"XYZ\") != -1 ) {\n\n                        projX.copy( this.unitX );\n                        projY.copy( this.unitY );\n                        projZ.copy( this.unitZ );\n                        tempVector.set( 0, 0, 0 );\n                        if ( scope.axis.search(\"X\") != -1 ) {\n                            projX.multiplyScalar( point.dot( this.unitX ) );\n                            tempVector.add( projX );\n                        }\n                        if ( scope.axis.search(\"Y\") != -1 ) {\n                            projY.multiplyScalar( point.dot( this.unitY ) );\n                            tempVector.add(projY);\n                        }\n                        if ( scope.axis.search(\"Z\") != -1 ) {\n                            projZ.multiplyScalar( point.dot( this.unitZ ) );\n                            tempVector.add( projZ );\n                        }\n                        point.copy( tempVector );\n\n                        point.applyMatrix4( tempMatrix.copy( parentRotationMatrix ).invert() );\n\n                        scope.object.position.copy( oldPosition );\n                        scope.object.position.add( point );\n\n                    }\n\n                } else if ( mode == \"scale\" ) {\n\n                    point.sub( offset );\n                    point.multiply(parentScale);\n\n                    if ( scope.space == \"local\" ) {\n\n                        if ( scope.axis == \"XYZ\") {\n\n                            scale = 1 + ( ( point.y ) / 50 );\n\n                            scope.object.scale.x = oldScale.x * scale;\n                            scope.object.scale.y = oldScale.y * scale;\n                            scope.object.scale.z = oldScale.z * scale;\n\n                        } else {\n\n                            point.applyMatrix4( tempMatrix.copy( worldRotationMatrix ).invert() );\n\n                            if ( scope.axis == \"X\" ) scope.object.scale.x = oldScale.x * ( 1 + point.x / 50 );\n                            if ( scope.axis == \"Y\" ) scope.object.scale.y = oldScale.y * ( 1 + point.y / 50 );\n                            if ( scope.axis == \"Z\" ) scope.object.scale.z = oldScale.z * ( 1 + point.z / 50 );\n\n                        }\n\n                    }\n\n                } else if ( mode == \"rotate\") {\n\n                    point.sub( worldPosition );\n                    point.multiply(parentScale);\n                    tempVector.copy(offset).sub( worldPosition );\n                    tempVector.multiply(parentScale);\n\n                    if ( scope.axis == \"RE\" ) {\n\n                        tempMatrix.copy( lookAtMatrix ).invert();\n                        point.applyMatrix4( tempMatrix );\n                        tempVector.applyMatrix4( tempMatrix );\n\n                        rotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n                        offsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n                        tempQuaternion.setFromRotationMatrix( tempMatrix.copy( parentRotationMatrix ).invert() );\n\n                        var rotz = rotation.z - offsetRotation.z;\n                        if ( scope.snap !== null ) {\n                            var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                                rotz = rotsnap;\n                            }\n                        }\n                        quaternionE.setFromAxisAngle( eye, rotz );\n                        quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionE );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                        scope.object.quaternion.copy( tempQuaternion );\n\n                    } else if ( scope.axis == \"RXYZE\" ) {\n\n                        var tempAxis = point.clone().cross(tempVector).normalize(); // rotation axis\n\n                        tempQuaternion.setFromRotationMatrix( tempMatrix.copy( parentRotationMatrix ).invert() );\n\n                        var rot = - point.clone().angleTo(tempVector);\n                        if ( scope.snap !== null ) {\n                            var rotsnap = Math.round( rot / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rot) < scope.snapDelta ) {\n                                rot = rotsnap;\n                            }\n                        }\n                        quaternionX.setFromAxisAngle( tempAxis, rot );\n                        quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                        scope.object.quaternion.copy( tempQuaternion );\n\n                    } else if ( scope.space == \"local\" ) {\n\n                        tempMatrix.copy( worldRotationMatrix ).invert();\n                        point.applyMatrix4( tempMatrix );\n                        tempVector.applyMatrix4( tempMatrix );\n\n                        var projx = point.dot(this.unitX), projy = point.dot(this.unitY), projz = point.dot(this.unitZ);\n                        var tempx = tempVector.dot(this.unitX), tempy = tempVector.dot(this.unitY), tempz = tempVector.dot(this.unitZ);\n                        rotation.set( Math.atan2( projz, projy ), Math.atan2( projx, projz ), Math.atan2( projy, projx ) );\n                        offsetRotation.set( Math.atan2( tempz, tempy ), Math.atan2( tempx, tempz ), Math.atan2( tempy, tempx ) );\n\n                        var rotx = rotation.x - offsetRotation.x;\n                        var roty = rotation.y - offsetRotation.y;\n                        var rotz = rotation.z - offsetRotation.z;\n                        if ( scope.snap !== null ) {\n                            if ( scope.axis.search(\"X\") != -1 ) {\n                                var rotsnap = Math.round( rotx / scope.snap ) * scope.snap;\n                                if ( Math.abs(rotsnap-rotx) < scope.snapDelta ) {\n                                    rotx = rotsnap;\n                                }\n                            }\n                            if ( scope.axis.search(\"Y\") != -1 ) {\n                                var rotsnap = Math.round( roty / scope.snap ) * scope.snap;\n                                if ( Math.abs(rotsnap-roty) < scope.snapDelta ) {\n                                    roty = rotsnap;\n                                }\n                            }\n                            if ( scope.axis.search(\"Z\") != -1 ) {\n                                var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                                if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                                    rotz = rotsnap;\n                                }\n                            }\n                        }\n                        quaternionX.setFromAxisAngle( this.unitX, rotx );\n                        quaternionY.setFromAxisAngle( this.unitY, roty );\n                        quaternionZ.setFromAxisAngle( this.unitZ, rotz );\n                        quaternionXYZ.setFromRotationMatrix( oldRotationMatrix );\n\n                        if ( scope.axis == \"RX\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionX );\n                        if ( scope.axis == \"RY\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionY );\n                        if ( scope.axis == \"RZ\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionZ );\n\n                        scope.object.quaternion.copy( quaternionXYZ );\n\n                    } else if ( scope.space == \"world\" ) {\n\n                        var projx = point.dot(this.unitX), projy = point.dot(this.unitY), projz = point.dot(this.unitZ);\n                        var tempx = tempVector.dot(this.unitX), tempy = tempVector.dot(this.unitY), tempz = tempVector.dot(this.unitZ);\n                        rotation.set( Math.atan2( projz, projy ), Math.atan2( projx, projz ), Math.atan2( projy, projx ) );\n                        offsetRotation.set( Math.atan2( tempz, tempy ), Math.atan2( tempx, tempz ), Math.atan2( tempy, tempx ) );\n\n                        tempQuaternion.setFromRotationMatrix( tempMatrix.copy( parentRotationMatrix ).invert() );\n\n                        var rotx = rotation.x - offsetRotation.x;\n                        var roty = rotation.y - offsetRotation.y;\n                        var rotz = rotation.z - offsetRotation.z;\n                        if ( scope.snap !== null ) {\n                            if ( scope.axis.search(\"X\") != -1 ) {\n                                var rotsnap = Math.round( rotx / scope.snap ) * scope.snap;\n                                if ( Math.abs(rotsnap-rotx) < scope.snapDelta ) {\n                                    rotx = rotsnap;\n                                }\n                            }\n                            if ( scope.axis.search(\"Y\") != -1 ) {\n                                var rotsnap = Math.round( roty / scope.snap ) * scope.snap;\n                                if ( Math.abs(rotsnap-roty) < scope.snapDelta ) {\n                                    roty = rotsnap;\n                                }\n                            }\n                            if ( scope.axis.search(\"Z\") != -1 ) {\n                                var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                                if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                                    rotz = rotsnap;\n                                }\n                            }\n                        }\n                        quaternionX.setFromAxisAngle( this.unitX, rotx );\n                        quaternionY.setFromAxisAngle( this.unitY, roty );\n                        quaternionZ.setFromAxisAngle( this.unitZ, rotz );\n                        quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                        if ( scope.axis == \"RX\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                        if ( scope.axis == \"RY\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                        if ( scope.axis == \"RZ\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                        scope.object.quaternion.copy( tempQuaternion );\n\n                    }\n\n                    // show rotation end line\n                    if (_mode === \"transrotate\" ) {\n                        scope.add( scope.endLine );\n                        scope.add( scope.centerMark );\n                    }\n\n                }\n\n                // update matrix\n                scope.object.matrixAutoUpdate = true;\n\n                scope.update(true);\n                scope.dispatchEvent( changeEvent );\n                scope.dispatchEvent( objectChangeEvent );\n\n                return planeIntersect? true : false;\n\n            }\n\n            this.onPointerUp = function( event ) {\n\n                if ( _dragging && ( scope.axis !== null ) ) {\n                    mouseUpEvent.mode = _mode;\n                    scope.dispatchEvent( mouseUpEvent )\n                }\n                _dragging = false;\n\n                this.gizmo[_mode].show();\n\n                this.updateUnitVectors();\n\n                // remove rotation start/end lines\n                if ( _mode === \"transrotate\" && this.gizmo[_mode].activeMode === \"rotate\" ) {\n                    this.remove( this.endLine );\n                    this.remove( this.centerMark );\n                    this.parent.remove( this.centerLine );\n                    this.parent.remove( this.startLine );\n                    this.parent.remove( this.ticks[this.axis] );\n                }\n\n                return false;\n\n            }\n\n            function intersectObjects( pointer, objects ) {\n                return THREE.TransformControls.intersectObjects(pointer.canvasX, pointer.canvasY, objects, camera, true);\n            }\n        }\n\n        static intersectObjects(clientX, clientY, objects, camera, recursive) {\n            // Convert client to viewport coords (in [-1,1]^2)\n            var x =  (clientX  / camera.clientWidth)  * 2 - 1;\n            var y = -(clientY  / camera.clientHeight) * 2 + 1; // y-direction flips between canvas and viewport coords\n\n            if (camera.isPerspective) {\n                _pointerVector.set(x, y, 0.5);\n                _pointerVector.unproject(camera);\n                _ray.set(camera.position, _pointerVector.sub(camera.position).normalize());\n            } else {\n                _pointerVector.set(x, y, -1);\n                _pointerVector.unproject(camera);\n                _pointerDir.set(0, 0, -1);\n                _ray.set(_pointerVector, _pointerDir.transformDirection(camera.matrixWorld));\n            }\n\n            var intersections = _ray.intersectObjects(objects, recursive);\n            return intersections[0] ? intersections[0] : null;\n        }\n    }\n    THREE.TransformControls = TransformControls;\n};\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!../../node_modules/css-unicode-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./Section.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].use[2]!../../node_modules/css-unicode-loader/index.js!../../node_modules/sass-loader/dist/cjs.js!./Section.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { SectionTool } from './SectionTool';\nimport './Section.css';\n\nconst avp = Autodesk.Viewing.Private;\nconst AVU = Autodesk.Viewing.UI;\nconst analytics = avp.analytics;\n\n/**\n * The SectionExtension provides ways to cut the geometry using planes or a cube.\n * The extension adds a toolbar button to access the feature.\n *\n * The extension id is: `Autodesk.Section`\n *\n * @param {Viewer3D} viewer - Viewer instance\n * @param {object} options - Configurations for the extension\n * @example\n * viewer.loadExtension('Autodesk.Section')\n * @memberof Autodesk.Viewing.Extensions\n * @alias Autodesk.Viewing.Extensions.SectionExtension\n * @see {@link Autodesk.Viewing.Extension} for common inherited methods.\n * @class\n */\nexport var SectionExtension = function(viewer, options) {\n    Autodesk.Viewing.Extension.call(this, viewer, options);\n    this.viewer = viewer;\n    this.name = 'section';\n    this.modes = ['x','y','z','box'];\n    this.buttons = {};\n\n    this.onViewerSetView = this.onViewerSetView.bind(this);\n    this._onCutPlanesChanged = this._onCutPlanesChanged.bind(this);\n    this._onShowAll = this._onShowAll.bind(this);\n};\n\nSectionExtension.prototype = Object.create(Autodesk.Viewing.Extension.prototype);\nSectionExtension.prototype.constructor = SectionExtension;\n\nvar proto = SectionExtension.prototype;\n\n/**\n * Registers the SectionTool, hotkeys and event handlers.\n *\n * @returns {boolean}\n */\nproto.load = function() {\n    var that = this;\n    var viewer = this.viewer;\n\n    this.tool = new SectionTool(viewer, {\n        tintColor: { r: 1, g: 1, b: 0 },\n        tintIntensity: 0.2\n    });\n\n    viewer.toolController.registerTool(this.tool, this.setActive.bind(this));\n    this.sectionStyle = null;\n    this.supportedStyles = [\"X\", \"Y\", \"Z\", \"BOX\"];\n\n    this.displaySectionHatches = this.displaySectionHatches.bind(this);\n\n    this.viewer.prefs.addListeners(avp.Prefs3D.DISPLAY_SECTION_HATCHES, this.displaySectionHatches);\n\n    viewer.addEventListener(Autodesk.Viewing.SET_VIEW_EVENT, this.onViewerSetView);\n\n    // consider cutplane changes of other tools, so that cap meshes consider them too\n    viewer.addEventListener(Autodesk.Viewing.CUTPLANES_CHANGE_EVENT, this._onCutPlanesChanged);\n    viewer.addEventListener(Autodesk.Viewing.SHOW_ALL_EVENT, this._onShowAll);\n    viewer.addEventListener(Autodesk.Viewing.RENDER_OPTION_CHANGED_EVENT, that.tool.notifyRenderOptionChanged);\n\n    this.HOTKEYS_ID = \"Autodesk.Section.Hotkeys\";\n    var hotkeys = [{\n        keycodes: [\n            Autodesk.Viewing.KeyCode.ESCAPE\n        ],\n        onRelease: function () {\n            if (that.viewer.getAggregateSelection().length === 0)\n                return that.deactivate();\n        }\n    }];\n    viewer.getHotkeyManager().pushHotkeys(this.HOTKEYS_ID, hotkeys);\n\n    // Invoked when the context menu is about to get opened.\n    this.viewer.registerContextMenuCallback('Autodesk.Section', (menu, status) => {\n        onContextMenu(this, menu, status);\n    });\n\n    //Load the required dependency (and return the pending load as the load completion Promise)\n    return this.viewer.loadExtension('Autodesk.CompGeom');\n};\n\n/**\n * Unregisters the SectionTool, hotkeys and event handlers.\n *\n * @returns {boolean}\n */\nproto.unload = function () {\n    var viewer = this.viewer;\n\n    viewer.unregisterContextMenuCallback('Autodesk.Section');\n\n    // remove hotkey\n    viewer.getHotkeyManager().popHotkeys(this.HOTKEYS_ID);\n\n    this.destroyUI();\n\n    viewer.removeEventListener(Autodesk.Viewing.SET_VIEW_EVENT, this.onViewerSetView);\n    viewer.removeEventListener(Autodesk.Viewing.CUTPLANES_CHANGE_EVENT, this._onCutPlanesChanged);\n    viewer.removeEventListener(Autodesk.Viewing.SHOW_ALL_EVENT, this._onShowAll);\n    viewer.removeEventListener(Autodesk.Viewing.RENDER_OPTION_CHANGED_EVENT, this.tool.notifyRenderOptionChanged);\n\n    this.viewer.prefs.removeListeners(avp.Prefs3D.DISPLAY_SECTION_HATCHES, this.displaySectionHatches);\n\n    viewer.toolController.deregisterTool(this.tool);\n    this.tool = null;\n\n    return true;\n};\n\n/**\n * Toggles activeness of section planes.\n *\n * @returns {boolean} Whether the section plane is active or not.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#toggle\n */\nproto.toggle = function() {\n    if (this.isActive()) {\n        this.enableSectionTool(false);\n    } else {\n        var style = this.sectionStyle || \"X\";\n        this.setSectionStyle(style, true);\n    }\n    return this.isActive(); // Need to check for isActive() again.\n};\n\n/**\n * Returns the current type of plane that will cut-though the geometry.\n *\n * @returns {null | string} Either \"X\" or \"Y\" or \"Z\" or \"BOX\" or null.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#getSectionStyle\n */\nproto.getSectionStyle = function() {\n    return this.sectionStyle;\n};\n\n/**\n * Sets the Section plane style.\n *\n * @param {string} style - Accepted values are 'X', 'Y', 'Z' and 'BOX' (in Caps)\n * @param {boolean} [preserveSection] - Whether sending the current style value resets the cut planes.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionStyle\n */\nproto.setSectionStyle = function(style, preserveSection) {\n\n    if (this.supportedStyles.indexOf(style) === -1) {\n        return false;\n    }\n\n    var bActive = this.isActive();\n    var bNewStyle = (this.sectionStyle !== style) || !preserveSection;\n    this.sectionStyle = style;\n\n    if (bActive && bNewStyle) {\n        this.tool.setSection(style);\n    }\n    else if (!bActive) {\n        this.enableSectionTool(true);\n        if (bNewStyle) {\n            this.tool.setSection(style);\n        } else {\n            this.tool.attachControl(true);\n        }\n    }\n    return true;\n};\n\n/**\n * Use to set the section from an externally defined plane. For showing with line pattern\n * Tool itself will be disabled when setting the plane\n *\n * @param {THREE.Vector4} cutplane - send null to clear the section\n */\nproto.setSectionFromPlane = function(cutplane) {\n    this.deactivate();\n\n    if (cutplane) {\n        this.tool.setSectionFromPlane(cutplane);\n        this.tool.attachControl(false);\n        // LMV-5299\n        if (!this.isActive()) {\n            this.tool.showPlane(false);\n        }\n    } else {\n        this.tool.clearSection();\n        var prevLock = this.viewer.toolController.setIsLocked(false);\n        this.enableSectionTool(false);\n        this.viewer.toolController.setIsLocked(prevLock);\n    }\n};\n\n/**\n * Returns the planes belonging only to the Section tool's set*\n */\nproto.getSectionPlanes = function() {\n    return this.tool.getSectionPlanes();\n};\n\n/**\n *\n * @param enable\n * @param keepCutPlanes - keep existing cut planes when deactivating the tool.\n * @returns {boolean}\n * @private\n */\nproto.enableSectionTool = function(enable, keepCutPlanes=false) {\n    var toolController = this.viewer.toolController,\n        isActive = this.tool.isActive();\n\n    if (enable && !isActive) {\n        toolController.activateTool(\"section\");\n        if (this.sectionToolButton) {\n            this.sectionToolButton.setState(Autodesk.Viewing.UI.Button.State.ACTIVE);\n        }\n        return true;\n\n    } else if (!enable && isActive) {\n        const prevKeepCutPlanes = this.tool.keepCutPlanesOnDeactivate;\n        this.tool.keepCutPlanesOnDeactivate = keepCutPlanes;\n        toolController.deactivateTool(\"section\");\n        this.tool.keepCutPlanesOnDeactivate = prevKeepCutPlanes;\n\n        if (this.sectionToolButton) {\n            this.sectionToolButton.setState(Autodesk.Viewing.UI.Button.State.INACTIVE);\n        }\n        return true;\n    } else if (enable) {\n        toolController.activateToolModality(\"section\");\n    }\n    return false;\n};\n\n/**\n * Returns an object that reperesents the state of the section planes\n * currently applied to the viewer by this extension.\n *\n * @param {THREE.Vector3 | object} [ignoreGlobalOffset=false]\n *\n * @returns {object | null}\n */\nproto.getViewValues = function(ignoreGlobalOffset) {\n\n    var boxValues = this.tool.getSectionBoxValues(ignoreGlobalOffset);\n    if (boxValues)\n        return boxValues;\n\n    var planeValues = this.tool.getSectionPlaneValues(ignoreGlobalOffset);\n    if (planeValues)\n        return planeValues;\n\n    return null;\n};\n\n/**\n * Gets the extension state as a plain object. Invoked automatically by viewer.getState()\n *\n * @param {object} viewerState - Object to inject extension values.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#getState\n */\nproto.getState = function(viewerState) {\n    const model = this.viewer.getFirstModel();\n    if (!model || model.is2d()) {\n        return;\n    }\n\n    viewerState.cutplanes = viewerState.cutplanes || [];\n    var planes = this.tool.getSectionPlaneSet();\n    for (var i = 0; i < planes.length; i++) {\n        viewerState.cutplanes.push(planes[i].toArray());\n    }\n};\n\n/**\n * Restores the extension state from a given object. Invoked automatically by viewer.restoreState()\n *\n * @param {object} viewerState - Viewer state.\n * @returns {boolean} True if restore operation was successful.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#restoreState\n */\nproto.restoreState = function(viewerState) {\n    // If viewerState doesn't contain cutplanes, we should leave it as is.\n    if (!viewerState.cutplanes) {\n        return;\n    }\n    const cutplanes = this.getSectionPlanes();\n    this.setSectionFromPlane(null);   // Unload any existing planes first\n    if (cutplanes.length === 1) {\n        this.setSectionFromPlane(cutplanes[0]);\n    }\n\n    return true;\n};\n\n/**\n * @private\n */\nproto._onCutPlanesChanged = function(/*event*/) {\n    this.tool.notifyCutplanesChanged();\n};\n\n\n/**\n * @private\n */\nproto._onShowAll = function(/*event*/) {\n    this.deactivate();\n};\n\n/**\n * Set a section box around the passed in THREE.Box3.\n * This method will also enable the section tool.\n *\n * @param {THREE.Box3} box - used to set the section box.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionBox\n */\nproto.setSectionBox = function(box) {\n    if (!box) return;\n    this.enableSectionTool(true);\n    if (this.tool.setSectionBox(box)) {\n        this.activeStatus = true;\n        this.viewer.clearSelection();\n\n        // Update current mode and button state.\n        this.mode = 'box';\n        this.buttons[this.mode]?.setState(AVU.Button.State.ACTIVE);\n    } else {\n        this.enableSectionTool(false);\n    }\n};\n\n/**\n * Place a section plane on the Intersection.\n * This method will also enable the section tool.\n *\n * @param {THREE.Vector3} normal - plane normal.\n * @param {THREE.Vector3} point - position to place the plane.\n * @param enableRotationGizmo\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionPlane\n */\nproto.setSectionPlane = function(normal, point, enableRotationGizmo) {\n    if (!normal || !point) return;\n    this.enableSectionTool(true);\n    if (this.tool.setSectionPlane(normal, point, enableRotationGizmo)) {\n        this.activeStatus = true;\n        this.viewer.clearSelection();\n\n        // Update current mode and button state.\n        this.mode = this.calculateNearestAxis(normal);\n        this.buttons[this.mode]?.setState(AVU.Button.State.ACTIVE);\n    } else {\n        this.enableSectionTool(false);\n    }\n};\n\n/**\n * Given a normal, return the x, y or z, according to the nearest world axis.\n *\n * @param {THREE.Vector3} normal - plane normal.\n */\nproto.calculateNearestAxis = function (normal) {\n    // absolute values for direction cosines, bigger value equals closer to basis axis\n    const xn = Math.abs(normal.x);\n    const yn = Math.abs(normal.y);\n    const zn = Math.abs(normal.z);\n\n    if ((xn >= yn) && (xn >= zn)) {\n        return 'x';\n    } else if ((yn > xn) && (yn >= zn)) {\n        return 'y';\n    } else {\n        return `z`;\n    }\n};\n\n/**\n * @private\n */\nproto.onViewerSetView = function(/*event*/) {\n    this.deactivate();\n};\n\n/**\n * @param toolbar\n */\nproto.onToolbarCreated = function(toolbar) {\n\n    this.sectionToolButton = new AVU.ComboButton(\"toolbar-sectionTool\");\n    this.sectionToolButton.setToolTip('Section analysis');\n    this.sectionToolButton.setIcon(\"adsk-icon-section-analysis\");\n    this.createSubmenu(this.sectionToolButton);\n\n    // make sure inspect tools is visible\n    var modelTools = toolbar.getControl(Autodesk.Viewing.TOOLBAR.MODELTOOLSID);\n\n    // place section tool before reset tool\n    if (modelTools) {\n        var resetTool = modelTools.getControl(\"toolbar-resetTool\");\n        if (resetTool) {\n            modelTools.addControl(this.sectionToolButton, {index: modelTools.indexOf(resetTool.getId())});\n        } else {\n            modelTools.addControl(this.sectionToolButton, {index: 0});\n        }\n    }\n};\n\n/**\n *\n * @param parentButton\n * @private\n */\nproto.createSubmenu = function(parentButton)\n{\n    var that = this;\n    var viewer = this.viewer;\n\n    /**\n     * @param button\n     * @param name\n     * @private\n     */\n    function createNavToggler(button, name) {\n        that.buttons[name] = button;\n\n        return function() {\n            var state = button.getState();\n            var enable = function() {\n                if (button instanceof AVU.ComboButton === false) {\n                    that.activate(name);\n                } else {\n                    that.enableSectionTool(true);\n                    that.tool.attachControl(true);\n                }\n            };\n\n            const sectionType = name.toLowerCase().indexOf('box') !== -1 ? 'Box' : 'Plane';\n\n            if (state === AVU.Button.State.INACTIVE) {\n                button.setState(AVU.Button.State.ACTIVE);\n                // Long initialization may cause issues on touch enabled devices, make it async\n                if (Autodesk.Viewing.isMobileDevice()) {\n                    setTimeout(enable, 1);\n                } else {\n                    enable();\n                }\n                analytics.track('viewer.section', {\n                    from: 'Toolbar',\n                    type: sectionType,\n                    action: 'Enable',\n                });\n            } else if (state === AVU.Button.State.ACTIVE) {\n                button.setState(AVU.Button.State.INACTIVE);\n                that.deactivate();\n                analytics.track('viewer.section', {\n                    from: 'Toolbar',\n                    type: sectionType,\n                    action: 'Disable',\n                });\n            }\n            that.sectionStyle = name.toUpperCase();\n        };\n    }\n\n    /**\n     *\n     */\n    function updateSectionButtons() {\n        var areVectorsEqual = (function () {\n            var v = new THREE.Vector3();\n            return function(a, b, sqtol) {\n                v.subVectors(a, b);\n                return v.lengthSq() < sqtol;\n            };\n        })();\n\n        var unitx = new THREE.Vector3(1, 0, 0);\n        var unity = new THREE.Vector3(0, 1, 0);\n        var unitz = new THREE.Vector3(0, 0, 1);\n        var right = viewer.autocam.getWorldRightVector();\n        var up = viewer.autocam.getWorldUpVector();\n        var front = viewer.autocam.getWorldFrontVector();\n\n        var tol = 0.0001;\n        if (areVectorsEqual(up, unitx, tol)) {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-x\");\n        } else if (areVectorsEqual(up, unitz, tol)) {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-z\");\n        } else {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-y\");\n        }\n\n        if (areVectorsEqual(right, unity, tol)) {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-y\");\n        } else if (areVectorsEqual(right, unitz, tol)) {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-z\");\n        } else {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-x\");\n        }\n\n        if (areVectorsEqual(front, unitx, tol)) {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-x\");\n        } else if (areVectorsEqual(front, unity, tol)) {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-y\");\n        } else {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-z\");\n        }\n\n    }\n\n    var sectionXButton = this.sectionXButton = new AVU.Button(\"toolbar-sectionTool-x\");\n    sectionXButton.setToolTip('Add X plane');\n    sectionXButton.setIcon(\"adsk-icon-plane-x\");\n    sectionXButton.onClick = createNavToggler(sectionXButton, 'x');\n    parentButton.addControl(sectionXButton);\n\n    var sectionYButton = this.sectionYButton = new AVU.Button(\"toolbar-sectionTool-y\");\n    sectionYButton.setToolTip('Add Y plane');\n    sectionYButton.setIcon(\"adsk-icon-plane-y\");\n    sectionYButton.onClick = createNavToggler(sectionYButton, 'y');\n    parentButton.addControl(sectionYButton);\n\n    var sectionZButton = this.sectionZButton = new AVU.Button(\"toolbar-sectionTool-z\");\n    sectionZButton.setToolTip('Add Z plane');\n    sectionZButton.setIcon(\"adsk-icon-plane-z\");\n    sectionZButton.onClick = createNavToggler(sectionZButton, 'z');\n    parentButton.addControl(sectionZButton);\n\n    var sectionBoxButton = this.sectionBoxButton = new AVU.Button(\"toolbar-sectionTool-box\");\n    sectionBoxButton.setToolTip('Add box');\n    sectionBoxButton.setIcon(\"adsk-icon-box\");\n    sectionBoxButton.onClick = createNavToggler(sectionBoxButton, 'box');\n    parentButton.addControl(sectionBoxButton);\n\n    const model = viewer.getFirstModel();\n    if (model?.is3d()) {\n        updateSectionButtons();\n    } else {\n        viewer.addEventListener(Autodesk.Viewing.MODEL_ADDED_EVENT, updateSectionButtons, { once: true });\n    }\n};\n\n/**\n * @private\n */\nproto.destroyUI = function() {\n\n    if (this.sectionToolButton) {\n        this.sectionToolButton.removeFromParent();\n        this.sectionToolButton = null;\n\n        this.buttons = {};\n    }\n};\n\n/**\n * Activates a section plane for user to interact with.\n * It performs the same action as the UI button.\n *\n * @param {string} mode - Accepted values are 'x', 'y', 'z' and 'box' (in lowercase)\n * @returns {boolean} - true if the activation was successful.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#activate\n */\nproto.activate = function (mode) {\n    if (this.activeStatus && this.mode === mode) {\n        return;\n    }\n    this.enableSectionTool(true);\n    switch (mode) {\n        default:\n        case 'x':\n            this.tool.setSection('X');\n            this.mode = 'x';\n            break;\n        case 'y':\n            this.tool.setSection('Y');\n            this.mode = 'y';\n            break;\n        case 'z':\n            this.tool.setSection('Z');\n            this.mode = 'z';\n            break;\n        case 'box':\n            this.tool.setSection('BOX');\n            this.mode = 'box';\n            break;\n        }\n    this.activeStatus = true;\n    return true;\n};\n\n/**\n * Removes the section plane/box from the 3D canvas.\n *\n * @param keepCutPlanes - keep existing cut planes when deactivating the tool. Default is false.\n *\n * @alias Autodesk.Viewing.Extensions.SectionExtension#deactivate\n * @returns {boolean} - returns true if deactivated, false otherwise.\n */\nproto.deactivate = function (keepCutPlanes) {\n    if(this.activeStatus) {\n        this.tool.setActiveMode(\"\");\n        this.enableSectionTool(false, keepCutPlanes);\n        this.activeStatus = false;\n        return true;\n    }\n    return false;\n};\n\n/**\n * Turns display hatches on or off.\n * @param {boolean} value - if true all section planes will get the hatches applied, otherwise, the section planes will not have the hatches.\n */\nproto.displaySectionHatches = function (value) {\n\n    this.tool.setDisplaySectionHatches(value);\n\n    if (this.activeStatus) {\n        const planes = this.getSectionPlanes();\n        this.tool.clearSection();\n        // update the hatches for each existing plane\n        planes.forEach((plane) => {\n            this.tool.updateCapMeshes(new THREE.Plane().setComponents(plane.x, plane.y, plane.z, plane.w));\n        });\n    }\n};\n\n\n/**\n * Invoked when the context menu is about to be created.\n * Adds additional entries to the context menu.\n *\n * @param section\n * @param menu\n * @param status\n * @private\n */\nfunction onContextMenu(section, menu, status) {\n\n    if (!status.hasSelected)\n        return;\n\n    const viewer = section.viewer;\n\n    const aggregateSelection = viewer.getAggregateSelection();\n\n    // This case is relevant mostly for hypermodel viewing, when there are 2D planes living in a 3D scene.\n    // In this case, it make no sense to allow \"section-box\" to a plane.\n    if (aggregateSelection.length === 1 && aggregateSelection[0].model.is2d()) {\n        return;\n    }\n\n    const bbox = viewer.impl.selector.getSelectionBounds();\n\n    const menuEntry = {\n        title: \"Section\",\n        target: []\n    };\n\n    menuEntry.target.push({\n        title: 'Section Box',\n        target: () => {\n            section.setSectionBox(bbox);\n            analytics.track('viewer.section', {\n                from: 'Contextual',\n                type: 'Box',\n                action: 'Enable',\n            });\n        }\n    });\n\n    // aggregateSelection might only contain a parent nodeId that doesn't match any dbId, so we have to iterate the instance tree here\n    const selected = aggregateSelection.map(selectionObject => selectionObject.selection).flat();\n    const selectedLeafNodes = new Array();\n    const instanceTree = viewer.model.getInstanceTree();\n    if (!instanceTree) {\n        return;\n    }\n    selected.forEach((nodeId) => {\n        instanceTree.enumNodeChildren(nodeId, (id) => {\n            if (instanceTree.getChildCount(id) === 0) {\n                selectedLeafNodes.push(id);\n            }\n        }, true);\n    });\n\n    const modelIds = aggregateSelection.map(selectionObject => selectionObject.model.id);\n    const intersection = viewer.impl.hitTest(status.canvasX, status.canvasY, false, selectedLeafNodes, modelIds);\n\n    // Ensure that the selected object is the on that recieved the context click.\n    if (intersection?.face?.normal && intersection.model && selectedLeafNodes.indexOf(intersection.dbId) !== -1) {\n\n        const worldMatrix = new THREE.Matrix4();\n        intersection.model.getFragmentList()?.getWorldMatrix(intersection.fragId, worldMatrix);\n        const normalMatrix = new THREE.Matrix3().getNormalMatrix(worldMatrix);\n        const normal = intersection.face.normal.clone().applyMatrix3(normalMatrix).normalize();\n\n        menuEntry.target.push({\n            title: 'Section Plane',\n            target: () => {\n                section.setSectionPlane(normal, intersection.point, false);\n                analytics.track('viewer.section', {\n                    from: 'Contextual',\n                    type: 'Plane',\n                    action: 'Enable',\n                });\n            }\n        });\n    }\n\n    menu.push(menuEntry);\n}\n\n\n// Make the extension available\nAutodesk.Viewing.theExtensionManager.registerExtension('Autodesk.Section', SectionExtension);\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","Symbol","getRawTag","objectToString","symToStringTag","toStringTag","value","Object","trimmedEndIndex","reTrimStart","string","slice","replace","freeGlobal","g","objectProto","prototype","hasOwnProperty","nativeObjectToString","isOwn","call","tag","unmasked","e","result","freeSelf","self","root","Function","reWhitespace","index","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","leadingEdge","clearTimeout","cancel","flush","type","baseGetTag","isObjectLike","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","stylesInDOM","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","globalThis","prop","r","nc","debounce","require","SectionMeshClass","avp","Autodesk","Viewing","Private","SectionTool","viewer","_transRotControl","_transControl","_viewer","impl","_names","_active","_isDragging","_boxChanged","_isPlaneOn","_tintColor","tintColor","_tintIntensity","tintIntensity","_gizmoOffsetRight","isNaN","gizmoOffsetRight","_gizmoOffsetLeft","gizmoOffsetLeft","_gizmoOffsetTop","gizmoOffsetTop","_gizmoOffsetBottom","gizmoOffsetBottom","_controlOffset","THREE","Vector3","_controlNewPosition","_sectionGroups","_sectionPlanes","_sectionPicker","_activeMode","_overlayName","_touchType","_initialized","_visibleAtFirst","_outlineIndices","_selectionColor","_displaySectionHatches","_transform","_inverseTransform","_normalMatrix","_inverseNormalMatrix","_auxVec3","setTransform","transform","clone","invert","Matrix3","getNormalMatrix","getDefaultTransform","_viewer$get3DModels$","_first3DModelData$loa","Matrix4","first3DModelData","get3DModels","getData","loadOptions","applyRefPoint","refPointTransform","position","quaternion","Quaternion","scale","decompose","makeRotationFromQuaternion","sendAnalyticsDebounced","from","action","analytics","track","updateViewer","invalidate","updateControls","adjustGizmoToBounds","object","gizmoNewClientPos","client","worldToClient","rect","getCanvasBoundingClientRect","copy","x","width","y","height","getClampedGizmoPosition","intersection","TransformControls","intersectObjects","camera","getWorldPosition","point","sub","setGizmoOffset","updateSections","updatePlaneMeshes","updateCapMeshes","Plane","setComponents","z","w","onSceneUpdated","_ref","objectsMoved","GizmoMaterial","MeshBasicMaterial","constructor","parameters","super","depthTest","depthWrite","side","FrontSide","transparent","setValues","oldColor","color","oldOpacity","opacity","highlight","highlighted","setRGB","uniformsNeedUpdate","GizmoLineMaterial","LineBasicMaterial","linewidth","createCircleGeometry","radius","facing","arc","vertices","cos","PI","sin","multiplyScalar","BufferGeometry","setFromPoints","createArrowGeometry","radiusTop","radiusBottom","radialSegments","heightSegments","openEnded","CylinderBufferGeometry","applyMatrix4","makeTranslation","createLineGeometry","axis","lineGeometry","isLines","TransformGizmo","Object3D","includeAxis","scope","init","handles","pickers","planes","highlights","hemiPicker","subPickers","add","planeGeometry","PlaneBufferGeometry","planeMaterial","wireframe","DoubleSide","Mesh","activePlane","rotation","set","name","visible","setupGizmos","activeMode","traverse","child","updateMatrix","tempGeometry","geometry","matrix","hide","show","parent","material","addGizmos","gizmoMap","visble","setHandlePickerGizmos","axisNames","keys","handleGizmos","axisName","indexOf","pickerGizmos","hemiPickerGizmos","highlightGizmos","subPickerGizmos","eye","vec1","vec2","lookAtMatrix","search","setFromRotationMatrix","lookAt","setFromEuler","TransformGizmoTranslate","arrowGeometry","lineXGeometry","lineYGeometry","lineZGeometry","X","Line","Y","Z","XYZ","OctahedronBufferGeometry","XY","YZ","XZ","BoxBufferGeometry","setActivePlane","isLocalSpace","tempMatrix","extractRotation","matrixWorld","abs","TransformGizmoRotate","RX","RY","RZ","RE","RXYZE","TorusBufferGeometry","eye2","worldRotation","Euler","tempQuaternion","unitX","unitY","unitZ","quaternionX","quaternionY","quaternionZ","setFromAxisAngle","atan2","multiplyQuaternions","TransformGizmoTranslateRotate","theta","SphereBufferGeometry","useAllPickers","TransformGizmoScale","_pointerVector","_pointerDir","_ray","Raycaster","domElement","mode","gizmo","snap","snapDelta","space","size","normal","startLine","endLine","LineDashedMaterial","centerLine","ImageUtils","loadTexture","getResourceUrl","magFilter","minFilter","NearestFilter","CircleBufferGeometry","centerMark","ticks","h","mesh","_dragging","_mode","changeEvent","mouseDownEvent","mouseUpEvent","objectChangeEvent","offset","offsetRotation","clientScale","tempVector","projX","projY","projZ","quaternionXYZ","quaternionE","oldPosition","oldScale","oldRotationMatrix","parentRotationMatrix","parentScale","worldPosition","worldRotationMatrix","camPosition","pointer","objects","canvasX","canvasY","attach","updateUnitVectors","detach","setMode","dispatchEvent","getPicker","children","setPosition","setNormal","setFromUnitVectors","applyQuaternion","multiply","setRotation","rotationMatrix","setSnap","delta","setSize","setSpace","updateMatrixWorld","setFromMatrixPosition","gizmoOffset","applyEuler","isPerspective","dist","distanceTo","tan","fov","top","bottom","getBoundingClientRect","vec","showRotationGizmos","onPointerHover","event","intersect","isDragging","onPointerDown","pointerType","button","normalize","getWorldDirection","planeIntersect","setFromMatrixScale","startLinePositions","getAttribute","setXYZ","needsUpdate","pos","pt1","fromBufferAttribute","pt2","pt3","pt4","centerLinePositions","lerp","dashSize","gapSize","computeLineDistances","onPointerMove","dot","rotz","rotsnap","round","tempAxis","cross","rot","angleTo","projx","projy","projz","tempx","tempy","tempz","rotx","roty","matrixAutoUpdate","onPointerUp","clientX","clientY","recursive","clientWidth","clientHeight","unproject","transformDirection","intersections","init_TransformGizmos","tmpWorldPosition","tmpNormalMatrix","SectionMesh","plane","planeVec","Vector4","constant","connectivity","outline","applyMatrix3","init_SectionMesh","_fragIterator","FragmentIterator","delay","cg","Extensions","CompGeom","sceneAfter","skipDepthTarget","_removeSections","section3D","scene","section2D","toPlaneCoords","makePlaneBasis","fromPaneCoords","mat2dname","matman","create2DMaterial","skipCircles","skipEllipticals","isScreenSpace","noIdOutput","mat2d","findMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","cutplanes","_otherCutPlanes","doNotCut","box","Box3","models","modelQueue","getModels","filter","m","getDoNotCut","intersects","start","fragId","dbId","model","lastFrag","frags","getFragmentList","isFragVisible","getWorldBounds","xBoxPlane","getGeometry","_material","getMaterial","is2d","getWorldMatrix","xMeshPlane","bbox","convertToPlaneCoords","vbb","VertexBufferBuilder","Color","getDiffuseColor","c","b","eset","EdgeSet","getSize","snapEdges","sanitizeEdges","stitchContours","cset","triangulate","skipOpenContour","j","contours","cntr","pts","addSegment","mdata","toMesh","bg2d","BufferGeometryUtils","meshToGeometry","streamingDraw","streamingIndex","mesh2d","frustumCulled","modelId","triangulationFailed","bg","toPolygonMesh","packedNormals","mat","cloneMaterial","prismType","defines","toUpperCase","mrtIdBuffer","mrtNormals","bumpMap","normalMap","alphaMap","specularMap","hatchPattern","angle","hatchParams","Vector2","hatchTintColor","hatchTintIntensity","capmesh","_ownCutPlaneSet","setCutPlaneSetFor2DRendering","updateCapMaterials","mrtOnly","section","adjustMaterialMRTSetting","getObjectByName","createPlaneMesh","quat","pt","projectPoint","presetIndex","currentLightPreset","bgColor","LightPresets","bgColorGradient","lineMaterial","line","rebuild","traverseSections","minv","connect","intersectPlanes","computeBoundingBox","computeBoundingSphere","getVisibleBounds","getBoundingSphere","Sphere","getCenter","getX","getY","getZ","callback","setSectionPlanes","fireEvent","setCutPlaneSet","showPlane","showSection","attachControl","control","centerPlaneArrow","centerOffset","middle","boundingBox","localToWorld","getCenterPoint","getMaxDistanceToPlane","points","getBBoxCorners","Number","MIN_VALUE","perpendicularMagnitude","distanceToPoint","setPlaneLocal","normalWorld","setPlane","distance","checkNormal","obbox","center","group","Group","getSectionDistance","navigation","getEyeVector","shouldFlipNormal","negate","addOverlay","n23","n31","n12","plane1","plane2","plane3","optionalTarget","det","determinant","crossVectors","divideScalar","oldsection3D","oldsection2D","isActive","eyeVec","hit","rayIntersect","Ray","intersectPoint","setViewerSection","clearSection","planeSet","getCutPlaneSet","v4","setSection","normals","connectivities","centerGlobal","meshes","loadingBox","EPSILON","setFromNormalAndCoplanarPoint","ct","cornerOffset","setBox","recomputePivot","setSectionFromPlane","cutplane","setActiveMode","setDisplaySectionHatches","clearCapMeshes","capMeshOnly","pop","removeOverlay","isPlaneOn","resetSection","getNames","getName","register","deregister","removeEventListener","removeOverlayScene","CAMERA_CHANGE_EVENT","ISOLATE_EVENT","HIDE_EVENT","SHOW_EVENT","MODEL_TRANSFORM_CHANGED_EVENT","FRAGMENTS_LOADED_EVENT","FRAGMENTS_UNLOADED_EVENT","SCENE_UPDATED_EVENT","getPriority","activate","canvas","addEventListener","overlayScenes","createOverlayScene","initControl","deactivate","keepCutPlanesOnDeactivate","handleSingleClick","_sectionGroups$","forEach","_sectionGroups$2","prevObject","handleDoubleClick","handleSingleTap","handleDoubleTap","handleKeyDown","handleKeyUp","handleWheelInput","handleButtonDown","handleButtonUp","handleMouseMove","includes","_sectionGroups$3","handleGesture","handleBlur","handleResize","handlePressHold","values","getSectionBoxValues","aabb","sectionBox","setPivotPoint","ignoreGlobalOffset","right","front","left","bttm","back","off","globalOffset","sectionBoxTransform","identity","toArray","getSectionPlaneValues","sectionPlane","getSectionPlaneSet","getSectionPlanes","viewSet","notifyCutplanesChanged","numCutPlanesBefore","cpSets","getCutPlaneSets","cpName","cp","notifyRenderOptionChanged","setSectionBox","SceneMath","box2CutPlanes","setSectionPlane","_transRotControl2","_transRotControl3","enableRotationGizmo","planeVecs","locals","AVU","UI","SectionExtension","Extension","modes","buttons","onViewerSetView","bind","_onCutPlanesChanged","_onShowAll","create","proto","load","that","tool","toolController","registerTool","setActive","sectionStyle","supportedStyles","displaySectionHatches","prefs","addListeners","Prefs3D","DISPLAY_SECTION_HATCHES","SET_VIEW_EVENT","CUTPLANES_CHANGE_EVENT","SHOW_ALL_EVENT","RENDER_OPTION_CHANGED_EVENT","HOTKEYS_ID","hotkeys","keycodes","KeyCode","ESCAPE","onRelease","getAggregateSelection","getHotkeyManager","pushHotkeys","registerContextMenuCallback","menu","status","_intersection$face","hasSelected","aggregateSelection","selector","getSelectionBounds","menuEntry","title","selected","selectionObject","selection","flat","selectedLeafNodes","Array","instanceTree","getInstanceTree","nodeId","enumNodeChildren","getChildCount","modelIds","hitTest","face","_intersection$model$g","worldMatrix","normalMatrix","onContextMenu","loadExtension","unload","unregisterContextMenuCallback","popHotkeys","destroyUI","removeListeners","deregisterTool","toggle","enableSectionTool","setSectionStyle","getSectionStyle","preserveSection","bActive","bNewStyle","prevLock","setIsLocked","enable","keepCutPlanes","activateTool","sectionToolButton","setState","Button","State","ACTIVE","prevKeepCutPlanes","deactivateTool","INACTIVE","activateToolModality","getViewValues","boxValues","planeValues","getState","viewerState","getFirstModel","restoreState","_this$buttons$this$mo","activeStatus","clearSelection","_this$buttons$this$mo2","calculateNearestAxis","xn","yn","zn","onToolbarCreated","toolbar","ComboButton","setToolTip","setIcon","createSubmenu","modelTools","getControl","TOOLBAR","MODELTOOLSID","resetTool","addControl","getId","parentButton","createNavToggler","state","sectionType","toLowerCase","isMobileDevice","updateSectionButtons","v","areVectorsEqual","sqtol","subVectors","lengthSq","unitx","unity","unitz","autocam","getWorldRightVector","up","getWorldUpVector","getWorldFrontVector","tol","sectionYButton","sectionXButton","sectionZButton","onClick","sectionBoxButton","is3d","MODEL_ADDED_EVENT","once","removeFromParent","theExtensionManager","registerExtension"],"sourceRoot":""}