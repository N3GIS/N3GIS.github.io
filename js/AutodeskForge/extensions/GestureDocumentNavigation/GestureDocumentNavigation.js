/*!
 * LMV v7.105.0
 *
 * Copyright 2025 Autodesk, Inc.
 * All rights reserved.
 *
 * This computer source code and related instructions and comments are the
 * unpublished confidential and proprietary information of Autodesk, Inc.
 * and are protected under Federal copyright and state trade secret law.
 * They may not be disclosed to, copied or used by any third party without
 * the prior written consent of Autodesk, Inc.
 *
 * Autodesk Viewer SDK Usage Limitations:
 *
 * The Autodesk Viewer SDK JavaScript must be delivered from an
 * Autodesk-hosted URL.
 */
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	// runtime can't be in strict mode because a global variable is assign and maybe created.
/******/ 	var __webpack_modules__ = ({

/***/ "./extensions/GestureDocumentNavigation/BubbleUtils.js":
/*!*************************************************************!*\
  !*** ./extensions/GestureDocumentNavigation/BubbleUtils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseBubble: () => (/* binding */ parseBubble)\n/* harmony export */ });\n/* harmony import */ var _ModelUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModelUtils */ \"./extensions/GestureDocumentNavigation/ModelUtils.js\");\n\n\nconst parseBubble = (viewerDoc) => {\n  const doc = viewerDoc;\n  const viewableItem = doc.getRoot().findAllViewables()[0];\n  const fileExtension = _ModelUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getModelExtension(viewableItem.name());\n\n  function buildTree(node, role) {\n    // Don't save nodes with type other than 'folder' or 'view' or 'geometry'.\n    if (!(node.type() === 'folder' || node.type() === 'view' || node.type() === 'geometry')) {\n      return null;\n    }\n\n    // Don't save a geometry with a different role than the given one (2d or 3d).\n    if (node.type() === 'geometry' && node.data.role !== role) {\n      return null;\n    }\n\n    const outputNode = {\n      guid: node.guid(),\n      name: node.name(),\n      type: node.type()\n    };\n\n    if (node.type() === 'geometry') {\n      outputNode.order = node.data.order;\n      outputNode.status = node.data.status;\n      outputNode.role = node.data.role;\n      outputNode.hasThumbnail = node.data.hasThumbnail && node.data.hasThumbnail.toLowerCase() === 'true';\n    }\n\n    if (node.children) {\n      // build the subtree of the node's children.\n      const outputChildren = node.children.map((child) => buildTree(child, role)).filter((child) => !!child);\n\n      if (outputChildren.length > 0) {\n        outputNode.children = outputChildren;\n      }\n    }\n\n    // Don't save empty folders\n    if (node.type() === 'folder' && !outputNode.children) {\n      return null;\n    }\n\n    return outputNode;\n  }\n\n  const getGeometries = (tree) => {\n    if (!tree) {\n      return [];\n    }\n    const wrapper = new Autodesk.Viewing.BubbleNode(tree);\n    const geometries = wrapper.search({ type: 'geometry' });\n    if (geometries) {\n      return geometries.map((geometry) => geometry.data);\n    }\n\n    return null;\n  };\n\n  const modifyGeometries = (geometries) => {\n    geometries.forEach((geometry) => {\n      // PDFs can have only one single view - so if there are more, remove them.\n      if (fileExtension === 'pdf' && geometry.children && geometry.children.length > 1) {\n        geometry.children = [geometry.children[0]];\n      }\n    });\n\n\n    // If current document is PDF, then sort geometries by 'order' property.\n    // Since pdf extractor will handle pdf by parallel process, the geometries list may out of order.\n    if (fileExtension === 'pdf') {\n      geometries.sort(function (a, b) {\n        return a.order - b.order;\n      });\n    } else {\n      geometries.sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n    }\n\n    return geometries;\n  };\n\n  const filterGeometries = (geometries) => {\n    return geometries.filter((geometry) =>\n    // NWD extractor doesn't support 2d files. If they do appear, ignore them.\n    !(fileExtension === 'nwd' && geometry.role === '2d')\n    );\n\n    // In case you want to add another filter here, just compose like this: a.filter(b => b>2).filter(c => c>3).\n  };\n\n  if (fileExtension === 'pdf') {\n    const pdfItems = filterGeometries(modifyGeometries(getGeometries(buildTree(viewableItem, '2d'))));\n\n    return [{ type: 'PDF', sheets: pdfItems }];\n  } else {\n    const geometries3D = filterGeometries(modifyGeometries(getGeometries(buildTree(viewableItem, '3d'))));\n    const geometries2D = filterGeometries(modifyGeometries(getGeometries(buildTree(viewableItem, '2d'))));\n\n    return [\n    { type: '2D', sheets: geometries2D },\n    { type: '3D', sheets: geometries3D }];\n\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/GestureDocumentNavigation/BubbleUtils.js\n");

/***/ }),

/***/ "./extensions/GestureDocumentNavigation/CameraUtils.js":
/*!*************************************************************!*\
  !*** ./extensions/GestureDocumentNavigation/CameraUtils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _GeometryUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeometryUtils */ \"./extensions/GestureDocumentNavigation/GeometryUtils.js\");\n\n\nconst CameraUtils = {};\n\n// Same as viewer.worldToClient, but with a camera as argument.\nCameraUtils.worldToClient = (viewer, point, camera) => {\n  var p = new THREE.Vector4(point.x, point.y, point.z, 1);\n  p.applyMatrix4(camera.matrixWorldInverse);\n  p.applyMatrix4(camera.projectionMatrix);\n\n  // Don't want to mirror values with negative z (behind camera)\n  if (p.w > 0) {\n    p.x /= p.w;\n    p.y /= p.w;\n    p.z /= p.w;\n  }\n\n  return viewer.impl.viewportToClient(p.x, p.y);\n};\n\nCameraUtils.getCameraEyeVector = (camera) => {\n  return camera.target.clone().sub(camera.position).normalize();\n};\n\nCameraUtils.getCameraRightVector = (camera) => {\n  const eye = CameraUtils.getCameraEyeVector(camera);\n  return new THREE.Vector3().crossVectors(eye, camera.up).normalize();\n};\n\nCameraUtils.getCameraUpVector = (camera) => {\n  const right = CameraUtils.getCameraRightVector(camera);\n  const eye = CameraUtils.getCameraEyeVector(camera);\n  return new THREE.Vector3().crossVectors(right, eye).normalize();\n};\n\nCameraUtils.getCameraRotation = (camera) => {\n  return _GeometryUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSignedAngle(CameraUtils.getCameraUpVector(camera), new THREE.Vector3(0, 1, 0), CameraUtils.getCameraEyeVector(camera));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CameraUtils);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL0dlc3R1cmVEb2N1bWVudE5hdmlnYXRpb24vQ2FtZXJhVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7O0FBRTVDLE1BQU1DLFdBQVcsR0FBRyxDQUFDLENBQUM7O0FBRXRCO0FBQ0FBLFdBQVcsQ0FBQ0MsYUFBYSxHQUFHLENBQUNDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEtBQUs7RUFDbkQsSUFBSUMsQ0FBQyxHQUFHLElBQUlDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSixLQUFLLENBQUNLLENBQUMsRUFBRUwsS0FBSyxDQUFDTSxDQUFDLEVBQUVOLEtBQUssQ0FBQ08sQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUN2REwsQ0FBQyxDQUFDTSxZQUFZLENBQUNQLE1BQU0sQ0FBQ1Esa0JBQWtCLENBQUM7RUFDekNQLENBQUMsQ0FBQ00sWUFBWSxDQUFDUCxNQUFNLENBQUNTLGdCQUFnQixDQUFDOztFQUV2QztFQUNBLElBQUlSLENBQUMsQ0FBQ1MsQ0FBQyxHQUFHLENBQUMsRUFBRTtJQUNUVCxDQUFDLENBQUNHLENBQUMsSUFBSUgsQ0FBQyxDQUFDUyxDQUFDO0lBQ1ZULENBQUMsQ0FBQ0ksQ0FBQyxJQUFJSixDQUFDLENBQUNTLENBQUM7SUFDVlQsQ0FBQyxDQUFDSyxDQUFDLElBQUlMLENBQUMsQ0FBQ1MsQ0FBQztFQUNkOztFQUVBLE9BQU9aLE1BQU0sQ0FBQ2EsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQ1gsQ0FBQyxDQUFDRyxDQUFDLEVBQUVILENBQUMsQ0FBQ0ksQ0FBQyxDQUFDO0FBQ2pELENBQUM7O0FBRURULFdBQVcsQ0FBQ2lCLGtCQUFrQixHQUFHLENBQUNiLE1BQU0sS0FBSztFQUN6QyxPQUFPQSxNQUFNLENBQUNjLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQ0MsR0FBRyxDQUFDaEIsTUFBTSxDQUFDaUIsUUFBUSxDQUFDLENBQUNDLFNBQVMsQ0FBQyxDQUFDO0FBQ2pFLENBQUM7O0FBRUR0QixXQUFXLENBQUN1QixvQkFBb0IsR0FBRyxDQUFDbkIsTUFBTSxLQUFLO0VBQzNDLE1BQU1vQixHQUFHLEdBQUd4QixXQUFXLENBQUNpQixrQkFBa0IsQ0FBQ2IsTUFBTSxDQUFDO0VBQ2xELE9BQU8sSUFBSUUsS0FBSyxDQUFDbUIsT0FBTyxDQUFDLENBQUMsQ0FBQ0MsWUFBWSxDQUFDRixHQUFHLEVBQUVwQixNQUFNLENBQUN1QixFQUFFLENBQUMsQ0FBQ0wsU0FBUyxDQUFDLENBQUM7QUFDdkUsQ0FBQzs7QUFFRHRCLFdBQVcsQ0FBQzRCLGlCQUFpQixHQUFHLENBQUN4QixNQUFNLEtBQUs7RUFDeEMsTUFBTXlCLEtBQUssR0FBRzdCLFdBQVcsQ0FBQ3VCLG9CQUFvQixDQUFDbkIsTUFBTSxDQUFDO0VBQ3RELE1BQU1vQixHQUFHLEdBQUd4QixXQUFXLENBQUNpQixrQkFBa0IsQ0FBQ2IsTUFBTSxDQUFDO0VBQ2xELE9BQU8sSUFBSUUsS0FBSyxDQUFDbUIsT0FBTyxDQUFDLENBQUMsQ0FBQ0MsWUFBWSxDQUFDRyxLQUFLLEVBQUVMLEdBQUcsQ0FBQyxDQUFDRixTQUFTLENBQUMsQ0FBQztBQUNuRSxDQUFDOztBQUVEdEIsV0FBVyxDQUFDOEIsaUJBQWlCLEdBQUcsQ0FBQzFCLE1BQU0sS0FBSztFQUN4QyxPQUFPTCxzREFBYSxDQUFDZ0MsY0FBYyxDQUFDL0IsV0FBVyxDQUFDNEIsaUJBQWlCLENBQUN4QixNQUFNLENBQUMsRUFBRSxJQUFJRSxLQUFLLENBQUNtQixPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRXpCLFdBQVcsQ0FBQ2lCLGtCQUFrQixDQUFDYixNQUFNLENBQUMsQ0FBQztBQUNsSixDQUFDOztBQUVELGlFQUFlSixXQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbi9DYW1lcmFVdGlscy5qcz9lMTFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHZW9tZXRyeVV0aWxzIGZyb20gJy4vR2VvbWV0cnlVdGlscyc7XG5cbmNvbnN0IENhbWVyYVV0aWxzID0ge307XG5cbi8vIFNhbWUgYXMgdmlld2VyLndvcmxkVG9DbGllbnQsIGJ1dCB3aXRoIGEgY2FtZXJhIGFzIGFyZ3VtZW50LlxuQ2FtZXJhVXRpbHMud29ybGRUb0NsaWVudCA9ICh2aWV3ZXIsIHBvaW50LCBjYW1lcmEpID0+IHtcbiAgICB2YXIgcCA9IG5ldyBUSFJFRS5WZWN0b3I0KHBvaW50LngsIHBvaW50LnksIHBvaW50LnosIDEpO1xuICAgIHAuYXBwbHlNYXRyaXg0KGNhbWVyYS5tYXRyaXhXb3JsZEludmVyc2UpO1xuICAgIHAuYXBwbHlNYXRyaXg0KGNhbWVyYS5wcm9qZWN0aW9uTWF0cml4KTtcblxuICAgIC8vIERvbid0IHdhbnQgdG8gbWlycm9yIHZhbHVlcyB3aXRoIG5lZ2F0aXZlIHogKGJlaGluZCBjYW1lcmEpXG4gICAgaWYgKHAudyA+IDApIHtcbiAgICAgICAgcC54IC89IHAudztcbiAgICAgICAgcC55IC89IHAudztcbiAgICAgICAgcC56IC89IHAudztcbiAgICB9XG5cbiAgICByZXR1cm4gdmlld2VyLmltcGwudmlld3BvcnRUb0NsaWVudChwLngsIHAueSk7XG59O1xuXG5DYW1lcmFVdGlscy5nZXRDYW1lcmFFeWVWZWN0b3IgPSAoY2FtZXJhKSA9PiB7XG4gICAgcmV0dXJuIGNhbWVyYS50YXJnZXQuY2xvbmUoKS5zdWIoY2FtZXJhLnBvc2l0aW9uKS5ub3JtYWxpemUoKTtcbn07XG5cbkNhbWVyYVV0aWxzLmdldENhbWVyYVJpZ2h0VmVjdG9yID0gKGNhbWVyYSkgPT4ge1xuICAgIGNvbnN0IGV5ZSA9IENhbWVyYVV0aWxzLmdldENhbWVyYUV5ZVZlY3RvcihjYW1lcmEpO1xuICAgIHJldHVybiBuZXcgVEhSRUUuVmVjdG9yMygpLmNyb3NzVmVjdG9ycyhleWUsIGNhbWVyYS51cCkubm9ybWFsaXplKCk7XG59O1xuXG5DYW1lcmFVdGlscy5nZXRDYW1lcmFVcFZlY3RvciA9IChjYW1lcmEpID0+IHtcbiAgICBjb25zdCByaWdodCA9IENhbWVyYVV0aWxzLmdldENhbWVyYVJpZ2h0VmVjdG9yKGNhbWVyYSk7XG4gICAgY29uc3QgZXllID0gQ2FtZXJhVXRpbHMuZ2V0Q2FtZXJhRXllVmVjdG9yKGNhbWVyYSk7XG4gICAgcmV0dXJuIG5ldyBUSFJFRS5WZWN0b3IzKCkuY3Jvc3NWZWN0b3JzKHJpZ2h0LCBleWUpLm5vcm1hbGl6ZSgpO1xufTtcblxuQ2FtZXJhVXRpbHMuZ2V0Q2FtZXJhUm90YXRpb24gPSAoY2FtZXJhKSA9PiB7XG4gICAgcmV0dXJuIEdlb21ldHJ5VXRpbHMuZ2V0U2lnbmVkQW5nbGUoQ2FtZXJhVXRpbHMuZ2V0Q2FtZXJhVXBWZWN0b3IoY2FtZXJhKSwgbmV3IFRIUkVFLlZlY3RvcjMoMCwgMSwgMCksIENhbWVyYVV0aWxzLmdldENhbWVyYUV5ZVZlY3RvcihjYW1lcmEpKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhbWVyYVV0aWxzOyJdLCJuYW1lcyI6WyJHZW9tZXRyeVV0aWxzIiwiQ2FtZXJhVXRpbHMiLCJ3b3JsZFRvQ2xpZW50Iiwidmlld2VyIiwicG9pbnQiLCJjYW1lcmEiLCJwIiwiVEhSRUUiLCJWZWN0b3I0IiwieCIsInkiLCJ6IiwiYXBwbHlNYXRyaXg0IiwibWF0cml4V29ybGRJbnZlcnNlIiwicHJvamVjdGlvbk1hdHJpeCIsInciLCJpbXBsIiwidmlld3BvcnRUb0NsaWVudCIsImdldENhbWVyYUV5ZVZlY3RvciIsInRhcmdldCIsImNsb25lIiwic3ViIiwicG9zaXRpb24iLCJub3JtYWxpemUiLCJnZXRDYW1lcmFSaWdodFZlY3RvciIsImV5ZSIsIlZlY3RvcjMiLCJjcm9zc1ZlY3RvcnMiLCJ1cCIsImdldENhbWVyYVVwVmVjdG9yIiwicmlnaHQiLCJnZXRDYW1lcmFSb3RhdGlvbiIsImdldFNpZ25lZEFuZ2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/GestureDocumentNavigation/CameraUtils.js\n");

/***/ }),

/***/ "./extensions/GestureDocumentNavigation/GeometryUtils.js":
/*!***************************************************************!*\
  !*** ./extensions/GestureDocumentNavigation/GeometryUtils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst GeometryUtils = {};\n\nGeometryUtils.radiansToDegrees = (radians) => {\n  return radians * (180 / Math.PI);\n};\n\nGeometryUtils.degreesToRadians = (degrees) => {\n  return degrees * (Math.PI / 180);\n};\n\nGeometryUtils.applyRotation = (points, angle, pivot, frontVector) => {\n  if (!(points instanceof Array)) {\n    points = [points];\n  }\n\n  points.forEach((point) => {\n    point.sub(pivot);\n    point.applyAxisAngle(frontVector, angle);\n    point.add(pivot);\n  });\n};\n\nGeometryUtils.getSignedAngle = (v1, v2, eyeVector) => {\n  const angle = v1.angleTo(v2);\n\n  const n = v1.clone().cross(v2).normalize();\n  const sign = eyeVector.dot(n) > 0 ? 1 : -1;\n\n  return angle * sign;\n};\n\nGeometryUtils.swapBoundingBoxY = (boundingBox) => {\n  [boundingBox.max.y, boundingBox.min.y] = [boundingBox.min.y, boundingBox.max.y];\n\n  return boundingBox;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GeometryUtils);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL0dlc3R1cmVEb2N1bWVudE5hdmlnYXRpb24vR2VvbWV0cnlVdGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsYUFBYSxHQUFHLENBQUMsQ0FBQzs7QUFFeEJBLGFBQWEsQ0FBQ0MsZ0JBQWdCLEdBQUcsQ0FBQ0MsT0FBTyxLQUFLO0VBQzFDLE9BQU9BLE9BQU8sSUFBSSxHQUFHLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxDQUFDO0FBQ3BDLENBQUM7O0FBRURKLGFBQWEsQ0FBQ0ssZ0JBQWdCLEdBQUcsQ0FBQ0MsT0FBTyxLQUFLO0VBQzFDLE9BQU9BLE9BQU8sSUFBSUgsSUFBSSxDQUFDQyxFQUFFLEdBQUcsR0FBRyxDQUFDO0FBQ3BDLENBQUM7O0FBRURKLGFBQWEsQ0FBQ08sYUFBYSxHQUFHLENBQUNDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxLQUFLLEVBQUVDLFdBQVcsS0FBSztFQUNqRSxJQUFJLEVBQUVILE1BQU0sWUFBWUksS0FBSyxDQUFDLEVBQUU7SUFDNUJKLE1BQU0sR0FBRyxDQUFDQSxNQUFNLENBQUM7RUFDckI7O0VBRUFBLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDLENBQUNDLEtBQUssS0FBSztJQUN0QkEsS0FBSyxDQUFDQyxHQUFHLENBQUNMLEtBQUssQ0FBQztJQUNoQkksS0FBSyxDQUFDRSxjQUFjLENBQUNMLFdBQVcsRUFBRUYsS0FBSyxDQUFDO0lBQ3hDSyxLQUFLLENBQUNHLEdBQUcsQ0FBQ1AsS0FBSyxDQUFDO0VBQ3BCLENBQUMsQ0FBQztBQUNOLENBQUM7O0FBRURWLGFBQWEsQ0FBQ2tCLGNBQWMsR0FBRyxDQUFDQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsU0FBUyxLQUFLO0VBQ2xELE1BQU1aLEtBQUssR0FBR1UsRUFBRSxDQUFDRyxPQUFPLENBQUNGLEVBQUUsQ0FBQzs7RUFFNUIsTUFBTUcsQ0FBQyxHQUFHSixFQUFFLENBQUNLLEtBQUssQ0FBQyxDQUFDLENBQUNDLEtBQUssQ0FBQ0wsRUFBRSxDQUFDLENBQUNNLFNBQVMsQ0FBQyxDQUFDO0VBQzFDLE1BQU1DLElBQUksR0FBR04sU0FBUyxDQUFDTyxHQUFHLENBQUNMLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDOztFQUUxQyxPQUFPZCxLQUFLLEdBQUdrQixJQUFJO0FBQ3ZCLENBQUM7O0FBRUQzQixhQUFhLENBQUM2QixnQkFBZ0IsR0FBRyxDQUFDQyxXQUFXLEtBQUs7RUFDOUMsQ0FBQ0EsV0FBVyxDQUFDQyxHQUFHLENBQUNDLENBQUMsRUFBRUYsV0FBVyxDQUFDRyxHQUFHLENBQUNELENBQUMsQ0FBQyxHQUFHLENBQUNGLFdBQVcsQ0FBQ0csR0FBRyxDQUFDRCxDQUFDLEVBQUVGLFdBQVcsQ0FBQ0MsR0FBRyxDQUFDQyxDQUFDLENBQUM7O0VBRS9FLE9BQU9GLFdBQVc7QUFDdEIsQ0FBQzs7QUFFRCxpRUFBZTlCLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uL0dlb21ldHJ5VXRpbHMuanM/ZWIzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBHZW9tZXRyeVV0aWxzID0ge307XG5cbkdlb21ldHJ5VXRpbHMucmFkaWFuc1RvRGVncmVlcyA9IChyYWRpYW5zKSA9PiB7XG4gICAgcmV0dXJuIHJhZGlhbnMgKiAoMTgwIC8gTWF0aC5QSSk7XG59O1xuXG5HZW9tZXRyeVV0aWxzLmRlZ3JlZXNUb1JhZGlhbnMgPSAoZGVncmVlcykgPT4ge1xuICAgIHJldHVybiBkZWdyZWVzICogKE1hdGguUEkgLyAxODApO1xufTtcblxuR2VvbWV0cnlVdGlscy5hcHBseVJvdGF0aW9uID0gKHBvaW50cywgYW5nbGUsIHBpdm90LCBmcm9udFZlY3RvcikgPT4ge1xuICAgIGlmICghKHBvaW50cyBpbnN0YW5jZW9mIEFycmF5KSkge1xuICAgICAgICBwb2ludHMgPSBbcG9pbnRzXTtcbiAgICB9XG5cbiAgICBwb2ludHMuZm9yRWFjaCgocG9pbnQpID0+IHtcbiAgICAgICAgcG9pbnQuc3ViKHBpdm90KTtcbiAgICAgICAgcG9pbnQuYXBwbHlBeGlzQW5nbGUoZnJvbnRWZWN0b3IsIGFuZ2xlKTtcbiAgICAgICAgcG9pbnQuYWRkKHBpdm90KTtcbiAgICB9KTtcbn07XG5cbkdlb21ldHJ5VXRpbHMuZ2V0U2lnbmVkQW5nbGUgPSAodjEsIHYyLCBleWVWZWN0b3IpID0+IHtcbiAgICBjb25zdCBhbmdsZSA9IHYxLmFuZ2xlVG8odjIpO1xuXG4gICAgY29uc3QgbiA9IHYxLmNsb25lKCkuY3Jvc3ModjIpLm5vcm1hbGl6ZSgpO1xuICAgIGNvbnN0IHNpZ24gPSBleWVWZWN0b3IuZG90KG4pID4gMCA/IDEgOiAtMTtcblxuICAgIHJldHVybiBhbmdsZSAqIHNpZ247XG59O1xuXG5HZW9tZXRyeVV0aWxzLnN3YXBCb3VuZGluZ0JveFkgPSAoYm91bmRpbmdCb3gpID0+IHtcbiAgICBbYm91bmRpbmdCb3gubWF4LnksIGJvdW5kaW5nQm94Lm1pbi55XSA9IFtib3VuZGluZ0JveC5taW4ueSwgYm91bmRpbmdCb3gubWF4LnldO1xuXG4gICAgcmV0dXJuIGJvdW5kaW5nQm94O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgR2VvbWV0cnlVdGlsczsiXSwibmFtZXMiOlsiR2VvbWV0cnlVdGlscyIsInJhZGlhbnNUb0RlZ3JlZXMiLCJyYWRpYW5zIiwiTWF0aCIsIlBJIiwiZGVncmVlc1RvUmFkaWFucyIsImRlZ3JlZXMiLCJhcHBseVJvdGF0aW9uIiwicG9pbnRzIiwiYW5nbGUiLCJwaXZvdCIsImZyb250VmVjdG9yIiwiQXJyYXkiLCJmb3JFYWNoIiwicG9pbnQiLCJzdWIiLCJhcHBseUF4aXNBbmdsZSIsImFkZCIsImdldFNpZ25lZEFuZ2xlIiwidjEiLCJ2MiIsImV5ZVZlY3RvciIsImFuZ2xlVG8iLCJuIiwiY2xvbmUiLCJjcm9zcyIsIm5vcm1hbGl6ZSIsInNpZ24iLCJkb3QiLCJzd2FwQm91bmRpbmdCb3hZIiwiYm91bmRpbmdCb3giLCJtYXgiLCJ5IiwibWluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/GestureDocumentNavigation/GeometryUtils.js\n");

/***/ }),

/***/ "./extensions/GestureDocumentNavigation/GestureDocumentNavigation.js":
/*!***************************************************************************!*\
  !*** ./extensions/GestureDocumentNavigation/GestureDocumentNavigation.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GestureDocumentNavigationExtension)\n/* harmony export */ });\n/* harmony import */ var _CameraUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CameraUtils */ \"./extensions/GestureDocumentNavigation/CameraUtils.js\");\n/* harmony import */ var _GeometryUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GeometryUtils */ \"./extensions/GestureDocumentNavigation/GeometryUtils.js\");\n/* harmony import */ var _BubbleUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BubbleUtils */ \"./extensions/GestureDocumentNavigation/BubbleUtils.js\");\n/* harmony import */ var _GestureDocumentNavigationTool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GestureDocumentNavigationTool */ \"./extensions/GestureDocumentNavigation/GestureDocumentNavigationTool.js\");\n\n\n\n\n\n/**\n * Provide an option to switch sheets and documents, using gestures.\n *\n * The extension id is: `Autodesk.BIM360.GestureDocumentNavigation`\n *\n * @example\n *   viewer.loadExtension('Autodesk.BIM360.GestureDocumentNavigation')\n *\n * @memberof Autodesk.Viewing.Extensions\n * @alias Autodesk.Viewing.Extensions.GestureDocumentNavigationExtension\n * @see {@link Autodesk.Viewing.Extension} for common inherited methods.\n */\nclass GestureDocumentNavigationExtension extends Autodesk.Viewing.Extension {\n  /**\n   * Load the GestureDocumentNavigation extension.\n   *\n   * @returns {boolean} True if measure extension is loaded successfully.\n   *\n   * @alias Autodesk.Viewing.Extensions.GestureDocumentNavigationExtension#load\n   */\n  async load() {\n    const documentNode = this.viewer.impl.model.getDocumentNode();\n    const viewerDoc = documentNode.getRootNode().lmvDocument;\n\n    this.currentGuid = documentNode.guid();\n    this.currentUrn = viewerDoc.myData.urn;\n\n    this.documents = [{ urn: this.currentUrn, guid: this.currentGuid }];\n\n    const items = (0,_BubbleUtils__WEBPACK_IMPORTED_MODULE_2__.parseBubble)(viewerDoc);\n    const items2D = items[0] && items[0].sheets || [];\n    const items3D = items[1] && items[1].sheets || [];\n    this.sheets = [...items2D, ...items3D];\n\n    this.pivot = new THREE.Vector3();\n\n    this.currentSheetIndex = this.sheets.findIndex((sheet) => sheet.guid === this.currentGuid);\n    this.updateCurrentDocumentIndex();\n\n    this.tool = new _GestureDocumentNavigationTool__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n\n    this.viewer.toolController.registerTool(this.tool);\n\n    const prevLock = this.viewer.toolController.setIsLocked(false);\n    this.viewer.toolController.activateTool(this.tool.getName());\n    this.viewer.toolController.setIsLocked(prevLock);\n\n    const cache = this.getCache();\n\n    if (this.viewer.impl.is2d) {\n      this.viewer.fitToView(undefined, undefined, true);\n\n      if (cache.direction) {\n        const translation = this.getTranslation(cache.direction);\n        const negativeTranslation = translation.clone().negate();\n        await this.translateCamera(negativeTranslation, true);\n        this.viewer.addEventListener(Autodesk.Viewing.RENDER_PRESENTED_EVENT, async () => {\n          await this.translateCamera(translation, false);\n          cache.direction = undefined;\n        }, { once: true });\n      }\n    } else {\n      cache.direction = undefined;\n    }\n\n    return true;\n  }\n\n  /**\n   * Unload the measure extension.\n   *\n   * @returns {boolean} True if measure extension is unloaded successfully.\n   *\n   * @alias Autodesk.Viewing.Extensions.GestureDocumentNavigationExtension#unload\n   */\n  unload() {\n    if (this.tool) {\n      this.viewer.toolController.deregisterTool(this.tool);\n      this.tool = null;\n    }\n\n    this.viewer = null;\n    this.options = null;\n\n    return true;\n  }\n\n  updateNextDocument(urn, guid) {\n    this.documents.push({ urn, guid });\n    this.updateCurrentDocumentIndex();\n  }\n\n  updatePrevDocument(urn, guid) {\n    this.documents.unshift({ urn, guid });\n    this.updateCurrentDocumentIndex();\n  }\n\n  updateCurrentDocumentIndex() {\n    this.currentDocumentIndex = this.documents.findIndex(\n      (doc) => doc.urn === this.currentUrn && doc.guid === this.currentGuid\n    );\n  }\n\n  /**\n   * Prepare current document before switching sheet / document.\n   *\n   * @param {Function} cb - This callback is called after current document is ready to switch.\n   * @alias Autodesk.Viewing.Extensions.GestureDocumentNavigationExtension#prepareChange\n   */\n  async prepareChange(cb) {\n    const onDone = () => {\n      const cache = this.getCache();\n      cache.direction = this.tool.currentDirection;\n      cb();\n    };\n\n    if (this.viewer.model.is3d()) {\n      onDone();\n    } else {\n      const translation = this.getTranslation(this.tool.currentDirection);\n      await this.translateCamera(translation, false);\n      onDone();\n    }\n  }\n\n  /**\n   * Change a sheet.\n   *\n   * @param {number} guid - The guid of the desired sheet.\n   * @alias Autodesk.Viewing.Extensions.GestureDocumentNavigationExtension#changeSheetRequired\n   */\n  changeSheetRequired(guid) {\n    if (!this.options.enableSheetSwipe || !guid) {\n      return;\n    }\n\n    this.prepareChange(() => {\n      this.viewer.dispatchEvent({ type: Autodesk.Viewing.GestureDocumentNavigationEvents.CHANGE_SHEET_REQUIRED, guid });\n    });\n  }\n\n  /**\n   * Change a document.\n   *\n   * @param {number} urn - The urn of the desired document.\n   * @param {number} guid - The guid of the desired sheet.\n   * @alias Autodesk.Viewing.Extensions.GestureDocumentNavigationExtension#changeSheetRequired\n   */\n  changeDocumentRequired(urn, guid) {\n    if (!urn) {\n      return;\n    }\n\n    this.prepareChange(() => {\n      this.viewer.dispatchEvent({ type: Autodesk.Viewing.GestureDocumentNavigationEvents.CHANGE_DOCUMENT_REQUIRED, urn, guid });\n    });\n  }\n\n  getTranslation(direction) {\n    const camera = this.viewer.getCamera();\n    const size = Math.max(camera.top - camera.bottom, camera.right - camera.left);\n    const translation = direction.clone().multiplyScalar(size);\n\n    const cameraRotation = _CameraUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCameraRotation(camera);\n    const eyeVec = _CameraUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCameraEyeVector(camera);\n    _GeometryUtils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].applyRotation(translation, -cameraRotation, this.pivot, eyeVec);\n\n    return translation;\n  }\n\n  async translateCamera(translation, immediate) {\n    this.viewer.utilities.autocam.endInteraction();\n\n    const camera = this.viewer.getCamera();\n\n    const position = camera.position.clone().add(translation);\n    const target = camera.target.clone().add(translation);\n\n    if (immediate) {\n      this.viewer.navigation.setView(position, target);\n    } else {\n      this.viewer.navigation.setRequestTransitionWithUp(true, position, target, camera.fov, camera.up);\n      await Autodesk.Viewing.EventUtils.waitUntilTransitionEnded(this.viewer);\n    }\n  }\n}\n\nAutodesk.Viewing.GestureDocumentNavigationEvents = {};\nAutodesk.Viewing.GestureDocumentNavigationEvents.CHANGE_DOCUMENT_REQUIRED = 'change.document.required';\nAutodesk.Viewing.GestureDocumentNavigationEvents.CHANGE_SHEET_REQUIRED = 'change.sheet.required';\n\nGestureDocumentNavigationExtension.extensionName = 'Autodesk.BIM360.GestureDocumentNavigation';\n\nAutodesk.Viewing.theExtensionManager.registerExtension(GestureDocumentNavigationExtension.extensionName, GestureDocumentNavigationExtension);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL0dlc3R1cmVEb2N1bWVudE5hdmlnYXRpb24vR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3QztBQUNJO0FBQ0E7QUFDZ0M7O0FBRTVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlLE1BQU1JLGtDQUFrQyxTQUFTQyxRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsU0FBUyxDQUFDO0VBQ3ZGO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0ksTUFBTUMsSUFBSUEsQ0FBQSxFQUFHO0lBQ1QsTUFBTUMsWUFBWSxHQUFHLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0MsZUFBZSxDQUFDLENBQUM7SUFDN0QsTUFBTUMsU0FBUyxHQUFHTCxZQUFZLENBQUNNLFdBQVcsQ0FBQyxDQUFDLENBQUNDLFdBQVc7O0lBRXhELElBQUksQ0FBQ0MsV0FBVyxHQUFHUixZQUFZLENBQUNTLElBQUksQ0FBQyxDQUFDO0lBQ3RDLElBQUksQ0FBQ0MsVUFBVSxHQUFHTCxTQUFTLENBQUNNLE1BQU0sQ0FBQ0MsR0FBRzs7SUFFdEMsSUFBSSxDQUFDQyxTQUFTLEdBQUcsQ0FBQyxFQUFFRCxHQUFHLEVBQUUsSUFBSSxDQUFDRixVQUFVLEVBQUVELElBQUksRUFBRSxJQUFJLENBQUNELFdBQVcsQ0FBQyxDQUFDLENBQUM7O0lBRW5FLE1BQU1NLEtBQUssR0FBR3JCLHlEQUFXLENBQUNZLFNBQVMsQ0FBQztJQUNwQyxNQUFNVSxPQUFPLEdBQUlELEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSUEsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDRSxNQUFNLElBQUssRUFBRTtJQUNuRCxNQUFNQyxPQUFPLEdBQUlILEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSUEsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDRSxNQUFNLElBQUssRUFB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d0IsQ0FBQyxJQUFJLENBQUNoRyxNQUFNLENBQUM7SUFDM0U7RUFDSjtBQUNKOztBQUVBTCxRQUFRLENBQUNDLE9BQU8sQ0FBQ29FLCtCQUErQixHQUFHLENBQUMsQ0FBQztBQUNyRHJFLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDb0UsK0JBQStCLENBQUNHLHdCQUF3QixHQUFHLDBCQUEwQjtBQUN0R3hFLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDb0UsK0JBQStCLENBQUNDLHFCQUFxQixHQUFHLHVCQUF1Qjs7QUFFaEd2RSxrQ0FBa0MsQ0FBQ3VHLGFBQWEsR0FBRywyQ0FBMkM7O0FBRTlGdEcsUUFBUSxDQUFDQyxPQUFPLENBQUNzRyxtQkFBbUIsQ0FBQ0MsaUJBQWlCLENBQUN6RyxrQ0FBa0MsQ0FBQ3VHLGFBQWEsRUFBRXZHLGtDQUFrQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbi9HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uLmpzP2JjNGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhbWVyYVV0aWxzIGZyb20gJy4vQ2FtZXJhVXRpbHMnO1xuaW1wb3J0IEdlb21ldHJ5VXRpbHMgZnJvbSAnLi9HZW9tZXRyeVV0aWxzJztcbmltcG9ydCB7IHBhcnNlQnViYmxlIH0gZnJvbSAnLi9CdWJibGVVdGlscyc7XG5pbXBvcnQgR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvblRvb2wgZnJvbSAnLi9HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uVG9vbCc7XG5cbi8qKlxuICogUHJvdmlkZSBhbiBvcHRpb24gdG8gc3dpdGNoIHNoZWV0cyBhbmQgZG9jdW1lbnRzLCB1c2luZyBnZXN0dXJlcy5cbiAqXG4gKiBUaGUgZXh0ZW5zaW9uIGlkIGlzOiBgQXV0b2Rlc2suQklNMzYwLkdlc3R1cmVEb2N1bWVudE5hdmlnYXRpb25gXG4gKlxuICogQGV4YW1wbGVcbiAqICAgdmlld2VyLmxvYWRFeHRlbnNpb24oJ0F1dG9kZXNrLkJJTTM2MC5HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uJylcbiAqXG4gKiBAbWVtYmVyb2YgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zXG4gKiBAYWxpYXMgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLkdlc3R1cmVEb2N1bWVudE5hdmlnYXRpb25FeHRlbnNpb25cbiAqIEBzZWUge0BsaW5rIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ufSBmb3IgY29tbW9uIGluaGVyaXRlZCBtZXRob2RzLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXh0ZW5zaW9uIGV4dGVuZHMgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb24ge1xuICAgIC8qKlxuICAgICAqIExvYWQgdGhlIEdlc3R1cmVEb2N1bWVudE5hdmlnYXRpb24gZXh0ZW5zaW9uLlxuICAgICAqXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgbWVhc3VyZSBleHRlbnNpb24gaXMgbG9hZGVkIHN1Y2Nlc3NmdWxseS5cbiAgICAgKlxuICAgICAqIEBhbGlhcyBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbkV4dGVuc2lvbiNsb2FkXG4gICAgICovXG4gICAgYXN5bmMgbG9hZCgpIHtcbiAgICAgICAgY29uc3QgZG9jdW1lbnROb2RlID0gdGhpcy52aWV3ZXIuaW1wbC5tb2RlbC5nZXREb2N1bWVudE5vZGUoKTtcbiAgICAgICAgY29uc3Qgdmlld2VyRG9jID0gZG9jdW1lbnROb2RlLmdldFJvb3ROb2RlKCkubG12RG9jdW1lbnQ7XG5cbiAgICAgICAgdGhpcy5jdXJyZW50R3VpZCA9IGRvY3VtZW50Tm9kZS5ndWlkKCk7XG4gICAgICAgIHRoaXMuY3VycmVudFVybiA9IHZpZXdlckRvYy5teURhdGEudXJuO1xuXG4gICAgICAgIHRoaXMuZG9jdW1lbnRzID0gW3sgdXJuOiB0aGlzLmN1cnJlbnRVcm4sIGd1aWQ6IHRoaXMuY3VycmVudEd1aWQgfV07XG5cbiAgICAgICAgY29uc3QgaXRlbXMgPSBwYXJzZUJ1YmJsZSh2aWV3ZXJEb2MpO1xuICAgICAgICBjb25zdCBpdGVtczJEID0gKGl0ZW1zWzBdICYmIGl0ZW1zWzBdLnNoZWV0cykgfHwgW107XG4gICAgICAgIGNvbnN0IGl0ZW1zM0QgPSAoaXRlbXNbMV0gJiYgaXRlbXNbMV0uc2hlZXRzKSB8fCBbXTtcbiAgICAgICAgdGhpcy5zaGVldHMgPSBbLi4uaXRlbXMyRCwgLi4uaXRlbXMzRF07XG5cbiAgICAgICAgdGhpcy5waXZvdCA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG5cbiAgICAgICAgdGhpcy5jdXJyZW50U2hlZXRJbmRleCA9IHRoaXMuc2hlZXRzLmZpbmRJbmRleChzaGVldCA9PiBzaGVldC5ndWlkID09PSB0aGlzLmN1cnJlbnRHdWlkKTtcbiAgICAgICAgdGhpcy51cGRhdGVDdXJyZW50RG9jdW1lbnRJbmRleCgpO1xuXG4gICAgICAgIHRoaXMudG9vbCA9IG5ldyBHZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uVG9vbCh0aGlzKTtcblxuICAgICAgICB0aGlzLnZpZXdlci50b29sQ29udHJvbGxlci5yZWdpc3RlclRvb2wodGhpcy50b29sKTtcblxuICAgICAgICBjb25zdCBwcmV2TG9jayA9IHRoaXMudmlld2VyLnRvb2xDb250cm9sbGVyLnNldElzTG9ja2VkKGZhbHNlKTtcbiAgICAgICAgdGhpcy52aWV3ZXIudG9vbENvbnRyb2xsZXIuYWN0aXZhdGVUb29sKHRoaXMudG9vbC5nZXROYW1lKCkpO1xuICAgICAgICB0aGlzLnZpZXdlci50b29sQ29udHJvbGxlci5zZXRJc0xvY2tlZChwcmV2TG9jayk7XG5cbiAgICAgICAgY29uc3QgY2FjaGUgPSB0aGlzLmdldENhY2hlKCk7XG5cbiAgICAgICAgaWYgKHRoaXMudmlld2VyLmltcGwuaXMyZCkge1xuICAgICAgICAgICAgdGhpcy52aWV3ZXIuZml0VG9WaWV3KHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB0cnVlKTtcblxuICAgICAgICAgICAgaWYgKGNhY2hlLmRpcmVjdGlvbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zbGF0aW9uID0gdGhpcy5nZXRUcmFuc2xhdGlvbihjYWNoZS5kaXJlY3Rpb24pO1xuICAgICAgICAgICAgICAgIGNvbnN0IG5lZ2F0aXZlVHJhbnNsYXRpb24gPSB0cmFuc2xhdGlvbi5jbG9uZSgpLm5lZ2F0ZSgpO1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMudHJhbnNsYXRlQ2FtZXJhKG5lZ2F0aXZlVHJhbnNsYXRpb24sIHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMudmlld2VyLmFkZEV2ZW50TGlzdGVuZXIoQXV0b2Rlc2suVmlld2luZy5SRU5ERVJfUFJFU0VOVEVEX0VWRU5ULCBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMudHJhbnNsYXRlQ2FtZXJhKHRyYW5zbGF0aW9uLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmRpcmVjdGlvbiA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9LCB7IG9uY2U6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZS5kaXJlY3Rpb24gPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVbmxvYWQgdGhlIG1lYXN1cmUgZXh0ZW5zaW9uLlxuICAgICAqXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgbWVhc3VyZSBleHRlbnNpb24gaXMgdW5sb2FkZWQgc3VjY2Vzc2Z1bGx5LlxuICAgICAqXG4gICAgICogQGFsaWFzIEF1dG9kZXNrLlZpZXdpbmcuRXh0ZW5zaW9ucy5HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXh0ZW5zaW9uI3VubG9hZFxuICAgICAqL1xuICAgIHVubG9hZCgpIHtcbiAgICAgICAgaWYgKHRoaXMudG9vbCkge1xuICAgICAgICAgICAgdGhpcy52aWV3ZXIudG9vbENvbnRyb2xsZXIuZGVyZWdpc3RlclRvb2wodGhpcy50b29sKTtcbiAgICAgICAgICAgIHRoaXMudG9vbCA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnZpZXdlciA9IG51bGw7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG51bGw7XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdXBkYXRlTmV4dERvY3VtZW50KHVybiwgZ3VpZCkge1xuICAgICAgICB0aGlzLmRvY3VtZW50cy5wdXNoKHsgdXJuLCBndWlkIH0pO1xuICAgICAgICB0aGlzLnVwZGF0ZUN1cnJlbnREb2N1bWVudEluZGV4KCk7XG4gICAgfVxuXG4gICAgdXBkYXRlUHJldkRvY3VtZW50KHVybiwgZ3VpZCkge1xuICAgICAgICB0aGlzLmRvY3VtZW50cy51bnNoaWZ0KHsgdXJuLCBndWlkIH0pO1xuICAgICAgICB0aGlzLnVwZGF0ZUN1cnJlbnREb2N1bWVudEluZGV4KCk7XG4gICAgfVxuXG4gICAgdXBkYXRlQ3VycmVudERvY3VtZW50SW5kZXgoKSB7XG4gICAgICAgIHRoaXMuY3VycmVudERvY3VtZW50SW5kZXggPSB0aGlzLmRvY3VtZW50cy5maW5kSW5kZXgoXG4gICAgICAgICAgICAoZG9jKSA9PiBkb2MudXJuID09PSB0aGlzLmN1cnJlbnRVcm4gJiYgZG9jLmd1aWQgPT09IHRoaXMuY3VycmVudEd1aWRcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQcmVwYXJlIGN1cnJlbnQgZG9jdW1lbnQgYmVmb3JlIHN3aXRjaGluZyBzaGVldCAvIGRvY3VtZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2IgLSBUaGlzIGNhbGxiYWNrIGlzIGNhbGxlZCBhZnRlciBjdXJyZW50IGRvY3VtZW50IGlzIHJlYWR5IHRvIHN3aXRjaC5cbiAgICAgKiBAYWxpYXMgQXV0b2Rlc2suVmlld2luZy5FeHRlbnNpb25zLkdlc3R1cmVEb2N1bWVudE5hdmlnYXRpb25FeHRlbnNpb24jcHJlcGFyZUNoYW5nZVxuICAgICAqL1xuICAgIGFzeW5jIHByZXBhcmVDaGFuZ2UoY2IpIHtcbiAgICAgICAgY29uc3Qgb25Eb25lID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY2FjaGUgPSB0aGlzLmdldENhY2hlKCk7XG4gICAgICAgICAgICBjYWNoZS5kaXJlY3Rpb24gPSB0aGlzLnRvb2wuY3VycmVudERpcmVjdGlvbjtcbiAgICAgICAgICAgIGNiKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKHRoaXMudmlld2VyLm1vZGVsLmlzM2QoKSkge1xuICAgICAgICAgICAgb25Eb25lKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCB0cmFuc2xhdGlvbiA9IHRoaXMuZ2V0VHJhbnNsYXRpb24odGhpcy50b29sLmN1cnJlbnREaXJlY3Rpb24pO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy50cmFuc2xhdGVDYW1lcmEodHJhbnNsYXRpb24sIGZhbHNlKTtcbiAgICAgICAgICAgIG9uRG9uZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hhbmdlIGEgc2hlZXQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZ3VpZCAtIFRoZSBndWlkIG9mIHRoZSBkZXNpcmVkIHNoZWV0LlxuICAgICAqIEBhbGlhcyBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbkV4dGVuc2lvbiNjaGFuZ2VTaGVldFJlcXVpcmVkXG4gICAgICovXG4gICAgY2hhbmdlU2hlZXRSZXF1aXJlZChndWlkKSB7XG4gICAgICAgIGlmICghdGhpcy5vcHRpb25zLmVuYWJsZVNoZWV0U3dpcGUgfHwgIWd1aWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucHJlcGFyZUNoYW5nZSgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnZpZXdlci5kaXNwYXRjaEV2ZW50KHsgdHlwZTogQXV0b2Rlc2suVmlld2luZy5HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXZlbnRzLkNIQU5HRV9TSEVFVF9SRVFVSVJFRCwgZ3VpZCB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hhbmdlIGEgZG9jdW1lbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdXJuIC0gVGhlIHVybiBvZiB0aGUgZGVzaXJlZCBkb2N1bWVudC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZ3VpZCAtIFRoZSBndWlkIG9mIHRoZSBkZXNpcmVkIHNoZWV0LlxuICAgICAqIEBhbGlhcyBBdXRvZGVzay5WaWV3aW5nLkV4dGVuc2lvbnMuR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbkV4dGVuc2lvbiNjaGFuZ2VTaGVldFJlcXVpcmVkXG4gICAgICovXG4gICAgY2hhbmdlRG9jdW1lbnRSZXF1aXJlZCh1cm4sIGd1aWQpIHtcbiAgICAgICAgaWYgKCF1cm4pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucHJlcGFyZUNoYW5nZSgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnZpZXdlci5kaXNwYXRjaEV2ZW50KHsgdHlwZTogQXV0b2Rlc2suVmlld2luZy5HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXZlbnRzLkNIQU5HRV9ET0NVTUVOVF9SRVFVSVJFRCwgdXJuLCBndWlkIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBnZXRUcmFuc2xhdGlvbihkaXJlY3Rpb24pIHtcbiAgICAgICAgY29uc3QgY2FtZXJhID0gdGhpcy52aWV3ZXIuZ2V0Q2FtZXJhKCk7XG4gICAgICAgIGNvbnN0IHNpemUgPSBNYXRoLm1heChjYW1lcmEudG9wIC0gY2FtZXJhLmJvdHRvbSwgY2FtZXJhLnJpZ2h0IC0gY2FtZXJhLmxlZnQpO1xuICAgICAgICBjb25zdCB0cmFuc2xhdGlvbiA9IGRpcmVjdGlvbi5jbG9uZSgpLm11bHRpcGx5U2NhbGFyKHNpemUpO1xuXG4gICAgICAgIGNvbnN0IGNhbWVyYVJvdGF0aW9uID0gQ2FtZXJhVXRpbHMuZ2V0Q2FtZXJhUm90YXRpb24oY2FtZXJhKTtcbiAgICAgICAgY29uc3QgZXllVmVjID0gQ2FtZXJhVXRpbHMuZ2V0Q2FtZXJhRXllVmVjdG9yKGNhbWVyYSk7XG4gICAgICAgIEdlb21ldHJ5VXRpbHMuYXBwbHlSb3RhdGlvbih0cmFuc2xhdGlvbiwgLWNhbWVyYVJvdGF0aW9uLCB0aGlzLnBpdm90LCBleWVWZWMpO1xuXG4gICAgICAgIHJldHVybiB0cmFuc2xhdGlvbjtcbiAgICB9XG5cbiAgICBhc3luYyB0cmFuc2xhdGVDYW1lcmEodHJhbnNsYXRpb24sIGltbWVkaWF0ZSkge1xuICAgICAgICB0aGlzLnZpZXdlci51dGlsaXRpZXMuYXV0b2NhbS5lbmRJbnRlcmFjdGlvbigpO1xuXG4gICAgICAgIGNvbnN0IGNhbWVyYSA9IHRoaXMudmlld2VyLmdldENhbWVyYSgpO1xuXG4gICAgICAgIGNvbnN0IHBvc2l0aW9uID0gY2FtZXJhLnBvc2l0aW9uLmNsb25lKCkuYWRkKHRyYW5zbGF0aW9uKTtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gY2FtZXJhLnRhcmdldC5jbG9uZSgpLmFkZCh0cmFuc2xhdGlvbik7XG5cbiAgICAgICAgaWYgKGltbWVkaWF0ZSkge1xuICAgICAgICAgICAgdGhpcy52aWV3ZXIubmF2aWdhdGlvbi5zZXRWaWV3KHBvc2l0aW9uLCB0YXJnZXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy52aWV3ZXIubmF2aWdhdGlvbi5zZXRSZXF1ZXN0VHJhbnNpdGlvbldpdGhVcCh0cnVlLCBwb3NpdGlvbiwgdGFyZ2V0LCBjYW1lcmEuZm92LCBjYW1lcmEudXApO1xuICAgICAgICAgICAgYXdhaXQgQXV0b2Rlc2suVmlld2luZy5FdmVudFV0aWxzLndhaXRVbnRpbFRyYW5zaXRpb25FbmRlZCh0aGlzLnZpZXdlcik7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkF1dG9kZXNrLlZpZXdpbmcuR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbkV2ZW50cyA9IHt9O1xuQXV0b2Rlc2suVmlld2luZy5HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXZlbnRzLkNIQU5HRV9ET0NVTUVOVF9SRVFVSVJFRCA9ICdjaGFuZ2UuZG9jdW1lbnQucmVxdWlyZWQnO1xuQXV0b2Rlc2suVmlld2luZy5HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXZlbnRzLkNIQU5HRV9TSEVFVF9SRVFVSVJFRCA9ICdjaGFuZ2Uuc2hlZXQucmVxdWlyZWQnO1xuXG5HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXh0ZW5zaW9uLmV4dGVuc2lvbk5hbWUgPSAnQXV0b2Rlc2suQklNMzYwLkdlc3R1cmVEb2N1bWVudE5hdmlnYXRpb24nO1xuXG5BdXRvZGVzay5WaWV3aW5nLnRoZUV4dGVuc2lvbk1hbmFnZXIucmVnaXN0ZXJFeHRlbnNpb24oR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbkV4dGVuc2lvbi5leHRlbnNpb25OYW1lLCBHZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXh0ZW5zaW9uKTtcblxuIl0sIm5hbWVzIjpbIkNhbWVyYVV0aWxzIiwiR2VvbWV0cnlVdGlscyIsInBhcnNlQnViYmxlIiwiR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvblRvb2wiLCJHZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uRXh0ZW5zaW9uIiwiQXV0b2Rlc2siLCJWaWV3aW5nIiwiRXh0ZW5zaW9uIiwibG9hZCIsImRvY3VtZW50Tm9kZSIsInZpZXdlciIsImltcGwiLCJtb2RlbCIsImdldERvY3VtZW50Tm9kZSIsInZpZXdlckRvYyIsImdldFJvb3ROb2RlIiwibG12RG9jdW1lbnQiLCJjdXJyZW50R3VpZCIsImd1aWQiLCJjdXJyZW50VXJuIiwibXlEYXRhIiwidXJuIiwiZG9jdW1lbnRzIiwiaXRlbXMiLCJpdGVtczJEIiwic2hlZXRzIiwiaXRlbXMzRCIsInBpdm90IiwiVEhSRUUiLCJWZWN0b3IzIiwiY3VycmVudFNoZWV0SW5kZXgiLCJmaW5kSW5kZXgiLCJzaGVldCIsInVwZGF0ZUN1cnJlbnREb2N1bWVudEluZGV4IiwidG9vbCIsInRvb2xDb250cm9sbGVyIiwicmVnaXN0ZXJUb29sIiwicHJldkxvY2siLCJzZXRJc0xvY2tlZCIsImFjdGl2YXRlVG9vbCIsImdldE5hbWUiLCJjYWNoZSIsImdldENhY2hlIiwiaXMyZCIsImZpdFRvVmlldyIsInVuZGVmaW5lZCIsImRpcmVjdGlvbiIsInRyYW5zbGF0aW9uIiwiZ2V0VHJhbnNsYXRpb24iLCJuZWdhdGl2ZVRyYW5zbGF0aW9uIiwiY2xvbmUiLCJuZWdhdGUiLCJ0cmFuc2xhdGVDYW1lcmEiLCJhZGRFdmVudExpc3RlbmVyIiwiUkVOREVSX1BSRVNFTlRFRF9FVkVOVCIsIm9uY2UiLCJ1bmxvYWQiLCJkZXJlZ2lzdGVyVG9vbCIsIm9wdGlvbnMiLCJ1cGRhdGVOZXh0RG9jdW1lbnQiLCJwdXNoIiwidXBkYXRlUHJldkRvY3VtZW50IiwidW5zaGlmdCIsImN1cnJlbnREb2N1bWVudEluZGV4IiwiZG9jIiwicHJlcGFyZUNoYW5nZSIsImNiIiwib25Eb25lIiwiY3VycmVudERpcmVjdGlvbiIsImlzM2QiLCJjaGFuZ2VTaGVldFJlcXVpcmVkIiwiZW5hYmxlU2hlZXRTd2lwZSIsImRpc3BhdGNoRXZlbnQiLCJ0eXBlIiwiR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbkV2ZW50cyIsIkNIQU5HRV9TSEVFVF9SRVFVSVJFRCIsImNoYW5nZURvY3VtZW50UmVxdWlyZWQiLCJDSEFOR0VfRE9DVU1FTlRfUkVRVUlSRUQiLCJjYW1lcmEiLCJnZXRDYW1lcmEiLCJzaXplIiwiTWF0aCIsIm1heCIsInRvcCIsImJvdHRvbSIsInJpZ2h0IiwibGVmdCIsIm11bHRpcGx5U2NhbGFyIiwiY2FtZXJhUm90YXRpb24iLCJnZXRDYW1lcmFSb3RhdGlvbiIsImV5ZVZlYyIsImdldENhbWVyYUV5ZVZlY3RvciIsImFwcGx5Um90YXRpb24iLCJpbW1lZGlhdGUiLCJ1dGlsaXRpZXMiLCJhdXRvY2FtIiwiZW5kSW50ZXJhY3Rpb24iLCJwb3NpdGlvbiIsImFkZCIsInRhcmdldCIsIm5hdmlnYXRpb24iLCJzZXRWaWV3Iiwic2V0UmVxdWVzdFRyYW5zaXRpb25XaXRoVXAiLCJmb3YiLCJ1cCIsIkV2ZW50VXRpbHMiLCJ3YWl0VW50aWxUcmFuc2l0aW9uRW5kZWQiLCJleHRlbnNpb25OYW1lIiwidGhlRXh0ZW5zaW9uTWFuYWdlciIsInJlZ2lzdGVyRXh0ZW5zaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/GestureDocumentNavigation/GestureDocumentNavigation.js\n");

/***/ }),

/***/ "./extensions/GestureDocumentNavigation/GestureDocumentNavigationConstants.js":
/*!************************************************************************************!*\
  !*** ./extensions/GestureDocumentNavigation/GestureDocumentNavigationConstants.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NAVIGATION_DISTANCE_2D: () => (/* binding */ NAVIGATION_DISTANCE_2D),\n/* harmony export */   NAVIGATION_DISTANCE_3D: () => (/* binding */ NAVIGATION_DISTANCE_3D),\n/* harmony export */   NAVIGATION_VELOCITY_2D: () => (/* binding */ NAVIGATION_VELOCITY_2D),\n/* harmony export */   NAVIGATION_VELOCITY_3D: () => (/* binding */ NAVIGATION_VELOCITY_3D)\n/* harmony export */ });\nconst NAVIGATION_DISTANCE_2D = 50;\nconst NAVIGATION_DISTANCE_3D = 350; // In order to prevent unwanted navigation, the minimum navigation distance is pretty high.\nconst NAVIGATION_VELOCITY_2D = 0.7;\nconst NAVIGATION_VELOCITY_3D = 1.1;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL0dlc3R1cmVEb2N1bWVudE5hdmlnYXRpb24vR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbkNvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sTUFBTUEsc0JBQXNCLEdBQUcsRUFBRTtBQUNqQyxNQUFNQyxzQkFBc0IsR0FBRyxHQUFHLENBQUMsQ0FBQztBQUNwQyxNQUFNQyxzQkFBc0IsR0FBRyxHQUFHO0FBQ2xDLE1BQU1DLHNCQUFzQixHQUFHLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdXRvZGVzay5FeHRlbnNpb25zLy4vZXh0ZW5zaW9ucy9HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uL0dlc3R1cmVEb2N1bWVudE5hdmlnYXRpb25Db25zdGFudHMuanM/OWM2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgTkFWSUdBVElPTl9ESVNUQU5DRV8yRCA9IDUwO1xuZXhwb3J0IGNvbnN0IE5BVklHQVRJT05fRElTVEFOQ0VfM0QgPSAzNTA7IC8vIEluIG9yZGVyIHRvIHByZXZlbnQgdW53YW50ZWQgbmF2aWdhdGlvbiwgdGhlIG1pbmltdW0gbmF2aWdhdGlvbiBkaXN0YW5jZSBpcyBwcmV0dHkgaGlnaC5cbmV4cG9ydCBjb25zdCBOQVZJR0FUSU9OX1ZFTE9DSVRZXzJEID0gMC43O1xuZXhwb3J0IGNvbnN0IE5BVklHQVRJT05fVkVMT0NJVFlfM0QgPSAxLjE7XG4iXSwibmFtZXMiOlsiTkFWSUdBVElPTl9ESVNUQU5DRV8yRCIsIk5BVklHQVRJT05fRElTVEFOQ0VfM0QiLCJOQVZJR0FUSU9OX1ZFTE9DSVRZXzJEIiwiTkFWSUdBVElPTl9WRUxPQ0lUWV8zRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/GestureDocumentNavigation/GestureDocumentNavigationConstants.js\n");

/***/ }),

/***/ "./extensions/GestureDocumentNavigation/GestureDocumentNavigationTool.js":
/*!*******************************************************************************!*\
  !*** ./extensions/GestureDocumentNavigation/GestureDocumentNavigationTool.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GestureDocumentNavigationTool)\n/* harmony export */ });\n/* harmony import */ var _GeometryUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeometryUtils */ \"./extensions/GestureDocumentNavigation/GeometryUtils.js\");\n/* harmony import */ var _GestureDocumentNavigationConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GestureDocumentNavigationConstants */ \"./extensions/GestureDocumentNavigation/GestureDocumentNavigationConstants.js\");\n\n\n\nclass GestureDocumentNavigationTool {\n  constructor(extension) {\n    this.viewer = extension.viewer;\n    this.navigationDistance = this.viewer.impl.is2d ? _GestureDocumentNavigationConstants__WEBPACK_IMPORTED_MODULE_1__.NAVIGATION_DISTANCE_2D : _GestureDocumentNavigationConstants__WEBPACK_IMPORTED_MODULE_1__.NAVIGATION_DISTANCE_3D;\n    this.navigationVelocity = this.viewer.impl.is2d ? _GestureDocumentNavigationConstants__WEBPACK_IMPORTED_MODULE_1__.NAVIGATION_VELOCITY_2D : _GestureDocumentNavigationConstants__WEBPACK_IMPORTED_MODULE_1__.NAVIGATION_VELOCITY_3D;\n\n    this.documents = extension.documents;\n    this.sheets = extension.sheets;\n\n    this.extension = extension;\n\n    this.names = ['gesture-document-navigation'];\n\n    this.leftDirection = new THREE.Vector3(1, 0, 0);\n    this.rightDirection = new THREE.Vector3(-1, 0, 0);\n    this.upDirection = new THREE.Vector3(0, 1, 0);\n    this.downDirection = new THREE.Vector3(0, -1, 0);\n    this.eyeVector = new THREE.Vector3(0, 0, 1);\n\n    this.currentDirection = null;\n  }\n\n  getNames() {\n    return this.names;\n  }\n\n  getName() {\n    return this.names[0];\n  }\n\n  activate(name) {\n    if (name === this.getName()) {\n      this.isActive = true;\n    }\n  }\n\n  deactivate(name) {\n    if (name === this.getName()) {\n      this.isActive = false;\n    }\n  }\n\n  isActive() {\n    return this.isActive;\n  }\n\n  getPriority() {\n    return 100;\n  }\n\n  _isCanvasContainsViewport() {\n    const bounds = Autodesk.Viewing.ScreenShot.getSceneClientBounds(this.viewer, this.viewer.navigation.getCamera());\n    const containerBounds = this.viewer.impl.getCanvasBoundingClientRect();\n\n    return bounds.min.x > containerBounds.left &&\n    bounds.max.x < containerBounds.right &&\n    bounds.min.y > containerBounds.height - containerBounds.bottom &&\n    bounds.max.y < containerBounds.height - containerBounds.top;\n\n  }\n\n  /**\n   * On Drag event, gets the the right item to switch to, based on user gesture's direction,\n   * @returns {boolean} True if there is an item to move to.\n   * @param {boolean} event - Dragmove event.\n   * @private\n  */\n  onDrag(event) {\n    const v = new THREE.Vector3(event.canvasX, event.canvasY, 0).sub(this.startPoint);\n    const length = v.length();\n\n    let angle = _GeometryUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSignedAngle(v, this.leftDirection, this.eyeVector);\n\n    if (angle < 0) {\n      angle += 2 * Math.PI;\n    }\n\n    let indexToLoad = null;\n    let isSheet;\n    let isDocument;\n\n    if (angle > 5 / 4 * Math.PI && angle < 7 / 4 * Math.PI && this.sheets.length > 1) {\n      this.currentDirection = this.upDirection;\n\n      if (this.extension.currentSheetIndex === 0) {\n        if (this.extension.options.enableCyclicSwipe) {\n          indexToLoad = this.sheets.length - 1;\n        }\n      } else {\n        indexToLoad = this.extension.currentSheetIndex - 1;\n      }\n\n      isSheet = true;\n    } else if (angle > 1 / 4 * Math.PI && angle <= 3 / 4 * Math.PI && this.sheets.length > 1) {\n      this.currentDirection = this.downDirection;\n\n      if (this.extension.currentSheetIndex === this.sheets.length - 1) {\n        if (this.extension.options.enableCyclicSwipe) {\n          indexToLoad = 0;\n        }\n      } else {\n        indexToLoad = this.extension.currentSheetIndex + 1;\n      }\n\n      isSheet = true;\n    } else if (angle > 3 / 4 * Math.PI && angle <= 5 / 4 * Math.PI && this.documents.length > 1) {\n      this.currentDirection = this.leftDirection;\n\n      if (this.extension.currentDocumentIndex === this.documents.length - 1) {\n        if (this.extension.options.enableCyclicSwipe) {\n          indexToLoad = 0;\n        }\n      } else {\n        indexToLoad = this.extension.currentDocumentIndex + 1;\n      }\n\n      isDocument = true;\n    } else if ((angle > 7 / 4 * Math.PI || angle <= 1 / 4 * Math.PI) && this.documents.length > 1) {\n      this.currentDirection = this.rightDirection;\n\n      if (this.extension.currentDocumentIndex === 0) {\n        if (this.extension.options.enableCyclicSwipe) {\n          indexToLoad = this.documents.length - 1;\n        }\n      } else {\n        indexToLoad = this.extension.currentDocumentIndex - 1;\n      }\n\n      isDocument = true;\n    }\n\n    const hasItem = indexToLoad !== null && (isSheet || isDocument);\n\n    if (hasItem && length >= this.navigationDistance) {\n      if (isSheet) {\n        const { guid } = this.sheets[indexToLoad];\n        this.extension.changeSheetRequired(guid);\n      } else if (isDocument) {\n        const { urn, guid } = this.documents[indexToLoad];\n        this.extension.changeDocumentRequired(urn, guid);\n      }\n\n      this.changing = true;\n    }\n\n    return hasItem;\n  }\n\n  _isSwipeEnabled() {\n    return this.viewer.model.is3d() || this._isCanvasContainsViewport();\n  }\n\n  handleGesture(event) {\n    switch (event.type) {\n      case 'dragstart':\n        this.isSwipeEnabled = this._isSwipeEnabled();\n        if (this.isSwipeEnabled) {\n          this.startPoint = new THREE.Vector3(event.canvasX, event.canvasY, 0);\n        }\n\n        this.swiping = false;\n        this.changing = false;\n\n        return false;\n      case 'dragmove':\n        if (this.changing) {\n          return true;\n        } else if (this.swiping || this.isSwipeEnabled && Math.abs(event.overallVelocity) > this.navigationVelocity) {\n          this.swiping = true;\n          return this.onDrag(event);\n        }\n\n        return false;\n      case 'dragend':\n        // When finish swiping, prevent the camera from orbiting. Relevant for 3D only - there is no camera orbit for 2D.\n        // I limited this to 3D only, because of a bug I found when returning true when swiping from a 2D document to 3D document - It was blocking orbit.\n        return this.changing && this.viewer.model.is3d();\n\n      default:\n        break;\n    }\n\n    return false;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL0dlc3R1cmVEb2N1bWVudE5hdmlnYXRpb24vR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvblRvb2wuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ3NCOztBQUVuRCxNQUFNRSw2QkFBNkIsQ0FBQztFQUMvQ0MsV0FBV0EsQ0FBQ0MsU0FBUyxFQUFFO0lBQ25CLElBQUksQ0FBQ0MsTUFBTSxHQUFHRCxTQUFTLENBQUNDLE1BQU07SUFDOUIsSUFBSSxDQUFDQyxrQkFBa0IsR0FBRyxJQUFJLENBQUNELE1BQU0sQ0FBQ0UsSUFBSSxDQUFDQyxJQUFJLEdBQUdQLHVGQUFnQyxHQUFHQSx1RkFBZ0M7SUFDckgsSUFBSSxDQUFDVSxrQkFBa0IsR0FBRyxJQUFJLENBQUNOLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDQyxJQUFJLEdBQUdQLHVGQUFnQyxHQUFHQSx1RkFBZ0M7O0lBRXJILElBQUksQ0FBQ2EsU0FBUyxHQUFHVixTQUFTLENBQUNVLFNBQVM7SUFDcEMsSUFBSSxDQUFDQyxNQUFNLEdBQUdYLFNBQVMsQ0FBQ1csTUFBTTs7SUFFOUIsSUFBSSxDQUFDWCxTQUFTLEdBQUdBLFNBQVM7O0lBRTFCLElBQUksQ0FBQ1ksS0FBSyxHQUFHLENBQUMsNkJBQTZCLENBQUM7O0lBRTVDLElBQUksQ0FBQ0MsYUFBYSxHQUFHLElBQUlDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLElBQUksQ0FBQ0MsY0FBYyxHQUFHLElBQUlGLEtBQUssQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakQsSUFBSSxDQUFDRSxXQUFXLEdBQUcsSUFBSUgsS0FBSyxDQUFDQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDN0MsSUFBSSxDQUFDRyxhQUFhLEdBQUcsSUFBSUosS0FBSyxDQUFDQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENB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QUFDRyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3hFOztRQUVBLElBQUksQ0FBQzJCLE9BQU8sR0FBRyxLQUFLO1FBQ3BCLElBQUksQ0FBQ1AsUUFBUSxHQUFHLEtBQUs7O1FBRXJCLE9BQU8sS0FBSztNQUNoQixLQUFLLFVBQVU7UUFDWCxJQUFJLElBQUksQ0FBQ0EsUUFBUSxFQUFFO1VBQ2YsT0FBTyxJQUFJO1FBQ2YsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDTyxPQUFPLElBQUssSUFBSSxDQUFDRCxjQUFjLElBQUlwQixJQUFJLENBQUNzQixHQUFHLENBQUMvQixLQUFLLENBQUNnQyxlQUFlLENBQUMsR0FBRyxJQUFJLENBQUN6RSxrQkFBbUIsRUFBRTtVQUMzRyxJQUFJLENBQUN1RSxPQUFPLEdBQUcsSUFBSTtVQUNuQixPQUFPLElBQUksQ0FBQy9CLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDO1FBQzdCOztRQUVBLE9BQU8sS0FBSztNQUNoQixLQUFLLFNBQVM7UUFDVjtRQUNBO1FBQ0EsT0FBTyxJQUFJLENBQUN1QixRQUFRLElBQUksSUFBSSxDQUFDdEUsTUFBTSxDQUFDd0UsS0FBSyxDQUFDQyxJQUFJLENBQUMsQ0FBQzs7TUFFcEQ7UUFDSTtJQUNSOztJQUVBLE9BQU8sS0FBSztFQUNoQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbi9HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uVG9vbC5qcz9lYWZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHZW9tZXRyeVV0aWxzIGZyb20gJy4vR2VvbWV0cnlVdGlscyc7XG5pbXBvcnQgKiBhcyBDb25zdGFudHMgZnJvbSAnLi9HZXN0dXJlRG9jdW1lbnROYXZpZ2F0aW9uQ29uc3RhbnRzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvblRvb2wge1xuICAgIGNvbnN0cnVjdG9yKGV4dGVuc2lvbikge1xuICAgICAgICB0aGlzLnZpZXdlciA9IGV4dGVuc2lvbi52aWV3ZXI7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvbkRpc3RhbmNlID0gdGhpcy52aWV3ZXIuaW1wbC5pczJkID8gQ29uc3RhbnRzLk5BVklHQVRJT05fRElTVEFOQ0VfMkQgOiBDb25zdGFudHMuTkFWSUdBVElPTl9ESVNUQU5DRV8zRDtcbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uVmVsb2NpdHkgPSB0aGlzLnZpZXdlci5pbXBsLmlzMmQgPyBDb25zdGFudHMuTkFWSUdBVElPTl9WRUxPQ0lUWV8yRCA6IENvbnN0YW50cy5OQVZJR0FUSU9OX1ZFTE9DSVRZXzNEO1xuXG4gICAgICAgIHRoaXMuZG9jdW1lbnRzID0gZXh0ZW5zaW9uLmRvY3VtZW50cztcbiAgICAgICAgdGhpcy5zaGVldHMgPSBleHRlbnNpb24uc2hlZXRzO1xuXG4gICAgICAgIHRoaXMuZXh0ZW5zaW9uID0gZXh0ZW5zaW9uO1xuXG4gICAgICAgIHRoaXMubmFtZXMgPSBbJ2dlc3R1cmUtZG9jdW1lbnQtbmF2aWdhdGlvbiddO1xuXG4gICAgICAgIHRoaXMubGVmdERpcmVjdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKDEsIDAsIDApO1xuICAgICAgICB0aGlzLnJpZ2h0RGlyZWN0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoLTEsIDAsIDApO1xuICAgICAgICB0aGlzLnVwRGlyZWN0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMSwgMCk7XG4gICAgICAgIHRoaXMuZG93bkRpcmVjdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKDAsIC0xLCAwKTtcbiAgICAgICAgdGhpcy5leWVWZWN0b3IgPSBuZXcgVEhSRUUuVmVjdG9yMygwLCAwLCAxKTtcblxuICAgICAgICB0aGlzLmN1cnJlbnREaXJlY3Rpb24gPSBudWxsO1xuICAgIH1cblxuICAgIGdldE5hbWVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5uYW1lcztcbiAgICB9XG5cbiAgICBnZXROYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5uYW1lc1swXTtcbiAgICB9XG5cbiAgICBhY3RpdmF0ZShuYW1lKSB7XG4gICAgICAgIGlmIChuYW1lID09PSB0aGlzLmdldE5hbWUoKSkge1xuICAgICAgICAgICAgdGhpcy5pc0FjdGl2ZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkZWFjdGl2YXRlKG5hbWUpIHtcbiAgICAgICAgaWYgKG5hbWUgPT09IHRoaXMuZ2V0TmFtZSgpKSB7XG4gICAgICAgICAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpc0FjdGl2ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNBY3RpdmU7XG4gICAgfVxuXG4gICAgZ2V0UHJpb3JpdHkoKSB7XG4gICAgICAgIHJldHVybiAxMDA7XG4gICAgfVxuXG4gICAgX2lzQ2FudmFzQ29udGFpbnNWaWV3cG9ydCgpIHtcbiAgICAgICAgY29uc3QgYm91bmRzID0gQXV0b2Rlc2suVmlld2luZy5TY3JlZW5TaG90LmdldFNjZW5lQ2xpZW50Qm91bmRzKHRoaXMudmlld2VyLCB0aGlzLnZpZXdlci5uYXZpZ2F0aW9uLmdldENhbWVyYSgpKTtcbiAgICAgICAgY29uc3QgY29udGFpbmVyQm91bmRzID0gdGhpcy52aWV3ZXIuaW1wbC5nZXRDYW52YXNCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICByZXR1cm4gKGJvdW5kcy5taW4ueCA+IGNvbnRhaW5lckJvdW5kcy5sZWZ0ICYmXG4gICAgICAgICAgICAgICAgYm91bmRzLm1heC54IDwgY29udGFpbmVyQm91bmRzLnJpZ2h0ICYmXG4gICAgICAgICAgICAgICAgYm91bmRzLm1pbi55ID4gY29udGFpbmVyQm91bmRzLmhlaWdodCAtIGNvbnRhaW5lckJvdW5kcy5ib3R0b20gJiZcbiAgICAgICAgICAgICAgICBib3VuZHMubWF4LnkgPCBjb250YWluZXJCb3VuZHMuaGVpZ2h0IC0gY29udGFpbmVyQm91bmRzLnRvcFxuICAgICAgICAgICAgKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBPbiBEcmFnIGV2ZW50LCBnZXRzIHRoZSB0aGUgcmlnaHQgaXRlbSB0byBzd2l0Y2ggdG8sIGJhc2VkIG9uIHVzZXIgZ2VzdHVyZSdzIGRpcmVjdGlvbixcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGVyZSBpcyBhbiBpdGVtIHRvIG1vdmUgdG8uXG4gICAgICogQHBhcmFtIHtib29sZWFufSBldmVudCAtIERyYWdtb3ZlIGV2ZW50LlxuICAgICAqIEBwcml2YXRlXG4gICAgKi9cbiAgICBvbkRyYWcoZXZlbnQpIHtcbiAgICAgICAgY29uc3QgdiA9IG5ldyBUSFJFRS5WZWN0b3IzKGV2ZW50LmNhbnZhc1gsIGV2ZW50LmNhbnZhc1ksIDApLnN1Yih0aGlzLnN0YXJ0UG9pbnQpO1xuICAgICAgICBjb25zdCBsZW5ndGggPSB2Lmxlbmd0aCgpO1xuXG4gICAgICAgIGxldCBhbmdsZSA9IEdlb21ldHJ5VXRpbHMuZ2V0U2lnbmVkQW5nbGUodiwgdGhpcy5sZWZ0RGlyZWN0aW9uLCB0aGlzLmV5ZVZlY3Rvcik7XG5cbiAgICAgICAgaWYgKGFuZ2xlIDwgMCkge1xuICAgICAgICAgICAgYW5nbGUgKz0gMiAqIE1hdGguUEk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgaW5kZXhUb0xvYWQgPSBudWxsO1xuICAgICAgICBsZXQgaXNTaGVldDtcbiAgICAgICAgbGV0IGlzRG9jdW1lbnQ7XG5cbiAgICAgICAgaWYgKGFuZ2xlID4gNS80ICogTWF0aC5QSSAmJiBhbmdsZSA8IDcvNCAqIE1hdGguUEkgJiYgdGhpcy5zaGVldHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50RGlyZWN0aW9uID0gdGhpcy51cERpcmVjdGlvbjtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uLmN1cnJlbnRTaGVldEluZGV4ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uLm9wdGlvbnMuZW5hYmxlQ3ljbGljU3dpcGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhUb0xvYWQgPSB0aGlzLnNoZWV0cy5sZW5ndGggLSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5kZXhUb0xvYWQgPSB0aGlzLmV4dGVuc2lvbi5jdXJyZW50U2hlZXRJbmRleCAtIDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlzU2hlZXQgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKGFuZ2xlID4gMS80ICogTWF0aC5QSSAmJiBhbmdsZSA8PSAzLzQgKiBNYXRoLlBJICYmIHRoaXMuc2hlZXRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudERpcmVjdGlvbiA9IHRoaXMuZG93bkRpcmVjdGlvbjtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uLmN1cnJlbnRTaGVldEluZGV4ID09PSB0aGlzLnNoZWV0cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uLm9wdGlvbnMuZW5hYmxlQ3ljbGljU3dpcGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhUb0xvYWQgPSAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5kZXhUb0xvYWQgPSB0aGlzLmV4dGVuc2lvbi5jdXJyZW50U2hlZXRJbmRleCArIDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlzU2hlZXQgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKGFuZ2xlID4gMy80ICogTWF0aC5QSSAmJiBhbmdsZSA8PSA1LzQgKiBNYXRoLlBJICYmIHRoaXMuZG9jdW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudERpcmVjdGlvbiA9IHRoaXMubGVmdERpcmVjdGlvbjtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uLmN1cnJlbnREb2N1bWVudEluZGV4ID09PSB0aGlzLmRvY3VtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uLm9wdGlvbnMuZW5hYmxlQ3ljbGljU3dpcGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhUb0xvYWQgPSAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5kZXhUb0xvYWQgPSB0aGlzLmV4dGVuc2lvbi5jdXJyZW50RG9jdW1lbnRJbmRleCArIDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlzRG9jdW1lbnQgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKChhbmdsZSA+IDcvNCAqIE1hdGguUEkgfHwgYW5nbGUgPD0gMS80ICogTWF0aC5QSSkgJiYgdGhpcy5kb2N1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50RGlyZWN0aW9uID0gdGhpcy5yaWdodERpcmVjdGlvbjtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uLmN1cnJlbnREb2N1bWVudEluZGV4ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uLm9wdGlvbnMuZW5hYmxlQ3ljbGljU3dpcGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhUb0xvYWQgPSB0aGlzLmRvY3VtZW50cy5sZW5ndGggLSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5kZXhUb0xvYWQgPSB0aGlzLmV4dGVuc2lvbi5jdXJyZW50RG9jdW1lbnRJbmRleCAtIDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlzRG9jdW1lbnQgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgaGFzSXRlbSA9IGluZGV4VG9Mb2FkICE9PSBudWxsICYmIChpc1NoZWV0IHx8IGlzRG9jdW1lbnQpO1xuXG4gICAgICAgIGlmIChoYXNJdGVtICYmIGxlbmd0aCA+PSB0aGlzLm5hdmlnYXRpb25EaXN0YW5jZSkge1xuICAgICAgICAgICAgaWYgKGlzU2hlZXQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGd1aWQgfSA9IHRoaXMuc2hlZXRzW2luZGV4VG9Mb2FkXTtcbiAgICAgICAgICAgICAgICB0aGlzLmV4dGVuc2lvbi5jaGFuZ2VTaGVldFJlcXVpcmVkKGd1aWQpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChpc0RvY3VtZW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyB1cm4sIGd1aWQgfSA9IHRoaXMuZG9jdW1lbnRzW2luZGV4VG9Mb2FkXTtcbiAgICAgICAgICAgICAgICB0aGlzLmV4dGVuc2lvbi5jaGFuZ2VEb2N1bWVudFJlcXVpcmVkKHVybiwgZ3VpZCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuY2hhbmdpbmcgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGhhc0l0ZW07XG4gICAgfVxuXG4gICAgX2lzU3dpcGVFbmFibGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52aWV3ZXIubW9kZWwuaXMzZCgpIHx8IHRoaXMuX2lzQ2FudmFzQ29udGFpbnNWaWV3cG9ydCgpO1xuICAgIH1cblxuICAgIGhhbmRsZUdlc3R1cmUoZXZlbnQpIHtcbiAgICAgICAgc3dpdGNoIChldmVudC50eXBlKSB7XG4gICAgICAgICAgICBjYXNlICdkcmFnc3RhcnQnOlxuICAgICAgICAgICAgICAgIHRoaXMuaXNTd2lwZUVuYWJsZWQgPSB0aGlzLl9pc1N3aXBlRW5hYmxlZCgpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzU3dpcGVFbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRQb2ludCA9IG5ldyBUSFJFRS5WZWN0b3IzKGV2ZW50LmNhbnZhc1gsIGV2ZW50LmNhbnZhc1ksIDApO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuc3dpcGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdpbmcgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIGNhc2UgJ2RyYWdtb3ZlJzpcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGFuZ2luZykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc3dpcGluZyB8fCAodGhpcy5pc1N3aXBlRW5hYmxlZCAmJiBNYXRoLmFicyhldmVudC5vdmVyYWxsVmVsb2NpdHkpID4gdGhpcy5uYXZpZ2F0aW9uVmVsb2NpdHkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3dpcGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm9uRHJhZyhldmVudCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgY2FzZSAnZHJhZ2VuZCc6XG4gICAgICAgICAgICAgICAgLy8gV2hlbiBmaW5pc2ggc3dpcGluZywgcHJldmVudCB0aGUgY2FtZXJhIGZyb20gb3JiaXRpbmcuIFJlbGV2YW50IGZvciAzRCBvbmx5IC0gdGhlcmUgaXMgbm8gY2FtZXJhIG9yYml0IGZvciAyRC5cbiAgICAgICAgICAgICAgICAvLyBJIGxpbWl0ZWQgdGhpcyB0byAzRCBvbmx5LCBiZWNhdXNlIG9mIGEgYnVnIEkgZm91bmQgd2hlbiByZXR1cm5pbmcgdHJ1ZSB3aGVuIHN3aXBpbmcgZnJvbSBhIDJEIGRvY3VtZW50IHRvIDNEIGRvY3VtZW50IC0gSXQgd2FzIGJsb2NraW5nIG9yYml0LlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNoYW5naW5nICYmIHRoaXMudmlld2VyLm1vZGVsLmlzM2QoKTtcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiR2VvbWV0cnlVdGlscyIsIkNvbnN0YW50cyIsIkdlc3R1cmVEb2N1bWVudE5hdmlnYXRpb25Ub29sIiwiY29uc3RydWN0b3IiLCJleHRlbnNpb24iLCJ2aWV3ZXIiLCJuYXZpZ2F0aW9uRGlzdGFuY2UiLCJpbXBsIiwiaXMyZCIsIk5BVklHQVRJT05fRElTVEFOQ0VfMkQiLCJOQVZJR0FUSU9OX0RJU1RBTkNFXzNEIiwibmF2aWdhdGlvblZlbG9jaXR5IiwiTkFWSUdBVElPTl9WRUxPQ0lUWV8yRCIsIk5BVklHQVRJT05fVkVMT0NJVFlfM0QiLCJkb2N1bWVudHMiLCJzaGVldHMiLCJuYW1lcyIsImxlZnREaXJlY3Rpb24iLCJUSFJFRSIsIlZlY3RvcjMiLCJyaWdodERpcmVjdGlvbiIsInVwRGlyZWN0aW9uIiwiZG93bkRpcmVjdGlvbiIsImV5ZVZlY3RvciIsImN1cnJlbnREaXJlY3Rpb24iLCJnZXROYW1lcyIsImdldE5hbWUiLCJhY3RpdmF0ZSIsIm5hbWUiLCJpc0FjdGl2ZSIsImRlYWN0aXZhdGUiLCJnZXRQcmlvcml0eSIsIl9pc0NhbnZhc0NvbnRhaW5zVmlld3BvcnQiLCJib3VuZHMiLCJBdXRvZGVzayIsIlZpZXdpbmciLCJTY3JlZW5TaG90IiwiZ2V0U2NlbmVDbGllbnRCb3VuZHMiLCJuYXZpZ2F0aW9uIiwiZ2V0Q2FtZXJhIiwiY29udGFpbmVyQm91bmRzIiwiZ2V0Q2FudmFzQm91bmRpbmdDbGllbnRSZWN0IiwibWluIiwieCIsImxlZnQiLCJtYXgiLCJyaWdodCIsInkiLCJoZWlnaHQiLCJib3R0b20iLCJ0b3AiLCJvbkRyYWciLCJldmVudCIsInYiLCJjYW52YXNYIiwiY2FudmFzWSIsInN1YiIsInN0YXJ0UG9pbnQiLCJsZW5ndGgiLCJhbmdsZSIsImdldFNpZ25lZEFuZ2xlIiwiTWF0aCIsIlBJIiwiaW5kZXhUb0xvYWQiLCJpc1NoZWV0IiwiaXNEb2N1bWVudCIsImN1cnJlbnRTaGVldEluZGV4Iiwib3B0aW9ucyIsImVuYWJsZUN5Y2xpY1N3aXBlIiwiY3VycmVudERvY3VtZW50SW5kZXgiLCJoYXNJdGVtIiwiZ3VpZCIsImNoYW5nZVNoZWV0UmVxdWlyZWQiLCJ1cm4iLCJjaGFuZ2VEb2N1bWVudFJlcXVpcmVkIiwiY2hhbmdpbmciLCJfaXNTd2lwZUVuYWJsZWQiLCJtb2RlbCIsImlzM2QiLCJoYW5kbGVHZXN0dXJlIiwidHlwZSIsImlzU3dpcGVFbmFibGVkIiwic3dpcGluZyIsImFicyIsIm92ZXJhbGxWZWxvY2l0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/GestureDocumentNavigation/GestureDocumentNavigationTool.js\n");

/***/ }),

/***/ "./extensions/GestureDocumentNavigation/ModelUtils.js":
/*!************************************************************!*\
  !*** ./extensions/GestureDocumentNavigation/ModelUtils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst ModelUtils = {};\n\nModelUtils.getModelExtension = (url) => {\n  const match = url && url.toLowerCase().match(/\\.([a-z0-9]+)(\\?|$)/);\n  const fileExtension = match ? match[1] : null;\n  return fileExtension;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ModelUtils);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL0dlc3R1cmVEb2N1bWVudE5hdmlnYXRpb24vTW9kZWxVdGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsVUFBVSxHQUFHLENBQUMsQ0FBQzs7QUFFckJBLFVBQVUsQ0FBQ0MsaUJBQWlCLEdBQUcsQ0FBQ0MsR0FBRyxLQUFLO0VBQ3BDLE1BQU1DLEtBQUssR0FBR0QsR0FBRyxJQUFJQSxHQUFHLENBQUNFLFdBQVcsQ0FBQyxDQUFDLENBQUNELEtBQUssQ0FBQyxxQkFBcUIsQ0FBQztFQUNuRSxNQUFNRSxhQUFhLEdBQUdGLEtBQUssR0FBR0EsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUk7RUFDN0MsT0FBT0UsYUFBYTtBQUN4QixDQUFDOztBQUVELGlFQUFlTCxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXV0b2Rlc2suRXh0ZW5zaW9ucy8uL2V4dGVuc2lvbnMvR2VzdHVyZURvY3VtZW50TmF2aWdhdGlvbi9Nb2RlbFV0aWxzLmpzPzdkMWQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTW9kZWxVdGlscyA9IHt9O1xuXG5Nb2RlbFV0aWxzLmdldE1vZGVsRXh0ZW5zaW9uID0gKHVybCkgPT4ge1xuICAgIGNvbnN0IG1hdGNoID0gdXJsICYmIHVybC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9cXC4oW2EtejAtOV0rKShcXD98JCkvKTtcbiAgICBjb25zdCBmaWxlRXh0ZW5zaW9uID0gbWF0Y2ggPyBtYXRjaFsxXSA6IG51bGw7XG4gICAgcmV0dXJuIGZpbGVFeHRlbnNpb247XG59O1xuXG5leHBvcnQgZGVmYXVsdCBNb2RlbFV0aWxzOyJdLCJuYW1lcyI6WyJNb2RlbFV0aWxzIiwiZ2V0TW9kZWxFeHRlbnNpb24iLCJ1cmwiLCJtYXRjaCIsInRvTG93ZXJDYXNlIiwiZmlsZUV4dGVuc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./extensions/GestureDocumentNavigation/ModelUtils.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./extensions/GestureDocumentNavigation/GestureDocumentNavigation.js");
/******/ 	Autodesk.Extensions.GestureDocumentNavigation = __webpack_exports__;
/******/ 	
/******/ })()
;