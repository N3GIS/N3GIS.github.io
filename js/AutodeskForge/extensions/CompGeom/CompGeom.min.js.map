{"version":3,"file":"CompGeom/CompGeom.min.js","mappings":"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","sources":["webpack://Autodesk.Extensions/./extensions/CompGeom/LmvCanvasContext.js","webpack://Autodesk.Extensions/./extensions/CompGeom/ThirdParty/lmv_poly2tri.js","webpack://Autodesk.Extensions/./extensions/CompGeom/bezier.js","webpack://Autodesk.Extensions/./extensions/CompGeom/complex-polygon.js","webpack://Autodesk.Extensions/./extensions/CompGeom/contour-set.js","webpack://Autodesk.Extensions/./extensions/CompGeom/dcel.js","webpack://Autodesk.Extensions/./src/global.js","webpack://Autodesk.Extensions/./src/compat.js","webpack://Autodesk.Extensions/./extensions/CompGeom/edge-set.js","webpack://Autodesk.Extensions/./extensions/CompGeom/ellipse.js","webpack://Autodesk.Extensions/./extensions/CompGeom/fuzzy-math.js","webpack://Autodesk.Extensions/./extensions/CompGeom/index.js","webpack://Autodesk.Extensions/./extensions/CompGeom/interval-tree.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/clipper-lib-fpoint/clipper.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/earcut/src/earcut.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/advancingfront.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/assert.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/point.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/pointerror.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/poly2tri.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/sweep.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/sweepcontext.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/triangle.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/utils.js","webpack://Autodesk.Extensions/./extensions/CompGeom/node_modules/poly2tri/src/xy.js","webpack://Autodesk.Extensions/./extensions/CompGeom/path2d.js","webpack://Autodesk.Extensions/./src/wgs/scene/LmvVector3.js","webpack://Autodesk.Extensions/./extensions/CompGeom/point-list.js","webpack://Autodesk.Extensions/./extensions/CompGeom/quad-tree.js","webpack://Autodesk.Extensions/./extensions/CompGeom/x-box-box.js","webpack://Autodesk.Extensions/./extensions/CompGeom/x-box-plane.js","webpack://Autodesk.Extensions/./extensions/CompGeom/x-line-box.js","webpack://Autodesk.Extensions/./extensions/CompGeom/x-line-line.js","webpack://Autodesk.Extensions/./extensions/CompGeom/x-mesh-plane.js","webpack://Autodesk.Extensions/./extensions/CompGeom/x-plane-segment.js","webpack://Autodesk.Extensions/./extensions/CompGeom/x-triangle-plane.js","webpack://Autodesk.Extensions/webpack/bootstrap","webpack://Autodesk.Extensions/webpack/runtime/compat get default export","webpack://Autodesk.Extensions/webpack/runtime/define property getters","webpack://Autodesk.Extensions/webpack/runtime/global","webpack://Autodesk.Extensions/webpack/runtime/hasOwnProperty shorthand","webpack://Autodesk.Extensions/webpack/runtime/make namespace object","webpack://Autodesk.Extensions/webpack/startup"],"sourcesContent":["import { Path2D } from \"./path2d\";\n\nvar av = Autodesk.Viewing,\n    avp = av.Private;\n\nconst VertexBufferBuilder = avp.VertexBufferBuilder;\n\n//Custom implementation of HTML Canvas API used for rendering PDF geometry using the WebGL accelerated F2D renderer\n\n\n//A custom context object that overloads standard HMTL Canvas 2D context to intercept draw\n//calls and pipe them into LMV vertex buffers\nexport function hijackContextAPI(inContext, lmvContext) {\n\n    let fnList = [\n        \"fillRect\",\n        \"strokeRect\",\n        \"clearRect\",\n        \"beginPath\",\n        \"closePath\",\n        \"moveTo\",\n        \"lineTo\",\n        \"arc\",\n        \"arcTo\",\n        \"quadraticCurveTo\",\n        \"bezierCurveTo\",\n        \"rect\",\n        \"fill\",\n        \"stroke\",\n        \"clip\",\n        \"strokeText\",\n        \"fillText\",\n        \"drawImage\",\n        \"save\",\n        \"restore\",\n        \"setLineDash\",\n        \"createPattern\",\n\n        // OCG related\n        \"beginMarkedContent\",\n        \"beginMarkedContentProps\",\n        \"endMarkedContent\",\n        \"setCurrentOperatorIndex\",\n\n        \"isLMVCanvasContext\",\n\n        // subgroups\n        \"beginChildGroup\",\n        \"endChildGroup\"\n    ];\n\n    fnList.forEach(fn => {\n        inContext[\"_original\" + fn] = inContext[fn];\n        inContext[fn] = lmvContext[fn].bind(lmvContext);\n    });\n\n}\n\nconst QUAD_TEXTURE = 1;\nconst IMAGE_TEXTURE = 2;\n\nlet _tmpXform = new Array(6);\nlet _tmpVec = new THREE.Vector2();\nlet _tmpBox = new THREE.Box2();\n\n\n//Used for matrix decomposition in drawImage\nvar _offset = new THREE.Vector3();\nvar _quat   = new THREE.Quaternion();\nvar _scale  = new THREE.Vector3();\nvar _axis  = new THREE.Vector3();\nvar _mtx4 = new THREE.Matrix4();\n\nexport class LmvCanvasContext {\n\n    static getLayerKey(properties) {\n        let key;\n        if(properties && typeof(properties) == \"object\") {\n            key = properties.ocgId;\n            // some PDFs have a missing ocgId, as in https://jira.autodesk.com/browse/BLMV-8395\n            if (key === undefined) {\n                key = properties.name;\n            }\n        } else {\n            key = properties;\n        }\n        return key;\n    }\n\n    /**\n     * Check is a PDF Ref object\n     * @param {PDF.Ref} obj\n     */\n    static isRef(obj) {\n        return obj != null && typeof(obj.num) === \"number\" && typeof(obj.gen) === \"number\";\n    }\n\n    /**\n     * generate a simple string works as a key for the ref.\n     * @param {PDF.Ref} ref\n     */\n    static refKey(ref) {\n        return `${ref.num}-${ref.gen}`;\n    }\n\n    // from /@adsk/pdfjs-dist/lib/shared/util.js\n    static applyTransform(p, m) {\n        const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n        const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n        return [xt, yt];\n    }\n\n    static inverseTransform(m) {\n        const d = m[0] * m[3] - m[1] * m[2];\n        return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n    }\n\n    constructor(viewport, toPageUnits, meshCallback, fontEngine, usingTextLayer, fontAtlas, pdfRefMap) {\n\n        //\n        // Prepare canvas using PDF page dimensions\n        //\n        //TODO: Do we need that or can we just overload the entire CanvasContext API and skip the HTML element creation completely?\n        const _document = av.getGlobal().document;\n        var canvas = _document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        // do not use image smoothing to improve quality of small image sequences\n        context.imageSmoothingEnabled = false;\n\n        this.canvasContext = context; //REQUIRED for PDF.js interface\n        this.viewport = viewport; //REQUIRED for PDF.js interface\n        this.toPageUnits = toPageUnits;\n\n        this.meshCallback = meshCallback;\n        // Only set bounds for PDF, because Edit2d is using LmvCanvasContext for drawing, and doesn't require clipping\n        if(viewport.clipToViewport == true) {\n            let offsetX = viewport.offsetX || 0;\n            let offsetY = viewport.offsetY || 0;\n            this.bounds = new THREE.Vector4( offsetX * toPageUnits, offsetY * toPageUnits,\n                (viewport.width + offsetX) * toPageUnits, (viewport.height + offsetY) * toPageUnits);\n        }\n\n        this.currentMeshIndex = 0;\n        this.imageNumber = 0;\n        this.currentVbb = new VertexBufferBuilder(false);\n        this._curPath = null;\n        this._curClip = null;\n        this.first = true;\n        this.states = [];\n        this.glyphCache = {};\n        this.usingTextLayer = usingTextLayer;\n\n        //Fixed precision tolerance assuming the input is in typographic \"point\" units.\n        this.precisionTolerance = 0.1;\n\n        this.dbId = -1;\n        this.maxDbId = 0;\n\n        // If true, dbId is automatically increased on each beginPath call.\n        this.consecutiveIds = false;\n\n        if (av.isMobileDevice()) {\n            Autodesk.Extensions.CompGeom.SetTesselationParams(undefined, 0.1);\n        }\n\n        this.fontEngine = fontEngine;\n\n        // Use solid lines by default. See LineStyleDef.js for other line types (dashed etc.)\n        this.lineStyle = 0;\n\n        // If true, lines widths are applied in screen-space\n        this.isScreenSpace = false;\n\n        hijackContextAPI(context, this);\n\n        this.layers = {};\n        this.defaultLayerId = 0;\n        this.currentLayerId = this.defaultLayerId;\n        this.sequencedDbId = -1;\n        this.taggedId = null;\n        this.defaultVPId = 0;\n        this.viewportCounter = 1;\n        this.currentVpId = this.defaultVPId;\n        this.viewports = [this.createViewPortData(\n            new THREE.Matrix4().makeScale(viewport.scale, viewport.scale, viewport.scale).elements\n        )];\n        this.viewportMap = {};\n\n        this.ocgStack = [];\n\n        this.msdfRender = true;\n        this.fontAtlas = fontAtlas;\n        this.pdfRefMap = pdfRefMap || {} ;\n\n        this.smallImageSequenceToCheck = -1;\n        this.inSmallImageRendering = false;\n\n        this.inChildGroup = false;\n        this.overrideCompositeOperation = 'source-over';\n        this.overrideAlpha = 1.0;\n    }\n\n    destroy() {\n        this.canvasContext = null;\n        this.meshCallback = null;\n    }\n\n    updateDBId() {\n        if(this.taggedId != null) {\n            this.dbId = this.taggedId;\n        } else {\n            if(this.consecutiveIds) {\n                this.sequencedDbId++;\n                this.dbId = this.sequencedDbId;\n            }\n        }\n\n        this.maxDbId = Math.max(this.maxDbId, this.dbId);\n    }\n\n    snapToPixel(x, y)  {\n        const invM = this.canvasContext.mozCurrentTransformInverse;\n        const m = this.canvasContext.mozCurrentTransform;\n\n        let p = LmvCanvasContext.applyTransform([x, y], m);\n        p[0] = Math.round(p[0]);\n        p[1] = Math.round(p[1]);\n        return LmvCanvasContext.applyTransform(p, invM);\n    }\n\n    save() {\n        //console.log(\"save\");\n        this.states.push({\n            clip: this._curClip,\n            consecutiveIds: this.consecutiveIds,\n            lineDashedDef: this.lineDashedDef,\n            lineStyle: this.lineStyle,\n            overrideCompositeOperation: this.overrideCompositeOperation,\n            overrideAlpha: this.overrideAlpha,\n            inChildGroup: this.inChildGroup,\n        });\n\n        this.canvasContext._originalsave();\n    }\n\n    restore() {\n\n        let state = this.states.pop();\n\n        if (state) {\n            this._curClip = state.clip;\n            this.consecutiveIds = state.consecutiveIds;\n            this.lineDashedDef = state.lineDashedDef;\n            this.lineStyle = state.lineStyle;\n            this.overrideCompositeOperation = state.overrideCompositeOperation;\n            this.overrideAlpha = state.overrideAlpha;\n            this.inChildGroup = state.inChildGroup;\n        }\n\n        //console.log(\"restore\");\n        this.canvasContext._originalrestore();\n    }\n\n    flushBuffer(addCount, finalFlush, textureOption) {\n        if (!this.currentVbb.vcount && !finalFlush) {\n            return;\n        }\n\n        // LMV-5542 - support blend modes for fill colors\n        // Limit the number of times that meshes are split up.\n        // When adding support for a new compositeOperation, add it to the if condition.\n        let compositeOperation = 'source-over';\n        // ToDo: how to handle multiple composite operations? For now, an override with 'source-over' is ignored, any other override wins. See also beginChildGroup().\n        const globalCompOp = this.overrideCompositeOperation!='source-over' ? this.overrideCompositeOperation : this.canvasContext.globalCompositeOperation;\n        if (globalCompOp === 'multiply' || globalCompOp === 'min' || globalCompOp === 'darken' || globalCompOp === 'lighten') {\n            compositeOperation = globalCompOp;\n        }\n\n        // When the blending mode has changed, we have to flush the shapes that were added with the blending mode that\n        // was current until now, that's why we use this.currentCompositeOperation below when setting material.compositeOperation.\n        const blendModeChanged = this.currentCompositeOperation !== compositeOperation;\n        const flush = finalFlush || this.currentVbb.isFull(addCount) || blendModeChanged;\n\n        if (flush) {\n            if (this.currentVbb.vcount) {\n                const mesh = this.currentVbb.toMesh();\n                mesh.material = {\n                                    skipEllipticals : !this.currentVbb.numEllipticals,\n                                    skipCircles: !this.currentVbb.numCirculars,\n                                    skipTriangleGeoms : !this.currentVbb.numTriangleGeoms,\n                                    skipMiterLines: !this.currentVbb.numMiterLines,\n                                    useInstancing : this.currentVbb.useInstancing,\n                                    isScreenSpace: !this.currentImage,\n                                    hasLineStyles: this.currentVbb.hasLineStyles,\n                                    msdfFontTexture: !!this.hasMSDFContent,\n                                    viewportBounds: this.bounds,\n                                    imageUVTexture: textureOption === IMAGE_TEXTURE\n                                };\n\n                if (this.currentImage) {\n                    mesh.material.image = this.currentImage;\n                    mesh.material.image.name = this.currentImage.cacheKey || this.imageNumber++;\n                    // Assume the background of PDF page is white, when use it to do multiply, white is better then black color\n                    // And it should be correct for most cases\n                    mesh.material.compositeCanvasColor = \"#ffffff\";\n                    mesh.material.opacity = this.canvasContext.globalAlpha;\n                    this.currentImage = null;\n                }\n\n                mesh.material.compositeOperation = this.currentCompositeOperation;\n                // LMV-5840: Apply the global alpha to the meshes in the group.\n                if (this.inChildGroup && mesh.material.opacity !== this.overrideAlpha) {\n                    mesh.material.hasOpacity = !!this.overrideAlpha;\n                    mesh.material.opacity = this.overrideAlpha;\n                }\n\n                this.meshCallback(mesh, this.currentMeshIndex++);\n                this.currentVbb.reset(0);\n                this.hasMSDFContent = false;\n            }\n        }\n\n        this.currentCompositeOperation = compositeOperation;\n    }\n\n    //Polytriangle requires some post-processing depending on wheter instancing is used or not\n    //TODO: This is copy-pasted from the same function in F2D.js. It's purely used to\n    //add half width outline to polytriangles so that they look antialiased.\n    addPolyTriangle(points, inds, color, dbId, layer, antialiasEdges) {\n        var me = this;\n        var edgeMap = null;\n\n        var currentVpId = this.currentVpId;\n\n        var aaLineWeight = -0.5; //negative = in pixel units\n\n        function processEdge(iFrom, iTo) {\n            if (iFrom > iTo) {\n                var tmp = iFrom;\n                iFrom = iTo;\n                iTo = tmp;\n            }\n\n            if (!edgeMap[iFrom])\n                edgeMap[iFrom] = [iTo];\n            else {\n                var adjacentVerts = edgeMap[iFrom];\n                var idx = adjacentVerts.lastIndexOf(iTo);\n                if (idx == -1)\n                    adjacentVerts.push(iTo); //first time we see this edge, so remember it as exterior edge\n                else\n                    adjacentVerts[idx] = -1; //the second time we see an edge mark it as interior edge\n            }\n        }\n\n\n        function addAllAntialiasEdges() {\n\n            for (var i = 0, iEnd = edgeMap.length; i<iEnd; i++) {\n\n                var adjacentVerts = edgeMap[i];\n                if (!adjacentVerts)\n                    continue;\n\n                for (var j=0; j<adjacentVerts.length; j++) {\n                    var iTo = adjacentVerts[j];\n                    if (iTo == -1)\n                        continue; //an interior edge was here -- skip\n                    else {\n                        //exterior edge -- add an antialiasing line for it\n                        me.flushBuffer(4);\n                        me.currentVbb.addSegment(points[2*i], points[2*i+1],\n                                                 points[2*iTo], points[2*iTo+1],\n                                                 me.currentLayerId,\n                                                 aaLineWeight,\n                                                 color,\n                                                 dbId, layer, currentVpId, me.lineStyle);\n                    }\n                }\n            }\n        }\n\n        function antialiasOneEdge(iFrom, iTo) {\n            if (iFrom > iTo) {\n                var tmp = iFrom;\n                iFrom = iTo;\n                iTo = tmp;\n            }\n\n            var adjacentVerts = edgeMap[iFrom];\n            if (!adjacentVerts)\n                return;\n\n            var idx = adjacentVerts.indexOf(iTo);\n            if (idx != -1) {\n                //exterior edge -- add an antialiasing line for it\n                me.flushBuffer(4);\n                me.currentVbb.addSegment(points[2*iFrom], points[2*iFrom+1],\n                                         points[2*iTo], points[2*iTo+1],\n                                         me.currentLayerId,\n                                         aaLineWeight,\n                                         color,\n                                         dbId, layer, currentVpId, me.lineStyle);\n            }\n        }\n\n        if (antialiasEdges) {\n            edgeMap = new Array(points.length/2);\n\n            for (var i= 0, iEnd = inds.length; i<iEnd; i+= 3) {\n                var i0 = inds[i];\n                var i1 = inds[i+1];\n                var i2 = inds[i+2];\n\n                processEdge(i0, i1);\n                processEdge(i1, i2);\n                processEdge(i2, i0);\n            }\n        }\n\n        if(isNaN(color) && (color.isPattern === true || color.imageTransform)) {\n            this.flushBuffer(0, true);\n            var image = color.image;\n            var count = points.length / 2; // number of vertices\n\n            this.flushBuffer(count);\n            var vbb = this.currentVbb;\n            var vbase = vbb.vcount;\n\n            // need to apply the transformation to the UV\n            var xform = this.getCurrentTransform();\n\n            //LMV-5353\n            if(color.repetition === \"no-repeat\" && !color.isGradient) {\n                const x1 = this.tx(0, 0, xform);\n                const y1 = this.ty(0, 0, xform);\n                const x2 = this.tx(image.width, image.height, xform);\n                const y2 = this.ty(image.width, image.height, xform);\n                vbb.addVertexImagePolytriangle(x1, y1, 0, 0, 0xFFFFFFFF, dbId, layer, currentVpId);\n                vbb.addVertexImagePolytriangle(x1, y2, 0, -1, 0xFFFFFFFF, dbId, layer, currentVpId);\n                vbb.addVertexImagePolytriangle(x2, y2, 1, -1, 0xFFFFFFFF, dbId, layer, currentVpId);\n                vbb.addVertexImagePolytriangle(x2, y1, 1, 0, 0xFFFFFFFF, dbId, layer, currentVpId);\n\n                inds = [0, 1, 2, 0, 2, 3];\n            } else if (color.imageTransform) {\n                for (let i = 0; i < count; ++i) {\n                    var x = points[2*i];\n                    var y = points[2*i+1];\n\n                    const uv = LmvCanvasContext.applyTransform([x, y], color.imageTransform);\n\n                    vbb.addVertexImagePolytriangle(x, y, uv[0], uv[1], 0xFFFFFFFF, dbId, layer, currentVpId);\n                }\n            } else {\n                for (let i = 0; i < count; ++i) {\n                    const x = points[2*i];\n                    const y = points[2*i+1];\n\n                    let u, v;\n                    if(color.isGradient) {\n                        const x1 = this._curPath.bbox.min.x;\n                        const y1 = this._curPath.bbox.min.y;\n                        const w1 = this._curPath.bbox.max.x - x1;\n                        const h1 = this._curPath.bbox.max.y - y1;\n\n                        u = (x - x1) / w1 ;\n                        v = (y - y1) / h1 ;\n                    } else {\n                        const uv = LmvCanvasContext.applyTransform([x / this.toPageUnits, y / this.toPageUnits], this.getCurrentInverseTransform());\n\n                        u = uv[0] / image.width;\n                        v = uv[1] / image.height;\n                    }\n\n\n                    vbb.addVertexImagePolytriangle(x, y, u, 1 - v, 0xFFFFFFFF, dbId, layer, currentVpId);\n                }\n            }\n\n            this.currentImage = image;\n            vbb.addIndices(inds, vbase);\n            this.flushBuffer(0, true, IMAGE_TEXTURE);\n        } else {\n            if (this.currentVbb.useInstancing) {\n                const count = inds.length;\n                for (let i = 0; i < count; i+=3) {\n                    let i0 = inds[i];\n                    let i1 = inds[i+1];\n                    let i2 = inds[i+2];\n                    this.flushBuffer(4);\n\n                    this.currentVbb.addTriangleGeom(points[2*i0], points[2*i0+1],\n                                                    points[2*i1], points[2*i1+1],\n                                                    points[2*i2], points[2*i2+1],\n                                                    color, dbId, layer, currentVpId);\n\n                    if (antialiasEdges) {\n                        antialiasOneEdge(i0, i1);\n                        antialiasOneEdge(i1, i2);\n                        antialiasOneEdge(i2, i0);\n                    }\n                }\n            }\n            else {\n                const count = points.length / 2; // number of vertices\n                this.flushBuffer(count);\n                const vbb = this.currentVbb;\n                const vbase = vbb.vcount;\n\n                for (let i = 0; i < count; ++i) {\n                    const x = points[2*i];\n                    const y = points[2*i+1];\n                    vbb.addVertexPolytriangle(x, y, color, dbId, layer, currentVpId);\n                }\n\n                vbb.addIndices(inds, vbase);\n\n                if (antialiasEdges) {\n                    addAllAntialiasEdges();\n                }\n\n            }\n        }\n    }\n\n    /**\n     * Returns a new GradientData instance.\n     * @param {Object} data - contains the raw data to create the GradientData.\n     * @returns {GradientData}\n     */\n    createGradientData(data) {\n        return new GradientData(data);\n    }\n\n    //Extract colors from HTML Canvas state\n    getFillColor() {\n        // Create a pattern from a CanvasGradient\n        const getGradientFill = (gradientData) => {\n\n            const startPoint = gradientData.startPoint.slice();\n            const endPoint = gradientData.endPoint.slice();\n\n            // according to the PDF spec, the gradient points are in shape space\n            // so apply the current transform to the gradient points\n            const xform = this.getCurrentTransform();\n            const sp0 = startPoint[0];\n            const ep0 = endPoint[0];\n            startPoint[0] = this.tx(sp0, startPoint[1], xform);\n            startPoint[1] = this.ty(sp0, startPoint[1], xform);\n            endPoint[0] = this.tx(ep0, endPoint[1], xform);\n            endPoint[1] = this.ty(ep0, endPoint[1], xform);\n\n            // build a canvas that is the size of the path's bounding box at a reasonable resolution\n            const scale = this.viewport.scale || 1;\n            let toCanvas = 1.0 / this.toPageUnits / scale;\n            let width = (this._curPath.bbox.max.x - this._curPath.bbox.min.x) * toCanvas;\n            let height = (this._curPath.bbox.max.y - this._curPath.bbox.min.y) * toCanvas;\n\n            // limit the size of the canvas to save memory\n            const CANVAS_SIZE_LIMIT = 2048;\n            const maxDim = Math.max(width, height, 1);\n            if (maxDim > CANVAS_SIZE_LIMIT) {\n                toCanvas *= CANVAS_SIZE_LIMIT / maxDim;\n                // repeat the transform with the new scale\n                width = (this._curPath.bbox.max.x - this._curPath.bbox.min.x) * toCanvas;\n                height = (this._curPath.bbox.max.y - this._curPath.bbox.min.y) * toCanvas;\n            }\n\n            // map the gradient from shape space into the path bbox\n            // subtract the bounding box min point\n            const offsetX = this._curPath.bbox.min.x;\n            const offsetY = this._curPath.bbox.min.y;\n            startPoint[0] -= offsetX;\n            startPoint[1] -= offsetY;\n            endPoint[0] -= offsetX;\n            endPoint[1] -= offsetY;\n\n            // scale the gradient to the size of the canvas\n            startPoint[0] *= toCanvas;\n            startPoint[1] *= toCanvas;\n            endPoint[0] *= toCanvas;\n            endPoint[1] *= toCanvas;\n\n            const tempCanvas = document.createElement('canvas');\n            tempCanvas.width = Math.max(width, 1);\n            tempCanvas.height = Math.max(height, 1);\n\n            const tempCtx = tempCanvas.getContext('2d');\n            // Create the gradient with the paths bounding box offset applied\n            // var gradient = createGradient(tempCtx, gradientData);\n            const gradient = gradientData.generateCanvasGradient(tempCtx, startPoint, endPoint);\n            tempCtx.fillStyle = gradient;\n            tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\n\n            const pattern = this.createPattern(tempCanvas, 'no-repeat');\n            pattern.isGradient = true;\n            return pattern;\n        };\n\n\n        const fillStyle = this.canvasContext.fillStyle;\n        if (fillStyle && fillStyle.isPattern === true) {\n            return fillStyle;\n        } else if (fillStyle instanceof CanvasGradient) {\n            const gradientData = new GradientData(fillStyle);\n            return getGradientFill(gradientData);\n        } else if (typeof fillStyle !== \"string\") {\n            console.warn(\"Unsupported fill style.\");\n            return 0x00000000;\n        }\n\n        var rgb = parseInt(fillStyle.slice(1), 16);\n        var a = (255 * this.canvasContext.globalAlpha) << 24;\n        var c = a | ((rgb & 0xff) << 16) | (rgb & 0xff00) | ((rgb >> 16) & 0xff);\n        return c;\n    }\n\n    getStrokeColor() {\n\n        let ctx = this.canvasContext;\n\n        if (this.lastStrokeStyle === ctx.strokeStyle && ctx.globalAlpha === this.lastAlpha) {\n            return this.lastRgb;\n        } else {\n            let rgb;\n            if (typeof ctx.strokeStyle !== \"string\") {\n                console.warn(\"Unsupported stroke style.\");\n                rgb = parseInt(0x00000000, 16);\n            } else {\n                rgb = parseInt(ctx.strokeStyle.slice(1), 16);\n            }\n            var a = (255 * ctx.globalAlpha) << 24;\n            var c = a | ((rgb & 0xff) << 16) | (rgb & 0xff00) | ((rgb >> 16) & 0xff);\n\n            this.lastRgb = c;\n            this.lastStrokeStyle = ctx.strokeStyle;\n            this.lastAlpha = ctx.globalAlpha;\n\n            return c;\n        }\n\n    }\n\n    getCurrentTransform() {\n        let xform = this.canvasContext.mozCurrentTransform;\n\n        //Pay attention here: In case we are processing the path of a character and we want to\n        //cache it for later use, we have to neutralize the part of the canvas transform that positions\n        //the character in the page, but we need to keep the rest of the transform (that positions parts\n        //of the character in its own em-box). This is what the inverse transform multiplication here does.\n        //TODO: we can optimize this to only compute the multiplication in case mozCurrentTransform changes.\n        if (this.isFontChar) {\n            let m = this.invXform;\n            let a = xform[0], b=xform[1], c = xform[2], d = xform[3], e = xform[4], f = xform[5];\n            _tmpXform[0] = m[0] * a + m[2] * b;\n            _tmpXform[1] = m[1] * a + m[3] * b;\n            _tmpXform[2] = m[0] * c + m[2] * d;\n            _tmpXform[3] = m[1] * c + m[3] * d;\n            _tmpXform[4] = m[0] * e + m[2] * f + m[4];\n            _tmpXform[5] = m[1] * e + m[3] * f + m[5];\n            return _tmpXform;\n        }\n        return xform;\n    }\n\n    getCurrentInverseTransform() {\n        return this.canvasContext.mozCurrentTransformInverse;\n    }\n\n    tx(x, y, xform) {\n        xform = xform || this.getCurrentTransform();\n        return (x * xform[0] + y * xform[2] + xform[4]) * (this.isFontChar ? 1 : this.toPageUnits);\n    }\n\n    ty(x, y, xform) {\n        xform = xform || this.getCurrentTransform();\n        return (x * xform[1] + y * xform[3] + xform[5]) * (this.isFontChar ? 1 : this.toPageUnits);\n    }\n\n    scaleValue(v, xform) {\n        xform = xform || this.getCurrentTransform();\n        return this.toPageUnits * Math.sqrt(Math.abs(xform[0]*xform[3] - xform[1]*xform[2])) * v; //assumes uniform;\n    }\n\n    transformBox(bbox, xform, dst) {\n        xform = xform || this.getCurrentTransform();\n\n        _tmpBox.makeEmpty();\n\n        _tmpVec.set(this.tx(bbox.min.x, bbox.min.y, xform), this.ty(bbox.min.x, bbox.min.y, xform));\n        _tmpBox.expandByPoint(_tmpVec);\n\n        _tmpVec.set(this.tx(bbox.max.x, bbox.min.y, xform), this.ty(bbox.max.x, bbox.min.y, xform));\n        _tmpBox.expandByPoint(_tmpVec);\n\n        _tmpVec.set(this.tx(bbox.max.x, bbox.max.y, xform), this.ty(bbox.max.x, bbox.max.y, xform));\n        _tmpBox.expandByPoint(_tmpVec);\n\n        _tmpVec.set(this.tx(bbox.min.x, bbox.max.y, xform), this.ty(bbox.min.x, bbox.max.y, xform));\n        _tmpBox.expandByPoint(_tmpVec);\n\n        if (dst) {\n            dst.copy(_tmpBox);\n            return dst;\n        } else {\n            return _tmpBox.clone();\n        }\n    }\n\n\n    fillRect(x, y, w, h) {\n        if (this.inSmallImageRendering) {\n            // Snap the rectangle to whole pixel dimensions in order to avoid antialiasing\n            const p1 = this.snapToPixel(x, y);\n            const p2 = this.snapToPixel(x+w, y+h);\n            const wS = p2[0]-p1[0];\n            const hS = p2[1]-p1[1];\n            this.canvasContext._originalfillRect(p1[0], p1[1], wS, hS);\n            return;\n        }\n\n        this.updateDBId();\n\n        // Hack: Assumption here is that the first fillRect call is for the white background quad.\n        //       For this, we don't want a dbI and use -1 instead. Unfortunately, this fillRect call happens\n        //       inside PDF.js (see beginDrawing in display/canvas.js), so we cannot easily set this id from outside.\n        this.rect(x, y, w, h);\n\n        this.dbId = this.first ? -1 : this.dbId;\n        this.first = false;\n        this.fill();\n        this.beginPath();\n    }\n\n    strokeRect(x, y, w, h) {\n        //TODO:\n        console.log(\"strokeRect\");\n    }\n\n    clearRect(x, y, w, h) {\n        console.log(\"clearRect\");\n        //TODO:\n    }\n\n    _beginTextChar(character, x, y, font, fontSize) {\n        this.isFontChar = true;\n        this.invXform = this.canvasContext.mozCurrentTransformInverse;\n        this.hashKey = character.codePointAt(0) + \"/\" + font.loadedName + \"/\" + fontSize;\n        this.cachedGlyph = this.glyphCache[this.hashKey];\n\n        if (this.cachedGlyph) {\n            this.skipPath = true;\n        } else {\n            this.skipPath = false;\n        }\n        //console.log(character, x, y, font, fontSize);\n    }\n\n    drawMSDFText(character, scaleX, scaleY, font, fontSize) {\n        scaleX = 0;\n        var fontName = font.name;\n\n        function distance(x0, y0, x1, y1, x2, y2) {\n            return Math.abs((y2 - y1) * x0 - (x2 - x1) * y0 + x2 * y1 - y2 * x1) / Math.sqrt((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n        }\n\n        if(this.fontAtlas && this.fontAtlas.charsMap && this.fontAtlas.charsMap[fontName]) {\n            var charIndex = this.fontAtlas.charsMap[fontName][character.charCodeAt(0)];\n            if(charIndex == undefined) {\n                return false;\n            } else {\n                if(this.currentVbb.isFull(4)) {\n                    this.flushBuffer(0, true);\n                }\n\n                this.hasMSDFContent = true;\n                var char = this.fontAtlas.chars[charIndex];\n                if(char.page > 0) {\n                    // Now only support 1 page of font texture, need to add extra logic for multiple font texture in the shader pipeline\n                    return false;\n                }\n                var common = this.fontAtlas.common[char.common];\n                var info = this.fontAtlas.info[char.info];\n\n                // need to consider the font size\n                var scale = fontSize/info.size;\n                var w = char.width * (scale + scaleX);\n                let flag = char.inverseYAxis ? -1 : 1;\n                var h = char.height* (scale + scaleY) * flag;\n                var x = char.txoffset * (scale + scaleX) ,\n                    y = char.tyoffset * (scale + scaleY) * (-flag);\n\n                var points = [\n                    x, y,\n                    x, y + h,\n                    x + w, y + h,\n                    x + w, y\n                ];\n\n                var ps = [];\n                for(let i = 0; i < points.length; i+=2) {\n                    ps.push(this.tx(points[i], points[i+1]));\n                    ps.push(this.ty(points[i], points[i+1]));\n                }\n                let uv = [];\n\n                if(char.inverseYAxis) {\n                    uv = [\n                        char.x/common.scaleW, 1- char.y/common.scaleH,\n                        char.x/common.scaleW, 1- (char.y + char.height)/common.scaleH,\n                        (char.x + char.width)/common.scaleW, 1- (char.y + char.height)/common.scaleH,\n                        (char.x + char.width)/common.scaleW, 1- char.y/common.scaleH,\n                    ];\n                } else {\n                    uv = [\n                        char.x/common.scaleW, 1- (char.y + char.height)/common.scaleH,\n                        char.x/common.scaleW, 1- char.y/common.scaleH,\n                        (char.x + char.width)/common.scaleW, 1- char.y/common.scaleH,\n                        (char.x + char.width)/common.scaleW, 1- (char.y + char.height)/common.scaleH,\n                    ];\n                }\n\n                // do a fast clipping for MSDF text, if the text is clipped out any part, will not show the text to make it simple\n                // otherwise it requires to do a whole UV mapping for each part left, which is overhead at this moment.\n                if(this._curClip) {\n                    var path = new Path2D(this.precisionTolerance);\n                    let index = 0;\n                    path.moveTo(ps[index++], ps[index++]);\n                    path.lineTo(ps[index++], ps[index++]);\n                    path.lineTo(ps[index++], ps[index++]);\n                    path.lineTo(ps[index++], ps[index++]);\n                    path.closePath();\n\n                    var subjFlatted = path.flattened || path.flatten(true);\n                    var clipFlatted = this._curClip.flattened || this._curClip.flatten(true);\n                    var precheckResult = path.preCheckForClipping(this, clipFlatted, subjFlatted, false, false);\n                    if(precheckResult.needClipping) {\n                        var polygons = path.msdfClipping(clipFlatted);\n                        let x1 = ps[0], y1 = ps[1];\n                        let x2 = ps[6], y2 = ps[7];\n                        let x3 = ps[2], y3 = ps[3];\n\n                        let w1 = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n                        let h1 = Math.sqrt((x3 - x1) * (x3 - x1) + (y3 - y1) * (y3 - y1));\n                        // need to get the corresponding UV value\n                        for(var j = 0; j < polygons.length; j++) {\n                            let polygon = polygons[j];\n                            if(this.currentVbb.isFull(polygon.vertices.length)) {\n                                this.flushBuffer(0, true);\n                            }\n                            let vbase = this.currentVbb.vcount;\n                            for(var i = 0; i < polygon.vertices.length; i+=2) {\n                                let x0 = polygon.vertices[i];\n                                let y0 = polygon.vertices[i+1];\n                                let dy = distance(x0, y0, x1, y1, x2, y2);\n                                let dx = distance(x0, y0, x1, y1, x3, y3);\n\n                                let u = uv[0] + (uv[4] - uv[0]) * (dx / w1);\n                                let v = uv[1] + (uv[5] - uv[1]) * (dy / h1);\n                                this.currentVbb.addVertexMSDFPolytriangle(x0, y0, u, v, this.getFillColor(), this.dbId, this.currentLayerId, 0);\n                            }\n                            this.currentVbb.addIndices(polygon.indices, vbase);\n                        }\n\n                        this.currentImage = this.fontAtlas.pages[char.page];\n                        return true;\n                    } else if (precheckResult.needCancel) {\n                        return true;\n                    }\n                }\n\n                if(this.currentVbb.isFull(4)) {\n                    this.flushBuffer(0, true);\n                }\n                let vbase = this.currentVbb.vcount;\n                var count =  points.length/2;\n                for(let i = 0; i < count; i++) {\n                    this.currentVbb.addVertexMSDFPolytriangle(ps[i*2], ps[i*2+1],uv[i*2], uv[i*2+1], this.getFillColor(), this.dbId, this.currentLayerId, 0);\n                }\n\n                this.currentVbb.addIndices([0,2,1, 0,2,3], vbase);\n                this.currentImage = this.fontAtlas.pages[char.page];\n\n                return true;\n            }\n\n        } else {\n            return false;\n        }\n    }\n\n    beginPath(character, x, y, font, fontSize) {\n        if (this.inSmallImageRendering) {\n            // ignore text use case\n            if (typeof character !== \"string\") {\n                this.canvasContext._originalbeginPath();\n            }\n            return;\n        }\n\n        this.updateDBId();\n\n        if (typeof character === \"string\" && font && fontSize) {\n            if(this.fontAtlas && this.drawMSDFText(character, x, y, font, fontSize)) {\n                this.skipPath = true;\n            } else {\n                if(this.usingTextLayer === true) {\n                    this.skipPath = true;\n                } else {\n                    this._beginTextChar(character, x, y, font, fontSize);\n                }\n            }\n        } else {\n            this.skipPath = false;\n            this.isFontChar = false;\n            this.cachedGlyph = null;\n        }\n\n        if (this.skipPath)\n            this._curPath = null;\n        else {\n            this._curPath = new Path2D(this.isFontChar ? 0.0001 : this.precisionTolerance);\n\n            // Apply custom tess params (if specified)\n            this._curPath.setTessParams(this.tessParams);\n        }\n    }\n\n    setMiterLine(isMiterLine) {\n        this._curPath.isMiterLine = isMiterLine;\n    }\n\n    closePath() {\n        if (this.inSmallImageRendering) {\n            this.canvasContext._originalclosePath();\n            return;\n        }\n\n\n        if (this.skipPath)\n            return;\n\n        this._curPath.closePath();\n        this.cachedGlyph = null;\n    }\n\n    moveTo(x, y) {\n        if (this.inSmallImageRendering) {\n            // snap to pixel so that axis-aligned rectangles do not trigger antialiasing\n            const p = this.snapToPixel(x, y);\n            this.canvasContext._originalmoveTo(p[0], p[1]);\n            return;\n        }\n\n\n        if (this.skipPath)\n            return;\n\n        if (!this._curPath)\n            this.beginPath();\n\n        let xform = this.getCurrentTransform();\n\n        this._curPath.moveTo(this.tx(x, y, xform), this.ty(x, y, xform));\n    }\n\n    lineTo(x, y) {\n        if (this.inSmallImageRendering) {\n            // snap to pixel so that axis-aligned rectangles do not trigger antialiasing\n            const p = this.snapToPixel(x, y);\n            this.canvasContext._originallineTo(p[0], p[1]);\n            return;\n        }\n\n\n        if (this.skipPath)\n            return;\n\n        let xform = this.getCurrentTransform();\n\n        this._curPath.lineTo(this.tx(x, y, xform), this.ty(x, y, xform));\n    }\n\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        if (this.inSmallImageRendering) {\n            // forward without special treatment - seems unlikely to be used between image strips\n            this.canvasContext._originalarc(x, y, radius, startAngle, endAngle, anticlockwise);\n            return;\n        }\n\n\n        if (this.skipPath)\n            return;\n\n        //TODO: transform\n\n        this._curPath.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n    }\n\n    arcTo(x1, y1, x2, y2, radius) {\n        if (this.inSmallImageRendering) {\n            // forward without special treatment - seems unlikely to be used between image strips\n            this.canvasContext._originalarcTo(x1, y1, x2, y2, radius);\n            return;\n        }\n\n\n        if (this.skipPath)\n            return;\n\n        let xform = this.getCurrentTransform();\n\n        this._curPath.arcTo(this.tx(x1, y1, xform), this.ty(x1, y1, xform),\n                            this.tx(x2, y2, xform), this.ty(x2, y2, xform),\n                            this.scaleValue(radius, xform));\n    }\n\n    quadraticCurveTo(cp1x, cp1y, x, y) {\n        if (this.inSmallImageRendering) {\n            // forward without special treatment - seems unlikely to be used between image strips\n            this.canvasContext._originalquadraticCurveTo(cp1x, cp1y, x, y);\n            return;\n        }\n\n\n        if (this.skipPath)\n            return;\n\n        let xform = this.getCurrentTransform();\n\n        this._curPath.quadraticCurveTo(this.tx(cp1x, cp1y, xform), this.ty(cp1x, cp1y, xform),\n                                       this.tx(x, y, xform), this.ty(x, y, xform));\n    }\n\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        if (this.inSmallImageRendering) {\n            // forward without special treatment - seems unlikely to be used between image strips\n            this.canvasContext._originalbezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n            return;\n        }\n\n\n        if (this.skipPath)\n            return;\n\n        let xform = this.getCurrentTransform();\n\n        this._curPath.bezierCurveTo(this.tx(cp1x, cp1y, xform), this.ty(cp1x, cp1y, xform),\n                                    this.tx(cp2x, cp2y, xform), this.ty(cp2x, cp2y, xform),\n                                    this.tx(x, y, xform),       this.ty(x, y, xform) );\n    }\n\n    ellipse(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw) {\n        if (this.inSmallImageRendering) {\n            // forward without special treatment - seems unlikely to be used between image strips\n            this.canvasContext._originalellipse(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw);\n            return;\n        }\n\n\n        if (this.skipPath) {\n            return;\n        }\n\n        // TODO: We currently don't use ellipse() with a transform.\n        //       The current code only works for translation and uniform scale.\n        //       For rotation, startAngle/endAngle would change.\n        //       For flipping, ccw may change.\n        //       For skew, it gets really fun:\n        //        see https://math.stackexchange.com/questions/2068583/when-you-skew-an-ellipse-how-do-you-calculate-the-angle-of-rotation-and-the-new\n        let xform = this.getCurrentTransform();\n\n        this._curPath.ellipse(\n            this.tx(cx, cy, xform), this.ty(cx, cy, xform),\n            this.scaleValue(rx, xform),\n            this.scaleValue(ry, xform),\n            rotation,\n            startAngle,\n            endAngle,\n            ccw\n        );\n    }\n\n    rect(x, y, w, h) {\n        if (this.inSmallImageRendering) {\n            // snap to pixel so that axis-aligned rectangles do not trigger antialiasing\n            const p1 = this.snapToPixel(x, y);\n            const p2 = this.snapToPixel(x+w, y+h);\n            const wS = p2[0]-p1[0];\n            const hS = p2[1]-p1[1];\n            this.canvasContext._originalrect(p1[0], p1[1], wS, hS);\n            return;\n        }\n\n\n        if (this.skipPath)\n            return;\n\n        let xform = this.getCurrentTransform();\n\n        if (!this._curPath)\n            this.beginPath();\n\n        this._curPath.moveTo(this.tx(x,   y,   xform), this.ty(x,   y,   xform));\n        this._curPath.lineTo(this.tx(x+w, y,   xform), this.ty(x+w, y,   xform));\n        this._curPath.lineTo(this.tx(x+w, y+h, xform), this.ty(x+w, y+h, xform));\n        this._curPath.lineTo(this.tx(x, y+h,   xform), this.ty(x, y+h,   xform));\n        this._curPath.closePath();\n    }\n\n    fill(...args) {\n        if (this.inSmallImageRendering) {\n            // let the original canvas do its job\n            if (args.length>0 && typeof args[0] === \"string\") {\n                // arg[0] is fillrule, ignore possible extra custom arguments\n                this.canvasContext._originalfill(args[0]);\n            } else {\n                // no or only custom arguments\n                this.canvasContext._originalfill();\n            }\n            return;\n        }\n\n\n        //Special flag passed to us by customization in the pdf.js library,\n        //telling us to skip the antialiasing for polygons that are both filled and stroked\n        let isFillStrokeCombo = false;\n        let fillRule = 'nonzero';\n        if (args.length) {\n            let lastArg = args[args.length-1];\n            if (typeof lastArg === \"boolean\") {\n                isFillStrokeCombo = lastArg;\n            }\n\n            if (typeof args[0] === \"string\") {\n                fillRule = args[0];\n            }\n        }\n\n        if (this.isFontChar && !this.cachedGlyph) {\n            this.glyphCache[this.hashKey] = this._curPath;\n            this.cachedGlyph = this._curPath;\n            this.cachedGlyph.isFontChar = true;\n        }\n\n        this.isFontChar = false;\n\n        if (this.cachedGlyph) {\n            this.cachedGlyph.fill(this, this.getFillColor(), this.dbId, this.currentLayerId, this._curClip, true);\n        } else {\n            this._curPath && this._curPath.fill(this, this.getFillColor(), this.dbId, this.currentLayerId, this._curClip, false, isFillStrokeCombo, fillRule);\n        }\n\n        this.skipPath = false;\n\n        //this._curClip = null;\n        //lmvContext._curPath = null;\n    }\n\n    stroke() {\n        if (this.inSmallImageRendering) {\n            // let the original canvas do its job\n            this.canvasContext._originalstroke();\n            return;\n        }\n\n        if (this.isFontChar && !this.cachedGlyph) {\n            this.glyphCache[this.hashKey] = this._curPath;\n            this.cachedGlyph = this._curPath;\n            this.cachedGlyph.isFontChar = true;\n        }\n\n        this.updateLineDashStyle();\n        this.isFontChar = false;\n\n        // LineShader uses negative lineWidths to indicate screen-space line widths. Note that this.canvasContext.lineWidth does not allow negative values.\n        // Therefore, we apply the sign separately.\n        const sign = this.isScreenSpace ? -1.0 : 1.0;\n\n        if (this.cachedGlyph) {\n            this.cachedGlyph.stroke(this, sign * this.scaleValue(this.canvasContext.lineWidth), this.getStrokeColor(), this.dbId, this.currentLayerId, this._curClip, true, this.lineStyle, this.canvasContext.lineCap);\n        } else {\n            this._curPath && this._curPath.stroke(this, sign * this.scaleValue(this.canvasContext.lineWidth), this.getStrokeColor(), this.dbId, this.currentLayerId, this._curClip, false, this.lineStyle, this.canvasContext.lineCap);\n        }\n\n        this.skipPath = false;\n\n        //lmvContext._curPath = null;\n    }\n\n    clip(param1, param2) {\n        if (this.inSmallImageRendering) {\n            // let the original canvas do its job\n            this.canvasContext._originalclip(param1);\n            return;\n        }\n\n\n        if (param2 !== undefined && param1 !== undefined) {\n            this._curClip = param1;\n            console.log(\"Probably unsupported use case\");\n        } else {\n\n            //The clip region is also affected by any existing clip region,\n            //i.e. we have to clip the clip.\n            if (this._curClip) {\n                this._curClip = this._curClip.clip(this._curPath, param1);\n            } else {\n                this._curClip = this._curPath;\n            }\n\n            this._curPath = null;\n        }\n\n        //console.log(\"CLIP\", param1, param2);\n    }\n\n    strokeText(text, x, y, maxWidth, font, fontSize) {\n\n        let ctx = this.canvasContext;\n        ctx.save();\n        ctx.translate(x, y);\n\n        this.fontEngine.drawText(this, text, 0, 0, font, fontSize);\n        this.stroke();\n\n        ctx.restore();\n    }\n\n    fillText(text, x, y, maxWidth, font, fontSize) {\n\n        let ctx = this.canvasContext;\n        ctx.save();\n        ctx.translate(x, y);\n\n        this.fontEngine.drawText(this, text, 0, 0, font, fontSize);\n        this.fill();\n        //this.stroke();\n\n        ctx.restore();\n    }\n\n    getRotationAndScale(xform) {\n        _mtx4.elements[0] = xform[0];\n        _mtx4.elements[1] = xform[1];\n        _mtx4.elements[4] = xform[2];\n        _mtx4.elements[5] = xform[3];\n        _mtx4.elements[12] = xform[4];\n        _mtx4.elements[13] = xform[5];\n        _mtx4.decompose(_offset, _quat, _scale);\n\n        //Derive the rotation angle by converting the quaternion to axis-angle.\n        let s = Math.sqrt(1.0 - _quat.w * _quat.w);\n        _axis.set(_quat.x / s, _quat.y / s, _quat.z / s);\n        let angle = 2.0 * Math.acos(Math.max(Math.min(1,_quat.w), -1));\n        //Take care to negate the angle if the rotation axis is into the page.\n        if (_quat.z < 0) {\n            angle = -angle;\n        }\n\n        //Angle needs to be in the range 0-2pi for use by addTextureQuad below,\n        //while input has domain [-pi, pi].\n        if (angle < 0) {\n            angle += 2 * Math.PI;\n        }\n\n        return {\n            angle,\n            scale: _scale\n        };\n    }\n\n    drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n\n        if (this.inSmallImageRendering) {\n            let fourParam = false;\n            if (dx === undefined) {\n                // 2 or 4 param call (drawImage(image, dx, dy) or drawImage(image, dx, dy, dWidth, dHeight))\n                // -> move data into the correct variables\n                dx = sx;\n                dy = sy;\n                dWidth = sWidth;\n                dHeight = sHeight;\n                fourParam = true;\n            }\n\n            if (dWidth === undefined) {\n                // dWidth still undefined -> 2 param call (drawImage(image, dx, dy))\n                // -> move data into the correct variables and fill in image dimensions\n                dx = sx;\n                dy = sy;\n                dWidth = image.width;\n                dHeight = image.height;\n                // treat it as 4-param call later since we tamper with the dimensions\n                fourParam = true;\n            }\n\n            const p1 = this.snapToPixel(dx, dy);\n            const p2 = this.snapToPixel(dx+dWidth, dy+dHeight);\n            const w = p2[0]-p1[0];\n            const h = p2[1]-p1[1];\n            if (fourParam) {\n                this.canvasContext._originaldrawImage(image, p1[0], p1[1], w, h);\n            } else {\n                this.canvasContext._originaldrawImage(image, sx, sy, sWidth, sHeight, p1[0], p1[1], w, h);\n            }\n            return;\n        }\n\n        let clip = this._curClip;\n\n        if (image.width === 0 || image.height === 0) {\n            console.warn(\"Zero size image, skipping\");\n            return;\n        }\n\n        const xform = this.getCurrentTransform();\n        const { angle, scale } = this.getRotationAndScale(xform);\n\n        if (dx === undefined) {\n            dx = sx;\n            dy = sy;\n            dWidth = sWidth;\n            dHeight = sHeight;\n        }\n\n        if (dWidth === undefined) {\n            dWidth = image.width;\n            dHeight = image.height;\n        }\n\n        if (!dWidth) {\n            console.warn(\"Zero size image, skipping\");\n            return;\n        }\n\n//console.log(\"Draw image\", dWidth, dHeight);\n\n        if (clip) {\n            // if a clipping path is specified we will render the image with the clipping polygon and\n            // not with a quad\n\n            const x1 = this.tx(dx, dy);\n            const y1 = this.ty(dx, dy);\n            const x2 = this.tx(dx + dWidth, dy);\n            const y2 = this.ty(dx + dWidth, dy);\n            const x3 = this.tx(dx + dWidth, dy + dHeight);\n            const y3 = this.ty(dx + dWidth, dy + dHeight);\n            const x4 = this.tx(dx, dy + dHeight);\n            const y4 = this.ty(dx, dy + dHeight);\n\n            // compute transformation from uv to page space:\n            // straight-forward solution without y-flip should read as\n            //   const uv2page = [ x2-x1, y2-y1, x4-x1, y4-y1, x1, y1 ];\n            // but webgl uvs have [0, 0] at lower left corner while pdf images have [0, 0] at upper left corner\n            // pdf.js calls drawImage() with image convention, so the flip needs to get accounted for here:\n            // [0, 0] -> [x4, y4]; [1, 0] -> [x3, y3]; [1, 1] -> [x2, y2]; [0, 1] -> [x1, y1]\n            const uv2page = [ x3-x4, y3-y4, x1-x4, y1-y4, x4, y4 ];\n            // now invert uv2page to get from page to uv space\n            const page2uv = LmvCanvasContext.inverseTransform(uv2page);\n\n            let color = {\n                image: image,\n                imageTransform: page2uv\n            };\n\n            // the clipping path might be larger than the image so we need to clip it with the image quad\n            // to avoid repetition\n            let imageClip = new Path2D(this.precisionTolerance);\n            imageClip.moveTo(x1, y1);\n            imageClip.lineTo(x2, y2);\n            imageClip.lineTo(x3, y3);\n            imageClip.lineTo(x4, y4);\n            imageClip.closePath();\n\n            clip.fill(this, color, this.dbId, this.currentLayerId, imageClip, false, false);\n        } else {\n            //Get the transformed page space image center\n            let cx = this.tx(dx + dWidth/2, dy + dHeight/2);\n            let cy = this.ty(dx + dWidth/2, dy + dHeight/2);\n\n            //Get scaled width/height. Note these scalings can result in negative numbers\n            let w = dWidth * scale.x * this.toPageUnits;\n            let h = -dHeight * scale.y * this.toPageUnits; //Image input is y-down, so we build in a y-inversion\n\n            this.flushBuffer(0, true);\n            this.currentVbb.addTexturedQuad(cx, cy, w, h, angle, 0xffff00ff, 0, this.currentLayerId, 0);\n            this.currentImage = image;\n            this.flushBuffer(0, true, QUAD_TEXTURE);\n        }\n    }\n\n    /**\n     * Mapping back the reference object to its value, and loop 1 level in\n     * @param {Object} properties\n     */\n    _processProperties(properties) {\n        if(LmvCanvasContext.isRef(properties)) {\n            properties = this.pdfRefMap[LmvCanvasContext.refKey(properties)];\n        }\n\n        for(let key in properties) {\n            if(LmvCanvasContext.isRef(properties[key])) {\n                properties[key] = this.pdfRefMap[LmvCanvasContext.refKey(properties[key])];\n            }\n        }\n        return properties;\n    }\n\n    beginMarkedContent(properties) {\n        if(properties) {\n            properties = this._processProperties(properties);\n        }\n\n        // Revit will provided tag as number\n        let tag = properties.name || properties.DBID;\n        if(!isNaN(tag)) {\n            this.taggedId = parseInt(tag);\n        } else {\n            this.taggedId = null;\n        }\n\n        if(this.taggedId !== null && this.dbId !== this.taggedId) {\n            this.updateDBId();\n        }\n\n        if(properties.VP)\n            this.currentVpId = this.viewportCounter++;\n\n        this.ocgStack.push({\n            taggedId: this.taggedId,\n            viewPortId: this.currentVpId\n        });\n    }\n\n    beginMarkedContentProps(tag, properties) {\n        if(properties) {\n            properties = this._processProperties(properties);\n        }\n\n        if(tag === \"OC\") {\n            var layerId = this.layers[LmvCanvasContext.getLayerKey(properties)];\n            if(layerId === undefined) {\n                // VIZX-219: continue to use current layer if the layer is not found\n                layerId = this.currentLayerId;\n            }\n            this.currentLayerId = layerId;\n\n            this.ocgStack.push({\n                layerId: this.currentLayerId,\n            });\n        } else {\n            if(!isNaN(tag)) {\n                this.taggedId = parseInt(tag);\n                if(this.dbId !== this.taggedId) {\n                    this.updateDBId();\n                }\n            }\n            if(properties ) {\n                if(properties.VP)\n                    this.currentVpId = this.viewportCounter++;\n\n                this.ocgStack.push({\n                    viewPortId: this.currentVpId,\n                    taggedId: this.taggedId,\n                });\n            } else {\n                this.ocgStack.push({\n                });\n            }\n        }\n    }\n\n    endMarkedContent() {\n        if (this.ocgStack.length > 0) {\n            this.ocgStack.pop();\n        }\n\n        const findLast = (key) => {\n            for (let i = this.ocgStack.length-1; i >= 0; --i) {\n                if (key in this.ocgStack[i]) {\n                    return this.ocgStack[i][key];\n                }\n            }\n            return null;\n        };\n\n        // Assign last used layer, taggedId and vpId\n        let prevLayerId = findLast('layerId');\n        let prevVpId = findLast('viewPortId');\n        let prevTaggedId = findLast('taggedId');\n\n        this.currentLayerId = (prevLayerId !== null) ? prevLayerId : this.defaultLayerId;\n        this.currentVpId = (prevVpId !== null) ? prevVpId : this.defaultVPId;\n        let tagChanged = prevTaggedId !== this.taggedId;\n        this.taggedId = prevTaggedId;\n        if (tagChanged) {\n            this.updateDBId();\n        }\n    }\n\n    setLineStyleParam(param) {\n        if(!this.lineStyleInitialized) {\n            // Add those default definition in, to keep the app constent.\n            let exH = avp.LineStyleDefs.length;\n            let exW = 1;\n            for(var i = 0; i < avp.LineStyleDefs.length; i++) {\n                exW = Math.max(avp.LineStyleDefs[i].def.length, exW);\n            }\n\n            let {tex, pw, lineStyleTex} = avp.createLinePatternTextureData(Math.max(param.width, exW), param.height + exH + 1);\n            this.lineStyleIndex = 0;\n            this.lineStylePw = pw;\n            this.lineStyleTexData = tex;\n            this.lineStyleTexture = lineStyleTex;\n            this.lineStyleIndexMap = {};\n\n            for(let i = 0; i < avp.LineStyleDefs.length; i++) {\n                this.addNewDashedLineStyle(avp.LineStyleDefs[i], 96);\n            }\n\n            // set the default value\n            this.lineStyle = 0;\n            this.lineStyleInitialized = true;\n        }\n    }\n\n    addNewDashedLineStyle(ls, dpi) {\n        let key = ls.def.join(\"/\");\n        if(this.lineStyleIndexMap[key] != undefined) {\n            return this.lineStyleIndexMap[key];\n        } else {\n            avp.createLinePatternForDef(ls, this.lineStyleTexData, this.lineStyleIndex, this.lineStylePw, dpi);\n            let index = this.lineStyleIndex;\n            this.lineStyleIndexMap[key] = index;\n            this.lineStyleIndex++;\n\n            return index;\n        }\n    }\n\n    setLineDash(def) {\n        if(!this.lineStyleInitialized) {\n            this.setLineStyleParam({width: 5, height: 4});\n        }\n\n        this.lineDashedDef = def;\n    }\n\n    createPattern(image, repetition) {\n        var pattern = this.canvasContext._originalcreatePattern(image, repetition);\n        pattern.image = image;\n        pattern.repetition = repetition;\n        pattern.isPattern = true;\n        return  pattern;\n    }\n\n    updateLineDashStyle() {\n        // need apply the transformation matrix to the dashed value\n        let def = this.lineDashedDef;\n\n        if(def) {\n            if(def.length > 0) {\n                let xform = this.getCurrentTransform();\n                let def1 = [];\n                for(var i = 0; i < def.length; i++) {\n                    let x = (def[i] * xform[0] + def[i] * xform[2]) * this.toPageUnits;\n                    x = parseFloat(x.toFixed(6));\n                    def1.push(x);\n                }\n                // 96 DPI was defined for lineStyleDef.js, and shader were expecting that value\n                // when we parse the pdf, the effective dpi need to be ==> 96 / 72 / this.toPageUnits\n                this.lineStyle = this.addNewDashedLineStyle({def: def1}, 96 / 72 / this.toPageUnits);\n            } else {\n                this.lineStyle = 0;\n            }\n        }\n        // In case of user directly controlled the line style\n        // Do not set lineStyle to 0 here.\n    }\n\n    setCircleInfo(circleInfo) {\n        this.circleInfo = circleInfo;\n    }\n\n    setCurrentOperatorIndex(index) {\n        const addPointBBox = function(bbox, x, y) {\n            bbox[0] = Math.min(bbox[0], x);\n            bbox[1] = Math.min(bbox[1], y);\n            bbox[2] = Math.max(bbox[2], x);\n            bbox[3] = Math.max(bbox[3], y);\n        };\n\n        const transformBBox = function(bbox, xform) {\n            let result = [1e10, 1e10, -1e10, -1e10];  // [minx, miny, maxx, maxy]\n            // xform uses the canvas context convention: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/transform\n            addPointBBox(result, bbox[0] * xform[0] + bbox[1] * xform[2] + xform[4], bbox[0] * xform[1] + bbox[1] * xform[3] + xform[5]);  // minx, miny\n            addPointBBox(result, bbox[0] * xform[0] + bbox[3] * xform[2] + xform[4], bbox[0] * xform[1] + bbox[3] * xform[3] + xform[5]);  // minx, maxy\n            addPointBBox(result, bbox[2] * xform[0] + bbox[1] * xform[2] + xform[4], bbox[2] * xform[1] + bbox[1] * xform[3] + xform[5]);  // maxx, miny\n            addPointBBox(result, bbox[2] * xform[0] + bbox[3] * xform[2] + xform[4], bbox[2] * xform[1] + bbox[3] * xform[3] + xform[5]);  // maxx, maxy\n            return result;\n        };\n\n        this.currentOpIndex = index;\n        if(this.circleInfo && this.circleInfo[index]) {\n            let xform = this.getCurrentTransform();\n            let x = this.tx(this.circleInfo[index][0], this.circleInfo[index][1], xform);\n            let y = this.ty(this.circleInfo[index][0], this.circleInfo[index][1], xform);\n\n            // Inject the center of the circle\n            const hiddenColor = 0x01ffffff; // Note that lineShader discards fully transparent fragments. Therefore, we use a white here with very small, but nonzero alpha.\n            let c = this.currentVbb.addVertexLine(x, y, 0, 0.0001, 0, 0, hiddenColor, this.dbId, this.currentLayerId, this.currentVpId);\n            this.currentVbb.finalizeQuad(c);\n        }\n        if (this.smallImageSequenceToCheck>=0) {\n            const sis = this.smallImageSequences[this.smallImageSequenceToCheck];\n            if (sis.start==index) {\n                // begin render into an actual canvas\n                this.inSmallImageRendering = true;\n\n                // compute actual area of interest in pixels (plus buffer)\n                const imgBBox = transformBBox(sis.bbox, this.viewport.transform);\n                const imgX = Math.floor(imgBBox[0]) - 1;\n                const imgY = Math.floor(imgBBox[1]) - 1;\n                const imgWidth = Math.ceil(imgBBox[2]-imgBBox[0]) + 2;\n                const imgHeight = Math.ceil(imgBBox[3]-imgBBox[1]) + 2;\n\n                // clear the area of interest and then fill with almost-transparent white\n                // this will prevent dark borders that result from the default transparent black background\n                this.canvasContext.save();\n                this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);\n                this.canvasContext._originalclearRect(imgX, imgY, imgWidth, imgHeight);\n                this.canvasContext.fillStyle = 'rgba(255, 255, 255, 0.005)';\n                this.canvasContext._originalfillRect(imgX, imgY, imgWidth, imgHeight);\n                this.canvasContext.restore();\n            } else if (sis.end==index) {\n                // stop render into an actual canvas and send completed image to the VBB\n                this.inSmallImageRendering = false;\n\n                // compute actual area of interest in pixels (plus buffer)\n                const imgBBox = transformBBox(sis.bbox, this.viewport.transform);\n                const imgX = Math.floor(imgBBox[0]) - 1;\n                const imgY = Math.floor(imgBBox[1]) - 1;\n                const imgWidth = Math.ceil(imgBBox[2]-imgBBox[0]) + 2;\n                const imgHeight = Math.ceil(imgBBox[3]-imgBBox[1]) + 2;\n\n                // copy the relevant part into a new canvas (our texture handling only supports full images, no partial images)\n                let imgCanvas = document.createElement(\"canvas\");\n                imgCanvas.width = imgWidth;\n                imgCanvas.height = imgHeight;\n                const imgCtx = imgCanvas.getContext(\"2d\");\n                imgCtx.drawImage(this.canvasContext.canvas, imgX, imgY, imgWidth, imgHeight, 0, 0, imgWidth, imgHeight);\n\n                // send to our renderer\n                this.canvasContext.save();\n                this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);\n                this.canvasContext.drawImage(imgCanvas, imgX, imgY, imgWidth, imgHeight);\n                this.canvasContext.restore();\n\n                // advance to next sequence\n                this.smallImageSequenceToCheck++;\n                if (this.smallImageSequenceToCheck>=this.smallImageSequences.length) {\n                    this.smallImageSequenceToCheck = -1;\n                }\n            }\n        }\n    }\n\n    setSmallImageSequences(smallImageSequences) {\n        if(smallImageSequences && smallImageSequences.length > 0) {\n            this.smallImageSequences = smallImageSequences;\n            this.smallImageSequenceToCheck = 0;\n        }\n    }\n\n    // Set custom tesselation params for bezier arcs (see Bezier.h)\n    // If undefined, we use the default settings.\n    setTessParams(tessParams) {\n        this.tessParams = tessParams;\n    }\n\n    finish() {\n        this.flushBuffer(0, true);\n        this.fontAtlas = null;\n    }\n\n    createViewPortData(matrix, units, precision) {\n        return {\n            \"units\": units || \"feet and inches\",\n            \"transform\": matrix,\n            \"geom_metrics\": this.initGeomMetrics(),\n            \"precision\": precision\n        };\n    }\n\n    isLMVCanvasContext() {\n        return true;\n    }\n\n    //Initializes a structure of counters used for statistical purposes and sheet content hash\n     initGeomMetrics() {\n        return {\n            \"arcs\": 0,\n            \"circles\": 0,\n            \"circ_arcs\": 0,\n            \"viewports\": 0,\n            \"clips\": 0,\n            \"colors\": 0,\n            \"db_ids\": 0,\n            \"dots\": 0,\n            \"fills\": 0,\n            \"layers\": 0,\n            \"line_caps\": 0,\n            \"line_joins\": 0,\n            \"line_patterns\": 0,\n            \"line_pat_refs\": 0,\n            \"plines\": 0,\n            \"pline_points\": 0,\n            \"line_weights\": 0,\n            \"links\": 0,\n            \"miters\": 0,\n            \"ptris\": 0,\n            \"ptri_indices\": 0,\n            \"ptri_points\": 0,\n            \"rasters\": 0,\n            \"texts\": 0,\n            \"strings\": []\n        };\n    }\n\n    // Needs to be called when using\n    //Copied from pdf.js, because our 2D renderer relies on mozCurrentTransform being available\n    addContextCurrentTransform() {\n\n        const ctx = this.canvasContext;\n\n        if (!ctx.mozCurrentTransform) {\n            ctx._originalSave = ctx.save;\n            ctx._originalRestore = ctx.restore;\n            ctx._originalRotate = ctx.rotate;\n            ctx._originalScale = ctx.scale;\n            ctx._originalTranslate = ctx.translate;\n            ctx._originalTransform = ctx.transform;\n            ctx._originalSetTransform = ctx.setTransform;\n            ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n            ctx._transformStack = [];\n            Object.defineProperty(ctx, 'mozCurrentTransform', {\n            get: function getCurrentTransform() {\n                return this._transformMatrix;\n            }\n            });\n            Object.defineProperty(ctx, 'mozCurrentTransformInverse', {\n            get: function getCurrentTransformInverse() {\n                var m = this._transformMatrix;\n                var a = m[0],\n                    b = m[1],\n                    c = m[2],\n                    d = m[3],\n                    e = m[4],\n                    f = m[5];\n                var ad_bc = a * d - b * c;\n                var bc_ad = b * c - a * d;\n                return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n            });\n            ctx.save = function ctxSave() {\n            var old = this._transformMatrix;\n            this._transformStack.push(old);\n            this._transformMatrix = old.slice(0, 6);\n            this._originalSave();\n            };\n            ctx.restore = function ctxRestore() {\n            var prev = this._transformStack.pop();\n            if (prev) {\n                this._transformMatrix = prev;\n                this._originalRestore();\n            }\n            };\n            ctx.translate = function ctxTranslate(x, y) {\n            var m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n            this._originalTranslate(x, y);\n            };\n            ctx.scale = function ctxScale(x, y) {\n            var m = this._transformMatrix;\n            m[0] = m[0] * x;\n            m[1] = m[1] * x;\n            m[2] = m[2] * y;\n            m[3] = m[3] * y;\n            this._originalScale(x, y);\n            };\n            ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n            ctx._originalTransform(a, b, c, d, e, f);\n            };\n            ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n            ctx._originalSetTransform(a, b, c, d, e, f);\n            };\n            ctx.rotate = function ctxRotate(angle) {\n            var cosValue = Math.cos(angle);\n            var sinValue = Math.sin(angle);\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n            this._originalRotate(angle);\n            };\n        }\n    }\n\n    // @returns {Boolean} - true: skip regular pdf.js logic, false: continue with regular pdf.js logic\n    beginChildGroup(group) {\n        // cannot handle groups with masks\n        if (group.smask) {\n            // set inChildGroup to false in case this is a nested group. It will get restore()'d to true when the nested group ends.\n            this.inChildGroup = false;\n            return false;\n        }\n        // TODO: LMV-5595 (isolated groups)\n\n        this.flushBuffer(0, true);\n\n        // how should we handle nested groups? We would have to apply a sequence of compositions and transparencies in a single rendering call.\n        // solution for now: only apply the topmost composition operation, but combine alpha\n        this.overrideCompositeOperation = this.canvasContext.globalCompositeOperation;\n        this.overrideAlpha *= this.canvasContext.globalAlpha;\n\n        this.inChildGroup = true;\n\n        return true;\n    }\n\n    // @returns {Boolean} - true: skip regular pdf.js logic, false: continue with regular pdf.js logic\n    // Matching beginChildGroup()/endChildGroup() pairs must return the same value to not confuse pdf.js!\n    endChildGroup(group) {\n        if (!this.inChildGroup) {\n            return false;\n        }\n\n        this.flushBuffer(0, true);\n\n        return true;\n    }\n\n    _getModelToViewportMatrix(vpData, isUnitsDefined) {\n        // This is the model to vp matrix without 300 / 72 viewport scaling\n        let vp = typeof vpData === 'string' ? JSON.parse(vpData) : vpData;\n\n        // Apply the viewport scale\n        if (isUnitsDefined) {\n            const vpMat = new Autodesk.Viewing.Private.LmvMatrix4(true).fromArray(vp);\n            const scale = new Autodesk.Viewing.Private.LmvMatrix4(true).makeScale(this.viewport.scale, this.viewport.scale, 1);\n\n            scale.multiply(vpMat);\n            vp = scale.elements;\n        }\n        return vp;\n    }\n\n}\n\n/**\n * Class used to normalize gradient data.\n */\nclass GradientData {\n    constructor(color) {\n        // RawData comes from PDFjs.\n        if (Object.prototype.hasOwnProperty.call(color, 'rawData')) {\n            const data = color.rawData;\n            this.type = data[1];\n            this.colorStops = data[3];\n            this.startPoint = data[4];\n            this.endPoint = data[5];\n            this.startRadius = data[6];\n            this.endRadius = data[7];\n        } else {\n            Object.assign(this, color);\n        }\n    }\n\n    /**\n     * Check if the GradientData is valid.\n     * @return {boolean} - true if valid.\n     */\n    isValid() {\n        if (!this.type || !this.startPoint || !this.endPoint || !this.colorStops) {\n            return false;\n        }\n\n        if (this.type === 'radial' && (this.startRadius === undefined || this.endRadius === undefined)) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Creates a temporary canvasGradient with all of the GradientData properties assigned to it.\n     * This is required when assigning a context's fillstyle.\n     * @param {CanvasRenderingContext2D} ctx - 2d render context.\n     * @returns {CanvasGradient} - containing the GradientData's properties\n     */\n    getFillStyle(ctx) {\n        if (!this.isValid()) {\n            return;\n        }\n        // This is a temporary gradient. It is only used to pass the gradient data's properties to the fillStyle.\n        const tempGradient = ctx.createLinearGradient(0, 0, 1, 1);\n        Object.assign(tempGradient, this);\n        return tempGradient;\n    }\n\n    /**\n     * Generate a CanvasGradient.\n     * @param {CanvasRenderingContext2D} ctx - 2d render context.\n     * @param {number[]} [startPoint] - modified start position\n     * @param {number[]} [endPoint] - modified end position\n     * @returns {CanvasGradient} - Canvas Gradient\n     */\n    generateCanvasGradient(ctx, startPoint, endPoint) {\n        if (!this.isValid()) {\n            return;\n        }\n        const type = this.type;\n        const colorStops = this.colorStops;\n        const p0 = startPoint || this.startPoint;\n        const p1 = endPoint || this.endPoint;\n        const r0 = this.startRadius;\n        const r1 = this.endRadius;\n        let grad = null;\n\n        if (type === 'axial' || type === 'linear') {\n            grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === 'radial') {\n            grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n        for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n            const c = colorStops[i];\n            grad.addColorStop(c[0], c[1]);\n        }\n\n        return grad;\n    }\n}\n","var lmv_poly2tri = require('poly2tri');\n\n// -------------------------------------------------------------------------Edge\n/**\n * Represents a simple polygon's edge\n * @constructor\n * @struct\n * @private\n * @param {Point} p1\n * @param {Point} p2\n * @throw {PointError} if p1 is same as p2\n */\nvar Edge = function Edge(p1, p2) {\n  this.p = p1;\n  this.q = p2;\n\n  if (p1.y > p2.y) {\n    this.q = p1;\n    this.p = p2;\n  } else if (p1.y === p2.y) {\n    if (p1.x > p2.x) {\n      this.q = p1;\n      this.p = p2;\n    } else if (p1.x === p2.x) {\n      throw new Error('poly2tri Invalid Edge constructor: repeated points!', [p1]);\n    }\n  }\n\n  if (!this.q._p2t_edge_list) {\n    this.q._p2t_edge_list = [];\n  }\n  this.q._p2t_edge_list.push(this);\n};\n\nlmv_poly2tri.SweepContext.prototype.initEdges = function(polyline, isOpen) {\n    var i, len = polyline.length, iEnd = isOpen ? polyline.length-1 : polyline.length;\n    for (i = 0; i < iEnd; ++i) {\n        this.edge_list.push(new Edge(polyline[i], polyline[(i + 1) % len]));\n    }\n};\n\nmodule.exports = lmv_poly2tri;","\n\nexport const DefaultTessParams = {\n    //How many forward iterations to use when approximating Bezier curves\n    //More iterations are needed in case the min_seg_len setting below is smaller\n    //relative to mesh size. However, the two numbers need to be tuned together\n    //so that NUM_ITERATIONS is enough to result in segment lengths desired.\n\n    //Note that those values are tuned for PDF rendering, where text characters\n    //are drawn one by one. If a long piece of text is drawn all at once, then\n    //its bounding box will be quite large, so the relative min_seg_len will also\n    //be too large and the characters will look coarse. In such cases, we will need\n    //to better estimate this by using e.g. the font height only.\n    numIterations: 100,\n\n    //What fraction of the bounding sbox should be the minimum length of\n    //a segment\n    minSegLenFraction: 0.05\n};\n\nexport function SetTesselationParams(num_iterations, min_seg_len_fraction) {\n    if (num_iterations)\n        DefaultTessParams.numIterations = num_iterations;\n\n    if (min_seg_len_fraction)\n        DefaultTessParams.minSegLenFraction = min_seg_len_fraction;\n}\n\nfunction distance(x1, y1, x2, y2) {\n    return Math.sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));\n}\n\nfunction adjustMaxdim(maxdim, segLength) {\n    if(maxdim > 4 * segLength && segLength > 0) {\n        var time = Math.sqrt(maxdim / segLength);\n        time = Math.min(4, time);\n        maxdim = segLength * time ;\n    }\n    return maxdim;\n}\n\nexport function TesselateCubic(ctx, px1, py1, px2, py2, px3, py3, px4, py4, maxdim, tessParams, isFont)\n{\n    tessParams = tessParams || DefaultTessParams;\n\n    var aproximateLength = distance(px1, py1, px2, py2) + distance(px2, py2, px3, py3) + distance(px3, py3, px4, py4);\n\n    // maxdim is the size of the bounds of the path\n    // but for individual path, we need to use aproximateLength\n    // we need to balance both performance and visual effect\n    // so we leverage both value and try to balance it.\n    if(!isFont) {\n        maxdim = adjustMaxdim(maxdim, aproximateLength);\n    }\n\n    //we will base the max number of segments to use for approximation\n    //on the bounds of the full line buffer contents\n    //TODO: as an improvement we could take the bounds of this particular curve\n    //with respect to the full bounds of the line buffer data.\n    maxdim = maxdim || (1/tessParams.minSegLenFraction);\n\n    //minimum length of tesselation segment\n    //set to 1/100 of the bounds\n    var minSegLen = maxdim * tessParams.minSegLenFraction;\n\n    //but for now we will iterate 100 times\n    var dt = 1.0 / tessParams.numIterations;\n\n    //double dt2 = dt*dt;\n    var dt3 = dt * dt * dt;\n\n    var pre1 = 3.0 * dt;\n    var pre2 = pre1 * dt;\n    var pre3 = pre2 + pre2;\n    var pre4 = 6.0 * dt3;\n\n    var temp1x = px1 - 2.0 * px2 + px3;\n    var temp1y = py1 - 2.0 * py2 + py3;\n    var temp2x = 3.0 * (px2 - px3) - px1 + px4;\n    var temp2y = 3.0 * (py2 - py3) - py1 + py4;\n\n    var fx    = px1;\n    var fy    = py1;\n    var dfx   = (px2 - px1) * pre1 + temp1x * pre2 + temp2x * dt3;\n    var dfy   = (py2 - py1) * pre1 + temp1y * pre2 + temp2y * dt3;\n    var ddfx  = temp1x * pre3 + temp2x * pre4;\n    var ddfy  = temp1y * pre3 + temp2y * pre4;\n    var dddfx = temp2x * pre4;\n    var dddfy = temp2y * pre4;\n\n    var error = 0.0;\n\n    // forward differencing loop\n    var tMax = 0|(1.0/dt - 0.5);\n    for (var t=0; t<tMax; t++)\n    {\n        fx   += dfx;\n        fy   += dfy;\n        dfx  += ddfx;\n        dfy  += ddfy;\n        ddfy += dddfy;\n        ddfx += dddfx;\n\n        error += Math.sqrt(dfx*dfx+dfy*dfy);\n\n        if (error >= minSegLen)  //add segment only if we have reached treshold length\n        {\n            // line to current\n            ctx.lineTo(fx, fy);\n            error = 0.0;\n        }\n    }\n\n    ctx.lineTo(px4, py4);\n}\n\nexport function TesselateQuad(ctx, px1, py1, px2, py2, px3, py3, maxdim, tessParams, isFont)\n{\n    tessParams = tessParams || DefaultTessParams;\n\n    var aproximateLength = distance(px1, py1, px2, py2) + distance(px2, py2, px3, py3);\n\n    // maxdim is the size of the bounds of the path\n    // but for individual path, we need to use aproximateLength\n    // we need to balance both performance and visual effect\n    // so we leverage both value and try to balance it.\n    if(!isFont) {\n        maxdim = adjustMaxdim(maxdim, aproximateLength);\n    }\n\n    //we will base the max number of segments to use for approximation\n    //on the bounds of the full line buffer contents\n    //TODO: as an improvement we could take the bounds of this particular curve\n    //with respect to the full bounds of the line buffer data.\n    maxdim = maxdim || (1/tessParams.minSegLenFraction);\n\n    //minimum length of tesselation segment\n    //set to a fraction of the bbox of the entire path (value chosen to work well for text at reasonable font size)\n    var minSegLen = maxdim * tessParams.minSegLenFraction;\n\n    //but for now we will iterate 100 times\n    var dt = 1.0 / tessParams.numIterations;\n\n    var dt2 = dt*dt;\n\n    var ax = px1 - 2.0*px2 + px3;        //replace 2* by addition?\n    var ay = py1 - 2.0*py2 + py3;        //replace 2* by addition?\n\n    var bx = 2.0*(px2-px1);\n    var by = 2.0*(py2-py1);\n\n    var fx   = px1;\n    var fy   = py1;\n    var dfx  = bx*dt + ax*dt2;\n    var dfy  = by*dt + ay*dt2;\n    var ddfx = 2.0*ax*dt2;\n    var ddfy = 2.0*ay*dt2;\n\n    var error = 0.0;\n\n    //forward differencing loop\n    var tMax = 0|(1.0/dt - 0.5);\n    for (var t=0; t<tMax; t++)\n    {\n        fx   += dfx;\n        fy   += dfy;\n        dfx  += ddfx;\n        dfy  += ddfy;\n\n        error += Math.sqrt(dfx*dfx + dfy*dfy);\n\n        if (error >= minSegLen)  // how many pixels should each line be?)\n        {\n            ctx.lineTo(fx, fy);\n            error = 0.0;\n        }\n    }\n\n    ctx.lineTo(px3, py3);\n}\n\n// Cubic Bezier for single points. Note that TesselateCubic is faster by using deltas.\n// Result is returned as a new {x,y} or written to optionalTarget.\nexport function getCubeBezierPoint(t, px1, py1, px2, py2, px3, py3, px4, py4, optionalTarget) {\n\n    var result = optionalTarget || {x: undefined, y: undefined};\n\n    let k = 1-t;\n\n    // Bernstein coefficients\n    let bp1 = k * k * k;\n    let bp2 = 3 * k * k * t;\n    let bp3 = 3 * k * t * t;\n    let bp4 = t * t * t;\n\n    result.x = bp1 * px1 + bp2 * px2 + bp3 * px3 + bp4 * px4;\n    result.y = bp1 * py1 + bp2 * py2 + bp3 * py3 + bp4 * py4;\n\n    return result;\n}\n\n\n","import lmv_poly2tri from \"./ThirdParty/lmv_poly2tri\";\nimport { IntervalTree } from \"./interval-tree\";\nimport { segmentsIntersect, ONE_INTERSECTION } from \"./x-line-line\";\nimport { UniquePointList } from \"./point-list\";\n\n\nfunction jitterPoints(pts) {\n\n    for (let i=0, iEnd=pts.length; i<iEnd; i++) {\n        pts[i].x += (Math.random()-0.5) * 1e-9;\n        pts[i].y += (Math.random()-0.5) * 1e-9;\n    }\n\n}\n\nfunction copyPoints(pts, bbox) {\n\n    //Moving poiints to be centered on the origin\n    //seems to improve triangulation success rate, or\n    //at least avoids some bugs in poly2yti\n\n    let sz = bbox.getSize(bbox instanceof THREE.Box3 ? new THREE.Vector3(): new THREE.Vector2());\n    let offsetx = bbox.min.x + sz.x * 0.5;\n    let offsety = bbox.min.y + sz.y * 0.5;\n    let scale = 2.0 / sz.length();\n\n    let pts2 = [];\n\n    for (let i=0, iEnd=pts.length; i<iEnd; i++) {\n        pts2.push({\n            x: (pts[i].x - offsetx) * scale,// + (Math.random()-0.5) * 1e-9,\n            y: (pts[i].y - offsety) * scale,// + (Math.random()-0.5) * 1e-9,\n            _triidx: i+1\n        });\n    }\n\n    return pts2;\n\n}\n\n\n//Represents a polygon with holes, and provides triangulation and mesh conversion utilities\nexport class ComplexPolygon {\n\n    constructor(uniquePoints, customInsidechecker, bbox) {\n        this.pts = uniquePoints;\n        this.contours = [];\n        this.customInsideChecker = customInsidechecker;\n        this.bbox = bbox;\n        this._tmpVec = bbox instanceof THREE.Box3 ? new THREE.Vector3() : new THREE.Vector2();\n    }\n\n    addContour(indices) {\n        this.contours.push(indices);\n    }\n\n    pointInContour(x, y, cntr) {\n        var yflag0, yflag1;\n        var vtx0X, vtx0Y, vtx1X, vtx1Y;\n\n        var inside_flag = false;\n\n        var pts = this.pts;\n\n        // get the last point in the polygon\n        vtx0X = pts[cntr[cntr.length-1]].x;\n        vtx0Y = pts[cntr[cntr.length-1]].y;\n\n        // get test bit for above/below X axis\n        yflag0 = (vtx0Y >= y);\n\n        for (var j= 0, jEnd=cntr.length; j<jEnd; ++j)\n        {\n            vtx1X = pts[cntr[j]].x;\n            vtx1Y = pts[cntr[j]].y;\n\n            yflag1 = (vtx1Y >= y);\n\n            // Check if endpoints straddle (are on opposite sides) of X axis\n            // (i.e. the Y's differ); if so, +X ray could intersect this edge.\n            // The old test also checked whether the endpoints are both to the\n            // right or to the left of the test point.  However, given the faster\n            // intersection point computation used below, this test was found to\n            // be a break-even proposition for most polygons and a loser for\n            // triangles (where 50% or more of the edges which survive this test\n            // will cross quadrants and so have to have the X intersection computed\n            // anyway).  I credit Joseph Samosky with inspiring me to try dropping\n            // the \"both left or both right\" part of my code.\n            if (yflag0 != yflag1)\n            {\n                // Check intersection of pgon segment with +X ray.\n                // Note if >= point's X; if so, the ray hits it.\n                // The division operation is avoided for the \">=\" test by checking\n                // the sign of the first vertex wrto the test point; idea inspired\n                // by Joseph Samosky's and Mark Haigh-Hutchinson's different\n                // polygon inclusion tests.\n                if (((vtx1Y-y)*(vtx0X-vtx1X) >=\n                        (vtx1X-x)*(vtx0Y-vtx1Y)) == yflag1)\n                {\n                    inside_flag = !inside_flag;\n                }\n            }\n\n            // move to the next pair of vertices, retaining info as possible\n            yflag0 = yflag1;\n            vtx0X = vtx1X;\n            vtx0Y = vtx1Y;\n        }\n\n        return inside_flag;\n    }\n\n\n    pointInPolygon(x, y) {\n        var inside = false;\n\n        for (var i=0; i<this.contours.length; i++) {\n\n            if (this.pointInContour(x, y, this.contours[i]))\n                inside = !inside;\n        }\n\n        return inside;\n    }\n\n    triangulate(options) {\n        try {\n            this.triangulateInternal(false, options);\n        } catch (e) {\n\n            if (e.message.indexOf(\"Collinear not supported!\") !== -1) {\n                try {\n                    this.triangulateInternal(true, options);\n                    //logger.log(\"Triangulation retry success.\");\n                } catch (e) {\n                    //logger.warn(\"Triangulation retry failed\", e);\n                    this.triangulationFailed = true;\n                }\n            } else {\n                //logger.warn(\"Triangulation failed\", e);\n                this.triangulationFailed = true;\n            }\n        }\n    }\n\n    createPointInPolygonChecker() {\n\n        let edges = [];\n\n        for (let i=0; i<this.contours.length; i++) {\n            let cntr = this.contours[i];\n\n            var len = cntr.length;\n            for (let k=0; k<len-1; k++) {\n                let e = {\n                    p1: cntr[k],\n                    p2: cntr[k+1]\n                };\n                edges.push(e);\n            }\n        }\n\n        let it = new IntervalTree(this.pts, edges, this.bbox);\n        it.build();\n        this.customInsideChecker = it;\n    }\n\n    /**\n     * @param {boolean} wantJitter\n     * @param {Object} options Options objects\n     * @param {boolean=false} options.skipOpenContour Flag indicating whether to skip triangulation for open polygons\n     */\n    triangulateInternal(wantJitter, inOptions = {}) {\n        const options = {\n            skipOpenContour: false,\n            ...inOptions\n        };\n\n        if (!this.contours.length) {\n            this.triangulationFailed = true;\n            this.indices = null;\n            return;\n        }\n\n        this.indices = [];\n\n        var _pts = copyPoints(this.pts, this.bbox);\n\n        if (wantJitter) {\n            jitterPoints(_pts);\n        }\n\n        var sweepCtx = new lmv_poly2tri.SweepContext([]);\n\n        sweepCtx.points_  = _pts;\n\n        for (let i=0; i<this.contours.length; i++) {\n            let cntr = this.contours[i];\n\n            //Contour is not closed\n            var isOpen = (cntr[0] !== cntr[cntr.length-1]);\n\n            if (isOpen && options.skipOpenContour)\n                continue;\n\n            var len = isOpen ? cntr.length : cntr.length - 1;\n            var edge = new Array(len);\n            for (var k=0; k<len; k++) {\n                edge[k] = _pts[cntr[k]];\n            }\n\n            sweepCtx.initEdges(edge, isOpen);\n        }\n\n        sweepCtx.triangulate();\n\n        this.processResult(sweepCtx);\n\n        this.triangulationFailed = !this.indices || !this.indices.length;\n\n    }\n\n    processResult(sweepCtx) {\n\n        //If the polygon has a lot of vertices, create\n        //an acceleration structure for point-in-polygon checks\n        //so we can filter the triangles faster.\n        if (this.pts.length > 10 && !this.customInsideChecker)\n            this.createPointInPolygonChecker();\n\n        let tris = sweepCtx.map_;\n        for (var i=0; i<tris.length; i++) {\n            var tpts = tris[i].points_;\n            var p0 = tpts[0];\n            var p1 = tpts[1];\n            var p2 = tpts[2];\n\n            var i0 = p0._triidx;\n            var i1 = p1._triidx;\n            var i2 = p2._triidx;\n\n            if (i0 && i1 && i2)\n                this.filterFace(i0-1, i1-1, i2-1);\n\n        }\n    }\n\n\n    filterFace(i0, i1, i2) {\n\n        var p0 = this.pts[i0];\n        var p1 = this.pts[i1];\n        var p2 = this.pts[i2];\n\n        var cx = (p0.x + p1.x + p2.x) / 3;\n        var cy = (p0.y + p1.y + p2.y) / 3;\n\n        let inside = this.customInsideChecker ? this.customInsideChecker.pointInPolygon(cx, cy) : this.pointInPolygon(cx, cy);\n\n        if (inside) {\n\n            var e1x = p1.x - p0.x;\n            var e1y = p1.y - p0.y;\n            var e2x = p2.x - p0.x;\n            var e2y = p2.y - p0.y;\n\n            var cross = e1x * e2y - e2x * e1y;\n\n            if (cross > 0) {\n                this.indices.push(i0, i1, i2);\n            } else {\n                this.indices.push(i0, i2, i1);\n            }\n\n        }\n    }\n\n    //Returns intersection points between the given line\n    //segment and the polygon's contours\n    findSegmentIntersections(ex1, ey1, ex2, ey2) {\n\n        if (!this.cachedEdges) {\n\n            this.cachedEdges = [];\n\n            for (let j=0; j<this.contours.length; j++) {\n                let cntr = this.contours[j];\n\n                for (let i=0; i<cntr.length-1; i++) {\n\n                    //Add quad for each face formed by the extruded contour\n                    let x1 = this.pts[cntr[i]].x;\n                    let y1 = this.pts[cntr[i]].y;\n                    let x2 = this.pts[cntr[i+1]].x;\n                    let y2 = this.pts[cntr[i+1]].y;\n\n                    let etmp = {\n                        v1 : { x:x1, y:y1 },\n                        v2 : { x:x2, y:y2 },\n                        dx: x2 - x1,\n                        dy: y2 - y1,\n                        length: Math.sqrt((x1-x2)**2 + (y1-y2)**2)\n                    };\n\n                    this.cachedEdges.push(etmp);\n                }\n            }\n        }\n\n        let e = {\n            v1 : { x:ex1, y:ey1 },\n            v2 : { x:ex2, y:ey2 },\n            dx: ex2 - ex1,\n            dy: ey2 - ey1,\n            length: Math.sqrt((ex1-ex2)**2 + (ey1-ey2)**2)\n        };\n\n        let precision = this.bbox.getSize(this._tmpVec).length() * 1e-4;\n\n        let res = [];\n\n        for (let i=0; i<this.cachedEdges.length; i++) {\n            let etmp = this.cachedEdges[i];\n            let xsect = segmentsIntersect(e, etmp, precision);\n\n            if (xsect && xsect.status === ONE_INTERSECTION) {\n                let pt = { x: xsect.e1[0], y : xsect.e1[1] };\n                pt.d = Math.sqrt((pt.x - ex1)**2 + (pt.y - ey1)**2);\n                res.push(pt);\n            }\n        }\n\n        if (res.length) {\n            //Sort in order along the input segment\n            res.sort((a, b) => a.d - b.d);\n\n            //Drop start and/or end points if they coincide with the segment start/end\n            if (res[0].d < precision) {\n                res.shift();\n            }\n\n            if (res.length && Math.abs(res[res.length-1].d - e.length) < precision) {\n                res.pop();\n            }\n        }\n\n        return res.length ? res : null;\n    }\n\n    //creates a vertex buffer containing a filled 2D polygon for visualization on the cut plane\n    //as 2D polygon mesh in the 3D model space\n    toPolygonMesh(packNormals) {\n\n        if (this.polygonMesh)\n            return this.polygonMesh;\n\n        var pts = this.pts;\n\n        var bg = new THREE.BufferGeometry();\n\n        var pos = new Float32Array(3*pts.length);\n        for (let j=0; j<pts.length; j++) {\n            pos[3*j] = pts[j].x;\n            pos[3*j+1] = pts[j].y;\n            pos[3*j+2] = 0;\n        }\n        bg.setAttribute(\"position\", new THREE.BufferAttribute(pos, 3));\n\n        var normal = packNormals ? new Uint16Array(2*pts.length) : new Float32Array(3*pts.length);\n\n        for (let j=0; j<pts.length; j++) {\n\n            if (packNormals) {\n                var pnx = (0/*Math.atan2(0, 0)*/ / Math.PI + 1.0) * 0.5;\n                var pny = (1.0 + 1.0) * 0.5;\n\n                normal[j*2] = (pnx * 65535)|0;\n                normal[j*2+1] = (pny * 65535)|0;\n            } else {\n                normal[3*j] = 0;\n                normal[3*j+1] = 0;\n                normal[3*j+2] = 1;\n            }\n        }\n\n        bg.setAttribute(\"normal\", new THREE.BufferAttribute(normal, packNormals ? 2 : 3));\n        if (packNormals) {\n            bg.attributes.normal.bytesPerItem = 2;\n            bg.attributes.normal.normalized = true;\n        }\n\n        var index = new Uint16Array(this.indices.length);\n        index.set(this.indices);\n\n        bg.setIndex(new THREE.BufferAttribute(index, 1));\n\n        bg.streamingDraw = true;\n        bg.streamingIndex = true;\n\n        this.polygonMesh = bg;\n\n        return bg;\n    }\n\n\n    //creates an extruded polygon 3d mesh\n    //with the given thickness (maxZ=0, minZ=-thickness)\n    toExtrudedMesh(thickness) {\n\n        if (this.extrudedMesh)\n            return this.extrudedMesh;\n\n        if (thickness === undefined)\n            thickness = 1;\n\n        //TODO: in case of failed triangulation\n        //we can still generate a tube mesh with just the sides, without top and bottom caps\n        if (!this.indices)\n            return null;\n\n        let vb = [];\n        let indices = [];\n        let iblines = [];\n        let vbase = 0;\n\n        //TODO: for better performance we can allocate ArrayBuffers up front with known\n        //sizes... once the logic works.\n\n        //Add the top and bottom polygons\n\n        //The top is just the already triangulated 2D polygon\n        //same as toPolygonMesh\n\n        let pts = this.pts;\n        for (let i=0; i<pts.length; i++) {\n            vb.push(pts[i].x, pts[i].y, 0);\n            vb.push(0,0,1);\n        }\n\n        let inds = this.indices;\n\n        for (let i=0; i<inds.length; i+=3) {\n            indices.push(inds[i], inds[i+1], inds[i+2]);\n        }\n\n        vbase += pts.length;\n\n        //The bottom is like the top, but mirrored.\n\n        for (let i=0; i<pts.length; i++) {\n            vb.push(pts[i].x, pts[i].y, -thickness);\n            vb.push(0,0,-1);\n        }\n\n        for (let i=0; i<inds.length; i+=3) {\n            indices.push(vbase + inds[i], vbase + inds[i+2], vbase + inds[i+1]);\n        }\n\n        vbase += pts.length;\n\n        //The sides -- each segment of the contours becomes a quad\n\n        let tmp = new THREE.Vector3();\n        let bbox = new THREE.Box3();\n\n        for (let j=0; j<this.contours.length; j++) {\n            let cntr = this.contours[j];\n\n            for (let i=0; i<cntr.length-1; i++) {\n\n                //Add quad for each face formed by the extruded contour\n                let x1 = this.pts[cntr[i]].x;\n                let y1 = this.pts[cntr[i]].y;\n                let z1 = 0;\n\n                tmp.set(x1, y1, z1);\n                bbox.expandByPoint(tmp);\n\n                let x2 = this.pts[cntr[i+1]].x;\n                let y2 = this.pts[cntr[i+1]].y;\n                let z2 = 0;\n\n                tmp.set(x2, y2, z2);\n                bbox.expandByPoint(tmp);\n\n                tmp.set(x1, y1, z1 - thickness);\n                bbox.expandByPoint(tmp);\n\n                //orthogonal to the face, will use for the normals\n                tmp.set(y2 - y1, x1 - x2, 0).normalize();\n\n                vb.push(x1, y1, z1,             tmp.x, tmp.y, tmp.z,\n                        x2, y2, z2,             tmp.x, tmp.y, tmp.z,\n                        x1, y1, z1 - thickness, tmp.x, tmp.y, tmp.z,\n                        x2, y2, z2 - thickness, tmp.x, tmp.y, tmp.z);\n\n                iblines.push(vbase, vbase+1, vbase, vbase+2, vbase+1, vbase+3, vbase+2, vbase+3);\n\n                indices.push(vbase, vbase+2, vbase+3,  vbase, vbase+3, vbase+1);\n\n                vbase += 4;\n            }\n        }\n\n        //Convert to mesh suitable for rendering\n        //TODO: As mentioned above, we can do this directly in the loop above\n        //for better performance.\n\n        let vbp = new Float32Array(vb.length);\n        vbp.set(vb);\n\n        let vbi = new Uint16Array(indices.length);\n        vbi.set(indices);\n\n        let vbili = new Uint16Array(iblines.length);\n        vbili.set(iblines);\n\n        let mdata = {\n            mesh: {\n                vb: vbp,\n                indices: vbi,\n                iblines: vbili,\n\n                vbstride: 6,\n                vblayout : {\n                    position : { offset: 0, itemSize: 3, bytesPerItem: 4},\n                    normal: { offset: 3, itemSize: 3, bytesPerItem: 4 },\n                },\n                boundingBox: bbox,\n                boundingSphere: { center: bbox.getCenter(new THREE.Vector3()),\n                                  radius: bbox.getSize(new THREE.Vector3()).length * 0.5 }\n            }\n        };\n\n        this.extrudedMesh = Autodesk.Viewing.Private.BufferGeometryUtils.meshToGeometry(mdata);\n\n        this.extrudedMesh.streamingDraw = true;\n        this.extrudedMesh.streamingIndex = true;\n\n        return this.extrudedMesh;\n    }\n\n    static FromClipperPaths(paths, bbox, scale) {\n\n        let ptList = new UniquePointList(bbox);\n        let complexPolygon = new ComplexPolygon(ptList.pts, null, bbox);\n        for (let path of paths) {\n            let cntr = [];\n            for (let i=0; i<path.length; i++) {\n                let pt = ptList.findOrAddPoint(path[i].X*scale, path[i].Y*scale);\n                cntr.push(pt.id);\n            }\n\n            //Clipper doesn't explicitly close its paths, so we do\n            cntr.push(cntr[0]);\n\n            complexPolygon.addContour(cntr);\n        }\n\n        return complexPolygon;\n    }\n\n}","\nimport { ComplexPolygon } from \"./complex-polygon\";\n\nexport function polygonArea(pts) {\n\n    if (pts.length < 3)\n        return 0;\n\n    let needsClose = false;\n    if (pts[0] !== pts[pts.length-1])\n        needsClose = true;\n\n    let total = 0;\n    for (let i=0, len=pts.length-1; i<len; i++) {\n        let v1 = pts[i];\n        let v2 = pts[i+1];\n        total += v1.x * v2.y - v2.x * v1.y;\n    }\n\n    if (needsClose) {\n        let v1 = pts[pts.length-1];\n        let v2 = pts[0];\n        total += v1.x * v2.y - v2.x * v1.y;\n    }\n\n    return total * 0.5;\n}\n\n\nlet v2 = new THREE.Vector2();\n\n\n//An intermediate complex polygon representation, used by the DCEL structure to compose and triangulate\n//complex polygons, and also to convert the polygon data to various visualization representations\nexport class ContourSet {\n\n    constructor() {\n        this.contours = [];\n        this.areas = [];\n        this.bbox = new THREE.Box2();\n\n        this.allPoints = this.pts = [];\n        this.allPointsMap = {};\n    }\n\n    addContour(verts, skipZeroAreas) {\n\n        this.polygon = null;\n        this.perimeterMem = undefined;\n\n        let area = polygonArea(verts);\n\n        if (area < 0) {\n            verts.reverse();\n            area = Math.abs(area);\n        }\n\n        let cntr = [];\n\n        verts.forEach( (v, i) => {\n\n            let id = v.id;\n\n            if (typeof id === \"undefined\") {\n                //Auto-assign unique vertex ID if not given -- this assumes the caller\n                //has cleaned up the vertex data, or the polygon is simple enough not to\n                //suffer from numeric issues.\n                id = (this.contours.length + \":\" + i);\n            }\n\n            let idx = this.allPointsMap[id];\n            if (idx === undefined) {\n                idx = this.allPoints.length;\n                this.allPoints.push(v);\n                this.allPointsMap[id] = idx;\n\n                v2.set(v.x, v.y);\n                this.bbox.expandByPoint(v2);\n            }\n            cntr.push(idx);\n        });\n\n        if (area === 0 && skipZeroAreas)\n            return;\n\n        this.contours.push(cntr);\n        this.areas.push(area);\n    }\n\n    addContourSet(cset) {\n\n        //TODO: this can be optimized to skip this pre-processing\n\n        let cntr = cset.contours[0];\n        let pts = cset.allPoints;\n\n        let ptlist = cntr.map(idx => pts[idx]);\n\n        this.addContour(ptlist);\n    }\n\n\n    triangulate(customInsideChecker) {\n\n        if (this.polygon)\n            return;\n\n        let pts = this.allPoints;\n\n        let polygon = new ComplexPolygon(pts, customInsideChecker, this.bbox);\n\n        polygon.contours = this.contours;\n\n        polygon.triangulate();\n\n        this.polygon = polygon;\n        this.triangulationFailed = this.polygon.triangulationFailed;\n    }\n\n    area() {\n        return this.areas[0];\n    }\n\n    areaNet() {\n        let total = this.areas[0];\n        for (let i=1; i<this.areas.length; i++)\n            total -= this.areas[i];\n        return total;\n    }\n\n    perimeter() {\n\n        if (this.perimeterMem)\n            return this.perimeterMem;\n\n        let total = 0;\n        let pts = this.contours[0];\n        for (let i=0, len=pts.length-1; i<len; i++) {\n            let v1 = pts[i];\n            let v2 = pts[i+1];\n            total += Math.sqrt((v1.x - v2.x) * (v1.x - v2.x) + (v1.y - v2.y) * (v1.y - v2.y));\n        }\n\n        this.perimeterMem = total;\n\n        return total;\n    }\n\n\n    getThemeColor() {\n        //returns a stable random-ish color value\n        //based on properties of the geometry,\n        //for use during colorized visualization of areas and volumes\n\n        let r = ((this.areas[0] * 100) % 17) / 16;\n        let g = (this.allPoints.length % 23) / 22;\n        let b = ((this.perimeterMem * 100) % 29) / 28;\n\n        return { r: r, g: g, b: b };\n    }\n\n    hash() {\n        let all = [];\n        this.contours.forEach(c => {\n            let vids = c.map(idx => this.allPoints[idx].id);\n            if (vids[0] === vids[vids.length-1])\n                vids.pop(); //remove last point that equals first point, since the same closed contour can use any of its points as a start point\n            vids.sort();\n            all.push(vids);\n        });\n        return JSON.stringify(all);\n    }\n\n\n    stitchContours() {\n\n        //invalidate this just in case something tries to use it...\n        //it makes no sense for open polylines anyway\n        this.areas = [];\n\n        let openCntrs = [];\n        for (var i=0; i<this.contours.length; i++) {\n            let cntr = this.contours[i];\n            if (cntr[0] !== cntr[cntr.length-1])\n                openCntrs.push(cntr);\n        }\n\n        if (!openCntrs.length)\n            return;\n\n\n        let didSomething = true;\n        while (didSomething) {\n\n            didSomething = false;\n\n            //Try to combine contours\n            let cntr_edge_table = {};\n            let contours = this.contours;\n\n            for (let i=0; i<contours.length; i++) {\n                let cntr = contours[i];\n\n                let start = cntr[0];\n                let end = cntr[cntr.length-1];\n\n                if (start === end)\n                    continue;\n\n                if (!cntr_edge_table[start])\n                    cntr_edge_table[start] = [-i-1];\n                else\n                    cntr_edge_table[start].push(-i-1);\n\n\n                if (!cntr_edge_table[end])\n                    cntr_edge_table[end] = [i];\n                else\n                    cntr_edge_table[end].push(i);\n            }\n\n            for (let p in cntr_edge_table) {\n                let entry = cntr_edge_table[p];\n\n                if (entry.length === 2) {\n                    let toerase = undefined;\n\n                    if (entry[0] < 0 && entry[1] < 0) {\n                        let c1 = -entry[0]-1; let c2 = -entry[1]-1;\n                        //join start point to startpoint\n                        contours[c2].shift();\n                        Array.prototype.push.apply(contours[c1].reverse(),contours[c2]);\n                        toerase = c2;\n                    }\n\n                    if (entry[0] < 0 && entry[1] > 0) {\n                        let c1 = -entry[0]-1; let c2 = entry[1];\n                        //join start point to endpoint\n                        contours[c2].pop();\n                        Array.prototype.push.apply(contours[c2], contours[c1]);\n                        toerase = c1;\n                    }\n\n                    if (entry[0] > 0 && entry[1] < 0) {\n                        let c1 = entry[0]; let c2 = -entry[1]-1;\n                        //join end point to startpoint\n                        contours[c1].pop();\n                        Array.prototype.push.apply(contours[c1], contours[c2]);\n                        toerase = c2;\n                    }\n\n                    if (entry[0] > 0 && entry[1] > 0) {\n                        let c1 = entry[0]; let c2 = entry[1];\n                        //join end point to endpoint\n                        contours[c1].pop();\n                        Array.prototype.push.apply(contours[c1], contours[c2].reverse());\n                        toerase = c2;\n                    }\n\n                    if (toerase !== undefined) {\n                        contours.splice(toerase, 1);\n                        didSomething = true;\n                    }\n                    break;\n                }\n            }\n\n        }\n\n    }\n\n\n    containsPointFrom(cs2) {\n\n        //Only need to check a single point from the interior of the\n        //potential hole. Make sure it's inside the triangulation and not on the edge\n        //to avoid numeric noise.\n        if (!cs2.polygon.indices || cs2.polygon.indices.length < 3)\n            return false;\n\n        let p0 = cs2.allPoints[cs2.polygon.indices[0]];\n        let p1 = cs2.allPoints[cs2.polygon.indices[1]];\n        let p2 = cs2.allPoints[cs2.polygon.indices[2]];\n\n        let cx = (p0.x + p1.x + p2.x) / 3;\n        let cy = (p0.y + p1.y + p2.y) / 3;\n\n        return this.polygon && this.polygon.pointInPolygon(cx, cy);\n    }\n\n\n    //creates a vertex buffer containing a filled 2D polygon for visualization on the cut plane\n    //as 2D polygon mesh in the 3D model space\n    //TODO: Use this directly from the this.polygon\n    toPolygonMesh(packNormals) {\n\n        return this.polygon.toPolygonMesh(packNormals);\n\n    }\n\n    //creates an extruded polygon 3d mesh\n    //with the given thickness (maxZ=0, minZ=-thickness)\n    //TODO: Use this directly from the this.polygon\n    toExtrudedMesh(thickness) {\n\n        return this.polygon.toExtrudedMesh(thickness);\n    }\n\n\n}\n\n\n\n\n","import { segmentsIntersect, pointOnLine } from \"./x-line-line\";\nimport { isZero, isEqual, TOL } from \"./fuzzy-math\";\nimport { ContourSet } from \"./contour-set\";\nimport { QuadTree } from \"./quad-tree\";\nimport { UniquePointList } from \"./point-list\";\n\nconst avp = Autodesk.Viewing.Private;\nconst logger = avp.logger;\n\nclass Vertex {\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n\n        this.edges = [];\n        this.dbIds = [];\n        this.dbIdsChanged = false;\n    }\n\n    isDegenerate() {\n        return this.edges.length < 2;\n    }\n\n    addEdge(de) {\n\n        //Make sure the same edge doesn't already exist\n        for (let i=0; i<this.edges.length; i++) {\n\n            let e = this.edges[i];\n\n            //We already have the exact same edge, return existing id\n            if (e.v1 === de.v1 && e.v2 === de.v2)\n                return e;\n        }\n\n        //Add the edge\n        this.edges.push(de);\n        return de;\n    }\n\n    removeEdge(de) {\n        let idx = this.edges.indexOf(de);\n        if (idx >= 0)\n            this.edges.splice(idx, 1);\n        else\n            logger.warn(\"Failed to find edge in vertex list\");\n    }\n\n    findEdgeTo(v) {\n        for (let i=0; i<this.edges.length; i++) {\n            let e = this.edges[i];\n            if (e.getOppositeVertex(this) ===  v)\n                return e;\n        }\n\n        return null;\n    }\n\n    //TODO: make use of this when removing redundant vertices\n    disconnect() {\n        for (let i=0; i<this.edges.length; i++) {\n            let e = this.edges[i];\n            e.getOppositeVertex(this).removeEdge(e);\n        }\n\n        let res = this.edges;\n        this.edges = [];\n\n        //Return the edges that got orphaned and need deletion\n        //from the parent structure\n        return res;\n    }\n\n    sortEdges() {\n\n        this.edges.sort((a, b) => {\n            let angle1 = a.angle;\n            if (a.v1 !== this) {\n                angle1 -= Math.PI;\n            }\n\n            let angle2 = b.angle;\n            if (b.v1 !== this) {\n                angle2 -= Math.PI;\n            }\n\n            return angle1 - angle2;\n        });\n\n    }\n\n    _canTraverse(e) {\n        //forward edge\n        if (e.v1 === this && !e.flagFwd) {\n            e.flagFwd = 1;\n            return true;\n        }\n\n        //reverse edge (points into this vertex)\n        if (e.v2 === this && !e.flagRev) {\n            e.flagRev = 1;\n            return true;\n        }\n\n        return false;\n    }\n\n    //Returns an edge that's not yet traversed during\n    //area finding\n    findUntraversedEdge() {\n        for (let i=0; i<this.edges.length; i++) {\n            let e = this.edges[i];\n\n            if (this._canTraverse(e))\n                return e;\n        }\n\n        return null;\n    }\n\n    //Assuming edges are already sorted,\n    //returns the edge that's immediately CCW to\n    //the given edge\n    findNextCCWEdge(e) {\n\n        let idx = this.edges.indexOf(e);\n\n        if (idx === -1) {\n            logger.error(\"This edge isn't mine.\");\n            return null;\n        }\n\n        //Dangling vertex\n        if (this.isDegenerate()) {\n            return null;\n        }\n/*\n        let idxNext = idx - 1;\n        if (idxNext < 0)\n            idxNext = this.edges.length -1;\n            */\n        let idxNext = (idx + 1) % this.edges.length;\n\n        let eNext = this.edges[idxNext];\n\n        if (this._canTraverse(eNext))\n            return eNext;\n\n        //logger.warn(\"Hmmm... Didn't find an edge to continue from here.\");\n        return null;\n    }\n\n}\n\n\nclass DirectedEdge {\n\n    constructor(v1, v2, id) {\n        let swap = false;\n\n        //Orient the edge so it has increasing dy and dx\n        if (v2.y < v1.y)\n            swap = true;\n        else if (v2.y === v1.y)\n            swap = (v2.x < v1.x);\n\n        //the coordinates stored in the edge\n        //might be slightly different from the vertex coordinates\n        //of the v1 and v2 vertices. The vertices are \"snapped\" to\n        //the nearest snap positin, while the edge coordinates are the \"original\" ones\n        //from the 3d mesh that generated the edge.\n        if (swap) {\n            this.v1 = v2;\n            this.v2 = v1;\n        } else {\n            this.v1 = v1;\n            this.v2 = v2;\n        }\n\n        this.dx = this.v2.x - this.v1.x;\n        this.dy = this.v2.y - this.v1.y;\n        this.length2 = this.dx * this.dx + this.dy * this.dy;\n        this.length = Math.sqrt(this.length2);\n        this.angle = Math.atan2(this.dy, this.dx);\n\n        if (this.angle < 0) {\n            if (isZero(this.angle))\n                this.angle = 0;\n            else if (isEqual(this.angle, -Math.PI))\n                this.angle = Math.PI;\n\n            if (this.angle < 0)\n                logger.warn(\"Unexpected edge slope <0 :\", this.angle);\n        }\n\n        //the edge index in the edge list of the parent data structure\n        this.id = id;\n\n        this.minx = Math.min(this.v1.x, this.v2.x);\n        this.miny = Math.min(this.v1.y, this.v2.y);\n        this.maxx = Math.max(this.v1.x, this.v2.x);\n        this.maxy = Math.max(this.v1.y, this.v2.y);\n\n\n        //traversal flags, set temporarily\n        //during graph tarversal\n        this.flagFwd = 0;\n        this.flagRev = 0;\n\n        this.dbIdsCached = null;\n    }\n\n    paramAlong(x, y) {\n        let dot = (x - this.v1.x) * this.dx + (y - this.v1.y) * this.dy;\n        return dot / this.length2;\n    }\n\n    getOppositeVertex(v) {\n        if (this.v1 === v)\n            return this.v2;\n        else if (this.v2 === v)\n            return this.v1;\n        else\n            logger.warn(\"Edge does not own this vertex.\");\n    }\n\n    getDbIds() {\n        //Return all dbIds that are common between the two\n        //vertices of the edge. Used when splitting edges\n        //to pass the information to new vertices\n\n        if (!this.v1.dbIdsChanged && !this.v2.dbIdsChanged) {\n            return this.dbIdsCached;\n        }\n\n        //Calculate intersection of the dbId arrays of\n        //the two vertices.\n        let res = [];\n        let idv1 = this.v1.dbIds;\n        let idv2 = this.v2.dbIds;\n        for (let i=0; i<idv1.length; i++) {\n            if (idv2.indexOf(idv1[i]) !== -1)\n                res.push(idv1[i]);\n        }\n\n        //Cache the result so we don't recompute unnecessarily\n        //This requires cooperation by the vertex object change flag.\n        this.dbIdsCached = res;\n        this.v1.dbIdsChanged = false;\n        this.v2.dbIdsChanged = false;\n\n        return res;\n    }\n}\n\n\n\n//doubly connected edge list\nexport class DCEL {\n\n\n    constructor(bbox, precisionTolerance) {\n\n        this.bbox = bbox;\n        this.boxSize = this.bbox.getSize(new THREE.Vector3()).length();\n\n        if (typeof precisionTolerance === \"number\") {\n            //Input is in model units, e.g. if model is in feet,\n            //precision tolerance has to be in feet\n            this.precisionTolerance = precisionTolerance;\n        } else {\n            this.precisionTolerance = TOL * this.boxSize;\n        }\n\n        this.edges = [];\n        this.verts = new UniquePointList(this.bbox, this.precisionTolerance, Vertex, true);\n\n        this.quadTreeEdges = new QuadTree(this.bbox.min.x, this.bbox.min.y, this.bbox.max.x, this.bbox.max.y, this.precisionTolerance);\n\n        this.nextEdgeId = 1;\n    }\n\n    _addVertex(px, py, dbIds) {\n        return this.verts.findOrAddPoint(px, py, dbIds);\n    }\n\n\n    splitEdge(de, points) {\n\n        let pts = [];\n\n        pts.push({\n            x: de.v1.x,\n            y:de.v1.y,\n            u:0\n        });\n\n        //Remember the originating objects for this edge, to set them on the\n        //resulting split edges\n        let dbIds = de.getDbIds();\n\n        for (let i=0; i<points.length; i+=2) {\n\n            let p = {\n                x: points[i],\n                y: points[i+1],\n                u: de.paramAlong(points[i], points[i+1])\n            };\n\n            if (isZero(p.u) || isEqual(p.u, 1))\n                continue;\n\n            pts.push(p);\n        }\n\n        //The intersection points were either on the beginning or on the end\n        //vertex of the edge, so splitting is not needed as it will result\n        //in a zero length edge.\n        if (pts.length === 1)\n            return;\n\n        pts.push({\n            x: de.v2.x,\n            y: de.v2.y,\n            u:1\n        });\n\n        pts.sort((a, b) => {\n            return a.u - b.u;\n        });\n\n        //Remove the source edge\n        this.removeDirectedEdge(de);\n\n        //Add all the pieces that the edge was split into\n        for (let i=1; i<pts.length; i++) {\n            this.addDirectedEdge(pts[i-1].x, pts[i-1].y, pts[i].x, pts[i].y, true, dbIds);\n        }\n    }\n\n    _enumNearEdges(de, cb) {\n\n        this.quadTreeEdges.enumNearItems(de, cb);\n    }\n\n    addDirectedEdge(x1, y1, x2, y2, skipSplitting, dbIds) {\n        let v1 = this._addVertex(x1, y1, dbIds);\n        let v2 = this._addVertex(x2, y2, dbIds);\n\n        if (v1 === v2) {\n            //logger.warn(\"zero length edge\");\n            return;\n        }\n\n        if (v1.findEdgeTo(v2)) {\n            //edge already exists\n            return;\n        }\n\n        let de = new DirectedEdge(v1, v2, this.nextEdgeId++);\n\n        let addedEdge = de.v1.addEdge(de);\n\n        //If the edge did not already exist...\n        if (addedEdge === de) {\n            de.v2.addEdge(de);\n\n            //Remember the unsnapped positions used for this edge\n            de.sourcePts = [x1, y1, x2, y2];\n\n            this.edges[de.id] = de;\n\n            this.quadTreeEdges.addItem(de);\n        } else {\n            //Edge is already in the graph, nothing to do\n            return addedEdge;\n        }\n\n        if (skipSplitting)\n            return addedEdge;\n\n        //Now make sure the new edge doesn't overlap or intersect existing edges\n        //by finding and splitting any intersecting edges\n        let myInts = [];\n        let otherInts = {};\n\n        this._enumNearEdges(de, (e) => {\n            let ints = segmentsIntersect(e, de, this.precisionTolerance);\n\n            if (!ints)\n                return;\n\n            //Existing edge was crossed by new edge -- split it\n            if (ints.e1 && ints.e1.length) {\n                otherInts[e.id] = ints.e1;\n            }\n\n            //New edge crossed existing edge -- remember the intersection point for later\n            if (ints.e2 && ints.e2.length) {\n                myInts.push.apply(myInts, ints.e2);\n            }\n\n        });\n\n        for (let id in otherInts) {\n            this.splitEdge(this.edges[parseInt(id)], otherInts[id]);\n        }\n\n        if (myInts.length)\n            this.splitEdge(de, myInts);\n\n        this.dirty = true;\n\n        return addedEdge;\n    }\n\n    removeDirectedEdge(de) {\n\n        de.v1.removeEdge(de);\n        de.v2.removeEdge(de);\n\n        this.edges[de.id] = undefined;\n\n        this.quadTreeEdges.deleteItem(de);\n    }\n\n    removeDanglingPolyline(startVertex) {\n\n        while (startVertex.edges.length === 1) {\n\n            let de = startVertex.edges[0];\n            let endVertex = de.getOppositeVertex(startVertex);\n            this.removeDirectedEdge(de);\n            startVertex = endVertex;\n        }\n\n    }\n\n    cleanupFlatEdges() {\n        //get rid of vertices that only have two parallel edges going into them\n\n        let removeList = [];\n\n        this.verts.forEach(v => {\n\n            if (!v)\n                return;\n\n            if (v.edges.length !== 2)\n                return;\n\n            let e1 = v.edges[0];\n            let e2 = v.edges[1];\n\n            //Detect co-linear edges\n            let angleDelta = Math.abs(e1.angle - e2.angle);\n            const ANGLE_TOLERANCE = 2e-3;\n            if (angleDelta < ANGLE_TOLERANCE || Math.abs(angleDelta - Math.PI) < ANGLE_TOLERANCE) {\n                removeList.push(v);\n            }\n\n            //Detect degenerate triangles\n            let v1 = e1.getOppositeVertex(v);\n            let v2 = e2.getOppositeVertex(v);\n            let eShared = v1.findEdgeTo(v2);\n\n            if (eShared) {\n                let area = 0.5 * Math.abs((e1.dx * e2.dy - e2.dx * e1.dy));\n                if (area < 1e-3) {\n                    removeList.push(v);\n                }\n            }\n\n            //TODO: more generic co-linearity and degeneracy heuristics...\n\n        });\n\n\n        //if (removeList.length)\n        //    logger.log(\"Redundant edges\", removeList.length);\n\n        for (let i=0; i<removeList.length; i++) {\n\n            let v = removeList[i];\n\n            if (v.edges.length !== 2) {\n                //logger.warn(\"Number of edges changed\");\n                continue;\n            }\n\n            let e1 = v.edges[0];\n            let e2 = v.edges[1];\n\n            let vOther1 = e1.getOppositeVertex(v);\n            let vOther2 = e2.getOppositeVertex(v);\n\n            this.removeDirectedEdge(e1);\n            this.removeDirectedEdge(e2);\n\n            this.verts.delete(v);\n\n            this.addDirectedEdge(vOther1.x, vOther1.y, vOther2.x, vOther2.y, true);\n        }\n\n        //Clean up again, until no more redundant vertices exist\n        if (removeList.length)\n            return this.cleanupFlatEdges();\n    }\n\n\n\n    _compactLists() {\n\n        this.verts.compact();\n\n\n        let edges = [];\n\n        for (let i=0, len=this.edges.length; i<len; i++) {\n            let e = this.edges[i];\n            if (!e)\n                continue;\n\n            e.oldid = e.id;\n            e.flagFwd = 0;\n            e.flagRev = 0;\n            e.id = edges.length;\n            edges.push(e);\n        }\n\n        this.edges = edges;\n    }\n\n\n    //converts closed areas to polygons with holes, in a way where\n    //holes themseves are also marked as separate polygons in their own\n    //right, thus filling the whole area (i.e. non-zero fill method).\n    _detectHolesNonZero(customInsideChecker) {\n\n        this.holes = [];\n\n        //Skip the very largest polygon, because that is\n        //the overall model perimeter\n        //TODO: This logic is Location Breakdown specific\n        this.outerPerimeter = this.closedAreas[this.closedAreas.length-1];\n        if (this.outerPerimeter)\n            this.outerPerimeter.triangulate();\n\n        for (let i=0, len=this.closedAreas.length-1; i<len; i++) {\n\n            let cs = this.closedAreas[i];\n\n            //detect if the polygon is actually a hole in a\n            //bigger exterior polygon\n            //The logic we use here: if a polygon contains\n            //any of the smaller polygons inside it, it is a hole of a bigger polygon\n            //If a polygon contains a polygon marked as a hole, then add the hole to it\n            //before triangulating.\n            //TODO: this can be optimized via spatial index if number of polygons becomes large\n            for (let j=i-1; j>=0; j--) {\n                let cs2 = this.closedAreas[j];\n\n                //Only need to check a single point from the interior of the\n                //potential hole. Make sure it's inside the triangulation and not on the edge\n                //to avoid numeric noise.\n                if (cs.containsPointFrom(cs2)) {\n                    if (cs2.isHole) {\n                        cs.addContourSet(cs2);\n                    } else {\n                        cs.isHole = true;\n                        this.holes.push(cs);\n                        break;\n                    }\n                }\n            }\n\n            //We added all the holes, now triangulate again with the holes in mind\n            if (!cs.isHole) {\n                cs.triangulate(customInsideChecker);\n            }\n\n        }\n\n\n        //Do a second pass over just the holes\n        //and convert each hole that contains a hole\n        //to a real polygon area.\n        //TODO: I don't really know if this is mathematically correct...\n        for (let i=0, len=this.holes.length; i<len; i++) {\n\n            let cs = this.holes[i];\n\n            cs.triangulate(customInsideChecker);\n\n            //If a hole contains a hole inside it, then it is\n            //no longer hole, mark both as processed\n            for (let j=i-1; j>=0; j--) {\n\n                let cs2 = this.holes[j];\n\n                if (cs2.holeProcessFlag)\n                    continue;\n\n                //Only need to check a single point from the interior of the\n                //potential hole. Make sure it's inside the triangulation and not on the edge\n                //to avoid numeric noise.\n                if (cs.containsPointFrom(cs2)) {\n                    cs.addContourSet(cs2);\n                    cs.isHole = false;\n                    cs2.holeProcessFlag = true;\n                }\n            }\n\n            //We added all the holes, now triangulate again with the holes in mind\n            if (!cs.isHole) {\n                cs.triangulate(customInsideChecker);\n            }\n\n        }\n\n        //Remove all holes from the list of polygons\n        let filteredNonHoles = [];\n        for (let i=0; i<this.closedAreas.length-1; i++) {\n            let cs = this.closedAreas[i];\n            if (cs.isHole)\n                continue;\n\n            cs.id = filteredNonHoles.length;\n            filteredNonHoles.push(cs);\n        }\n\n        this.closedAreas = filteredNonHoles;\n\n\n    }\n\n    _detectHolesEvenOdd(customInsideChecker) {\n\n        let allAreas = this.closedAreas;\n        if (this.openAreas && this.openAreas.length)\n            allAreas = allAreas.concat(this.openAreas);\n\n        if (!allAreas.length) {\n            this.closedAreas = [];\n            this.openAreas = null;\n            return;\n        }\n\n        //In the DCEL, each polygon outline or hole contour\n        //appears twice (due to the structure being doubly connected), so\n        //here we drop the twin polygon.\n        let cmap = {};\n        for (let i=0; i<allAreas.length; i++) {\n            let a = allAreas[i];\n            let hash = a.hash();\n            if (!cmap[hash])\n                cmap[hash] = a;\n        }\n\n        allAreas = Object.values(cmap);\n\n        //Make one giant complex polygon out of all the contours, and let\n        //it triangulate itself using its default even-odd fill rule\n        let csAll = new ContourSet();\n\n        for (let i=0; i<allAreas.length; i++) {\n            csAll.addContourSet(allAreas[i]);\n        }\n\n        csAll.triangulate(customInsideChecker || this.quadTreeEdges);\n\n        if (csAll.triangulationFailed) {\n            //OK, now we get desperate -- the above triangulation attempt\n            //of the whole thing as one failed, so we triangulate each\n            //area separately (together with areas that are roughly inside it),\n            //and filter that result based on even-odd inside checker.\n            this._detectHolesNonZero(customInsideChecker || this.quadTreeEdges);\n        } else {\n            this.closedAreas = [csAll];\n            this.openAreas = [];\n        }\n    }\n\n\n    finalize(useEvenOddFill, customInsideChecker) {\n\n        //Remove useless vertices\n        this.cleanupFlatEdges();\n\n        this._compactLists();\n\n        //Sort the edges of each vertex according to direction\n        this.verts.forEach(v => v.sortEdges());\n\n        //traverse the graph and build closed polygons\n        //by following the edges in a counterclockwise direction\n\n        let polygons = [];\n        let openPolygons = [];\n\n        this.verts.forEach(v => {\n            let e = v.findUntraversedEdge();\n\n            if (!e)\n                return;\n\n            let polygon = [v];\n\n            let vNext = e.getOppositeVertex(v);\n            do {\n                polygon.push(vNext);\n                e = vNext.findNextCCWEdge(e);\n                if (!e)\n                    break;\n                vNext = e.getOppositeVertex(vNext);\n            } while (vNext && vNext !== v);\n\n            if (vNext === v) {\n                polygon.push(v);\n                polygons.push(polygon);\n            } else {\n                openPolygons.push(polygon);\n            }\n        });\n\n        //logger.log(\"closed polygons:\", polygons.length);\n        //if (openPolygons.length)\n          //  logger.log(\"open polygons:\", openPolygons.length);\n\n        this.closedAreas = [];\n        for (let i=0, len=polygons.length; i<len; i++) {\n            let cs = new ContourSet();\n            cs.addContour(polygons[i]);\n            this.closedAreas.push(cs);\n        }\n\n        //Sort by increasing area, so that\n        //we discover potential polygon holes before we\n        //triangulate their bigger exterior outlines\n        this.closedAreas.sort((a, b) => {\n            return a.area() - b.area();\n        });\n\n\n        if (useEvenOddFill) {\n            this._detectHolesEvenOdd(customInsideChecker);\n        } else {\n            this._detectHolesNonZero(customInsideChecker);\n        }\n\n\n        //Put all open polygons into a single set of contours\n        //and combine as many as possible end to end to get\n        //a minimal number of open contours.\n        this.openAreas = [];\n        if (openPolygons.length) {\n            let openAreas = [];\n            let cs = new ContourSet();\n            for (let i=0, len=openPolygons.length; i<len; i++) {\n                cs.addContour(openPolygons[i]);\n            }\n            cs.stitchContours();\n            cs.triangulate();\n            openAreas.push(cs);\n            //logger.log(\"Stitched open polygons\", cs.contours.length);\n\n            this.openAreas = openAreas;\n        }\n\n    }\n\n\n    deleteEdgesOnLine(x1, y1, x2, y2) {\n\n        let v1Tmp = new Vertex(x1, y1);\n        let v2Tmp = new Vertex(x2, y2);\n        let deTmp = new DirectedEdge(v1Tmp, v2Tmp, -1);\n\n        //Find edges crossed by the given segment\n        let otherInts = {};\n\n        this._enumNearEdges(deTmp, e => {\n\n            let ints = segmentsIntersect(e, deTmp, this.precisionTolerance);\n\n            if (!ints)\n                return;\n\n            //Existing edge was crossed by new edge\n            if (ints.e1 && ints.e1.length) {\n                otherInts[e.id] = ints.e1;\n            }\n        });\n\n        //Remove the intersected edges, effectively\n        //joining all areas defined by those edges.\n        //This is brute force, in theory we can find all\n        //contour sets that own the intersected edges\n        //and update the triangulations, but it doesn't seem worth it\n        for (let sid in otherInts) {\n            let eid = parseInt(sid);\n            let edge = this.edges[eid];\n            this.removeDirectedEdge(edge);\n\n            //clean up any \"dangling\" vertices left by the edge removal.\n            //those are edges that are only connected to the deleted edge and nothing else\n            this.removeDanglingPolyline(edge.v1);\n            this.removeDanglingPolyline(edge.v2);\n        }\n\n        this.dirty = true;\n    }\n\n    //Given a rectangle, join all areas that intersect the rectangle\n    deleteEdgesInRectangle(x1, y1, x2, y2) {\n\n        let minx = Math.min(x1, x2);\n        let miny = Math.min(y1, y2);\n        let maxx = Math.max(x1, x2);\n        let maxy = Math.max(y1, y2);\n\n        let otherInts = {};\n\n        //find edges completely inside the rectangle\n        this.quadTreeEdges.enumInBox(minx, miny, maxx, maxy, e => {\n            otherInts[e.id] = e;\n        });\n\n        //Remove the intersected edges, effectively\n        //joining all areas defined by those edges.\n        //This is brute force, in theory we can find all\n        //contour sets that own the intersected edges\n        //and update the triangulations, but it doesn't seem worth it\n        for (let sid in otherInts) {\n            let eid = parseInt(sid);\n            let edge = this.edges[eid];\n\n            if (!edge)\n                continue;\n\n            this.removeDirectedEdge(edge);\n\n            //clean up any \"dangling\" vertices left by the edge removal.\n            //those are edges that are only connected to the deleted edge and nothing else\n            this.removeDanglingPolyline(edge.v1);\n            this.removeDanglingPolyline(edge.v2);\n        }\n\n\n        this.dirty = true;\n    }\n\n    findNearestVertex(x, y, radius) {\n\n        if (typeof radius !== \"number\")\n            radius = this.precisionTolerance;\n\n        let dNear = Infinity;\n        let vNear = null;\n\n        this.verts.enumInBox(x-radius, y-radius, x+radius, y+radius, v => {\n\n            let d = (v.x - x) * (v.x - x) + (v.y - y) * (v.y - y);\n            if (d < dNear) {\n                dNear = d;\n                vNear = v;\n            }\n\n        });\n\n        return (dNear <= radius * radius) ? vNear : null;\n    }\n\n    findNearestPointOnEdge(x, y, radius) {\n\n        if (typeof radius !== \"number\")\n            radius = this.precisionTolerance;\n\n        let tmp = { x:0, y:0, u:0, d:-1 };\n        let ptNearest = { x:0, y:0, d: Infinity, e:null };\n\n        this.quadTreeEdges.enumInBox(x-radius, y-radius, x+radius, y+radius, e => {\n\n            let result = pointOnLine(x, y, e, true, radius, tmp);\n\n            if (result) {\n                if (tmp.d < ptNearest.d) {\n                    ptNearest.x = tmp.x;\n                    ptNearest.y = tmp.y;\n                    ptNearest.d = tmp.d;\n                    ptNearest.e = e;\n                }\n            }\n        });\n\n        return (ptNearest.d <= radius) ? ptNearest : null;\n\n    }\n\n}","/**\n * Functions on the global scope need to be called with the global scope as their 'this' context.\n * Therefore, we can't simply return function properties from the global scope proxy like other properties.\n * We create another (temporary) proxy instead, which implements the 'apply' hook.\n * Invoking a function through this hook will ensure the correct 'this' context inside of the function.\n *\n * @param {Object} globalScope The global scope that the function is a property of (e.g. window).\n * @param {Function} func The function property that is accessed through the global scope proxy.\n * @returns {Proxy} A new proxy that forwards function invocations so that the 'this' context of the invoked function\n *   is set up properly.\n */\nfunction createFunctionProxy(globalScope, func) {\n    return new Proxy(func, {\n        get(obj, prop) {\n            return obj[prop];\n        },\n        apply(target, thisArg, argumentsList) {\n            return target.call(globalScope || thisArg, ...argumentsList);\n        }\n    });\n}\n\n// A helper method to get an app-specific namespace under the global scope, or create it if it's not present yet.\nfunction getAppNamespace(globalScope) {\n    return globalScope[globalScope.LMV_APP_NAMESPACE] = globalScope[globalScope.LMV_APP_NAMESPACE] || {};\n}\n\n/**\n * Returns the global object of the current environment (e.g. window in a browser).\n * If `USE_LMV_APP_NAMESPACES` is set to `true` on the global scope, the returned value will be a proxy that intercepts\n * set operations on non-existing properties and writes the value to an app-specific namespace instead. The actual\n * property on the window object is a placeholder that forwards read and write operations to the app-specific version.\n *\n * Example:\n * Given that window.LMV_APP_NAMESPACE is 'myApp' and window.Autodesk does not exist yet\n *\n * getGlobal().Autodesk = {}\n *\n * will be rewritten as\n *\n * window.myApp.Autodesk = {};\n * window.Autodesk = Placeholder that forwards to window[window.LMV_APP_NAMESPACE].Autodesk\n *\n * Changing window.LMV_APP_NAMESPACE to 'myOtherApp' will then rewrite\n *\n * window.Autodesk to window.myOtherApp.Autodesk\n *\n * @returns {Object} The global scope of the environment.\n */\nexport function getGlobal() {\n    // Determine the global scope of the environment\n    const globalScope = (typeof window !== \"undefined\" && window !== null)\n        ? window\n        : (typeof self !== \"undefined\" && self !== null)\n            ? self\n            : global;\n\n    // If app namespaces are used, create and return a proxy instead of the actual global scope object.\n    if (globalScope.USE_LMV_APP_NAMESPACES) {\n        if (!globalScope.globalProxy) {\n            // The proxy is a singleton that will only be created once, even across multiple viewer bundles.\n            globalScope.globalProxy = new Proxy({}, {\n                // Get requests are simply forwarded to the global scope.\n                // Functions get some special treatment, because they need to invoked with the global scope as their\n                // 'this' context.\n                get(obj, prop) {\n                    let value = globalScope[prop];\n                    if (typeof value === 'function') {\n                        return createFunctionProxy(globalScope, value);\n                    }\n                    return value;\n                },\n                // Set requests are intercepted to create properties in app-specific namespaces.\n                set(obj, prop, value) {\n                    if (Object.prototype.hasOwnProperty.call(globalScope, prop)) {\n                        // Don't proxy existing properties\n                        if (globalScope[prop] !== value)\n                            globalScope[prop] = value;\n                    } else {\n                        // Create the property under the app's namespace and inject a proxy object in the global\n                        // scope that forwards to the namespaced property.\n                        getAppNamespace(globalScope)[prop] = value;\n                        Object.defineProperty(globalScope, prop, {\n                            get: () => { return getAppNamespace(globalScope)[prop]; },\n                            set: (value) => { getAppNamespace(globalScope)[prop] = value; }\n                        });\n                    }\n                    return true; // Proxy setters must return true\n                }\n            });\n        }\n\n        return globalScope.globalProxy;\n    } else {\n        return globalScope;\n    }\n}","\nimport { getGlobal } from './global';\n\nconst _window = getGlobal();\nconst _document = _window && _window.document;\n\nexport { getGlobal };\n\nexport const isBrowser = (typeof navigator !== \"undefined\");\n\nexport const isNodeJS = function() {\n    return !isBrowser;\n};\n\nexport let isIE11 = isBrowser && !!navigator.userAgent.match(/Edge|Trident\\/7\\./);\n\n// Although the naming is misleading, isIE11 contains Edge too for some legacy reason.\n// For backward compatibility, instead of renaming `isIE11` to `isIEOrEdge`, I just added `isIE11Only`.\nexport let isIE11Only = isBrowser && !!navigator.userAgent.match(/Trident\\/7\\./);\n\n// Launch full screen on the given element with the available method\nexport function launchFullscreen(element, options) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen(options);\n    } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen(options);\n    } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen(options);\n    } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen(options);\n    }\n};\n\n// Exit full screen with the available method\nexport function exitFullscreen(_document) {\n    if (!inFullscreen(_document)) {\n        return;\n    }\n    if (_document.exitFullscreen) {\n        _document.exitFullscreen();\n    } else if (_document.mozCancelFullScreen) {\n        _document.mozCancelFullScreen();\n    } else if (_document.webkitExitFullscreen) {\n        _document.webkitExitFullscreen();\n    } else if (_document.msExitFullscreen) {\n        _document.msExitFullscreen();\n    }\n};\n\n// Determines if the browser is in full screen\nexport function inFullscreen(_document){\n\n    // Special case for Ms-Edge that has webkitIsFullScreen with correct value\n    // and fullscreenEnabled with wrong value (thanks MS)\n\n    if (\"webkitIsFullScreen\" in _document) return !!(_document.webkitIsFullScreen);\n    if (\"fullscreenElement\" in _document) return !!(_document.fullscreenElement);\n    if (\"mozFullScreenElement\" in _document) return !!(_document.mozFullScreenElement);\n    if (\"msFullscreenElement\" in _document) return !!(_document.msFullscreenElement);\n\n    return !!(_document.querySelector(\".viewer-fill-browser\")); // Fallback for iPad\n};\n\nexport function fullscreenElement(_document) {\n    return _document.fullscreenElement || _document.mozFullScreenElement || _document.webkitFullscreenElement || _document.msFullscreenElement;\n};\n\nexport function isFullscreenAvailable(element) {\n    return element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen || element.msRequestFullscreen;\n};\n\n/**\n * Returns true if full screen mode is enabled.\n * @param {Document} _document\n * @return {Boolean} - true if full screen mode is enabled false otherwise.\n */\nexport function isFullscreenEnabled(_document) {\n    return (\n        _document.fullscreenEnabled ||\n        _document.webkitFullscreenEnabled ||\n        _document.mozFullScreenEnabled ||\n        _document.msFullscreenEnabled\n    );\n}\n\n// Get the IOS version through user agent.\n// Return the version string of IOS, e.g. 14.1.1, 15.4 ... or empty string if version couldn't be detected\n// User agents can be changed and thus might be inaccurate or incompatible at some point, but this pattern\n// has been stable at least since IOS 5\nexport function getIOSVersion(ua) {\n    ua = ua || navigator.userAgent;\n    var match = ua.match(/OS ((\\d+)_(\\d+)(_(\\d+))?) like Mac OS X/);\n    if (!match && isIOSDevice()) {\n        // On IPadOS Safari requests the desktop version by default with a MacOS user.\n        // The major version seems to be reliable, but the minor version might be incorrect.\n        match = ua.match(/\\/((\\d+)\\.(\\d+)(\\.\\d)?) Safari\\//);\n    }\n\n    return match ? match[1].replace('_', '.') : \"\";\n};\n\n// Get the version of the android device through user agent.\n// Return the version string of android device, e.g. 4.4, 5.0...\nexport function getAndroidVersion(ua) {\n    ua = ua || navigator.userAgent;\n    var match = ua.match(/Android\\s([0-9\\.]*)/);\n    return match ? match[1] : false;\n};\n\n// Determine if this is a touch or notouch device.\nexport function isTouchDevice() {\n    return (typeof window !== 'undefined' && ('ontouchstart' in window || navigator.maxTouchPoints > 0));\n};\n\n// Since iOS 13, the iPad identifies itself as a desktop, so the only way to reliably detect is to search for multitouch capabilities\n// (insofar as no other Apple device implements it)\n// It also returns different values in a worker so we need to look in the platform as well to distinguish from a regular Mac\nconst _isIOSDevice = isBrowser && (/ip(ad|hone|od)/.test(navigator.userAgent.toLowerCase())\n                        || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)\n                        || (/^ip(ad|hone|od)$/.test(navigator.platform?.toLowerCase())));\nexport function isIOSDevice() {\n    return _isIOSDevice;\n}\n\nconst _isAndroidDevice = isBrowser && (navigator.userAgent.toLowerCase().indexOf('android') !== -1);\nexport function isAndroidDevice() {\n    return _isAndroidDevice;\n}\n\nexport function isMobileDevice() {\n    if (!isBrowser) return false;\n    return isIOSDevice() || isAndroidDevice();\n};\n\nexport function isPhoneFormFactor() {\n    return (\n        isMobileDevice() &&\n        (_window.matchMedia('(max-width: 750px)').matches || _window.matchMedia('(max-height: 750px)').matches)\n    );\n}\n\nexport function isSafari() {\n    if (!isBrowser) return false;\n    var _ua = navigator.userAgent.toLowerCase();\n    return ((_ua.indexOf(\"safari\") !== -1) && (_ua.indexOf(\"chrome\") === -1));\n};\n\nexport function isFirefox() {\n    if (!isBrowser) return false;\n    var _ua = navigator.userAgent.toLowerCase();\n    return (_ua.indexOf(\"firefox\") !== -1);\n};\n\nexport function isChrome() {\n    if (!isBrowser) return false;\n    var _ua = navigator.userAgent.toLowerCase();\n    return (_ua.indexOf(\"chrome\") !== -1);\n};\n\nexport function isMac() {\n    if (!isBrowser) return false;\n    var _ua = navigator.userAgent.toLowerCase();\n    return (_ua.indexOf(\"mac os\") !== -1) && !isIOSDevice();\n};\n\nexport function isWindows() {\n    if (!isBrowser) return false;\n    var _ua = navigator.userAgent.toLowerCase();\n    return  (_ua.indexOf(\"win32\") !== -1 || _ua.indexOf(\"windows\") !== -1);\n};\n\nexport function ObjectAssign(des, src) {\n    for (var key in src) {\n        if (src.hasOwnProperty(key))\n            des[key] = src[key];\n    }\n    return des;\n};\n\n// Hack to work around Safari's use of pinch and pan inside the viewer canvas.\nfunction disableTouchSafari(event) {\n    var xOff = _window.hasOwnProperty(\"pageXOffset\") ? _window.pageXOffset : _document.documentElement.scrollLeft;\n    var yOff = _window.hasOwnProperty(\"pageYOffset\") ? _window.pageYOffset : _document.documentElement.scrollTop;\n\n    // event.pageX and event.pageY returned undefined through Chrome console device mode\n    var pageX = typeof event.pageX === \"undefined\" ? event.changedTouches[0].pageX : event.pageX;\n    var pageY = typeof event.pageY === \"undefined\" ? event.changedTouches[0].pageY : event.pageY;\n\n    // If we aren't inside the canvas, then allow default propagation of the event\n    var element = _document.elementFromPoint(pageX - xOff, pageY - yOff);\n    if (!element || element.nodeName !== 'CANVAS')\n        return true;\n    // If it's a CANVAS, check that it's owned by us\n    if (element.getAttribute('data-viewer-canvas') !== 'true')\n        return true;\n    // Inside the canvas, prevent the event from propagating to Safari'safely\n    // standard handlers, which will pan and zoom the page.\n    event.preventDefault();\n    return false;\n}\n\n// Hack to work around Safari's use of pinch and pan inside the viewer canvas.\nexport function disableDocumentTouchSafari() {\n    if (isMobileDevice() && isSafari()) {\n        // Safari mobile disable default touch handling inside viewer canvas\n        // Use capture to make sure Safari doesn't capture the touches and prevent\n        // us from disabling them.\n        _document.documentElement.addEventListener('touchstart', disableTouchSafari, true);\n        _document.documentElement.addEventListener('touchmove', disableTouchSafari, true);\n        _document.documentElement.addEventListener('touchcanceled', disableTouchSafari, true);\n        _document.documentElement.addEventListener('touchend', disableTouchSafari, true);\n    }\n};\n\n// Hack to work around Safari's use of pinch and pan inside the viewer canvas.\n// This method is not being invoked explicitly.\nexport function enableDocumentTouchSafari() {\n    if (isMobileDevice() && isSafari()) {\n        // Safari mobile disable default touch handling inside viewer canvas\n        // Use capture to make sure Safari doesn't capture the touches and prevent\n        // us from disabling them.\n        _document.documentElement.removeEventListener('touchstart', disableTouchSafari, true);\n        _document.documentElement.removeEventListener('touchmove', disableTouchSafari, true);\n        _document.documentElement.removeEventListener('touchcanceled', disableTouchSafari, true);\n        _document.documentElement.removeEventListener('touchend', disableTouchSafari, true);\n    }\n};\n\n\n// Convert touchstart event to click to remove the delay between the touch and\n// the click event which is sent after touchstart with about 300ms deley.\n// Should be used in UI elements on touch devices.\nexport function touchStartToClick(e) {\n    // Buttons that activate fullscreen are a special case. The HTML5 fullscreen spec\n    // requires the original user gesture signal to avoid a security issue.  See LMV-2396 and LMV-2326\n    if (e.target.className && (e.target.className.indexOf(\"fullscreen\") > -1\n        || e.target.className.indexOf(\"webvr\") > -1))\n        return;\n    e.preventDefault();  // Stops the firing of delayed click event.\n    e.stopPropagation();\n    e.target.click();    // Maps to immediate click.\n}\n\n","import { IntervalTree } from \"./interval-tree\";\nimport { UniquePointList } from \"./point-list\";\nimport { ComplexPolygon } from \"./complex-polygon\";\nimport { getGlobal } from \"../../src/compat\";\n\nconst _window = getGlobal();\n\n\n    //Functionality for converting a list of two-point line segments into a connected\n    //set of (hopefully) closed contour lines. The contour set is then used\n    //for triangulation.\n    //This data structure assumes there are no intersecting edges (use the DCEL if there are, or you need fully-connected topology).\n    export class EdgeSet {\n\n            constructor(edges, bbox, precisionTolerance) {\n\n            this.edges = edges;\n            this.bbox = bbox;\n\n            this.verts = new UniquePointList(bbox, precisionTolerance);\n            this.polygon = null;\n        }\n\n\n        getPointIndex(px, py) {\n\n            let v = this.verts.findOrAddPoint(px, py);\n\n            return v.id;\n        }\n\n        snapEdges() {\n\n            for (var i=0; i<this.edges.length; i++) {\n\n                var e = this.edges[i];\n\n                e.p1 = this.getPointIndex(e.v1.x, e.v1.y);\n                e.p2 = this.getPointIndex(e.v2.x, e.v2.y);\n            }\n        }\n\n        sanitizeEdges() {\n            var edgeSet = {};\n            var sanitizedEdges = [];\n\n            for (var i = 0, len = this.edges.length; i < len; i++) {\n                var e = this.edges[i];\n                if (e.p1 === e.p2) {\n                    continue;\n                }\n\n                var key = Math.min(e.p1, e.p2) + ':' + Math.max(e.p1, e.p2);\n                if (edgeSet[key] !== true) {\n                    edgeSet[key] = true;\n                    sanitizedEdges.push(e);\n                }\n            }\n\n            this.edges = sanitizedEdges;\n        }\n\n\n        stitchContours() {\n\n            this.contours = [];\n\n            //Create jump table from edge to edge\n            //and back\n            var edge_table = {};\n\n            for (var i=0; i<this.edges.length; i++) {\n                var e = this.edges[i];\n\n                if (e.p1 === e.p2)\n                    continue;\n\n                if (edge_table[e.p1] !== undefined)\n                    edge_table[e.p1].push(e.p2);\n                else\n                    edge_table[e.p1] = [e.p2];\n\n                if (edge_table[e.p2] !== undefined)\n                    edge_table[e.p2].push(e.p1);\n                else\n                    edge_table[e.p2] = [e.p1];\n            }\n\n            var cur_cntr = [];\n\n            for (var p in edge_table) {\n                if (edge_table[p].length !== 2) {\n                    _window.Autodesk?.Viewing.Private.logger.warn(\"Incomplete edge table\");\n                    break;\n                }\n            }\n\n            //Start with the first edge, and stitch until we can no longer\n            while (true) {\n\n                var sfrom = undefined;\n\n                //Look for doubly connected point first\n                for (let p in edge_table) {\n                    if (edge_table[p].length > 1) {\n                        sfrom = p;\n                        break;\n                    }\n                }\n\n                //If no double-connected point found, we know\n                //the it will be an open contour, but stitch as much\n                //as we can anyway.\n                if (!sfrom) {\n                    for (let p in edge_table) {\n                        if (edge_table[p].length > 0) {\n                            sfrom = p;\n                            break;\n                        }\n                    }\n                }\n\n                if (!sfrom)\n                    break;\n\n                var prev = -1;\n                var cur = parseInt(sfrom);\n                var cur_segs = edge_table[sfrom];\n\n                //start a new contour\n                cur_cntr.push(cur);\n\n                while (cur_segs && cur_segs.length) {\n\n                    var toPt = cur_segs.shift();\n\n                    //skip backpointer if we hit it\n                    if (toPt === prev)\n                        toPt = cur_segs.shift();\n\n                    if (toPt === undefined) {\n                        delete edge_table[cur];\n                        break;\n                    }\n\n                    cur_cntr.push(toPt);\n\n                    if (cur_segs.length == 0)\n                        delete edge_table[cur];\n                    else if (cur_segs[0] === prev)\n                        delete edge_table[cur];\n\n                    prev = cur;\n                    cur = toPt;\n                    cur_segs = edge_table[toPt];\n                }\n\n                if (cur_cntr.length) {\n                    this.contours.push(cur_cntr);\n                    cur_cntr = [];\n                }\n            }\n\n            var openCntrs = [];\n            for (let i=0; i<this.contours.length; i++) {\n                var cntr = this.contours[i];\n                if (cntr[0] !== cntr[cntr.length-1])\n                    openCntrs.push(cntr);\n            }\n\n\n            if (openCntrs.length) {\n                //avp.logger.warn(\"Incomplete stitch\");\n\n                var didSomething = true;\n                while (didSomething) {\n\n                    didSomething = false;\n\n                    //Try to combine contours\n                    var cntr_edge_table = {};\n                    var contours = this.contours;\n\n                    for (let i=0; i<contours.length; i++) {\n                        const cntr = contours[i];\n                        var start = cntr[0];\n                        var end = cntr[cntr.length-1];\n\n                        if (start === end)\n                            continue;\n\n                        if (!cntr_edge_table[start])\n                            cntr_edge_table[start] = [-i-1];\n                        else\n                            cntr_edge_table[start].push(-i-1);\n\n\n                        if (!cntr_edge_table[end])\n                            cntr_edge_table[end] = [i];\n                        else\n                            cntr_edge_table[end].push(i);\n                    }\n\n                    for (let p in cntr_edge_table) {\n                        var entry = cntr_edge_table[p];\n\n                        if (entry.length == 2) {\n                            var toerase = undefined;\n\n                            if (entry[0] < 0 && entry[1] < 0) {\n                                var c1 = -entry[0]-1; var c2 = -entry[1]-1;\n                                //join start point to startpoint\n                                contours[c2].shift();\n                                Array.prototype.push.apply(contours[c1].reverse(),contours[c2]);\n                                toerase = c2;\n                            }\n\n                            if (entry[0] < 0 && entry[1] > 0) {\n                                const c1 = -entry[0]-1;\n                                const c2 = entry[1];\n                                //join start point to endpoint\n                                contours[c2].pop();\n                                Array.prototype.push.apply(contours[c2], contours[c1]);\n                                toerase = c1;\n                            }\n\n                            if (entry[0] > 0 && entry[1] < 0) {\n                                const c1 = entry[0];\n                                const c2 = -entry[1]-1;\n                                //join end point to startpoint\n                                contours[c1].pop();\n                                Array.prototype.push.apply(contours[c1], contours[c2]);\n                                toerase = c2;\n                            }\n\n                            if (entry[0] > 0 && entry[1] > 0) {\n                                const c1 = entry[0];\n                                const c2 = entry[1];\n                                //join end point to endpoint\n                                contours[c1].pop();\n                                Array.prototype.push.apply(contours[c1], contours[c2].reverse());\n                                toerase = c2;\n                            }\n\n                            if (toerase !== undefined) {\n                                contours.splice(toerase, 1);\n                                didSomething = true;\n                            }\n                            break;\n                        }\n                    }\n\n                }\n\n            }\n        }\n\n\n        cleanupFlatEdges() {\n\n            let pts = this.verts.pts;\n            let TOL = this.verts.precisionTolerance;\n\n            for (let i=0; i<this.contours.length; i++) {\n\n                let cntr = this.contours[i];\n\n                while (true) {\n                    let removePt = -1;\n\n                    for (let j=1; j<cntr.length-1; j++) {\n                        let prev = cntr[j-1];\n                        let cur = cntr[j];\n                        let next = cntr[j+1];\n\n                        let p0 = pts[prev];\n                        let p1 = pts[cur];\n                        let p2 = pts[next];\n\n                        let dx1 = p1.x - p0.x;\n                        let dy1 = p1.y - p0.y;\n                        let dx2 = p2.x - p1.x;\n                        let dy2 = p2.y - p1.y;\n\n                        let len1 = Math.sqrt(dx1*dx1 + dy1*dy1);\n                        if (len1 < TOL) {\n                            removePt = j;\n                            break;\n                        }\n\n                        let len2 = Math.sqrt(dx2*dx2 + dy2*dy2);\n                        if (len2 < TOL) {\n                            removePt = j;\n                            break;\n                        }\n\n                        dx1 /= len1;\n                        dy1 /= len1;\n                        dx2 /= len2;\n                        dy2 /= len2;\n\n                        let dot = dx1*dx2 + dy1*dy2;\n\n                        if (Math.abs(dot - 1.0) < 1e-2) {\n                            removePt = j;\n                            break;\n                        }\n                    }\n\n                    if (removePt < 0)\n                        break;\n\n                    cntr.splice(removePt, 1);\n                }\n\n            }\n\n        }\n\n\n        triangulate(options = {}) {\n\n            //this.cleanupFlatEdges();\n\n            //The interval tree is a faster and more tolerant\n            //way of checking if a point is inside the complex polygon defined\n            //by a set of edges. We use that in preference to the built-in\n            //ComplexPolygon inside checker.\n            let it = new IntervalTree(this.verts.pts, this.edges, this.bbox);\n            it.build();\n\n            let polygon = new ComplexPolygon(this.verts.pts, it, this.bbox);\n            polygon.contours = this.contours;\n            polygon.triangulate(options);\n            return polygon;\n\n        }\n\n\n    }\n","// Sample ellipse at a given angle.\n//  @param {number} angle    - ccw angle along the ellipse in radians. 0 = point is ellipse x-axis.\n//  @param {number} cx, cy   - ellipse center\n//  @param {number} rx, ry   - ellipse radii\n//  @param {number} rotation - ccw in radians\n//  @param {Vector2} [target]\n//  @returns {Vector2}\nexport const getEllipsePoint = (angle, cx, cy, rx, ry, rotation = 0.0, target = null) => {\n\n    const point = target || new THREE.Vector2();\n\n    // compute point from unrotated ellipse equation\n    let x = cx + rx * Math.cos(angle);\n    let y = cy + ry * Math.sin(angle);\n\n    // apply this.rotation: (x,y) around center (cx, cy)\n    if (rotation !== 0) {\n\n        const cos = Math.cos(rotation);\n        const sin = Math.sin(rotation);\n\n        const tx = x - cx;\n        const ty = y - cy;\n\n        // Rotate the point about the center of the ellipse.\n        x = tx * cos - ty * sin + cx;\n        y = tx * sin + ty * cos + cy;\n    }\n\n    return point.set(x, y);\n};\n\n// Sample a single point from an ellipse arc that runs counterclockwise from startAngle to endAngle.\n//  @param {number} cx, cy               - center\n//  @param {number} rx, ry               - radii in x/y axis\n//  @param {number} startAngle, endAngle - ccw angles in radians. 0 corresponds to (xRadius, 0)\n//  @param {number} rotation             - ellipse axis rotation, ccw in radians\n//  @param {number} t                    - sampling position along ellipse. 0 => startAngle, 1 = endAngle\n//  @param {Vector2} [target]\n//  @returns {Vector2}\nexport const getEllipseArcPoint = (t, cx, cy, rx, ry, startAngle, endAngle, rotation = 0.0, target = null) => {\n\n    let deltaAngle = endAngle - startAngle;\n\n    // If start/end angle are approximately the same, just sample at start angle\n    const samePoints = Math.abs(deltaAngle) < Number.EPSILON;\n    if (samePoints) {\n        return getEllipsePoint(0.0, cx, cy, rx, ry, rotation, target);\n    }\n\n    // ensures that deltaAngle is [0,2 PI[\n    deltaAngle = normalizeAngle(deltaAngle);\n\n    // Since samePoints was false, but deltaAngle is close to 0 after normalization,\n    // deltaAngle must be close to a multiple of 2*Pi.\n    const wholeEllipse = (deltaAngle < Number.EPSILON);\n    if (wholeEllipse) {\n        deltaAngle = 2.0 * Math.PI;\n    }\n\n    // Sample ellipse point at that angle\n    const angle = startAngle + t * deltaAngle;\n    return getEllipsePoint(angle, cx, cy, rx, ry, rotation, target);\n};\n\n// Force angle to be within [0, 2Pi[\nexport const normalizeAngle = (angle) => {\n    // Scale [0, 2Pi] to [0,1]\n    angle /= 2.0 * Math.PI;\n\n    // Remove integer part\n    angle -= Math.trunc(angle);\n\n    // Angle is either in [0,1] or was negative. In the latter case,\n    // it is in [-1, 0] now and we add 1 to bring it to [0,1] as well.\n    if (angle < 0) {\n        angle += 1.0;\n    }\n\n    // Scale back to [0, 2Pi] range\n    return angle * 2.0 * Math.PI;\n};\n\n// Compute the arc angle difference of an arc running from startAngle to endAngle.\n//  @param {number} startAngle - in radians\n//  @param {number} endAngle   - in radians\n//  @param {bool}   ccw        - whether the arc runs counterclockwise (true) or clockwise (false)\nexport const getAngleDelta = (startAngle, endAngle, ccw) => {\n\n    // get angle difference\n    let delta = endAngle - startAngle;\n\n    // Force to [0, 2Pi] range\n    delta = normalizeAngle(delta);\n\n    // invert if arc is clockwise\n    return ccw ? delta : 2.0 * Math.PI - delta;\n};\n\n// Given start/end angle of an arc, this function checks whether angle is within the arc.\n// All angles are ccw in radians. We assume the arc to be running ccw. Note that start may be > end if the arc range contains a 2*Pi mulitple.\nexport const angleInsideArcCCW = (angle, start, end) => {\n\n    // ensure 0 <= a < 2Pi for all angles\n    angle = normalizeAngle(angle);\n    start = normalizeAngle(start);\n    end   = normalizeAngle(end);\n\n    if (start < end) {\n        return angle >= start && angle <= end;\n    }\n\n    // If start > end, we are crossing a full-circle boundary. So, the range between [start, end] is actually\n    // the circle part outside the arc.\n    // For start = end, the arc is the whole circle and the result will always be true.\n    return angle >= start || angle <= end;\n};\n\n// Like angleInsideCCW, but adding an option param to support clockwise arcs.\nexport const angleInsideArc = (angle, start, end, ccw = true) => {\n    const insideCCW = angleInsideArcCCW(angle, start, end);\n    return ccw ? insideCCW : !insideCCW;\n};\n\nconst svgAngle = (ux, uy, vx, vy) => {\n\n    var dot = ux * vx + uy * vy;\n    var len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n    var ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n    if ( ( ux * vy - uy * vx ) < 0 ) ang = - ang;\n    return ang;\n};\n\nconst tmpVec = new THREE.Vector2();\n\n// Parameters to describe ellipse arc\nexport class EllipseArc {\n\n    constructor(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw) {\n        this.set(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw);\n    }\n\n    set(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw) {\n        // center\n        this.cx = cx;\n        this.cy = cy;\n\n        // radii\n        this.rx = rx;\n        this.ry = ry;\n\n        // angle in radians\n        this.startAngle = startAngle;\n        this.endAngle = endAngle;\n\n        // If true, arc runs from startAngle in counterclockwise direction, otherwise clockwise\n        this.ccw = ccw;\n\n        // ellipse rotation in radians\n        this.rotation = rotation;\n\n        return this;\n    }\n\n    /**\n     * Convert SVG-style specification of an ellipse arc into an ellipse arc with center and start/end angle that is easier to sample.\n     * Implementation is based on parseArcCommand() helper function in THREE.SVGLoader. All output angles in radians.\n     *\n     * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n     * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n     *\n     * @param {number}   rx, ry        - radii in x/y axis (before xAxisRoation)\n     * @param {number}   xAxisRotation - ccw rotation of the ellipse axes in degrees\n     * @param {bool}     largeArcFlag  - whether to use short or long path along the ellipse\n     * @param {bool}     sweepFlag     - whether to run counterclockwise around the arc from the startPoint\n     * @param {Vector2}  start, end    - startPoint and endPoint of the arc\n     */\n    setFromSvgArc(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, start, end) {\n\n        // get rotation in radians\n        const rotation = xAxisRotation * Math.PI / 180;\n\n        // Ensure radii are positive\n        rx = Math.abs( rx );\n        ry = Math.abs( ry );\n\n        // To avoid NaNs and for consistency with browser SVG behavior:\n        // If any radius is 0, fall back to a straight segment. An EllipseCurve is not able to represent a straight line segment.\n        // However, we can resemble this using an arc whose radius is large enough so that the angle difference is hardly noticeable.\n        if (rx == 0 || ry == 0) {\n            // Choose radius large enough so that 0.01 degrees correspond to the (start, end) distance.\n            const minAngleDelta = 0.01;\n            const dist      = tmpVec.copy(start).distanceTo(end); // still works if start/end are just {x,y} pairs\n            const perimeter = dist * 360 / minAngleDelta;\n            const radius    = perimeter / (2.0 * Math.PI);\n            rx = radius;\n            ry = radius;\n        }\n\n        // Compute (x1′, y1′)\n        const dx2 = ( start.x - end.x ) / 2.0;\n        const dy2 = ( start.y - end.y ) / 2.0;\n        const x1p =   Math.cos( rotation ) * dx2 + Math.sin( rotation ) * dy2;\n        const y1p = - Math.sin( rotation ) * dx2 + Math.cos( rotation ) * dy2;\n\n        // Compute (cx′, cy′)\n        let rxs = rx * rx;\n        let rys = ry * ry;\n        const x1ps = x1p * x1p;\n        const y1ps = y1p * y1p;\n\n        // Ensure radii are large enough\n        const cr = x1ps / rxs + y1ps / rys;\n\n        if ( cr > 1 ) {\n            // scale up rx,ry equally so cr == 1\n            const s = Math.sqrt( cr );\n            rx = s * rx;\n            ry = s * ry;\n            rxs = rx * rx;\n            rys = ry * ry;\n        }\n\n        const dq = ( rxs * y1ps + rys * x1ps );\n        const pq = ( rxs * rys - dq ) / dq;\n        let q = Math.sqrt( Math.max( 0, pq ) );\n        if ( largeArcFlag === sweepFlag ) q = - q;\n        const cxp = q * rx * y1p / ry;\n        const cyp = - q * ry * x1p / rx;\n\n        // Step 3: Compute (cx, cy) from (cx′, cy′)\n        const cx = Math.cos( rotation ) * cxp - Math.sin( rotation ) * cyp + ( start.x + end.x ) / 2;\n        const cy = Math.sin( rotation ) * cxp + Math.cos( rotation ) * cyp + ( start.y + end.y ) / 2;\n\n        // Step 4: Compute θ1 and Δθ\n        const theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n        const delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n        // Set curve params\n        this.cx = cx;\n        this.cy = cy;\n        this.rx = rx;\n        this.ry = ry;\n        this.rotation = rotation;\n        this.startAngle = theta;\n        this.endAngle   = theta + delta;\n        this.ccw = sweepFlag;\n\n        return this;\n    }\n\n    // Sample point along arc.\n    //  @param {number}  t - 0: startPoint, 1: endPoint\n    //  @param {Vector2} [target]\n    //  @returns Vector2\n    getPoint(t, target) {\n\n        let start = this.startAngle;\n        let end   = this.endAngle;\n\n        // In case the arc is clockwise...\n        if (!this.ccw) {\n            // Swap start/end to get opposite ccw arc and sample it at position 1-t instead.\n            start = this.endAngle;\n            end   = this.startAngle;\n            t     = 1.0 - t;\n        }\n\n        return getEllipseArcPoint(t, this.cx, this.cy, this.rx, this.ry, start, end, this.rotation, target);\n    }\n\n    isValid() {\n        return isFinite(this.cx) && isFinite(this.cy) && isFinite(this.rx) && isFinite(this.ry) && isFinite(this.rotation) &&\n               isFinite(this.startAngle) && isFinite(this.endAngle);\n    }\n\n    // @param {Box2} [targetBox]\n    // returns {Box2}\n    computeBBox(targetBox) {\n\n        // compute extreme points of ellipse equation\n        const tanPhi = Math.tan(this.rotation);\n        const thetaX1 =          - Math.atan(this.ry*tanPhi / this.rx);\n        const thetaX2 =  Math.PI - Math.atan(this.ry*tanPhi / this.rx);\n        const thetaY1 =            Math.atan(this.ry        / (tanPhi*this.rx));\n        const thetaY2 =  Math.PI + Math.atan(this.ry        / (tanPhi*this.rx));\n\n        // Clear targetBox or create a new one\n        const box = targetBox ? targetBox.makeEmpty() : new THREE.Box2();\n\n        // Helper function to add an ellipse point that we obtain at angle theta in the ellipse equation\n        const addEllipsePoint = (theta) => {\n             const p = getEllipsePoint(theta, this.cx, this.cy, this.rx, this.ry, this.rotation);\n             box.expandByPoint(p);\n        };\n\n        addEllipsePoint(this.startAngle);\n        addEllipsePoint(this.endAngle);\n\n        // Add all extreme points to the bbox that are inside the arc\n        angleInsideArc(thetaX1, this.startAngle, this.endAngle, this.ccw) && addEllipsePoint(thetaX1);\n        angleInsideArc(thetaX2, this.startAngle, this.endAngle, this.ccw) && addEllipsePoint(thetaX2);\n        angleInsideArc(thetaY1, this.startAngle, this.endAngle, this.ccw) && addEllipsePoint(thetaY1);\n        angleInsideArc(thetaY2, this.startAngle, this.endAngle, this.ccw) && addEllipsePoint(thetaY2);\n\n        return box;\n    }\n\n    // Samples an ellipse arc as lineTo segments that are added a canvas context object.\n    // Note: lineTo() is not called with the arc starting point. ctx is expected to end at the arc start point already.\n    //\n    //  @param {Path2D|LmvCanvasContext|CanvasContext} ctx - line segment are added by ctx.lineTo(x,y) calls.\n    //  @param {number} maxSegmentCount  - Maximum number of line segments\n    //  @param {number} minSegmentLength - Skip small segments below this length\n    tesselate(ctx, maxSegments, minSegmentLength) {\n\n        // Init lastX/lastY\n        const lastPoint = this.getPoint(0);\n\n        // Note that we only iterate over inner points.\n        // Start point is not added by this function and endpoint is added separately below\n        for (var i=1; i<maxSegments; i++) {\n\n            // get next point along arc\n            const t = i / maxSegments;\n            const p = this.getPoint(t, tmpVec);\n\n            // Skip point if too close to previous point\n            const dist = p.distanceTo(lastPoint);\n            if (dist < minSegmentLength) {\n                continue;\n            }\n\n            // add line segment\n            ctx.lineTo(p.x, p.y);\n            lastPoint.copy(p);\n        }\n\n        // Always add end point (without minSegmentLength-check)\n        const p = this.getPoint(1.0, tmpVec);\n        ctx.lineTo(p.x, p.y);\n    }\n\n    getAngleDelta() {\n        return getAngleDelta(this.startAngle, this.endAngle, this.ccw);\n    }\n}\n","\nexport const TOL = 1e-6;\n\nexport function isZero(f) {\n    return Math.abs(f) < TOL;\n}\n\nexport function isEqual(a, b) {\n    return isZero(a - b);\n}","\nvar av = Autodesk.Viewing;\nvar avecg = AutodeskNamespace('Autodesk.Viewing.Extensions.CompGeom');\n\nfunction _export(m, ns) {\n    for (var prop in m) {\n        if (Object.prototype.hasOwnProperty.call(m, prop)) {\n            //Export directly into the module (e.g. for node.js use, where LMV is used via require instead from global namespace)\n            module.exports[prop] = m[prop];\n\n            //Export into the desired viewer namespace\n            ns[prop] = m[prop];\n        }\n    }\n}\n\n_export(require(\"./contour-set\"), avecg);\n_export(require(\"./edge-set\"), avecg);\n_export(require(\"./dcel\"), avecg);\n_export(require(\"./fuzzy-math\"), avecg);\n_export(require(\"./quad-tree\"), avecg);\n_export(require(\"./x-box-box\"), avecg);\n_export(require(\"./x-box-plane\"), avecg);\n_export(require(\"./x-line-box\"), avecg);\n_export(require(\"./x-line-line\"), avecg);\n_export(require(\"./x-mesh-plane\"), avecg);\n_export(require(\"./x-plane-segment\"), avecg);\n_export(require(\"./x-triangle-plane\"), avecg);\n_export(require(\"./interval-tree\"), avecg);\n_export(require(\"./complex-polygon\"), avecg);\n_export(require(\"./point-list\"), avecg);\n_export(require(\"./ThirdParty/lmv_poly2tri\"), avecg);\n_export(require(\"./ellipse\"), avecg);\n_export(require(\"./bezier\"), avecg);\n_export(require(\"./LmvCanvasContext\"), avecg);\n_export(require(\"./path2d\"), avecg);\n\n/**\n * Computational geometry library extension\n */\nclass  CompGeomExtension extends av.Extension {\n\n    constructor(viewer, options) {\n        super(viewer, options);\n    }\n\n    load() { return true; }\n    unload() { return true; }\n    activate() { return true; }\n    deactivate() { return false; }\n}\n\n// The ExtensionManager requires an extension to be registered.\nav.theExtensionManager.registerExtension('Autodesk.CompGeom', CompGeomExtension);\n\n","    function IntervalNode() {\n\n        this.bbox = new THREE.Box2();\n        this.left = null;\n        this.right = null;\n        this.node_edges = [];\n    }\n\n    //Acceleration structure for point-in-polygon checking.\n    //Takes in a list of points and edges indexing into those points.\n    //The Point-in-polygon check is a simple even-odd test based on counting\n    //number of edges intersected by a ray from the input point to infinity.\n    export function IntervalTree(pts, edges, bbox) {\n\n        this.pts = pts;\n        this.edges = edges;\n        this.bbox = bbox;\n        this.pipResult = false;\n\n    }\n\n\n\n    IntervalTree.prototype.splitNode = function(node) {\n\n        if (node.bbox.min.y >= node.bbox.max.y)\n            return;\n\n        if (node.node_edges.length < 3)\n            return;\n\n        var split = 0.5 * (node.bbox.min.y + node.bbox.max.y);\n\n        //node.bbox.makeEmpty();\n\n        node.left = new IntervalNode();\n        node.right = new IntervalNode();\n\n        var pts = this.pts;\n        var ne = node.node_edges;\n        var remaining_node_edges = [];\n        var tmpPt = new THREE.Vector2();\n\n        for (var i=0; i<ne.length; i++) {\n\n            var e = this.edges[ne[i]];\n\n            var p1y = pts[e.p1].y;\n            var p2y = pts[e.p2].y;\n\n            if (p1y > p2y) {\n                var tmp = p1y;\n                p1y = p2y;\n                p2y = tmp;\n            }\n\n            var boxPtr = null;\n\n            if (p2y < split) {\n                node.left.node_edges.push(ne[i]);\n                boxPtr = node.left.bbox;\n            } else if (p1y > split) {\n                node.right.node_edges.push(ne[i]);\n                boxPtr = node.right.bbox;\n            } else {\n                remaining_node_edges.push(ne[i]);\n                //boxPtr = node.bbox;\n            }\n\n            if (boxPtr) {\n                tmpPt.set(pts[e.p1].x, pts[e.p1].y);\n                boxPtr.expandByPoint(tmpPt);\n                tmpPt.set(pts[e.p2].x, pts[e.p2].y);\n                boxPtr.expandByPoint(tmpPt);\n            }\n        }\n\n        node.node_edges = remaining_node_edges;\n\n        if (node.left.node_edges.length)\n            this.splitNode(node.left);\n        if (node.right.node_edges.length)\n            this.splitNode(node.right);\n    };\n\n\n    IntervalTree.prototype.build = function() {\n\n        this.root = new IntervalNode();\n\n        var edge_indices = this.root.node_edges;\n        for (var i=0; i<this.edges.length; i++)\n            edge_indices.push(i);\n\n        this.root.bbox.copy(this.bbox);\n\n        //split recursively\n        this.splitNode(this.root);\n    };\n\n\n\n\n    IntervalTree.prototype.pointInPolygonRec = function(node, x, y) {\n\n        if (node.bbox.min.y <= y && node.bbox.max.y >= y) {\n\n            var pts = this.pts;\n            var ne = node.node_edges;\n\n            for (var i=0, iEnd=ne.length; i<iEnd; i++) {\n\n                var e = this.edges[ne[i]];\n\n                // get the last point in the polygon\n                var p1 = pts[e.p1];\n                var vtx0X = p1.x;\n                var vtx0Y = p1.y;\n\n                // get test bit for above/below X axis\n                var yflag0 = (vtx0Y >= y);\n\n                var p2 = pts[e.p2];\n                var vtx1X = p2.x;\n                var vtx1Y = p2.y;\n\n                var yflag1 = (vtx1Y >= y);\n\n                // Check if endpoints straddle (are on opposite sides) of X axis\n                // (i.e. the Y's differ); if so, +X ray could intersect this edge.\n                // The old test also checked whether the endpoints are both to the\n                // right or to the left of the test point.  However, given the faster\n                // intersection point computation used below, this test was found to\n                // be a break-even proposition for most polygons and a loser for\n                // triangles (where 50% or more of the edges which survive this test\n                // will cross quadrants and so have to have the X intersection computed\n                // anyway).  I credit Joseph Samosky with inspiring me to try dropping\n                // the \"both left or both right\" part of my code.\n                if (yflag0 != yflag1)\n                {\n                    // Check intersection of pgon segment with +X ray.\n                    // Note if >= point's X; if so, the ray hits it.\n                    // The division operation is avoided for the \">=\" test by checking\n                    // the sign of the first vertex wrto the test point; idea inspired\n                    // by Joseph Samosky's and Mark Haigh-Hutchinson's different\n                    // polygon inclusion tests.\n                    if (((vtx1Y-y)*(vtx0X-vtx1X) >=\n                            (vtx1X-x)*(vtx0Y-vtx1Y)) == yflag1)\n                    {\n                        this.pipResult = !this.pipResult;\n                    }\n                }\n\n            }\n\n        }\n\n        var nl = node.left;\n        if (nl && nl.bbox.min.y <= y && nl.bbox.max.y >= y) {\n            this.pointInPolygonRec(nl, x, y);\n        }\n\n        var nr = node.right;\n        if (nr && nr.bbox.min.y <= y && nr.bbox.max.y >= y) {\n            this.pointInPolygonRec(nr, x, y);\n        }\n\n    };\n\n    IntervalTree.prototype.pointInPolygon = function(x, y) {\n\n          this.pipResult = false;\n\n          this.pointInPolygonRec(this.root, x, y);\n\n          return this.pipResult;\n\n    };\n","/*******************************************************************************\n *                                                                              *\n * Author    :  Angus Johnson                                                   *\n * Version   :  6.4.2                                                           *\n * Date      :  27 February 2017                                                *\n * Website   :  http://www.angusj.com                                           *\n * Copyright :  Angus Johnson 2010-2017                                         *\n *                                                                              *\n * License:                                                                     *\n * Use, modification & distribution is subject to Boost Software License Ver 1. *\n * http://www.boost.org/LICENSE_1_0.txt                                         *\n *                                                                              *\n * Attributions:                                                                *\n * The code in this library is an extension of Bala Vatti's clipping algorithm: *\n * \"A generic solution to polygon clipping\"                                     *\n * Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n * http://portal.acm.org/citation.cfm?id=129906                                 *\n *                                                                              *\n * Computer graphics and geometric modeling: implementation and algorithms      *\n * By Max K. Agoston                                                            *\n * Springer; 1 edition (January 4, 2005)                                        *\n * http://books.google.com/books?q=vatti+clipping+agoston                       *\n *                                                                              *\n * See also:                                                                    *\n * \"Polygon Offsetting by Computing Winding Numbers\"                            *\n * Paper no. DETC2005-85513 pp. 565-575                                         *\n * ASME 2005 International Design Engineering Technical Conferences             *\n * and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n * September 24-28, 2005 , Long Beach, California, USA                          *\n * http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n *                                                                              *\n *******************************************************************************/\n/*******************************************************************************\n *                                                                              *\n * Author    :  Timo                                                            *\n * Version   :  6.4.2.2 (FPoint)                                                *\n * Date      :  8 September 2017                                                *\n *                                                                              *\n * This is a translation of the C# Clipper library to Javascript.               *\n *                                                                              *\n *******************************************************************************/\n(function ()\n{\n\t\"use strict\";\n\tvar ClipperLib = {};\n\tClipperLib.version = '6.4.2.2';\n\n\t//UseLines: Enables open path clipping. Adds a very minor cost to performance.\n\tClipperLib.use_lines = true;\n\n\t//ClipperLib.use_xyz: adds a Z member to FPoint. Adds a minor cost to performance.\n\tClipperLib.use_xyz = false;\n\n\tvar isNode = false;\n\tif (typeof module !== 'undefined' && module.exports)\n\t{\n\t\tmodule.exports = ClipperLib;\n\t\tisNode = true;\n\t}\n\telse\n\t{\n\t\tif (typeof (document) !== \"undefined\") window.ClipperLib = ClipperLib;\n\t\telse self['ClipperLib'] = ClipperLib;\n\t}\n\tvar navigator_appName;\n\tif (!isNode)\n\t{\n\t\tvar nav = navigator.userAgent.toString().toLowerCase();\n\t\tnavigator_appName = navigator.appName;\n\t}\n\telse\n\t{\n\t\tvar nav = \"chrome\"; // Node.js uses Chrome's V8 engine\n\t\tnavigator_appName = \"Netscape\"; // Firefox, Chrome and Safari returns \"Netscape\", so Node.js should also\n\t}\n\t// Browser test to speedup performance critical functions\n\tvar browser = {};\n\n\tif (nav.indexOf(\"chrome\") != -1 && nav.indexOf(\"chromium\") == -1) browser.chrome = 1;\n\telse browser.chrome = 0;\n\tif (nav.indexOf(\"chromium\") != -1) browser.chromium = 1;\n\telse browser.chromium = 0;\n\tif (nav.indexOf(\"safari\") != -1 && nav.indexOf(\"chrome\") == -1 && nav.indexOf(\"chromium\") == -1) browser.safari = 1;\n\telse browser.safari = 0;\n\tif (nav.indexOf(\"firefox\") != -1) browser.firefox = 1;\n\telse browser.firefox = 0;\n\tif (nav.indexOf(\"firefox/17\") != -1) browser.firefox17 = 1;\n\telse browser.firefox17 = 0;\n\tif (nav.indexOf(\"firefox/15\") != -1) browser.firefox15 = 1;\n\telse browser.firefox15 = 0;\n\tif (nav.indexOf(\"firefox/3\") != -1) browser.firefox3 = 1;\n\telse browser.firefox3 = 0;\n\tif (nav.indexOf(\"opera\") != -1) browser.opera = 1;\n\telse browser.opera = 0;\n\tif (nav.indexOf(\"msie 10\") != -1) browser.msie10 = 1;\n\telse browser.msie10 = 0;\n\tif (nav.indexOf(\"msie 9\") != -1) browser.msie9 = 1;\n\telse browser.msie9 = 0;\n\tif (nav.indexOf(\"msie 8\") != -1) browser.msie8 = 1;\n\telse browser.msie8 = 0;\n\tif (nav.indexOf(\"msie 7\") != -1) browser.msie7 = 1;\n\telse browser.msie7 = 0;\n\tif (nav.indexOf(\"msie \") != -1) browser.msie = 1;\n\telse browser.msie = 0;\n\n\t// Here starts the actual Clipper library:\n\t// Helper function to support Inheritance in Javascript\n\tvar Inherit = function (ce, ce2)\n\t{\n\t\tvar p;\n\t\tif (typeof (Object.getOwnPropertyNames) === 'undefined')\n\t\t{\n\t\t\tfor (p in ce2.prototype)\n\t\t\t\tif (typeof (ce.prototype[p]) === 'undefined' || ce.prototype[p] === Object.prototype[p]) ce.prototype[p] = ce2.prototype[p];\n\t\t\tfor (p in ce2)\n\t\t\t\tif (typeof (ce[p]) === 'undefined') ce[p] = ce2[p];\n\t\t\tce.$baseCtor = ce2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar props = Object.getOwnPropertyNames(ce2.prototype);\n\t\t\tfor (var i = 0; i < props.length; i++)\n\t\t\t\tif (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) === 'undefined') Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));\n\t\t\tfor (p in ce2)\n\t\t\t\tif (typeof (ce[p]) === 'undefined') ce[p] = ce2[p];\n\t\t\tce.$baseCtor = ce2;\n\t\t}\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Path = function ()\n\t{\n\t\treturn [];\n\t};\n\n\tClipperLib.Path.prototype.push = Array.prototype.push;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Paths = function ()\n\t{\n\t\treturn []; // Was previously [[]], but caused problems when pushed\n\t};\n\n\tClipperLib.Paths.prototype.push = Array.prototype.push;\n\n\t// PolyTree & PolyNode start\n\t/**\n\t* @suppress {missingProperties}\n\t*/\n\tClipperLib.PolyNode = function ()\n\t{\n\t\tthis.m_Parent = null;\n\t\tthis.m_polygon = new ClipperLib.Path();\n\t\tthis.m_Index = 0;\n\t\tthis.m_jointype = 0;\n\t\tthis.m_endtype = 0;\n\t\tthis.m_Childs = [];\n\t\tthis.IsOpen = false;\n\t};\n\n\tClipperLib.PolyNode.prototype.IsHoleNode = function ()\n\t{\n\t\tvar result = true;\n\t\tvar node = this.m_Parent;\n\t\twhile (node !== null)\n\t\t{\n\t\t\tresult = !result;\n\t\t\tnode = node.m_Parent;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.PolyNode.prototype.ChildCount = function ()\n\t{\n\t\treturn this.m_Childs.length;\n\t};\n\n\tClipperLib.PolyNode.prototype.Contour = function ()\n\t{\n\t\treturn this.m_polygon;\n\t};\n\n\tClipperLib.PolyNode.prototype.AddChild = function (Child)\n\t{\n\t\tvar cnt = this.m_Childs.length;\n\t\tthis.m_Childs.push(Child);\n\t\tChild.m_Parent = this;\n\t\tChild.m_Index = cnt;\n\t};\n\n\tClipperLib.PolyNode.prototype.GetNext = function ()\n\t{\n\t\tif (this.m_Childs.length > 0)\n\t\t\treturn this.m_Childs[0];\n\t\telse\n\t\t\treturn this.GetNextSiblingUp();\n\t};\n\n\tClipperLib.PolyNode.prototype.GetNextSiblingUp = function ()\n\t{\n\t\tif (this.m_Parent === null)\n\t\t\treturn null;\n\t\telse if (this.m_Index === this.m_Parent.m_Childs.length - 1)\n\t\t\treturn this.m_Parent.GetNextSiblingUp();\n\t\telse\n\t\t\treturn this.m_Parent.m_Childs[this.m_Index + 1];\n\t};\n\n\tClipperLib.PolyNode.prototype.Childs = function ()\n\t{\n\t\treturn this.m_Childs;\n\t};\n\n\tClipperLib.PolyNode.prototype.Parent = function ()\n\t{\n\t\treturn this.m_Parent;\n\t};\n\n\tClipperLib.PolyNode.prototype.IsHole = function ()\n\t{\n\t\treturn this.IsHoleNode();\n\t};\n\n\t// PolyTree : PolyNode\n\t/**\n\t * @suppress {missingProperties}\n\t * @constructor\n\t */\n\tClipperLib.PolyTree = function ()\n\t{\n\t\tthis.m_AllPolys = [];\n\t\tClipperLib.PolyNode.call(this);\n\t};\n\n\tClipperLib.PolyTree.prototype.Clear = function ()\n\t{\n\t\tfor (var i = 0, ilen = this.m_AllPolys.length; i < ilen; i++)\n\t\t\tthis.m_AllPolys[i] = null;\n\t\tthis.m_AllPolys.length = 0;\n\t\tthis.m_Childs.length = 0;\n\t};\n\n\tClipperLib.PolyTree.prototype.GetFirst = function ()\n\t{\n\t\tif (this.m_Childs.length > 0)\n\t\t\treturn this.m_Childs[0];\n\t\telse\n\t\t\treturn null;\n\t};\n\n\tClipperLib.PolyTree.prototype.Total = function ()\n\t{\n\t\tvar result = this.m_AllPolys.length;\n\t\t//with negative offsets, ignore the hidden outer polygon ...\n\t\tif (result > 0 && this.m_Childs[0] !== this.m_AllPolys[0]) result--;\n\t\treturn result;\n\t};\n\n\tInherit(ClipperLib.PolyTree, ClipperLib.PolyNode);\n\n\t// PolyTree & PolyNode end\n\n\tClipperLib.Clear = function (a)\n\t{\n\t\ta.length = 0;\n\t};\n\n\t//ClipperLib.MaxSteps = 64; // How many steps at maximum in arc in BuildArc() function\n\tClipperLib.PI = 3.141592653589793;\n\tClipperLib.PI2 = 2 * 3.141592653589793;\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FPoint = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\talen = a.length;\n\t\tthis.X = 0;\n\t\tthis.Y = 0;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\tthis.Z = 0;\n\t\t\tif (alen === 3) // public FPoint(cInt x, cInt y, cInt z = 0)\n\t\t\t{\n\t\t\t\tthis.X = a[0];\n\t\t\t\tthis.Y = a[1];\n\t\t\t\tthis.Z = a[2];\n\t\t\t}\n\t\t\telse if (alen === 2) // public FPoint(cInt x, cInt y)\n\t\t\t{\n\t\t\t\tthis.X = a[0];\n\t\t\t\tthis.Y = a[1];\n\t\t\t\tthis.Z = 0;\n\t\t\t}\n\t\t\telse if (alen === 1)\n\t\t\t{\n\t\t\t\tif (a[0] instanceof ClipperLib.FPoint) // public FPoint(FPoint dp)\n\t\t\t\t{\n\t\t\t\t\tvar dp = a[0];\n\t\t\t\t\tthis.X = dp.X;\n\t\t\t\t\tthis.Y = dp.Y;\n\t\t\t\t\tthis.Z = 0;\n\t\t\t\t}\n\t\t\t\telse // public FPoint(FPoint pt)\n\t\t\t\t{\n\t\t\t\t\tvar pt = a[0];\n\t\t\t\t\tif (typeof (pt.Z) === \"undefined\") pt.Z = 0;\n\t\t\t\t\tthis.X = pt.X;\n\t\t\t\t\tthis.Y = pt.Y;\n\t\t\t\t\tthis.Z = pt.Z;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse // public FPoint()\n\t\t\t{\n\t\t\t\tthis.X = 0;\n\t\t\t\tthis.Y = 0;\n\t\t\t\tthis.Z = 0;\n\t\t\t}\n\t\t}\n\t\telse // if (!ClipperLib.use_xyz)\n\t\t{\n\t\t\tif (alen === 2) // public FPoint(cInt X, cInt Y)\n\t\t\t{\n\t\t\t\tthis.X = a[0];\n\t\t\t\tthis.Y = a[1];\n\t\t\t}\n\t\t\telse if (alen === 1)\n\t\t\t{\n\t\t\t\tif (a[0] instanceof ClipperLib.FPoint) // public FPoint(FPoint dp)\n\t\t\t\t{\n\t\t\t\t\tvar dp = a[0];\n\t\t\t\t\tthis.X = dp.X;\n\t\t\t\t\tthis.Y = dp.Y;\n\t\t\t\t}\n\t\t\t\telse // public FPoint(FPoint pt)\n\t\t\t\t{\n\t\t\t\t\tvar pt = a[0];\n\t\t\t\t\tthis.X = pt.X;\n\t\t\t\t\tthis.Y = pt.Y;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse // public FPoint(FPoint pt)\n\t\t\t{\n\t\t\t\tthis.X = 0;\n\t\t\t\tthis.Y = 0;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.FPoint.op_Equality = function (a, b)\n\t{\n\t\t//return a == b;\n\t\treturn a.X === b.X && a.Y === b.Y;\n\t};\n\n\tClipperLib.FPoint.op_Inequality = function (a, b)\n\t{\n\t\t//return a !== b;\n\t\treturn a.X !== b.X || a.Y !== b.Y;\n\t};\n\n\t/*\n  ClipperLib.FPoint.prototype.Equals = function (obj)\n  {\n    if (obj === null)\n        return false;\n    if (obj instanceof ClipperLib.FPoint)\n    {\n        var a = Cast(obj, ClipperLib.FPoint);\n        return (this.X == a.X) && (this.Y == a.Y);\n    }\n    else\n        return false;\n  };\n\n\t*/\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FPoint0 = function ()\n\t{\n\t\tthis.X = 0;\n\t\tthis.Y = 0;\n\t\tif (ClipperLib.use_xyz)\n\t\t\tthis.Z = 0;\n\t};\n\n\tClipperLib.FPoint0.prototype = ClipperLib.FPoint.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FPoint1 = function (pt)\n\t{\n\t\tthis.X = pt.X;\n\t\tthis.Y = pt.Y;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\tif (typeof pt.Z === \"undefined\") this.Z = 0;\n\t\t\telse this.Z = pt.Z;\n\t\t}\n\t};\n\n\tClipperLib.FPoint1.prototype = ClipperLib.FPoint.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FPoint1dp = function (dp)\n\t{\n\t\tthis.X = dp.X;\n\t\tthis.Y = dp.Y;\n\t\tif (ClipperLib.use_xyz)\n\t\t\tthis.Z = 0;\n\t};\n\n\tClipperLib.FPoint1dp.prototype = ClipperLib.FPoint.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FPoint2 = function (x, y, z)\n\t{\n\t\tthis.X = x;\n\t\tthis.Y = y;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\tif (typeof z === \"undefined\") this.Z = 0;\n\t\t\telse this.Z = z;\n\t\t}\n\t};\n\n\tClipperLib.FPoint2.prototype = ClipperLib.FPoint.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FRect = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\talen = a.length;\n\t\tif (alen === 4) // function (l, t, r, b)\n\t\t{\n\t\t\tthis.left = a[0];\n\t\t\tthis.top = a[1];\n\t\t\tthis.right = a[2];\n\t\t\tthis.bottom = a[3];\n\t\t}\n\t\telse if (alen === 1) // function (ir)\n\t\t{\n\t\t\tvar ir = a[0];\n\t\t\tthis.left = ir.left;\n\t\t\tthis.top = ir.top;\n\t\t\tthis.right = ir.right;\n\t\t\tthis.bottom = ir.bottom;\n\t\t}\n\t\telse // function ()\n\t\t{\n\t\t\tthis.left = 0;\n\t\t\tthis.top = 0;\n\t\t\tthis.right = 0;\n\t\t\tthis.bottom = 0;\n\t\t}\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FRect0 = function ()\n\t{\n\t\tthis.left = 0;\n\t\tthis.top = 0;\n\t\tthis.right = 0;\n\t\tthis.bottom = 0;\n\t};\n\n\tClipperLib.FRect0.prototype = ClipperLib.FRect.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FRect1 = function (ir)\n\t{\n\t\tthis.left = ir.left;\n\t\tthis.top = ir.top;\n\t\tthis.right = ir.right;\n\t\tthis.bottom = ir.bottom;\n\t};\n\n\tClipperLib.FRect1.prototype = ClipperLib.FRect.prototype;\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.FRect4 = function (l, t, r, b)\n\t{\n\t\tthis.left = l;\n\t\tthis.top = t;\n\t\tthis.right = r;\n\t\tthis.bottom = b;\n\t};\n\n\tClipperLib.FRect4.prototype = ClipperLib.FRect.prototype;\n\n\tClipperLib.ClipType = {\n\t\tctIntersection: 0,\n\t\tctUnion: 1,\n\t\tctDifference: 2,\n\t\tctXor: 3\n\t};\n\n\tClipperLib.PolyType = {\n\t\tptSubject: 0,\n\t\tptClip: 1\n\t};\n\n\tClipperLib.PolyFillType = {\n\t\tpftEvenOdd: 0,\n\t\tpftNonZero: 1,\n\t\tpftPositive: 2,\n\t\tpftNegative: 3\n\t};\n\n\tClipperLib.JoinType = {\n\t\tjtSquare: 0,\n\t\tjtRound: 1,\n\t\tjtMiter: 2\n\t};\n\n\tClipperLib.EndType = {\n\t\tetOpenSquare: 0,\n\t\tetOpenRound: 1,\n\t\tetOpenButt: 2,\n\t\tetClosedLine: 3,\n\t\tetClosedPolygon: 4\n\t};\n\n\tClipperLib.EdgeSide = {\n\t\tesLeft: 0,\n\t\tesRight: 1\n\t};\n\n\tClipperLib.Direction = {\n\t\tdRightToLeft: 0,\n\t\tdLeftToRight: 1\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.TEdge = function ()\n\t{\n\t\tthis.Bot = new ClipperLib.FPoint0();\n\t\tthis.Curr = new ClipperLib.FPoint0(); //current (updated for every new scanbeam)\n\t\tthis.Top = new ClipperLib.FPoint0();\n\t\tthis.Delta = new ClipperLib.FPoint0();\n\t\tthis.Dx = 0;\n\t\tthis.PolyTyp = ClipperLib.PolyType.ptSubject;\n\t\tthis.Side = ClipperLib.EdgeSide.esLeft; //side only refers to current side of solution poly\n\t\tthis.WindDelta = 0; //1 or -1 depending on winding direction\n\t\tthis.WindCnt = 0;\n\t\tthis.WindCnt2 = 0; //winding count of the opposite polytype\n\t\tthis.OutIdx = 0;\n\t\tthis.Next = null;\n\t\tthis.Prev = null;\n\t\tthis.NextInLML = null;\n\t\tthis.NextInAEL = null;\n\t\tthis.PrevInAEL = null;\n\t\tthis.NextInSEL = null;\n\t\tthis.PrevInSEL = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.IntersectNode = function ()\n\t{\n\t\tthis.Edge1 = null;\n\t\tthis.Edge2 = null;\n\t\tthis.Pt = new ClipperLib.FPoint0();\n\t};\n\n\tClipperLib.MyIntersectNodeSort = function () {};\n\n\tClipperLib.MyIntersectNodeSort.Compare = function (node1, node2)\n\t{\n\t\tvar i = node2.Pt.Y - node1.Pt.Y;\n\t\tif (i > 0) return 1;\n\t\telse if (i < 0) return -1;\n\t\telse return 0;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.LocalMinima = function ()\n\t{\n\t\tthis.Y = 0;\n\t\tthis.LeftBound = null;\n\t\tthis.RightBound = null;\n\t\tthis.Next = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Scanbeam = function ()\n\t{\n\t\tthis.Y = 0;\n\t\tthis.Next = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Maxima = function ()\n\t{\n\t\tthis.X = 0;\n\t\tthis.Next = null;\n\t\tthis.Prev = null;\n\t};\n\n\t//OutRec: contains a path in the clipping solution. Edges in the AEL will\n\t//carry a pointer to an OutRec when they are part of the clipping solution.\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.OutRec = function ()\n\t{\n\t\tthis.Idx = 0;\n\t\tthis.IsHole = false;\n\t\tthis.IsOpen = false;\n\t\tthis.FirstLeft = null; //see comments in clipper.pas\n\t\tthis.Pts = null;\n\t\tthis.BottomPt = null;\n\t\tthis.PolyNode = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.OutPt = function ()\n\t{\n\t\tthis.Idx = 0;\n\t\tthis.Pt = new ClipperLib.FPoint0();\n\t\tthis.Next = null;\n\t\tthis.Prev = null;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.Join = function ()\n\t{\n\t\tthis.OutPt1 = null;\n\t\tthis.OutPt2 = null;\n\t\tthis.OffPt = new ClipperLib.FPoint0();\n\t};\n\n\tClipperLib.ClipperBase = function ()\n\t{\n\t\tthis.m_MinimaList = null;\n\t\tthis.m_CurrentLM = null;\n\t\tthis.m_edges = new Array();\n\t\tthis.m_HasOpenPaths = false;\n\t\tthis.PreserveCollinear = false;\n\t\tthis.m_Scanbeam = null;\n\t\tthis.m_PolyOuts = null;\n\t\tthis.m_ActiveEdges = null;\n\t};\n\n\tClipperLib.ClipperBase.horizontal = -3.4E+38;\n\tClipperLib.ClipperBase.Skip = -2;\n\tClipperLib.ClipperBase.Unassigned = -1;\n\tClipperLib.ClipperBase.tolerance = 1E-20;\n\n\t// The MAX_VALUE property has a value of 1.7976931348623157e+308. Values larger than MAX_VALUE are represented as \"Infinity\".\n\t//MIN_VALUE has a value of 5e-324. Values smaller than MIN_VALUE (\"underflow values\") are converted to 0.\n\tClipperLib.ClipperBase.maxValue = Math.sqrt(Number.MAX_VALUE); // 1.3407807929942596e+154\n\tClipperLib.ClipperBase.minValue = Math.sqrt(Number.MIN_VALUE); // 2.2227587494850775e-162\n\n\tClipperLib.ClipperBase.near_zero = function (val)\n\t{\n\t\treturn (val > -ClipperLib.ClipperBase.tolerance) && (val < ClipperLib.ClipperBase.tolerance);\n\t};\n\n\tClipperLib.ClipperBase.IsHorizontal = function (e)\n\t{\n\t\treturn e.Delta.Y === 0;\n\t};\n\n\tClipperLib.ClipperBase.prototype.PointIsVertex = function (pt, pp)\n\t{\n\t\tvar pp2 = pp;\n\t\tdo {\n\t\t\tif (ClipperLib.FPoint.op_Equality(pp2.Pt, pt))\n\t\t\t\treturn true;\n\t\t\tpp2 = pp2.Next;\n\t\t}\n\t\twhile (pp2 !== pp)\n\t\treturn false;\n\t};\n\n\tClipperLib.ClipperBase.prototype.PointOnLineSegment = function (pt, linePt1, linePt2)\n\t{\n\t\t\treturn ((pt.X === linePt1.X) && (pt.Y === linePt1.Y)) || ((pt.X === linePt2.X) && (pt.Y === linePt2.Y)) || (((pt.X > linePt1.X) === (pt.X < linePt2.X)) && ((pt.Y > linePt1.Y) === (pt.Y < linePt2.Y)) && ((pt.X - linePt1.X) * (linePt2.Y - linePt1.Y) === (linePt2.X - linePt1.X) * (pt.Y - linePt1.Y)));\n\t};\n\n\tClipperLib.ClipperBase.prototype.PointOnPolygon = function (pt, pp)\n\t{\n\t\tvar pp2 = pp;\n\t\twhile (true)\n\t\t{\n\t\t\tif (this.PointOnLineSegment(pt, pp2.Pt, pp2.Next.Pt))\n\t\t\t\treturn true;\n\t\t\tpp2 = pp2.Next;\n\t\t\tif (pp2 === pp)\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t};\n\n\tClipperLib.ClipperBase.prototype.SlopesEqual = ClipperLib.ClipperBase.SlopesEqual = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\talen = a.length;\n\t\tvar e1, e2, pt1, pt2, pt3, pt4;\n\t\tif (alen === 2) // function (e1, e2)\n\t\t{\n\t\t\te1 = a[0];\n\t\t\te2 = a[1];\n\t\t\treturn e1.Delta.Y * e2.Delta.X === e1.Delta.X * e2.Delta.Y;\n\t\t}\n\t\telse if (alen === 3) // function (pt1, pt2, pt3)\n\t\t{\n\t\t\tpt1 = a[0];\n\t\t\tpt2 = a[1];\n\t\t\tpt3 = a[2];\n\t\t\treturn (pt1.Y - pt2.Y) * (pt2.X - pt3.X) - (pt1.X - pt2.X) * (pt2.Y - pt3.Y) === 0;\n\t\t}\n\t\telse // function (pt1, pt2, pt3, pt4)\n\t\t{\n\t\t\tpt1 = a[0];\n\t\t\tpt2 = a[1];\n\t\t\tpt3 = a[2];\n\t\t\tpt4 = a[3];\n\t\t\treturn (pt1.Y - pt2.Y) * (pt3.X - pt4.X) - (pt1.X - pt2.X) * (pt3.Y - pt4.Y) === 0;\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.SlopesEqual3 = function (e1, e2)\n\t{\n\t\treturn e1.Delta.Y * e2.Delta.X === e1.Delta.X * e2.Delta.Y;\n\t};\n\n\tClipperLib.ClipperBase.SlopesEqual4 = function (pt1, pt2, pt3)\n\t{\n\t\treturn (pt1.Y - pt2.Y) * (pt2.X - pt3.X) - (pt1.X - pt2.X) * (pt2.Y - pt3.Y) === 0;\n\t};\n\n\tClipperLib.ClipperBase.SlopesEqual5 = function (pt1, pt2, pt3, pt4)\n\t{\n\t\treturn (pt1.Y - pt2.Y) * (pt3.X - pt4.X) - (pt1.X - pt2.X) * (pt3.Y - pt4.Y) === 0;\n\t};\n\n\tClipperLib.ClipperBase.prototype.Clear = function ()\n\t{\n\t\tthis.DisposeLocalMinimaList();\n\t\tfor (var i = 0, ilen = this.m_edges.length; i < ilen; ++i)\n\t\t{\n\t\t\tfor (var j = 0, jlen = this.m_edges[i].length; j < jlen; ++j)\n\t\t\t\tthis.m_edges[i][j] = null;\n\t\t\tClipperLib.Clear(this.m_edges[i]);\n\t\t}\n\t\tClipperLib.Clear(this.m_edges);\n\t\tthis.m_HasOpenPaths = false;\n\t};\n\n\tClipperLib.ClipperBase.prototype.DisposeLocalMinimaList = function ()\n\t{\n\t\twhile (this.m_MinimaList !== null)\n\t\t{\n\t\t\tvar tmpLm = this.m_MinimaList.Next;\n\t\t\tthis.m_MinimaList = null;\n\t\t\tthis.m_MinimaList = tmpLm;\n\t\t}\n\t\tthis.m_CurrentLM = null;\n\t};\n\n\tClipperLib.ClipperBase.prototype.RangeTest = function (pt)\n\t{\n\t\tif(pt.X > ClipperLib.ClipperBase.maxValue || pt.X < -ClipperLib.ClipperBase.maxValue\n\t\t|| pt.Y > ClipperLib.ClipperBase.maxValue || pt.Y < -ClipperLib.ClipperBase.maxValue\n|| (pt.X > 0 && pt.X < ClipperLib.ClipperBase.minValue)\n|| (pt.Y > 0 && pt.Y < ClipperLib.ClipperBase.minValue)\n|| (pt.X < 0 && pt.X > -ClipperLib.ClipperBase.minValue)\n|| (pt.Y < 0 && pt.Y > -ClipperLib.ClipperBase.minValue))\n\t\t\tClipperLib.Error(\"Coordinate outside allowed range in RangeTest().\");\n\t};\n\n\tClipperLib.ClipperBase.prototype.InitEdge = function (e, eNext, ePrev, pt)\n\t{\n\t\te.Next = eNext;\n\t\te.Prev = ePrev;\n\t\t//e.Curr = pt;\n\t\te.Curr.X = pt.X;\n\t\te.Curr.Y = pt.Y;\n\t\tif (ClipperLib.use_xyz) e.Curr.Z = pt.Z;\n\t\te.OutIdx = -1;\n\t};\n\n\tClipperLib.ClipperBase.prototype.InitEdge2 = function (e, polyType)\n\t{\n\t\tif (e.Curr.Y >= e.Next.Curr.Y)\n\t\t{\n\t\t\t//e.Bot = e.Curr;\n\t\t\te.Bot.X = e.Curr.X;\n\t\t\te.Bot.Y = e.Curr.Y;\n\t\t\tif (ClipperLib.use_xyz) e.Bot.Z = e.Curr.Z;\n\t\t\t//e.Top = e.Next.Curr;\n\t\t\te.Top.X = e.Next.Curr.X;\n\t\t\te.Top.Y = e.Next.Curr.Y;\n\t\t\tif (ClipperLib.use_xyz) e.Top.Z = e.Next.Curr.Z;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//e.Top = e.Curr;\n\t\t\te.Top.X = e.Curr.X;\n\t\t\te.Top.Y = e.Curr.Y;\n\t\t\tif (ClipperLib.use_xyz) e.Top.Z = e.Curr.Z;\n\t\t\t//e.Bot = e.Next.Curr;\n\t\t\te.Bot.X = e.Next.Curr.X;\n\t\t\te.Bot.Y = e.Next.Curr.Y;\n\t\t\tif (ClipperLib.use_xyz) e.Bot.Z = e.Next.Curr.Z;\n\t\t}\n\t\tthis.SetDx(e);\n\t\te.PolyTyp = polyType;\n\t};\n\n\tClipperLib.ClipperBase.prototype.FindNextLocMin = function (E)\n\t{\n\t\tvar E2;\n\t\tfor (;;)\n\t\t{\n\t\t\twhile (ClipperLib.FPoint.op_Inequality(E.Bot, E.Prev.Bot) || ClipperLib.FPoint.op_Equality(E.Curr, E.Top))\n\t\t\t\tE = E.Next;\n\t\t\tif (E.Dx !== ClipperLib.ClipperBase.horizontal && E.Prev.Dx !== ClipperLib.ClipperBase.horizontal)\n\t\t\t\tbreak;\n\t\t\twhile (E.Prev.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t\t\tE = E.Prev;\n\t\t\tE2 = E;\n\t\t\twhile (E.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t\t\tE = E.Next;\n\t\t\tif (E.Top.Y === E.Prev.Bot.Y)\n\t\t\t\tcontinue;\n\t\t\t//ie just an intermediate horz.\n\t\t\tif (E2.Prev.Bot.X < E.Bot.X)\n\t\t\t\tE = E2;\n\t\t\tbreak;\n\t\t}\n\t\treturn E;\n\t};\n\n\tClipperLib.ClipperBase.prototype.ProcessBound = function (E, LeftBoundIsForward)\n\t{\n\t\tvar EStart;\n\t\tvar Result = E;\n\t\tvar Horz;\n\n\t\tif (Result.OutIdx === ClipperLib.ClipperBase.Skip)\n\t\t{\n\t\t\t//check if there are edges beyond the skip edge in the bound and if so\n\t\t\t//create another LocMin and calling ProcessBound once more ...\n\t\t\tE = Result;\n\t\t\tif (LeftBoundIsForward)\n\t\t\t{\n\t\t\t\twhile (E.Top.Y === E.Next.Bot.Y) E = E.Next;\n\t\t\t\twhile (E !== Result && E.Dx === ClipperLib.ClipperBase.horizontal) E = E.Prev;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile (E.Top.Y === E.Prev.Bot.Y) E = E.Prev;\n\t\t\t\twhile (E !== Result && E.Dx === ClipperLib.ClipperBase.horizontal) E = E.Next;\n\t\t\t}\n\t\t\tif (E === Result)\n\t\t\t{\n\t\t\t\tif (LeftBoundIsForward) Result = E.Next;\n\t\t\t\telse Result = E.Prev;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//there are more edges in the bound beyond result starting with E\n\t\t\t\tif (LeftBoundIsForward)\n\t\t\t\t\tE = Result.Next;\n\t\t\t\telse\n\t\t\t\t\tE = Result.Prev;\n\t\t\t\tvar locMin = new ClipperLib.LocalMinima();\n\t\t\t\tlocMin.Next = null;\n\t\t\t\tlocMin.Y = E.Bot.Y;\n\t\t\t\tlocMin.LeftBound = null;\n\t\t\t\tlocMin.RightBound = E;\n\t\t\t\tE.WindDelta = 0;\n\t\t\t\tResult = this.ProcessBound(E, LeftBoundIsForward);\n\t\t\t\tthis.InsertLocalMinima(locMin);\n\t\t\t}\n\t\t\treturn Result;\n\t\t}\n\n\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t{\n\t\t\t//We need to be careful with open paths because this may not be a\n\t\t\t//true local minima (ie E may be following a skip edge).\n\t\t\t//Also, consecutive horz. edges may start heading left before going right.\n\t\t\tif (LeftBoundIsForward) EStart = E.Prev;\n\t\t\telse EStart = E.Next;\n\n\t\t\tif (EStart.Dx === ClipperLib.ClipperBase.horizontal) //ie an adjoining horizontal skip edge\n\t\t\t{\n\t\t\t\tif (EStart.Bot.X !== E.Bot.X && EStart.Top.X !== E.Bot.X)\n\t\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\t}\n\t\t\telse if (EStart.Bot.X !== E.Bot.X)\n\t\t\t\tthis.ReverseHorizontal(E);\n\t\t}\n\n\t\tEStart = E;\n\t\tif (LeftBoundIsForward)\n\t\t{\n\t\t\twhile (Result.Top.Y === Result.Next.Bot.Y && Result.Next.OutIdx !== ClipperLib.ClipperBase.Skip)\n\t\t\t\tResult = Result.Next;\n\t\t\tif (Result.Dx === ClipperLib.ClipperBase.horizontal && Result.Next.OutIdx !== ClipperLib.ClipperBase.Skip)\n\t\t\t{\n\t\t\t\t//nb: at the top of a bound, horizontals are added to the bound\n\t\t\t\t//only when the preceding edge attaches to the horizontal's left vertex\n\t\t\t\t//unless a Skip edge is encountered when that becomes the top divide\n\t\t\t\tHorz = Result;\n\t\t\t\twhile (Horz.Prev.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t\t\t\tHorz = Horz.Prev;\n\t\t\t\tif (Horz.Prev.Top.X > Result.Next.Top.X)\n\t\t\t\t\tResult = Horz.Prev;\n\t\t\t}\n\t\t\twhile (E !== Result)\n\t\t\t{\n\t\t\t\tE.NextInLML = E.Next;\n\t\t\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Prev.Top.X)\n\t\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\t\tE = E.Next;\n\t\t\t}\n\t\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Prev.Top.X)\n\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\tResult = Result.Next;\n\t\t\t//move to the edge just beyond current bound\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile (Result.Top.Y === Result.Prev.Bot.Y && Result.Prev.OutIdx !== ClipperLib.ClipperBase.Skip)\n\t\t\t\tResult = Result.Prev;\n\t\t\tif (Result.Dx === ClipperLib.ClipperBase.horizontal && Result.Prev.OutIdx !== ClipperLib.ClipperBase.Skip)\n\t\t\t{\n\t\t\t\tHorz = Result;\n\t\t\t\twhile (Horz.Next.Dx === ClipperLib.ClipperBase.horizontal)\n\t\t\t\t\tHorz = Horz.Next;\n\t\t\t\tif (Horz.Next.Top.X === Result.Prev.Top.X || Horz.Next.Top.X > Result.Prev.Top.X)\n\t\t\t\t{\n\t\t\t\t\tResult = Horz.Next;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (E !== Result)\n\t\t\t{\n\t\t\t\tE.NextInLML = E.Prev;\n\t\t\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Next.Top.X)\n\t\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\t\tE = E.Prev;\n\t\t\t}\n\t\t\tif (E.Dx === ClipperLib.ClipperBase.horizontal && E !== EStart && E.Bot.X !== E.Next.Top.X)\n\t\t\t\tthis.ReverseHorizontal(E);\n\t\t\tResult = Result.Prev;\n\t\t\t//move to the edge just beyond current bound\n\t\t}\n\n\t\treturn Result;\n\t};\n\n\tClipperLib.ClipperBase.prototype.AddPath = function (pg, polyType, Closed)\n\t{\n\t\tif (ClipperLib.use_lines)\n\t\t{\n\t\t\tif (!Closed && polyType === ClipperLib.PolyType.ptClip)\n\t\t\t\tClipperLib.Error(\"AddPath: Open paths must be subject.\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!Closed)\n\t\t\t\tClipperLib.Error(\"AddPath: Open paths have been disabled.\");\n\t\t}\n\t\tvar highI = pg.length - 1;\n\t\tif (Closed)\n\t\t\twhile (highI > 0 && (ClipperLib.FPoint.op_Equality(pg[highI], pg[0])))\n\t\t\t\t--highI;\n\t\twhile (highI > 0 && (ClipperLib.FPoint.op_Equality(pg[highI], pg[highI - 1])))\n\t\t\t--highI;\n\t\tif ((Closed && highI < 2) || (!Closed && highI < 1))\n\t\t\treturn false;\n\t\t//create a new edge array ...\n\t\tvar edges = new Array();\n\t\tfor (var i = 0; i <= highI; i++)\n\t\t\tedges.push(new ClipperLib.TEdge());\n\t\tvar IsFlat = true;\n\t\t//1. Basic (first) edge initialization ...\n\n\t\t//edges[1].Curr = pg[1];\n\t\tedges[1].Curr.X = pg[1].X;\n\t\tedges[1].Curr.Y = pg[1].Y;\n\t\tif (ClipperLib.use_xyz) edges[1].Curr.Z = pg[1].Z;\n\n\t\tthis.RangeTest(pg[0]);\n\n\t\tthis.RangeTest(pg[highI]);\n\n\t\tthis.InitEdge(edges[0], edges[1], edges[highI], pg[0]);\n\t\tthis.InitEdge(edges[highI], edges[0], edges[highI - 1], pg[highI]);\n\t\tfor (var i = highI - 1; i >= 1; --i)\n\t\t{\n\t\t\tthis.RangeTest(pg[i]);\n\n\t\t\tthis.InitEdge(edges[i], edges[i + 1], edges[i - 1], pg[i]);\n\t\t}\n\n\t\tvar eStart = edges[0];\n\t\t//2. Remove duplicate vertices, and (when closed) collinear edges ...\n\t\tvar E = eStart,\n\t\t\teLoopStop = eStart;\n\t\tfor (;;)\n\t\t{\n\t\t\t//console.log(E.Next, eStart);\n\t\t\t//nb: allows matching start and end points when not Closed ...\n\t\t\tif (E.Curr === E.Next.Curr && (Closed || E.Next !== eStart))\n\t\t\t{\n\t\t\t\tif (E === E.Next)\n\t\t\t\t\tbreak;\n\t\t\t\tif (E === eStart)\n\t\t\t\t\teStart = E.Next;\n\t\t\t\tE = this.RemoveEdge(E);\n\t\t\t\teLoopStop = E;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (E.Prev === E.Next)\n\t\t\t\tbreak;\n\t\t\telse if (Closed && ClipperLib.ClipperBase.SlopesEqual4(E.Prev.Curr, E.Curr, E.Next.Curr) && (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(E.Prev.Curr, E.Curr, E.Next.Curr)))\n\t\t\t{\n\t\t\t\t//Collinear edges are allowed for open paths but in closed paths\n\t\t\t\t//the default is to merge adjacent collinear edges into a single edge.\n\t\t\t\t//However, if the PreserveCollinear property is enabled, only overlapping\n\t\t\t\t//collinear edges (ie spikes) will be removed from closed paths.\n\t\t\t\tif (E === eStart)\n\t\t\t\t\teStart = E.Next;\n\t\t\t\tE = this.RemoveEdge(E);\n\t\t\t\tE = E.Prev;\n\t\t\t\teLoopStop = E;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tE = E.Next;\n\t\t\tif ((E === eLoopStop) || (!Closed && E.Next === eStart)) break;\n\t\t}\n\t\tif ((!Closed && (E === E.Next)) || (Closed && (E.Prev === E.Next)))\n\t\t\treturn false;\n\t\tif (!Closed)\n\t\t{\n\t\t\tthis.m_HasOpenPaths = true;\n\t\t\teStart.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n\t\t}\n\t\t//3. Do second stage of edge initialization ...\n\t\tE = eStart;\n\t\tdo {\n\t\t\tthis.InitEdge2(E, polyType);\n\t\t\tE = E.Next;\n\t\t\tif (IsFlat && E.Curr.Y !== eStart.Curr.Y)\n\t\t\t\tIsFlat = false;\n\t\t}\n\t\twhile (E !== eStart)\n\t\t//4. Finally, add edge bounds to LocalMinima list ...\n\t\t//Totally flat paths must be handled differently when adding them\n\t\t//to LocalMinima list to avoid endless loops etc ...\n\t\tif (IsFlat)\n\t\t{\n\t\t\tif (Closed)\n\t\t\t\treturn false;\n\n\t\t\tE.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n\n\t\t\tvar locMin = new ClipperLib.LocalMinima();\n\t\t\tlocMin.Next = null;\n\t\t\tlocMin.Y = E.Bot.Y;\n\t\t\tlocMin.LeftBound = null;\n\t\t\tlocMin.RightBound = E;\n\t\t\tlocMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n\t\t\tlocMin.RightBound.WindDelta = 0;\n\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\tif (E.Bot.X !== E.Prev.Top.X) this.ReverseHorizontal(E);\n\t\t\t\tif (E.Next.OutIdx === ClipperLib.ClipperBase.Skip) break;\n\t\t\t\tE.NextInLML = E.Next;\n\t\t\t\tE = E.Next;\n\t\t\t}\n\t\t\tthis.InsertLocalMinima(locMin);\n\t\t\tthis.m_edges.push(edges);\n\t\t\treturn true;\n\t\t}\n\t\tthis.m_edges.push(edges);\n\t\tvar leftBoundIsForward;\n\t\tvar EMin = null;\n\n\t\t//workaround to avoid an endless loop in the while loop below when\n\t\t//open paths have matching start and end points ...\n\t\tif (ClipperLib.FPoint.op_Equality(E.Prev.Bot, E.Prev.Top))\n\t\t\tE = E.Next;\n\n\t\tfor (;;)\n\t\t{\n\t\t\tE = this.FindNextLocMin(E);\n\t\t\tif (E === EMin)\n\t\t\t\tbreak;\n\t\t\telse if (EMin === null)\n\t\t\t\tEMin = E;\n\t\t\t//E and E.Prev now share a local minima (left aligned if horizontal).\n\t\t\t//Compare their slopes to find which starts which bound ...\n\t\t\tvar locMin = new ClipperLib.LocalMinima();\n\t\t\tlocMin.Next = null;\n\t\t\tlocMin.Y = E.Bot.Y;\n\t\t\tif (E.Dx < E.Prev.Dx)\n\t\t\t{\n\t\t\t\tlocMin.LeftBound = E.Prev;\n\t\t\t\tlocMin.RightBound = E;\n\t\t\t\tleftBoundIsForward = false;\n\t\t\t\t//Q.nextInLML = Q.prev\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlocMin.LeftBound = E;\n\t\t\t\tlocMin.RightBound = E.Prev;\n\t\t\t\tleftBoundIsForward = true;\n\t\t\t\t//Q.nextInLML = Q.next\n\t\t\t}\n\t\t\tlocMin.LeftBound.Side = ClipperLib.EdgeSide.esLeft;\n\t\t\tlocMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n\t\t\tif (!Closed)\n\t\t\t\tlocMin.LeftBound.WindDelta = 0;\n\t\t\telse if (locMin.LeftBound.Next === locMin.RightBound)\n\t\t\t\tlocMin.LeftBound.WindDelta = -1;\n\t\t\telse\n\t\t\t\tlocMin.LeftBound.WindDelta = 1;\n\t\t\tlocMin.RightBound.WindDelta = -locMin.LeftBound.WindDelta;\n\t\t\tE = this.ProcessBound(locMin.LeftBound, leftBoundIsForward);\n\t\t\tif (E.OutIdx === ClipperLib.ClipperBase.Skip)\n\t\t\t\tE = this.ProcessBound(E, leftBoundIsForward);\n\t\t\tvar E2 = this.ProcessBound(locMin.RightBound, !leftBoundIsForward);\n\t\t\tif (E2.OutIdx === ClipperLib.ClipperBase.Skip) E2 = this.ProcessBound(E2, !leftBoundIsForward);\n\t\t\tif (locMin.LeftBound.OutIdx === ClipperLib.ClipperBase.Skip)\n\t\t\t\tlocMin.LeftBound = null;\n\t\t\telse if (locMin.RightBound.OutIdx === ClipperLib.ClipperBase.Skip)\n\t\t\t\tlocMin.RightBound = null;\n\t\t\tthis.InsertLocalMinima(locMin);\n\t\t\tif (!leftBoundIsForward)\n\t\t\t\tE = E2;\n\t\t}\n\t\treturn true;\n\t};\n\n\tClipperLib.ClipperBase.prototype.AddPaths = function (ppg, polyType, closed)\n\t{\n\t\t//  console.log(\"-------------------------------------------\");\n\t\t//  console.log(JSON.stringify(ppg));\n\t\tvar result = false;\n\t\tfor (var i = 0, ilen = ppg.length; i < ilen; ++i)\n\t\t\tif (this.AddPath(ppg[i], polyType, closed))\n\t\t\t\tresult = true;\n\t\treturn result;\n\t};\n\n\tClipperLib.ClipperBase.prototype.Pt2IsBetweenPt1AndPt3 = function (pt1, pt2, pt3)\n\t{\n\t\tif ((ClipperLib.FPoint.op_Equality(pt1, pt3)) || (ClipperLib.FPoint.op_Equality(pt1, pt2)) || (ClipperLib.FPoint.op_Equality(pt3, pt2)))\n\n\t\t\t//if ((pt1 == pt3) || (pt1 == pt2) || (pt3 == pt2))\n\t\t\treturn false;\n\n\t\telse if (pt1.X !== pt3.X)\n\t\t\treturn (pt2.X > pt1.X) === (pt2.X < pt3.X);\n\t\telse\n\t\t\treturn (pt2.Y > pt1.Y) === (pt2.Y < pt3.Y);\n\t};\n\n\tClipperLib.ClipperBase.prototype.RemoveEdge = function (e)\n\t{\n\t\t//removes e from double_linked_list (but without removing from memory)\n\t\te.Prev.Next = e.Next;\n\t\te.Next.Prev = e.Prev;\n\t\tvar result = e.Next;\n\t\te.Prev = null; //flag as removed (see ClipperBase.Clear)\n\t\treturn result;\n\t};\n\n\tClipperLib.ClipperBase.prototype.SetDx = function (e)\n\t{\n\t\te.Delta.X = (e.Top.X - e.Bot.X);\n\t\te.Delta.Y = (e.Top.Y - e.Bot.Y);\n\t\tif (e.Delta.Y === 0) e.Dx = ClipperLib.ClipperBase.horizontal;\n\t\telse e.Dx = (e.Delta.X) / (e.Delta.Y);\n\t};\n\n\tClipperLib.ClipperBase.prototype.InsertLocalMinima = function (newLm)\n\t{\n\t\tif (this.m_MinimaList === null)\n\t\t{\n\t\t\tthis.m_MinimaList = newLm;\n\t\t}\n\t\telse if (newLm.Y >= this.m_MinimaList.Y)\n\t\t{\n\t\t\tnewLm.Next = this.m_MinimaList;\n\t\t\tthis.m_MinimaList = newLm;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar tmpLm = this.m_MinimaList;\n\t\t\twhile (tmpLm.Next !== null && (newLm.Y < tmpLm.Next.Y))\n\t\t\t\ttmpLm = tmpLm.Next;\n\t\t\tnewLm.Next = tmpLm.Next;\n\t\t\ttmpLm.Next = newLm;\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.PopLocalMinima = function (Y, current)\n\t{\n\t\tcurrent.v = this.m_CurrentLM;\n\t\tif (this.m_CurrentLM !== null && this.m_CurrentLM.Y === Y)\n\t\t{\n\t\t\tthis.m_CurrentLM = this.m_CurrentLM.Next;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tClipperLib.ClipperBase.prototype.ReverseHorizontal = function (e)\n\t{\n\t\t//swap horizontal edges' top and bottom x's so they follow the natural\n\t\t//progression of the bounds - ie so their xbots will align with the\n\t\t//adjoining lower edge. [Helpful in the ProcessHorizontal() method.]\n\t\tvar tmp = e.Top.X;\n\t\te.Top.X = e.Bot.X;\n\t\te.Bot.X = tmp;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\ttmp = e.Top.Z;\n\t\t\te.Top.Z = e.Bot.Z;\n\t\t\te.Bot.Z = tmp;\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.Reset = function ()\n\t{\n\t\tthis.m_CurrentLM = this.m_MinimaList;\n\t\tif (this.m_CurrentLM === null) //ie nothing to process\n\t\t\treturn;\n\t\t//reset all edges ...\n\t\tthis.m_Scanbeam = null;\n\t\tvar lm = this.m_MinimaList;\n\t\twhile (lm !== null)\n\t\t{\n\t\t\tthis.InsertScanbeam(lm.Y);\n\t\t\tvar e = lm.LeftBound;\n\t\t\tif (e !== null)\n\t\t\t{\n\t\t\t\t//e.Curr = e.Bot;\n\t\t\t\te.Curr.X = e.Bot.X;\n\t\t\t\te.Curr.Y = e.Bot.Y;\n\t\t\t\tif (ClipperLib.use_xyz) e.Curr.Z = e.Bot.Z;\n\t\t\t\te.OutIdx = ClipperLib.ClipperBase.Unassigned;\n\t\t\t}\n\t\t\te = lm.RightBound;\n\t\t\tif (e !== null)\n\t\t\t{\n\t\t\t\t//e.Curr = e.Bot;\n\t\t\t\te.Curr.X = e.Bot.X;\n\t\t\t\te.Curr.Y = e.Bot.Y;\n\t\t\t\tif (ClipperLib.use_xyz) e.Curr.Z = e.Bot.Z;\n\t\t\t\te.OutIdx = ClipperLib.ClipperBase.Unassigned;\n\t\t\t}\n\t\t\tlm = lm.Next;\n\t\t}\n\t\tthis.m_ActiveEdges = null;\n\t};\n\n\tClipperLib.ClipperBase.prototype.InsertScanbeam = function (Y)\n\t{\n\t\t//single-linked list: sorted descending, ignoring dups.\n\t\tif (this.m_Scanbeam === null)\n\t\t{\n\t\t\tthis.m_Scanbeam = new ClipperLib.Scanbeam();\n\t\t\tthis.m_Scanbeam.Next = null;\n\t\t\tthis.m_Scanbeam.Y = Y;\n\t\t}\n\t\telse if (Y > this.m_Scanbeam.Y)\n\t\t{\n\t\t\tvar newSb = new ClipperLib.Scanbeam();\n\t\t\tnewSb.Y = Y;\n\t\t\tnewSb.Next = this.m_Scanbeam;\n\t\t\tthis.m_Scanbeam = newSb;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar sb2 = this.m_Scanbeam;\n\t\t\twhile (sb2.Next !== null && Y <= sb2.Next.Y)\n\t\t\t{\n\t\t\t\tsb2 = sb2.Next;\n\t\t\t}\n\t\t\tif (Y === sb2.Y)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t} //ie ignores duplicates\n\t\t\tvar newSb1 = new ClipperLib.Scanbeam();\n\t\t\tnewSb1.Y = Y;\n\t\t\tnewSb1.Next = sb2.Next;\n\t\t\tsb2.Next = newSb1;\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.PopScanbeam = function (Y)\n\t{\n\t\tif (this.m_Scanbeam === null)\n\t\t{\n\t\t\tY.v = 0;\n\t\t\treturn false;\n\t\t}\n\t\tY.v = this.m_Scanbeam.Y;\n\t\tthis.m_Scanbeam = this.m_Scanbeam.Next;\n\t\treturn true;\n\t};\n\n\tClipperLib.ClipperBase.prototype.LocalMinimaPending = function ()\n\t{\n\t\treturn (this.m_CurrentLM !== null);\n\t};\n\n\tClipperLib.ClipperBase.prototype.CreateOutRec = function ()\n\t{\n\t\tvar result = new ClipperLib.OutRec();\n\t\tresult.Idx = ClipperLib.ClipperBase.Unassigned;\n\t\tresult.IsHole = false;\n\t\tresult.IsOpen = false;\n\t\tresult.FirstLeft = null;\n\t\tresult.Pts = null;\n\t\tresult.BottomPt = null;\n\t\tresult.PolyNode = null;\n\t\tthis.m_PolyOuts.push(result);\n\t\tresult.Idx = this.m_PolyOuts.length - 1;\n\t\treturn result;\n\t};\n\n\tClipperLib.ClipperBase.prototype.DisposeOutRec = function (index)\n\t{\n\t\tvar outRec = this.m_PolyOuts[index];\n\t\toutRec.Pts = null;\n\t\toutRec = null;\n\t\tthis.m_PolyOuts[index] = null;\n\t};\n\n\tClipperLib.ClipperBase.prototype.UpdateEdgeIntoAEL = function (e)\n\t{\n\t\tif (e.NextInLML === null)\n\t\t{\n\t\t\tClipperLib.Error(\"UpdateEdgeIntoAEL: invalid call\");\n\t\t}\n\t\tvar AelPrev = e.PrevInAEL;\n\t\tvar AelNext = e.NextInAEL;\n\t\te.NextInLML.OutIdx = e.OutIdx;\n\t\tif (AelPrev !== null)\n\t\t{\n\t\t\tAelPrev.NextInAEL = e.NextInLML;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.m_ActiveEdges = e.NextInLML;\n\t\t}\n\t\tif (AelNext !== null)\n\t\t{\n\t\t\tAelNext.PrevInAEL = e.NextInLML;\n\t\t}\n\t\te.NextInLML.Side = e.Side;\n\t\te.NextInLML.WindDelta = e.WindDelta;\n\t\te.NextInLML.WindCnt = e.WindCnt;\n\t\te.NextInLML.WindCnt2 = e.WindCnt2;\n\t\te = e.NextInLML;\n\t\te.Curr.X = e.Bot.X;\n\t\te.Curr.Y = e.Bot.Y;\n\t\te.PrevInAEL = AelPrev;\n\t\te.NextInAEL = AelNext;\n\t\tif (!ClipperLib.ClipperBase.IsHorizontal(e))\n\t\t{\n\t\t\tthis.InsertScanbeam(e.Top.Y);\n\t\t}\n\t\treturn e;\n\t};\n\n\tClipperLib.ClipperBase.prototype.SwapPositionsInAEL = function (edge1, edge2)\n\t{\n\t\t//check that one or other edge hasn't already been removed from AEL ...\n\t\tif (edge1.NextInAEL === edge1.PrevInAEL || edge2.NextInAEL === edge2.PrevInAEL)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (edge1.NextInAEL === edge2)\n\t\t{\n\t\t\tvar next = edge2.NextInAEL;\n\t\t\tif (next !== null)\n\t\t\t{\n\t\t\t\tnext.PrevInAEL = edge1;\n\t\t\t}\n\t\t\tvar prev = edge1.PrevInAEL;\n\t\t\tif (prev !== null)\n\t\t\t{\n\t\t\t\tprev.NextInAEL = edge2;\n\t\t\t}\n\t\t\tedge2.PrevInAEL = prev;\n\t\t\tedge2.NextInAEL = edge1;\n\t\t\tedge1.PrevInAEL = edge2;\n\t\t\tedge1.NextInAEL = next;\n\t\t}\n\t\telse if (edge2.NextInAEL === edge1)\n\t\t{\n\t\t\tvar next1 = edge1.NextInAEL;\n\t\t\tif (next1 !== null)\n\t\t\t{\n\t\t\t\tnext1.PrevInAEL = edge2;\n\t\t\t}\n\t\t\tvar prev1 = edge2.PrevInAEL;\n\t\t\tif (prev1 !== null)\n\t\t\t{\n\t\t\t\tprev1.NextInAEL = edge1;\n\t\t\t}\n\t\t\tedge1.PrevInAEL = prev1;\n\t\t\tedge1.NextInAEL = edge2;\n\t\t\tedge2.PrevInAEL = edge1;\n\t\t\tedge2.NextInAEL = next1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar next2 = edge1.NextInAEL;\n\t\t\tvar prev2 = edge1.PrevInAEL;\n\t\t\tedge1.NextInAEL = edge2.NextInAEL;\n\t\t\tif (edge1.NextInAEL !== null)\n\t\t\t{\n\t\t\t\tedge1.NextInAEL.PrevInAEL = edge1;\n\t\t\t}\n\t\t\tedge1.PrevInAEL = edge2.PrevInAEL;\n\t\t\tif (edge1.PrevInAEL !== null)\n\t\t\t{\n\t\t\t\tedge1.PrevInAEL.NextInAEL = edge1;\n\t\t\t}\n\t\t\tedge2.NextInAEL = next2;\n\t\t\tif (edge2.NextInAEL !== null)\n\t\t\t{\n\t\t\t\tedge2.NextInAEL.PrevInAEL = edge2;\n\t\t\t}\n\t\t\tedge2.PrevInAEL = prev2;\n\t\t\tif (edge2.PrevInAEL !== null)\n\t\t\t{\n\t\t\t\tedge2.PrevInAEL.NextInAEL = edge2;\n\t\t\t}\n\t\t}\n\n\t\tif (edge1.PrevInAEL === null)\n\t\t{\n\t\t\tthis.m_ActiveEdges = edge1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (edge2.PrevInAEL === null)\n\t\t\t{\n\t\t\t\tthis.m_ActiveEdges = edge2;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.ClipperBase.prototype.DeleteFromAEL = function (e)\n\t{\n\t\tvar AelPrev = e.PrevInAEL;\n\t\tvar AelNext = e.NextInAEL;\n\t\tif (AelPrev === null && AelNext === null && e !== this.m_ActiveEdges)\n\t\t{\n\t\t\treturn;\n\t\t} //already deleted\n\t\tif (AelPrev !== null)\n\t\t{\n\t\t\tAelPrev.NextInAEL = AelNext;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.m_ActiveEdges = AelNext;\n\t\t}\n\t\tif (AelNext !== null)\n\t\t{\n\t\t\tAelNext.PrevInAEL = AelPrev;\n\t\t}\n\t\te.NextInAEL = null;\n\t\te.PrevInAEL = null;\n\t}\n\n\t// public Clipper(int InitOptions = 0)\n\t/**\n\t * @suppress {missingProperties}\n\t */\n\tClipperLib.Clipper = function (InitOptions)\n\t{\n\t\tif (typeof (InitOptions) === \"undefined\") InitOptions = 0;\n\t\tthis.m_PolyOuts = null;\n\t\tthis.m_ClipType = ClipperLib.ClipType.ctIntersection;\n\t\tthis.m_Scanbeam = null;\n\t\tthis.m_Maxima = null;\n\t\tthis.m_ActiveEdges = null;\n\t\tthis.m_SortedEdges = null;\n\t\tthis.m_IntersectList = null;\n\t\tthis.m_IntersectNodeComparer = null;\n\t\tthis.m_ExecuteLocked = false;\n\t\tthis.m_ClipFillType = ClipperLib.PolyFillType.pftEvenOdd;\n\t\tthis.m_SubjFillType = ClipperLib.PolyFillType.pftEvenOdd;\n\t\tthis.m_Joins = null;\n\t\tthis.m_GhostJoins = null;\n\t\tthis.m_UsingPolyTree = false;\n\t\tthis.ReverseSolution = false;\n\t\tthis.StrictlySimple = false;\n\n\t\tClipperLib.ClipperBase.call(this);\n\n\t\tthis.m_Scanbeam = null;\n\t\tthis.m_Maxima = null;\n\t\tthis.m_ActiveEdges = null;\n\t\tthis.m_SortedEdges = null;\n\t\tthis.m_IntersectList = new Array();\n\t\tthis.m_IntersectNodeComparer = ClipperLib.MyIntersectNodeSort.Compare;\n\t\tthis.m_ExecuteLocked = false;\n\t\tthis.m_UsingPolyTree = false;\n\t\tthis.m_PolyOuts = new Array();\n\t\tthis.m_Joins = new Array();\n\t\tthis.m_GhostJoins = new Array();\n\t\tthis.ReverseSolution = (1 & InitOptions) !== 0;\n\t\tthis.StrictlySimple = (2 & InitOptions) !== 0;\n\t\tthis.PreserveCollinear = (4 & InitOptions) !== 0;\n\t\tif (ClipperLib.use_xyz)\n\t\t{\n\t\t\tthis.ZFillFunction = null; // function (FPoint bot1, FPoint top1, FPoint bot2, FPoint top2, ref FPoint intersectPt);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.ioReverseSolution = 1;\n\tClipperLib.Clipper.ioStrictlySimple = 2;\n\tClipperLib.Clipper.ioPreserveCollinear = 4;\n\n\tClipperLib.Clipper.prototype.Clear = function ()\n\t{\n\t\tif (this.m_edges.length === 0)\n\t\t\treturn;\n\t\t//avoids problems with ClipperBase destructor\n\t\tthis.DisposeAllPolyPts();\n\t\tClipperLib.ClipperBase.prototype.Clear.call(this);\n\t};\n\n\tClipperLib.Clipper.prototype.InsertMaxima = function (X)\n\t{\n\t\t//double-linked list: sorted ascending, ignoring dups.\n\t\tvar newMax = new ClipperLib.Maxima();\n\t\tnewMax.X = X;\n\t\tif (this.m_Maxima === null)\n\t\t{\n\t\t\tthis.m_Maxima = newMax;\n\t\t\tthis.m_Maxima.Next = null;\n\t\t\tthis.m_Maxima.Prev = null;\n\t\t}\n\t\telse if (X < this.m_Maxima.X)\n\t\t{\n\t\t\tnewMax.Next = this.m_Maxima;\n\t\t\tnewMax.Prev = null;\n\t\t\tthis.m_Maxima = newMax;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar m = this.m_Maxima;\n\t\t\twhile (m.Next !== null && X >= m.Next.X)\n\t\t\t{\n\t\t\t\tm = m.Next;\n\t\t\t}\n\t\t\tif (X === m.X)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t} //ie ignores duplicates (& CG to clean up newMax)\n\t\t\t//insert newMax between m and m.Next ...\n\t\t\tnewMax.Next = m.Next;\n\t\t\tnewMax.Prev = m;\n\t\t\tif (m.Next !== null)\n\t\t\t{\n\t\t\t\tm.Next.Prev = newMax;\n\t\t\t}\n\t\t\tm.Next = newMax;\n\t\t}\n\t};\n\n\t// ************************************\n\tClipperLib.Clipper.prototype.Execute = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\talen = a.length,\n\t\t\tispolytree = a[1] instanceof ClipperLib.PolyTree;\n\t\tif (alen === 4 && !ispolytree) // function (clipType, solution, subjFillType, clipFillType)\n\t\t{\n\t\t\tvar clipType = a[0],\n\t\t\t\tsolution = a[1],\n\t\t\t\tsubjFillType = a[2],\n\t\t\t\tclipFillType = a[3];\n\t\t\tif (this.m_ExecuteLocked)\n\t\t\t\treturn false;\n\t\t\tif (this.m_HasOpenPaths)\n\t\t\t\tClipperLib.Error(\"Error: PolyTree struct is needed for open path clipping.\");\n\t\t\tthis.m_ExecuteLocked = true;\n\t\t\tClipperLib.Clear(solution);\n\t\t\tthis.m_SubjFillType = subjFillType;\n\t\t\tthis.m_ClipFillType = clipFillType;\n\t\t\tthis.m_ClipType = clipType;\n\t\t\tthis.m_UsingPolyTree = false;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar succeeded = this.ExecuteInternal();\n\t\t\t\t//build the return polygons ...\n\t\t\t\tif (succeeded) this.BuildResult(solution);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.DisposeAllPolyPts();\n\t\t\t\tthis.m_ExecuteLocked = false;\n\t\t\t}\n\t\t\treturn succeeded;\n\t\t}\n\t\telse if (alen === 4 && ispolytree) // function (clipType, polytree, subjFillType, clipFillType)\n\t\t{\n\t\t\tvar clipType = a[0],\n\t\t\t\tpolytree = a[1],\n\t\t\t\tsubjFillType = a[2],\n\t\t\t\tclipFillType = a[3];\n\t\t\tif (this.m_ExecuteLocked)\n\t\t\t\treturn false;\n\t\t\tthis.m_ExecuteLocked = true;\n\t\t\tthis.m_SubjFillType = subjFillType;\n\t\t\tthis.m_ClipFillType = clipFillType;\n\t\t\tthis.m_ClipType = clipType;\n\t\t\tthis.m_UsingPolyTree = true;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar succeeded = this.ExecuteInternal();\n\t\t\t\t//build the return polygons ...\n\t\t\t\tif (succeeded) this.BuildResult2(polytree);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.DisposeAllPolyPts();\n\t\t\t\tthis.m_ExecuteLocked = false;\n\t\t\t}\n\t\t\treturn succeeded;\n\t\t}\n\t\telse if (alen === 2 && !ispolytree) // function (clipType, solution)\n\t\t{\n\t\t\tvar clipType = a[0],\n\t\t\t\tsolution = a[1];\n\t\t\treturn this.Execute(clipType, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n\t\t}\n\t\telse if (alen === 2 && ispolytree) // function (clipType, polytree)\n\t\t{\n\t\t\tvar clipType = a[0],\n\t\t\t\tpolytree = a[1];\n\t\t\treturn this.Execute(clipType, polytree, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.FixHoleLinkage = function (outRec)\n\t{\n\t\t//skip if an outermost polygon or\n\t\t//already already points to the correct FirstLeft ...\n\t\tif (outRec.FirstLeft === null || (outRec.IsHole !== outRec.FirstLeft.IsHole && outRec.FirstLeft.Pts !== null))\n\t\t\treturn;\n\t\tvar orfl = outRec.FirstLeft;\n\t\twhile (orfl !== null && ((orfl.IsHole === outRec.IsHole) || orfl.Pts === null))\n\t\t\torfl = orfl.FirstLeft;\n\t\toutRec.FirstLeft = orfl;\n\t};\n\n\tClipperLib.Clipper.prototype.ExecuteInternal = function ()\n\t{\n\t\ttry\n\t\t{\n\t\t\tthis.Reset();\n\t\t\tthis.m_SortedEdges = null;\n\t\t\tthis.m_Maxima = null;\n\n\t\t\tvar botY = {},\n\t\t\t\ttopY = {};\n\n\t\t\tif (!this.PopScanbeam(botY))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.InsertLocalMinimaIntoAEL(botY.v);\n\t\t\twhile (this.PopScanbeam(topY) || this.LocalMinimaPending())\n\t\t\t{\n\t\t\t\tthis.ProcessHorizontals();\n\t\t\t\tthis.m_GhostJoins.length = 0;\n\t\t\t\tif (!this.ProcessIntersections(topY.v))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.ProcessEdgesAtTopOfScanbeam(topY.v);\n\t\t\t\tbotY.v = topY.v;\n\t\t\t\tthis.InsertLocalMinimaIntoAEL(botY.v);\n\t\t\t}\n\n\t\t\t//fix orientations ...\n\t\t\tvar outRec, i, ilen;\n\t\t\t//fix orientations ...\n\t\t\tfor (i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t\t{\n\t\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\t\tif (outRec.Pts === null || outRec.IsOpen) continue;\n\t\t\t\tif ((outRec.IsHole ^ this.ReverseSolution) == (this.Area$1(outRec) > 0))\n\t\t\t\t\tthis.ReversePolyPtLinks(outRec.Pts);\n\t\t\t}\n\n\t\t\tthis.JoinCommonEdges();\n\n\t\t\tfor (i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t\t{\n\t\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\t\tif (outRec.Pts === null)\n\t\t\t\t\tcontinue;\n\t\t\t\telse if (outRec.IsOpen)\n\t\t\t\t\tthis.FixupOutPolyline(outRec);\n\t\t\t\telse\n\t\t\t\t\tthis.FixupOutPolygon(outRec);\n\t\t\t}\n\n\t\t\tif (this.StrictlySimple) this.DoSimplePolygons();\n\t\t\treturn true;\n\t\t}\n\t\t//catch { return false; }\n\t\tfinally\n\t\t{\n\t\t\tthis.m_Joins.length = 0;\n\t\t\tthis.m_GhostJoins.length = 0;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.DisposeAllPolyPts = function ()\n\t{\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; ++i)\n\t\t\tthis.DisposeOutRec(i);\n\t\tClipperLib.Clear(this.m_PolyOuts);\n\t};\n\n\tClipperLib.Clipper.prototype.AddJoin = function (Op1, Op2, OffPt)\n\t{\n\t\tvar j = new ClipperLib.Join();\n\t\tj.OutPt1 = Op1;\n\t\tj.OutPt2 = Op2;\n\t\t//j.OffPt = OffPt;\n\t\tj.OffPt.X = OffPt.X;\n\t\tj.OffPt.Y = OffPt.Y;\n\t\tif (ClipperLib.use_xyz) j.OffPt.Z = OffPt.Z;\n\t\tthis.m_Joins.push(j);\n\t};\n\n\tClipperLib.Clipper.prototype.AddGhostJoin = function (Op, OffPt)\n\t{\n\t\tvar j = new ClipperLib.Join();\n\t\tj.OutPt1 = Op;\n\t\t//j.OffPt = OffPt;\n\t\tj.OffPt.X = OffPt.X;\n\t\tj.OffPt.Y = OffPt.Y;\n\t\tif (ClipperLib.use_xyz) j.OffPt.Z = OffPt.Z;\n\t\tthis.m_GhostJoins.push(j);\n\t};\n\n\t//if (ClipperLib.use_xyz)\n\t//{\n\tClipperLib.Clipper.prototype.SetZ = function (pt, e1, e2)\n\t{\n\t\tif (this.ZFillFunction !== null)\n\t\t{\n\t\t\tif (pt.Z !== 0 || this.ZFillFunction === null) return;\n\t\t\telse if (ClipperLib.FPoint.op_Equality(pt, e1.Bot)) pt.Z = e1.Bot.Z;\n\t\t\telse if (ClipperLib.FPoint.op_Equality(pt, e1.Top)) pt.Z = e1.Top.Z;\n\t\t\telse if (ClipperLib.FPoint.op_Equality(pt, e2.Bot)) pt.Z = e2.Bot.Z;\n\t\t\telse if (ClipperLib.FPoint.op_Equality(pt, e2.Top)) pt.Z = e2.Top.Z;\n\t\t\telse this.ZFillFunction(e1.Bot, e1.Top, e2.Bot, e2.Top, pt);\n\t\t}\n\t};\n\t//}\n\n\tClipperLib.Clipper.prototype.InsertLocalMinimaIntoAEL = function (botY)\n\t{\n\t\tvar lm = {};\n\n\t\tvar lb;\n\t\tvar rb;\n\t\twhile (this.PopLocalMinima(botY, lm))\n\t\t{\n\t\t\tlb = lm.v.LeftBound;\n\t\t\trb = lm.v.RightBound;\n\n\t\t\tvar Op1 = null;\n\t\t\tif (lb === null)\n\t\t\t{\n\t\t\t\tthis.InsertEdgeIntoAEL(rb, null);\n\t\t\t\tthis.SetWindingCount(rb);\n\t\t\t\tif (this.IsContributing(rb))\n\t\t\t\t\tOp1 = this.AddOutPt(rb, rb.Bot);\n\t\t\t}\n\t\t\telse if (rb === null)\n\t\t\t{\n\t\t\t\tthis.InsertEdgeIntoAEL(lb, null);\n\t\t\t\tthis.SetWindingCount(lb);\n\t\t\t\tif (this.IsContributing(lb))\n\t\t\t\t\tOp1 = this.AddOutPt(lb, lb.Bot);\n\t\t\t\tthis.InsertScanbeam(lb.Top.Y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.InsertEdgeIntoAEL(lb, null);\n\t\t\t\tthis.InsertEdgeIntoAEL(rb, lb);\n\t\t\t\tthis.SetWindingCount(lb);\n\t\t\t\trb.WindCnt = lb.WindCnt;\n\t\t\t\trb.WindCnt2 = lb.WindCnt2;\n\t\t\t\tif (this.IsContributing(lb))\n\t\t\t\t\tOp1 = this.AddLocalMinPoly(lb, rb, lb.Bot);\n\t\t\t\tthis.InsertScanbeam(lb.Top.Y);\n\t\t\t}\n\t\t\tif (rb !== null)\n\t\t\t{\n\t\t\t\tif (ClipperLib.ClipperBase.IsHorizontal(rb))\n\t\t\t\t{\n\t\t\t\t\tif (rb.NextInLML !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.InsertScanbeam(rb.NextInLML.Top.Y);\n\t\t\t\t\t}\n\t\t\t\t\tthis.AddEdgeToSEL(rb);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.InsertScanbeam(rb.Top.Y);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lb === null || rb === null) continue;\n\t\t\t//if output polygons share an Edge with a horizontal rb, they'll need joining later ...\n\t\t\tif (Op1 !== null && ClipperLib.ClipperBase.IsHorizontal(rb) && this.m_GhostJoins.length > 0 && rb.WindDelta !== 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0, ilen = this.m_GhostJoins.length; i < ilen; i++)\n\t\t\t\t{\n\t\t\t\t\t//if the horizontal Rb and a 'ghost' horizontal overlap, then convert\n\t\t\t\t\t//the 'ghost' join to a real join ready for later ...\n\t\t\t\t\tvar j = this.m_GhostJoins[i];\n\n\t\t\t\t\tif (this.HorzSegmentsOverlap(j.OutPt1.Pt.X, j.OffPt.X, rb.Bot.X, rb.Top.X))\n\t\t\t\t\t\tthis.AddJoin(j.OutPt1, Op1, j.OffPt);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lb.OutIdx >= 0 && lb.PrevInAEL !== null &&\n\t\t\t\tlb.PrevInAEL.Curr.X === lb.Bot.X &&\n\t\t\t\tlb.PrevInAEL.OutIdx >= 0 &&\n\t\t\t\tClipperLib.ClipperBase.SlopesEqual5(lb.PrevInAEL.Curr, lb.PrevInAEL.Top, lb.Curr, lb.Top) &&\n\t\t\t\tlb.WindDelta !== 0 && lb.PrevInAEL.WindDelta !== 0)\n\t\t\t{\n\t\t\t\tvar Op2 = this.AddOutPt(lb.PrevInAEL, lb.Bot);\n\t\t\t\tthis.AddJoin(Op1, Op2, lb.Top);\n\t\t\t}\n\t\t\tif (lb.NextInAEL !== rb)\n\t\t\t{\n\t\t\t\tif (rb.OutIdx >= 0 && rb.PrevInAEL.OutIdx >= 0 &&\n\t\t\t\t\tClipperLib.ClipperBase.SlopesEqual5(rb.PrevInAEL.Curr, rb.PrevInAEL.Top, rb.Curr, rb.Top) &&\n\t\t\t\t\trb.WindDelta !== 0 && rb.PrevInAEL.WindDelta !== 0)\n\t\t\t\t{\n\t\t\t\t\tvar Op2 = this.AddOutPt(rb.PrevInAEL, rb.Bot);\n\t\t\t\t\tthis.AddJoin(Op1, Op2, rb.Top);\n\t\t\t\t}\n\t\t\t\tvar e = lb.NextInAEL;\n\t\t\t\tif (e !== null)\n\t\t\t\t\twhile (e !== rb)\n\t\t\t\t\t{\n\t\t\t\t\t\t//nb: For calculating winding counts etc, IntersectEdges() assumes\n\t\t\t\t\t\t//that param1 will be to the right of param2 ABOVE the intersection ...\n\t\t\t\t\t\tthis.IntersectEdges(rb, e, lb.Curr);\n\t\t\t\t\t\t//order important here\n\t\t\t\t\t\te = e.NextInAEL;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.InsertEdgeIntoAEL = function (edge, startEdge)\n\t{\n\t\tif (this.m_ActiveEdges === null)\n\t\t{\n\t\t\tedge.PrevInAEL = null;\n\t\t\tedge.NextInAEL = null;\n\t\t\tthis.m_ActiveEdges = edge;\n\t\t}\n\t\telse if (startEdge === null && this.E2InsertsBeforeE1(this.m_ActiveEdges, edge))\n\t\t{\n\t\t\tedge.PrevInAEL = null;\n\t\t\tedge.NextInAEL = this.m_ActiveEdges;\n\t\t\tthis.m_ActiveEdges.PrevInAEL = edge;\n\t\t\tthis.m_ActiveEdges = edge;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (startEdge === null)\n\t\t\t\tstartEdge = this.m_ActiveEdges;\n\t\t\twhile (startEdge.NextInAEL !== null && !this.E2InsertsBeforeE1(startEdge.NextInAEL, edge))\n\t\t\t\tstartEdge = startEdge.NextInAEL;\n\t\t\tedge.NextInAEL = startEdge.NextInAEL;\n\t\t\tif (startEdge.NextInAEL !== null)\n\t\t\t\tstartEdge.NextInAEL.PrevInAEL = edge;\n\t\t\tedge.PrevInAEL = startEdge;\n\t\t\tstartEdge.NextInAEL = edge;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.E2InsertsBeforeE1 = function (e1, e2)\n\t{\n\t\tif (e2.Curr.X === e1.Curr.X)\n\t\t{\n\t\t\tif (e2.Top.Y > e1.Top.Y)\n\t\t\t\treturn e2.Top.X < ClipperLib.Clipper.TopX(e1, e2.Top.Y);\n\t\t\telse\n\t\t\t\treturn e1.Top.X > ClipperLib.Clipper.TopX(e2, e1.Top.Y);\n\t\t}\n\t\telse\n\t\t\treturn e2.Curr.X < e1.Curr.X;\n\t};\n\n\tClipperLib.Clipper.prototype.IsEvenOddFillType = function (edge)\n\t{\n\t\tif (edge.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t\treturn this.m_SubjFillType === ClipperLib.PolyFillType.pftEvenOdd;\n\t\telse\n\t\t\treturn this.m_ClipFillType === ClipperLib.PolyFillType.pftEvenOdd;\n\t};\n\n\tClipperLib.Clipper.prototype.IsEvenOddAltFillType = function (edge)\n\t{\n\t\tif (edge.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t\treturn this.m_ClipFillType === ClipperLib.PolyFillType.pftEvenOdd;\n\t\telse\n\t\t\treturn this.m_SubjFillType === ClipperLib.PolyFillType.pftEvenOdd;\n\t};\n\n\tClipperLib.Clipper.prototype.IsContributing = function (edge)\n\t{\n\t\tvar pft, pft2;\n\t\tif (edge.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t{\n\t\t\tpft = this.m_SubjFillType;\n\t\t\tpft2 = this.m_ClipFillType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpft = this.m_ClipFillType;\n\t\t\tpft2 = this.m_SubjFillType;\n\t\t}\n\t\tswitch (pft)\n\t\t{\n\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\tif (edge.WindDelta === 0 && edge.WindCnt !== 1)\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\tif (Math.abs(edge.WindCnt) !== 1)\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\tif (edge.WindCnt !== 1)\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (edge.WindCnt !== -1)\n\t\t\t\treturn false;\n\t\t\tbreak;\n\t\t}\n\t\tswitch (this.m_ClipType)\n\t\t{\n\t\tcase ClipperLib.ClipType.ctIntersection:\n\t\t\tswitch (pft2)\n\t\t\t{\n\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\treturn (edge.WindCnt2 !== 0);\n\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\treturn (edge.WindCnt2 > 0);\n\t\t\tdefault:\n\t\t\t\treturn (edge.WindCnt2 < 0);\n\t\t\t}\n\t\tcase ClipperLib.ClipType.ctUnion:\n\t\t\tswitch (pft2)\n\t\t\t{\n\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\treturn (edge.WindCnt2 === 0);\n\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\treturn (edge.WindCnt2 <= 0);\n\t\t\tdefault:\n\t\t\t\treturn (edge.WindCnt2 >= 0);\n\t\t\t}\n\t\tcase ClipperLib.ClipType.ctDifference:\n\t\t\tif (edge.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t\t\tswitch (pft2)\n\t\t\t\t{\n\t\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\t\treturn (edge.WindCnt2 === 0);\n\t\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\t\treturn (edge.WindCnt2 <= 0);\n\t\t\t\tdefault:\n\t\t\t\t\treturn (edge.WindCnt2 >= 0);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tswitch (pft2)\n\t\t\t\t{\n\t\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\t\treturn (edge.WindCnt2 !== 0);\n\t\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\t\treturn (edge.WindCnt2 > 0);\n\t\t\t\tdefault:\n\t\t\t\t\treturn (edge.WindCnt2 < 0);\n\t\t\t\t}\n\t\tcase ClipperLib.ClipType.ctXor:\n\t\t\tif (edge.WindDelta === 0)\n\t\t\t\tswitch (pft2)\n\t\t\t\t{\n\t\t\t\tcase ClipperLib.PolyFillType.pftEvenOdd:\n\t\t\t\tcase ClipperLib.PolyFillType.pftNonZero:\n\t\t\t\t\treturn (edge.WindCnt2 === 0);\n\t\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\t\treturn (edge.WindCnt2 <= 0);\n\t\t\t\tdefault:\n\t\t\t\t\treturn (edge.WindCnt2 >= 0);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\treturn true;\n\t\t}\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.SetWindingCount = function (edge)\n\t{\n\t\tvar e = edge.PrevInAEL;\n\t\t//find the edge of the same polytype that immediately preceeds 'edge' in AEL\n\t\twhile (e !== null && ((e.PolyTyp !== edge.PolyTyp) || (e.WindDelta === 0)))\n\t\t\te = e.PrevInAEL;\n\t\tif (e === null)\n\t\t{\n\t\t\tvar pft = (edge.PolyTyp === ClipperLib.PolyType.ptSubject ? this.m_SubjFillType : this.m_ClipFillType);\n\t\t\tif (edge.WindDelta === 0)\n\t\t\t{\n\t\t\t\tedge.WindCnt = (pft === ClipperLib.PolyFillType.pftNegative ? -1 : 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge.WindCnt = edge.WindDelta;\n\t\t\t}\n\t\t\tedge.WindCnt2 = 0;\n\t\t\te = this.m_ActiveEdges;\n\t\t\t//ie get ready to calc WindCnt2\n\t\t}\n\t\telse if (edge.WindDelta === 0 && this.m_ClipType !== ClipperLib.ClipType.ctUnion)\n\t\t{\n\t\t\tedge.WindCnt = 1;\n\t\t\tedge.WindCnt2 = e.WindCnt2;\n\t\t\te = e.NextInAEL;\n\t\t\t//ie get ready to calc WindCnt2\n\t\t}\n\t\telse if (this.IsEvenOddFillType(edge))\n\t\t{\n\t\t\t//EvenOdd filling ...\n\t\t\tif (edge.WindDelta === 0)\n\t\t\t{\n\t\t\t\t//are we inside a subj polygon ...\n\t\t\t\tvar Inside = true;\n\t\t\t\tvar e2 = e.PrevInAEL;\n\t\t\t\twhile (e2 !== null)\n\t\t\t\t{\n\t\t\t\t\tif (e2.PolyTyp === e.PolyTyp && e2.WindDelta !== 0)\n\t\t\t\t\t\tInside = !Inside;\n\t\t\t\t\te2 = e2.PrevInAEL;\n\t\t\t\t}\n\t\t\t\tedge.WindCnt = (Inside ? 0 : 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge.WindCnt = edge.WindDelta;\n\t\t\t}\n\t\t\tedge.WindCnt2 = e.WindCnt2;\n\t\t\te = e.NextInAEL;\n\t\t\t//ie get ready to calc WindCnt2\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//nonZero, Positive or Negative filling ...\n\t\t\tif (e.WindCnt * e.WindDelta < 0)\n\t\t\t{\n\t\t\t\t//prev edge is 'decreasing' WindCount (WC) toward zero\n\t\t\t\t//so we're outside the previous polygon ...\n\t\t\t\tif (Math.abs(e.WindCnt) > 1)\n\t\t\t\t{\n\t\t\t\t\t//outside prev poly but still inside another.\n\t\t\t\t\t//when reversing direction of prev poly use the same WC\n\t\t\t\t\tif (e.WindDelta * edge.WindDelta < 0)\n\t\t\t\t\t\tedge.WindCnt = e.WindCnt;\n\t\t\t\t\telse\n\t\t\t\t\t\tedge.WindCnt = e.WindCnt + edge.WindDelta;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tedge.WindCnt = (edge.WindDelta === 0 ? 1 : edge.WindDelta);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//prev edge is 'increasing' WindCount (WC) away from zero\n\t\t\t\t//so we're inside the previous polygon ...\n\t\t\t\tif (edge.WindDelta === 0)\n\t\t\t\t\tedge.WindCnt = (e.WindCnt < 0 ? e.WindCnt - 1 : e.WindCnt + 1);\n\t\t\t\telse if (e.WindDelta * edge.WindDelta < 0)\n\t\t\t\t\tedge.WindCnt = e.WindCnt;\n\t\t\t\telse\n\t\t\t\t\tedge.WindCnt = e.WindCnt + edge.WindDelta;\n\t\t\t}\n\t\t\tedge.WindCnt2 = e.WindCnt2;\n\t\t\te = e.NextInAEL;\n\t\t\t//ie get ready to calc WindCnt2\n\t\t}\n\t\t//update WindCnt2 ...\n\t\tif (this.IsEvenOddAltFillType(edge))\n\t\t{\n\t\t\t//EvenOdd filling ...\n\t\t\twhile (e !== edge)\n\t\t\t{\n\t\t\t\tif (e.WindDelta !== 0)\n\t\t\t\t\tedge.WindCnt2 = (edge.WindCnt2 === 0 ? 1 : 0);\n\t\t\t\te = e.NextInAEL;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//nonZero, Positive or Negative filling ...\n\t\t\twhile (e !== edge)\n\t\t\t{\n\t\t\t\tedge.WindCnt2 += e.WindDelta;\n\t\t\t\te = e.NextInAEL;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.AddEdgeToSEL = function (edge)\n\t{\n\t\t//SEL pointers in PEdge are use to build transient lists of horizontal edges.\n\t\t//However, since we don't need to worry about processing order, all additions\n\t\t//are made to the front of the list ...\n\t\tif (this.m_SortedEdges === null)\n\t\t{\n\t\t\tthis.m_SortedEdges = edge;\n\t\t\tedge.PrevInSEL = null;\n\t\t\tedge.NextInSEL = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tedge.NextInSEL = this.m_SortedEdges;\n\t\t\tedge.PrevInSEL = null;\n\t\t\tthis.m_SortedEdges.PrevInSEL = edge;\n\t\t\tthis.m_SortedEdges = edge;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.PopEdgeFromSEL = function (e)\n\t{\n\t\t//Pop edge from front of SEL (ie SEL is a FILO list)\n\t\te.v = this.m_SortedEdges;\n\t\tif (e.v === null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tvar oldE = e.v;\n\t\tthis.m_SortedEdges = e.v.NextInSEL;\n\t\tif (this.m_SortedEdges !== null)\n\t\t{\n\t\t\tthis.m_SortedEdges.PrevInSEL = null;\n\t\t}\n\t\toldE.NextInSEL = null;\n\t\toldE.PrevInSEL = null;\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.CopyAELToSEL = function ()\n\t{\n\t\tvar e = this.m_ActiveEdges;\n\t\tthis.m_SortedEdges = e;\n\t\twhile (e !== null)\n\t\t{\n\t\t\te.PrevInSEL = e.PrevInAEL;\n\t\t\te.NextInSEL = e.NextInAEL;\n\t\t\te = e.NextInAEL;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.SwapPositionsInSEL = function (edge1, edge2)\n\t{\n\t\tif (edge1.NextInSEL === null && edge1.PrevInSEL === null)\n\t\t\treturn;\n\t\tif (edge2.NextInSEL === null && edge2.PrevInSEL === null)\n\t\t\treturn;\n\t\tif (edge1.NextInSEL === edge2)\n\t\t{\n\t\t\tvar next = edge2.NextInSEL;\n\t\t\tif (next !== null)\n\t\t\t\tnext.PrevInSEL = edge1;\n\t\t\tvar prev = edge1.PrevInSEL;\n\t\t\tif (prev !== null)\n\t\t\t\tprev.NextInSEL = edge2;\n\t\t\tedge2.PrevInSEL = prev;\n\t\t\tedge2.NextInSEL = edge1;\n\t\t\tedge1.PrevInSEL = edge2;\n\t\t\tedge1.NextInSEL = next;\n\t\t}\n\t\telse if (edge2.NextInSEL === edge1)\n\t\t{\n\t\t\tvar next = edge1.NextInSEL;\n\t\t\tif (next !== null)\n\t\t\t\tnext.PrevInSEL = edge2;\n\t\t\tvar prev = edge2.PrevInSEL;\n\t\t\tif (prev !== null)\n\t\t\t\tprev.NextInSEL = edge1;\n\t\t\tedge1.PrevInSEL = prev;\n\t\t\tedge1.NextInSEL = edge2;\n\t\t\tedge2.PrevInSEL = edge1;\n\t\t\tedge2.NextInSEL = next;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar next = edge1.NextInSEL;\n\t\t\tvar prev = edge1.PrevInSEL;\n\t\t\tedge1.NextInSEL = edge2.NextInSEL;\n\t\t\tif (edge1.NextInSEL !== null)\n\t\t\t\tedge1.NextInSEL.PrevInSEL = edge1;\n\t\t\tedge1.PrevInSEL = edge2.PrevInSEL;\n\t\t\tif (edge1.PrevInSEL !== null)\n\t\t\t\tedge1.PrevInSEL.NextInSEL = edge1;\n\t\t\tedge2.NextInSEL = next;\n\t\t\tif (edge2.NextInSEL !== null)\n\t\t\t\tedge2.NextInSEL.PrevInSEL = edge2;\n\t\t\tedge2.PrevInSEL = prev;\n\t\t\tif (edge2.PrevInSEL !== null)\n\t\t\t\tedge2.PrevInSEL.NextInSEL = edge2;\n\t\t}\n\t\tif (edge1.PrevInSEL === null)\n\t\t\tthis.m_SortedEdges = edge1;\n\t\telse if (edge2.PrevInSEL === null)\n\t\t\tthis.m_SortedEdges = edge2;\n\t};\n\n\tClipperLib.Clipper.prototype.AddLocalMaxPoly = function (e1, e2, pt)\n\t{\n\t\tthis.AddOutPt(e1, pt);\n\t\tif (e2.WindDelta === 0) this.AddOutPt(e2, pt);\n\t\tif (e1.OutIdx === e2.OutIdx)\n\t\t{\n\t\t\te1.OutIdx = -1;\n\t\t\te2.OutIdx = -1;\n\t\t}\n\t\telse if (e1.OutIdx < e2.OutIdx)\n\t\t\tthis.AppendPolygon(e1, e2);\n\t\telse\n\t\t\tthis.AppendPolygon(e2, e1);\n\t};\n\n\tClipperLib.Clipper.prototype.AddLocalMinPoly = function (e1, e2, pt)\n\t{\n\t\tvar result;\n\t\tvar e, prevE;\n\t\tif (ClipperLib.ClipperBase.IsHorizontal(e2) || (e1.Dx > e2.Dx))\n\t\t{\n\t\t\tresult = this.AddOutPt(e1, pt);\n\t\t\te2.OutIdx = e1.OutIdx;\n\t\t\te1.Side = ClipperLib.EdgeSide.esLeft;\n\t\t\te2.Side = ClipperLib.EdgeSide.esRight;\n\t\t\te = e1;\n\t\t\tif (e.PrevInAEL === e2)\n\t\t\t\tprevE = e2.PrevInAEL;\n\t\t\telse\n\t\t\t\tprevE = e.PrevInAEL;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = this.AddOutPt(e2, pt);\n\t\t\te1.OutIdx = e2.OutIdx;\n\t\t\te1.Side = ClipperLib.EdgeSide.esRight;\n\t\t\te2.Side = ClipperLib.EdgeSide.esLeft;\n\t\t\te = e2;\n\t\t\tif (e.PrevInAEL === e1)\n\t\t\t\tprevE = e1.PrevInAEL;\n\t\t\telse\n\t\t\t\tprevE = e.PrevInAEL;\n\t\t}\n\n\t\tif (prevE !== null && prevE.OutIdx >= 0 && prevE.Top.Y < pt.Y && e.Top.Y < pt.Y)\n\t\t{\n\t\t\tvar xPrev = ClipperLib.Clipper.TopX(prevE, pt.Y);\n\t\t\tvar xE = ClipperLib.Clipper.TopX(e, pt.Y);\n\t\t\tif ((xPrev === xE) && (e.WindDelta !== 0) && (prevE.WindDelta !== 0) && ClipperLib.ClipperBase.SlopesEqual5(new ClipperLib.FPoint2(xPrev, pt.Y), prevE.Top, new ClipperLib.FPoint2(xE, pt.Y), e.Top))\n\t\t\t{\n\t\t\t\tvar outPt = this.AddOutPt(prevE, pt);\n\t\t\t\tthis.AddJoin(result, outPt, e.Top);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.AddOutPt = function (e, pt)\n\t{\n\t\tif (e.OutIdx < 0)\n\t\t{\n\t\t\tvar outRec = this.CreateOutRec();\n\t\t\toutRec.IsOpen = (e.WindDelta === 0);\n\t\t\tvar newOp = new ClipperLib.OutPt();\n\t\t\toutRec.Pts = newOp;\n\t\t\tnewOp.Idx = outRec.Idx;\n\t\t\t//newOp.Pt = pt;\n\t\t\tnewOp.Pt.X = pt.X;\n\t\t\tnewOp.Pt.Y = pt.Y;\n\t\t\tif (ClipperLib.use_xyz) newOp.Pt.Z = pt.Z;\n\t\t\tnewOp.Next = newOp;\n\t\t\tnewOp.Prev = newOp;\n\t\t\tif (!outRec.IsOpen)\n\t\t\t\tthis.SetHoleState(e, outRec);\n\t\t\te.OutIdx = outRec.Idx;\n\t\t\t//nb: do this after SetZ !\n\t\t\treturn newOp;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar outRec = this.m_PolyOuts[e.OutIdx];\n\t\t\t//OutRec.Pts is the 'Left-most' point & OutRec.Pts.Prev is the 'Right-most'\n\t\t\tvar op = outRec.Pts;\n\t\t\tvar ToFront = (e.Side === ClipperLib.EdgeSide.esLeft);\n\t\t\tif (ToFront && ClipperLib.FPoint.op_Equality(pt, op.Pt))\n\t\t\t\treturn op;\n\t\t\telse if (!ToFront && ClipperLib.FPoint.op_Equality(pt, op.Prev.Pt))\n\t\t\t\treturn op.Prev;\n\t\t\tvar newOp = new ClipperLib.OutPt();\n\t\t\tnewOp.Idx = outRec.Idx;\n\t\t\t//newOp.Pt = pt;\n\t\t\tnewOp.Pt.X = pt.X;\n\t\t\tnewOp.Pt.Y = pt.Y;\n\t\t\tif (ClipperLib.use_xyz) newOp.Pt.Z = pt.Z;\n\t\t\tnewOp.Next = op;\n\t\t\tnewOp.Prev = op.Prev;\n\t\t\tnewOp.Prev.Next = newOp;\n\t\t\top.Prev = newOp;\n\t\t\tif (ToFront)\n\t\t\t\toutRec.Pts = newOp;\n\t\t\treturn newOp;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetLastOutPt = function (e)\n\t{\n\t\tvar outRec = this.m_PolyOuts[e.OutIdx];\n\t\tif (e.Side === ClipperLib.EdgeSide.esLeft)\n\t\t{\n\t\t\treturn outRec.Pts;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn outRec.Pts.Prev;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.SwapPoints = function (pt1, pt2)\n\t{\n\t\tvar tmp = new ClipperLib.FPoint1(pt1.Value);\n\t\t//pt1.Value = pt2.Value;\n\t\tpt1.Value.X = pt2.Value.X;\n\t\tpt1.Value.Y = pt2.Value.Y;\n\t\tif (ClipperLib.use_xyz) pt1.Value.Z = pt2.Value.Z;\n\t\t//pt2.Value = tmp;\n\t\tpt2.Value.X = tmp.X;\n\t\tpt2.Value.Y = tmp.Y;\n\t\tif (ClipperLib.use_xyz) pt2.Value.Z = tmp.Z;\n\t};\n\n\tClipperLib.Clipper.prototype.HorzSegmentsOverlap = function (seg1a, seg1b, seg2a, seg2b)\n\t{\n\t\tvar tmp;\n\t\tif (seg1a > seg1b)\n\t\t{\n\t\t\ttmp = seg1a;\n\t\t\tseg1a = seg1b;\n\t\t\tseg1b = tmp;\n\t\t}\n\t\tif (seg2a > seg2b)\n\t\t{\n\t\t\ttmp = seg2a;\n\t\t\tseg2a = seg2b;\n\t\t\tseg2b = tmp;\n\t\t}\n\t\treturn (seg1a < seg2b) && (seg2a < seg1b);\n\t}\n\n\tClipperLib.Clipper.prototype.SetHoleState = function (e, outRec)\n\t{\n\t\tvar e2 = e.PrevInAEL;\n\t\tvar eTmp = null;\n\t\twhile (e2 !== null)\n\t\t{\n\t\t\tif (e2.OutIdx >= 0 && e2.WindDelta !== 0)\n\t\t\t{\n\t\t\t\tif (eTmp === null)\n\t\t\t\t\teTmp = e2;\n\t\t\t\telse if (eTmp.OutIdx === e2.OutIdx)\n\t\t\t\t\teTmp = null; //paired\n\t\t\t}\n\t\t\te2 = e2.PrevInAEL;\n\t\t}\n\n\t\tif (eTmp === null)\n\t\t{\n\t\t\toutRec.FirstLeft = null;\n\t\t\toutRec.IsHole = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutRec.FirstLeft = this.m_PolyOuts[eTmp.OutIdx];\n\t\t\toutRec.IsHole = !outRec.FirstLeft.IsHole;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetDx = function (pt1, pt2)\n\t{\n\t\tif (pt1.Y === pt2.Y)\n\t\t\treturn ClipperLib.ClipperBase.horizontal;\n\t\telse\n\t\t\treturn (pt2.X - pt1.X) / (pt2.Y - pt1.Y);\n\t};\n\n\tClipperLib.Clipper.prototype.FirstIsBottomPt = function (btmPt1, btmPt2)\n\t{\n\t\tvar p = btmPt1.Prev;\n\t\twhile ((ClipperLib.FPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p !== btmPt1))\n\t\t\tp = p.Prev;\n\t\tvar dx1p = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n\t\tp = btmPt1.Next;\n\t\twhile ((ClipperLib.FPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p !== btmPt1))\n\t\t\tp = p.Next;\n\t\tvar dx1n = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n\t\tp = btmPt2.Prev;\n\t\twhile ((ClipperLib.FPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p !== btmPt2))\n\t\t\tp = p.Prev;\n\t\tvar dx2p = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n\t\tp = btmPt2.Next;\n\t\twhile ((ClipperLib.FPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p !== btmPt2))\n\t\t\tp = p.Next;\n\t\tvar dx2n = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n\n\t\tif (Math.max(dx1p, dx1n) === Math.max(dx2p, dx2n) && Math.min(dx1p, dx1n) === Math.min(dx2p, dx2n))\n\t\t{\n\t\t\treturn this.Area(btmPt1) > 0; //if otherwise identical use orientation\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (dx1p >= dx2p && dx1p >= dx2n) || (dx1n >= dx2p && dx1n >= dx2n);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetBottomPt = function (pp)\n\t{\n\t\tvar dups = null;\n\t\tvar p = pp.Next;\n\t\twhile (p !== pp)\n\t\t{\n\t\t\tif (p.Pt.Y > pp.Pt.Y)\n\t\t\t{\n\t\t\t\tpp = p;\n\t\t\t\tdups = null;\n\t\t\t}\n\t\t\telse if (p.Pt.Y === pp.Pt.Y && p.Pt.X <= pp.Pt.X)\n\t\t\t{\n\t\t\t\tif (p.Pt.X < pp.Pt.X)\n\t\t\t\t{\n\t\t\t\t\tdups = null;\n\t\t\t\t\tpp = p;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (p.Next !== pp && p.Prev !== pp)\n\t\t\t\t\t\tdups = p;\n\t\t\t\t}\n\t\t\t}\n\t\t\tp = p.Next;\n\t\t}\n\t\tif (dups !== null)\n\t\t{\n\t\t\t//there appears to be at least 2 vertices at bottomPt so ...\n\t\t\twhile (dups !== p)\n\t\t\t{\n\t\t\t\tif (!this.FirstIsBottomPt(p, dups))\n\t\t\t\t\tpp = dups;\n\t\t\t\tdups = dups.Next;\n\t\t\t\twhile (ClipperLib.FPoint.op_Inequality(dups.Pt, pp.Pt))\n\t\t\t\t\tdups = dups.Next;\n\t\t\t}\n\t\t}\n\t\treturn pp;\n\t};\n\n\tClipperLib.Clipper.prototype.GetLowermostRec = function (outRec1, outRec2)\n\t{\n\t\t//work out which polygon fragment has the correct hole state ...\n\t\tif (outRec1.BottomPt === null)\n\t\t\toutRec1.BottomPt = this.GetBottomPt(outRec1.Pts);\n\t\tif (outRec2.BottomPt === null)\n\t\t\toutRec2.BottomPt = this.GetBottomPt(outRec2.Pts);\n\t\tvar bPt1 = outRec1.BottomPt;\n\t\tvar bPt2 = outRec2.BottomPt;\n\t\tif (bPt1.Pt.Y > bPt2.Pt.Y)\n\t\t\treturn outRec1;\n\t\telse if (bPt1.Pt.Y < bPt2.Pt.Y)\n\t\t\treturn outRec2;\n\t\telse if (bPt1.Pt.X < bPt2.Pt.X)\n\t\t\treturn outRec1;\n\t\telse if (bPt1.Pt.X > bPt2.Pt.X)\n\t\t\treturn outRec2;\n\t\telse if (bPt1.Next === bPt1)\n\t\t\treturn outRec2;\n\t\telse if (bPt2.Next === bPt2)\n\t\t\treturn outRec1;\n\t\telse if (this.FirstIsBottomPt(bPt1, bPt2))\n\t\t\treturn outRec1;\n\t\telse\n\t\t\treturn outRec2;\n\t};\n\n\tClipperLib.Clipper.prototype.OutRec1RightOfOutRec2 = function (outRec1, outRec2)\n\t{\n\t\tdo {\n\t\t\toutRec1 = outRec1.FirstLeft;\n\t\t\tif (outRec1 === outRec2)\n\t\t\t\treturn true;\n\t\t}\n\t\twhile (outRec1 !== null)\n\t\treturn false;\n\t};\n\n\tClipperLib.Clipper.prototype.GetOutRec = function (idx)\n\t{\n\t\tvar outrec = this.m_PolyOuts[idx];\n\t\twhile (outrec !== this.m_PolyOuts[outrec.Idx])\n\t\t\toutrec = this.m_PolyOuts[outrec.Idx];\n\t\treturn outrec;\n\t};\n\n\tClipperLib.Clipper.prototype.AppendPolygon = function (e1, e2)\n\t{\n\t\t//get the start and ends of both output polygons ...\n\t\tvar outRec1 = this.m_PolyOuts[e1.OutIdx];\n\t\tvar outRec2 = this.m_PolyOuts[e2.OutIdx];\n\t\tvar holeStateRec;\n\t\tif (this.OutRec1RightOfOutRec2(outRec1, outRec2))\n\t\t\tholeStateRec = outRec2;\n\t\telse if (this.OutRec1RightOfOutRec2(outRec2, outRec1))\n\t\t\tholeStateRec = outRec1;\n\t\telse\n\t\t\tholeStateRec = this.GetLowermostRec(outRec1, outRec2);\n\n\t\t//get the start and ends of both output polygons and\n\t\t//join E2 poly onto E1 poly and delete pointers to E2 ...\n\n\t\tvar p1_lft = outRec1.Pts;\n\t\tvar p1_rt = p1_lft.Prev;\n\t\tvar p2_lft = outRec2.Pts;\n\t\tvar p2_rt = p2_lft.Prev;\n\t\t//join e2 poly onto e1 poly and delete pointers to e2 ...\n\t\tif (e1.Side === ClipperLib.EdgeSide.esLeft)\n\t\t{\n\t\t\tif (e2.Side === ClipperLib.EdgeSide.esLeft)\n\t\t\t{\n\t\t\t\t//z y x a b c\n\t\t\t\tthis.ReversePolyPtLinks(p2_lft);\n\t\t\t\tp2_lft.Next = p1_lft;\n\t\t\t\tp1_lft.Prev = p2_lft;\n\t\t\t\tp1_rt.Next = p2_rt;\n\t\t\t\tp2_rt.Prev = p1_rt;\n\t\t\t\toutRec1.Pts = p2_rt;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//x y z a b c\n\t\t\t\tp2_rt.Next = p1_lft;\n\t\t\t\tp1_lft.Prev = p2_rt;\n\t\t\t\tp2_lft.Prev = p1_rt;\n\t\t\t\tp1_rt.Next = p2_lft;\n\t\t\t\toutRec1.Pts = p2_lft;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (e2.Side === ClipperLib.EdgeSide.esRight)\n\t\t\t{\n\t\t\t\t//a b c z y x\n\t\t\t\tthis.ReversePolyPtLinks(p2_lft);\n\t\t\t\tp1_rt.Next = p2_rt;\n\t\t\t\tp2_rt.Prev = p1_rt;\n\t\t\t\tp2_lft.Next = p1_lft;\n\t\t\t\tp1_lft.Prev = p2_lft;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//a b c x y z\n\t\t\t\tp1_rt.Next = p2_lft;\n\t\t\t\tp2_lft.Prev = p1_rt;\n\t\t\t\tp1_lft.Prev = p2_rt;\n\t\t\t\tp2_rt.Next = p1_lft;\n\t\t\t}\n\t\t}\n\t\toutRec1.BottomPt = null;\n\t\tif (holeStateRec === outRec2)\n\t\t{\n\t\t\tif (outRec2.FirstLeft !== outRec1)\n\t\t\t\toutRec1.FirstLeft = outRec2.FirstLeft;\n\t\t\toutRec1.IsHole = outRec2.IsHole;\n\t\t}\n\t\toutRec2.Pts = null;\n\t\toutRec2.BottomPt = null;\n\t\toutRec2.FirstLeft = outRec1;\n\t\tvar OKIdx = e1.OutIdx;\n\t\tvar ObsoleteIdx = e2.OutIdx;\n\t\te1.OutIdx = -1;\n\t\t//nb: safe because we only get here via AddLocalMaxPoly\n\t\te2.OutIdx = -1;\n\t\tvar e = this.m_ActiveEdges;\n\t\twhile (e !== null)\n\t\t{\n\t\t\tif (e.OutIdx === ObsoleteIdx)\n\t\t\t{\n\t\t\t\te.OutIdx = OKIdx;\n\t\t\t\te.Side = e1.Side;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\te = e.NextInAEL;\n\t\t}\n\t\toutRec2.Idx = outRec1.Idx;\n\t};\n\n\tClipperLib.Clipper.prototype.ReversePolyPtLinks = function (pp)\n\t{\n\t\tif (pp === null)\n\t\t\treturn;\n\t\tvar pp1;\n\t\tvar pp2;\n\t\tpp1 = pp;\n\t\tdo {\n\t\t\tpp2 = pp1.Next;\n\t\t\tpp1.Next = pp1.Prev;\n\t\t\tpp1.Prev = pp2;\n\t\t\tpp1 = pp2;\n\t\t}\n\t\twhile (pp1 !== pp)\n\t};\n\n\tClipperLib.Clipper.SwapSides = function (edge1, edge2)\n\t{\n\t\tvar side = edge1.Side;\n\t\tedge1.Side = edge2.Side;\n\t\tedge2.Side = side;\n\t};\n\n\tClipperLib.Clipper.SwapPolyIndexes = function (edge1, edge2)\n\t{\n\t\tvar outIdx = edge1.OutIdx;\n\t\tedge1.OutIdx = edge2.OutIdx;\n\t\tedge2.OutIdx = outIdx;\n\t};\n\n\tClipperLib.Clipper.prototype.IntersectEdges = function (e1, e2, pt)\n\t{\n\t\t//e1 will be to the left of e2 BELOW the intersection. Therefore e1 is before\n\t\t//e2 in AEL except when e1 is being inserted at the intersection point ...\n\t\tvar e1Contributing = (e1.OutIdx >= 0);\n\t\tvar e2Contributing = (e2.OutIdx >= 0);\n\n\t\tif (ClipperLib.use_xyz)\n\t\t\tthis.SetZ(pt, e1, e2);\n\n\t\tif (ClipperLib.use_lines)\n\t\t{\n\t\t\t//if either edge is on an OPEN path ...\n\t\t\tif (e1.WindDelta === 0 || e2.WindDelta === 0)\n\t\t\t{\n\t\t\t\t//ignore subject-subject open path intersections UNLESS they\n\t\t\t\t//are both open paths, AND they are both 'contributing maximas' ...\n\t\t\t\tif (e1.WindDelta === 0 && e2.WindDelta === 0) return;\n\t\t\t\t//if intersecting a subj line with a subj poly ...\n\t\t\t\telse if (e1.PolyTyp === e2.PolyTyp &&\n\t\t\t\t\te1.WindDelta !== e2.WindDelta && this.m_ClipType === ClipperLib.ClipType.ctUnion)\n\t\t\t\t{\n\t\t\t\t\tif (e1.WindDelta === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (e2Contributing)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.AddOutPt(e1, pt);\n\t\t\t\t\t\t\tif (e1Contributing)\n\t\t\t\t\t\t\t\te1.OutIdx = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (e1Contributing)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.AddOutPt(e2, pt);\n\t\t\t\t\t\t\tif (e2Contributing)\n\t\t\t\t\t\t\t\te2.OutIdx = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (e1.PolyTyp !== e2.PolyTyp)\n\t\t\t\t{\n\t\t\t\t\tif ((e1.WindDelta === 0) && Math.abs(e2.WindCnt) === 1 &&\n\t\t\t\t\t\t(this.m_ClipType !== ClipperLib.ClipType.ctUnion || e2.WindCnt2 === 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.AddOutPt(e1, pt);\n\t\t\t\t\t\tif (e1Contributing)\n\t\t\t\t\t\t\te1.OutIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((e2.WindDelta === 0) && (Math.abs(e1.WindCnt) === 1) &&\n\t\t\t\t\t\t(this.m_ClipType !== ClipperLib.ClipType.ctUnion || e1.WindCnt2 === 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.AddOutPt(e2, pt);\n\t\t\t\t\t\tif (e2Contributing)\n\t\t\t\t\t\t\te2.OutIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t//update winding counts...\n\t\t//assumes that e1 will be to the Right of e2 ABOVE the intersection\n\t\tif (e1.PolyTyp === e2.PolyTyp)\n\t\t{\n\t\t\tif (this.IsEvenOddFillType(e1))\n\t\t\t{\n\t\t\t\tvar oldE1WindCnt = e1.WindCnt;\n\t\t\t\te1.WindCnt = e2.WindCnt;\n\t\t\t\te2.WindCnt = oldE1WindCnt;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (e1.WindCnt + e2.WindDelta === 0)\n\t\t\t\t\te1.WindCnt = -e1.WindCnt;\n\t\t\t\telse\n\t\t\t\t\te1.WindCnt += e2.WindDelta;\n\t\t\t\tif (e2.WindCnt - e1.WindDelta === 0)\n\t\t\t\t\te2.WindCnt = -e2.WindCnt;\n\t\t\t\telse\n\t\t\t\t\te2.WindCnt -= e1.WindDelta;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!this.IsEvenOddFillType(e2))\n\t\t\t\te1.WindCnt2 += e2.WindDelta;\n\t\t\telse\n\t\t\t\te1.WindCnt2 = (e1.WindCnt2 === 0) ? 1 : 0;\n\t\t\tif (!this.IsEvenOddFillType(e1))\n\t\t\t\te2.WindCnt2 -= e1.WindDelta;\n\t\t\telse\n\t\t\t\te2.WindCnt2 = (e2.WindCnt2 === 0) ? 1 : 0;\n\t\t}\n\t\tvar e1FillType, e2FillType, e1FillType2, e2FillType2;\n\t\tif (e1.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t{\n\t\t\te1FillType = this.m_SubjFillType;\n\t\t\te1FillType2 = this.m_ClipFillType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\te1FillType = this.m_ClipFillType;\n\t\t\te1FillType2 = this.m_SubjFillType;\n\t\t}\n\t\tif (e2.PolyTyp === ClipperLib.PolyType.ptSubject)\n\t\t{\n\t\t\te2FillType = this.m_SubjFillType;\n\t\t\te2FillType2 = this.m_ClipFillType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\te2FillType = this.m_ClipFillType;\n\t\t\te2FillType2 = this.m_SubjFillType;\n\t\t}\n\t\tvar e1Wc, e2Wc;\n\t\tswitch (e1FillType)\n\t\t{\n\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\te1Wc = e1.WindCnt;\n\t\t\tbreak;\n\t\tcase ClipperLib.PolyFillType.pftNegative:\n\t\t\te1Wc = -e1.WindCnt;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\te1Wc = Math.abs(e1.WindCnt);\n\t\t\tbreak;\n\t\t}\n\t\tswitch (e2FillType)\n\t\t{\n\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\te2Wc = e2.WindCnt;\n\t\t\tbreak;\n\t\tcase ClipperLib.PolyFillType.pftNegative:\n\t\t\te2Wc = -e2.WindCnt;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\te2Wc = Math.abs(e2.WindCnt);\n\t\t\tbreak;\n\t\t}\n\t\tif (e1Contributing && e2Contributing)\n\t\t{\n\t\t\tif ((e1Wc !== 0 && e1Wc !== 1) || (e2Wc !== 0 && e2Wc !== 1) ||\n\t\t\t\t(e1.PolyTyp !== e2.PolyTyp && this.m_ClipType !== ClipperLib.ClipType.ctXor))\n\t\t\t{\n\t\t\t\tthis.AddLocalMaxPoly(e1, e2, pt);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.AddOutPt(e1, pt);\n\t\t\t\tthis.AddOutPt(e2, pt);\n\t\t\t\tClipperLib.Clipper.SwapSides(e1, e2);\n\t\t\t\tClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n\t\t\t}\n\t\t}\n\t\telse if (e1Contributing)\n\t\t{\n\t\t\tif (e2Wc === 0 || e2Wc === 1)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(e1, pt);\n\t\t\t\tClipperLib.Clipper.SwapSides(e1, e2);\n\t\t\t\tClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n\t\t\t}\n\t\t}\n\t\telse if (e2Contributing)\n\t\t{\n\t\t\tif (e1Wc === 0 || e1Wc === 1)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(e2, pt);\n\t\t\t\tClipperLib.Clipper.SwapSides(e1, e2);\n\t\t\t\tClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n\t\t\t}\n\t\t}\n\t\telse if ((e1Wc === 0 || e1Wc === 1) && (e2Wc === 0 || e2Wc === 1))\n\t\t{\n\t\t\t//neither edge is currently contributing ...\n\t\t\tvar e1Wc2, e2Wc2;\n\t\t\tswitch (e1FillType2)\n\t\t\t{\n\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\te1Wc2 = e1.WindCnt2;\n\t\t\t\tbreak;\n\t\t\tcase ClipperLib.PolyFillType.pftNegative:\n\t\t\t\te1Wc2 = -e1.WindCnt2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\te1Wc2 = Math.abs(e1.WindCnt2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (e2FillType2)\n\t\t\t{\n\t\t\tcase ClipperLib.PolyFillType.pftPositive:\n\t\t\t\te2Wc2 = e2.WindCnt2;\n\t\t\t\tbreak;\n\t\t\tcase ClipperLib.PolyFillType.pftNegative:\n\t\t\t\te2Wc2 = -e2.WindCnt2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\te2Wc2 = Math.abs(e2.WindCnt2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (e1.PolyTyp !== e2.PolyTyp)\n\t\t\t{\n\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t}\n\t\t\telse if (e1Wc === 1 && e2Wc === 1)\n\t\t\t\tswitch (this.m_ClipType)\n\t\t\t\t{\n\t\t\t\tcase ClipperLib.ClipType.ctIntersection:\n\t\t\t\t\tif (e1Wc2 > 0 && e2Wc2 > 0)\n\t\t\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ClipperLib.ClipType.ctUnion:\n\t\t\t\t\tif (e1Wc2 <= 0 && e2Wc2 <= 0)\n\t\t\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ClipperLib.ClipType.ctDifference:\n\t\t\t\t\tif (((e1.PolyTyp === ClipperLib.PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||\n\t\t\t\t\t\t((e1.PolyTyp === ClipperLib.PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0)))\n\t\t\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ClipperLib.ClipType.ctXor:\n\t\t\t\t\tthis.AddLocalMinPoly(e1, e2, pt);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tClipperLib.Clipper.SwapSides(e1, e2);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.DeleteFromSEL = function (e)\n\t{\n\t\tvar SelPrev = e.PrevInSEL;\n\t\tvar SelNext = e.NextInSEL;\n\t\tif (SelPrev === null && SelNext === null && (e !== this.m_SortedEdges))\n\t\t\treturn;\n\t\t//already deleted\n\t\tif (SelPrev !== null)\n\t\t\tSelPrev.NextInSEL = SelNext;\n\t\telse\n\t\t\tthis.m_SortedEdges = SelNext;\n\t\tif (SelNext !== null)\n\t\t\tSelNext.PrevInSEL = SelPrev;\n\t\te.NextInSEL = null;\n\t\te.PrevInSEL = null;\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessHorizontals = function ()\n\t{\n\t\tvar horzEdge = {}; //m_SortedEdges;\n\t\twhile (this.PopEdgeFromSEL(horzEdge))\n\t\t{\n\t\t\tthis.ProcessHorizontal(horzEdge.v);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetHorzDirection = function (HorzEdge, $var)\n\t{\n\t\tif (HorzEdge.Bot.X < HorzEdge.Top.X)\n\t\t{\n\t\t\t$var.Left = HorzEdge.Bot.X;\n\t\t\t$var.Right = HorzEdge.Top.X;\n\t\t\t$var.Dir = ClipperLib.Direction.dLeftToRight;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$var.Left = HorzEdge.Top.X;\n\t\t\t$var.Right = HorzEdge.Bot.X;\n\t\t\t$var.Dir = ClipperLib.Direction.dRightToLeft;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessHorizontal = function (horzEdge)\n\t{\n\t\tvar $var = {\n\t\t\tDir: null,\n\t\t\tLeft: null,\n\t\t\tRight: null\n\t\t};\n\n\t\tthis.GetHorzDirection(horzEdge, $var);\n\t\tvar dir = $var.Dir;\n\t\tvar horzLeft = $var.Left;\n\t\tvar horzRight = $var.Right;\n\n\t\tvar IsOpen = horzEdge.WindDelta === 0;\n\n\t\tvar eLastHorz = horzEdge,\n\t\t\teMaxPair = null;\n\t\twhile (eLastHorz.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(eLastHorz.NextInLML))\n\t\t\teLastHorz = eLastHorz.NextInLML;\n\t\tif (eLastHorz.NextInLML === null)\n\t\t\teMaxPair = this.GetMaximaPair(eLastHorz);\n\n\t\tvar currMax = this.m_Maxima;\n\t\tif (currMax !== null)\n\t\t{\n\t\t\t//get the first maxima in range (X) ...\n\t\t\tif (dir === ClipperLib.Direction.dLeftToRight)\n\t\t\t{\n\t\t\t\twhile (currMax !== null && currMax.X <= horzEdge.Bot.X)\n\t\t\t\t{\n\t\t\t\t\tcurrMax = currMax.Next;\n\t\t\t\t}\n\t\t\t\tif (currMax !== null && currMax.X >= eLastHorz.Top.X)\n\t\t\t\t{\n\t\t\t\t\tcurrMax = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile (currMax.Next !== null && currMax.Next.X < horzEdge.Bot.X)\n\t\t\t\t{\n\t\t\t\t\tcurrMax = currMax.Next;\n\t\t\t\t}\n\t\t\t\tif (currMax.X <= eLastHorz.Top.X)\n\t\t\t\t{\n\t\t\t\t\tcurrMax = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar op1 = null;\n\t\tfor (;;) //loop through consec. horizontal edges\n\t\t{\n\t\t\tvar IsLastHorz = (horzEdge === eLastHorz);\n\t\t\tvar e = this.GetNextInAEL(horzEdge, dir);\n\t\t\twhile (e !== null)\n\t\t\t{\n\t\t\t\t//this code block inserts extra coords into horizontal edges (in output\n\t\t\t\t//polygons) whereever maxima touch these horizontal edges. This helps\n\t\t\t\t//'simplifying' polygons (ie if the Simplify property is set).\n\t\t\t\tif (currMax !== null)\n\t\t\t\t{\n\t\t\t\t\tif (dir === ClipperLib.Direction.dLeftToRight)\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (currMax !== null && currMax.X < e.Curr.X)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horzEdge.OutIdx >= 0 && !IsOpen)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.AddOutPt(horzEdge, new ClipperLib.FPoint2(currMax.X, horzEdge.Bot.Y));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrMax = currMax.Next;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (currMax !== null && currMax.X > e.Curr.X)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (horzEdge.OutIdx >= 0 && !IsOpen)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.AddOutPt(horzEdge, new ClipperLib.FPoint2(currMax.X, horzEdge.Bot.Y));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrMax = currMax.Prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((dir === ClipperLib.Direction.dLeftToRight && e.Curr.X > horzRight) || (dir === ClipperLib.Direction.dRightToLeft && e.Curr.X < horzLeft))\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//Also break if we've got to the end of an intermediate horizontal edge ...\n\t\t\t\t//nb: Smaller Dx's are to the right of larger Dx's ABOVE the horizontal.\n\t\t\t\tif (e.Curr.X === horzEdge.Top.X && horzEdge.NextInLML !== null && e.Dx < horzEdge.NextInLML.Dx)\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (horzEdge.OutIdx >= 0 && !IsOpen) //note: may be done multiple times\n\t\t\t\t{\n\t\t\t\t\tif (ClipperLib.use_xyz)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (dir === ClipperLib.Direction.dLeftToRight)\n\t\t\t\t\t\t\tthis.SetZ(e.Curr, horzEdge, e);\n\t\t\t\t\t\telse this.SetZ(e.Curr, e, horzEdge);\n\t\t\t\t\t}\n\n\t\t\t\t\top1 = this.AddOutPt(horzEdge, e.Curr);\n\t\t\t\t\tvar eNextHorz = this.m_SortedEdges;\n\t\t\t\t\twhile (eNextHorz !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (eNextHorz.OutIdx >= 0 && this.HorzSegmentsOverlap(horzEdge.Bot.X, horzEdge.Top.X, eNextHorz.Bot.X, eNextHorz.Top.X))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar op2 = this.GetLastOutPt(eNextHorz);\n\t\t\t\t\t\t\tthis.AddJoin(op2, op1, eNextHorz.Top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\teNextHorz = eNextHorz.NextInSEL;\n\t\t\t\t\t}\n\t\t\t\t\tthis.AddGhostJoin(op1, horzEdge.Bot);\n\t\t\t\t}\n\n\t\t\t\t//OK, so far we're still in range of the horizontal Edge  but make sure\n\t\t\t\t//we're at the last of consec. horizontals when matching with eMaxPair\n\t\t\t\tif (e === eMaxPair && IsLastHorz)\n\t\t\t\t{\n\t\t\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.AddLocalMaxPoly(horzEdge, eMaxPair, horzEdge.Top);\n\t\t\t\t\t}\n\t\t\t\t\tthis.DeleteFromAEL(horzEdge);\n\t\t\t\t\tthis.DeleteFromAEL(eMaxPair);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (dir === ClipperLib.Direction.dLeftToRight)\n\t\t\t\t{\n\t\t\t\t\tvar Pt = new ClipperLib.FPoint2(e.Curr.X, horzEdge.Curr.Y);\n\t\t\t\t\tthis.IntersectEdges(horzEdge, e, Pt);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar Pt = new ClipperLib.FPoint2(e.Curr.X, horzEdge.Curr.Y);\n\t\t\t\t\tthis.IntersectEdges(e, horzEdge, Pt);\n\t\t\t\t}\n\t\t\t\tvar eNext = this.GetNextInAEL(e, dir);\n\t\t\t\tthis.SwapPositionsInAEL(horzEdge, e);\n\t\t\t\te = eNext;\n\t\t\t} //end while(e !== null)\n\n\t\t\t//Break out of loop if HorzEdge.NextInLML is not also horizontal ...\n\t\t\tif (horzEdge.NextInLML === null || !ClipperLib.ClipperBase.IsHorizontal(horzEdge.NextInLML))\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\thorzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(horzEdge, horzEdge.Bot);\n\t\t\t}\n\n\t\t\t$var = {\n\t\t\t\tDir: dir,\n\t\t\t\tLeft: horzLeft,\n\t\t\t\tRight: horzRight\n\t\t\t};\n\n\t\t\tthis.GetHorzDirection(horzEdge, $var);\n\t\t\tdir = $var.Dir;\n\t\t\thorzLeft = $var.Left;\n\t\t\thorzRight = $var.Right;\n\n\t\t} //end for (;;)\n\n\t\tif (horzEdge.OutIdx >= 0 && op1 === null)\n\t\t{\n\t\t\top1 = this.GetLastOutPt(horzEdge);\n\t\t\tvar eNextHorz = this.m_SortedEdges;\n\t\t\twhile (eNextHorz !== null)\n\t\t\t{\n\t\t\t\tif (eNextHorz.OutIdx >= 0 && this.HorzSegmentsOverlap(horzEdge.Bot.X, horzEdge.Top.X, eNextHorz.Bot.X, eNextHorz.Top.X))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.GetLastOutPt(eNextHorz);\n\t\t\t\t\tthis.AddJoin(op2, op1, eNextHorz.Top);\n\t\t\t\t}\n\t\t\t\teNextHorz = eNextHorz.NextInSEL;\n\t\t\t}\n\t\t\tthis.AddGhostJoin(op1, horzEdge.Top);\n\t\t}\n\n\t\tif (horzEdge.NextInLML !== null)\n\t\t{\n\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t{\n\t\t\t\top1 = this.AddOutPt(horzEdge, horzEdge.Top);\n\n\t\t\t\thorzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n\t\t\t\tif (horzEdge.WindDelta === 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//nb: HorzEdge is no longer horizontal here\n\t\t\t\tvar ePrev = horzEdge.PrevInAEL;\n\t\t\t\tvar eNext = horzEdge.NextInAEL;\n\t\t\t\tif (ePrev !== null && ePrev.Curr.X === horzEdge.Bot.X && ePrev.Curr.Y === horzEdge.Bot.Y && ePrev.WindDelta === 0 && (ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y && ClipperLib.ClipperBase.SlopesEqual3(horzEdge, ePrev)))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.AddOutPt(ePrev, horzEdge.Bot);\n\t\t\t\t\tthis.AddJoin(op1, op2, horzEdge.Top);\n\t\t\t\t}\n\t\t\t\telse if (eNext !== null && eNext.Curr.X === horzEdge.Bot.X && eNext.Curr.Y === horzEdge.Bot.Y && eNext.WindDelta !== 0 && eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y && ClipperLib.ClipperBase.SlopesEqual3(horzEdge, eNext))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.AddOutPt(eNext, horzEdge.Bot);\n\t\t\t\t\tthis.AddJoin(op1, op2, horzEdge.Top);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thorzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (horzEdge.OutIdx >= 0)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(horzEdge, horzEdge.Top);\n\t\t\t}\n\t\t\tthis.DeleteFromAEL(horzEdge);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetNextInAEL = function (e, Direction)\n\t{\n\t\treturn Direction === ClipperLib.Direction.dLeftToRight ? e.NextInAEL : e.PrevInAEL;\n\t};\n\n\tClipperLib.Clipper.prototype.IsMinima = function (e)\n\t{\n\t\treturn e !== null && (e.Prev.NextInLML !== e) && (e.Next.NextInLML !== e);\n\t};\n\n\tClipperLib.Clipper.prototype.IsMaxima = function (e, Y)\n\t{\n\t\treturn (e !== null && e.Top.Y === Y && e.NextInLML === null);\n\t};\n\n\tClipperLib.Clipper.prototype.IsIntermediate = function (e, Y)\n\t{\n\t\treturn (e.Top.Y === Y && e.NextInLML !== null);\n\t};\n\n\tClipperLib.Clipper.prototype.GetMaximaPair = function (e)\n\t{\n\t\tif ((ClipperLib.FPoint.op_Equality(e.Next.Top, e.Top)) && e.Next.NextInLML === null)\n\t\t{\n\t\t\treturn e.Next;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((ClipperLib.FPoint.op_Equality(e.Prev.Top, e.Top)) && e.Prev.NextInLML === null)\n\t\t\t{\n\t\t\t\treturn e.Prev;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.GetMaximaPairEx = function (e)\n\t{\n\t\t//as above but returns null if MaxPair isn't in AEL (unless it's horizontal)\n\t\tvar result = this.GetMaximaPair(e);\n\t\tif (result === null || result.OutIdx === ClipperLib.ClipperBase.Skip ||\n\t\t\t((result.NextInAEL === result.PrevInAEL) && !ClipperLib.ClipperBase.IsHorizontal(result)))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessIntersections = function (topY)\n\t{\n\t\tif (this.m_ActiveEdges === null)\n\t\t\treturn true;\n\t\ttry\n\t\t{\n\t\t\tthis.BuildIntersectList(topY);\n\t\t\tif (this.m_IntersectList.length === 0)\n\t\t\t\treturn true;\n\t\t\tif (this.m_IntersectList.length === 1 || this.FixupIntersectionOrder())\n\t\t\t\tthis.ProcessIntersectList();\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t\tcatch ($$e2)\n\t\t{\n\t\t\tthis.m_SortedEdges = null;\n\t\t\tthis.m_IntersectList.length = 0;\n\t\t\tClipperLib.Error(\"ProcessIntersections error\");\n\t\t}\n\t\tthis.m_SortedEdges = null;\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.BuildIntersectList = function (topY)\n\t{\n\t\tif (this.m_ActiveEdges === null)\n\t\t\treturn;\n\t\t//prepare for sorting ...\n\t\tvar e = this.m_ActiveEdges;\n\t\t//console.log(JSON.stringify(JSON.decycle( e )));\n\t\tthis.m_SortedEdges = e;\n\t\twhile (e !== null)\n\t\t{\n\t\t\te.PrevInSEL = e.PrevInAEL;\n\t\t\te.NextInSEL = e.NextInAEL;\n\t\t\te.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n\t\t\te = e.NextInAEL;\n\t\t}\n\t\t//bubblesort ...\n\t\tvar isModified = true;\n\t\twhile (isModified && this.m_SortedEdges !== null)\n\t\t{\n\t\t\tisModified = false;\n\t\t\te = this.m_SortedEdges;\n\t\t\twhile (e.NextInSEL !== null)\n\t\t\t{\n\t\t\t\tvar eNext = e.NextInSEL;\n\t\t\t\tvar pt = new ClipperLib.FPoint0();\n\t\t\t\t//console.log(\"e.Curr.X: \" + e.Curr.X + \" eNext.Curr.X\" + eNext.Curr.X);\n\t\t\t\tif (e.Curr.X > eNext.Curr.X)\n\t\t\t\t{\n\t\t\t\t\tthis.IntersectPoint(e, eNext, pt);\n\t\t\t\t\tif (pt.Y < topY)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt = new ClipperLib.FPoint2(ClipperLib.Clipper.TopX(e, topY), topY);\n\t\t\t\t\t}\n\t\t\t\t\tvar newNode = new ClipperLib.IntersectNode();\n\t\t\t\t\tnewNode.Edge1 = e;\n\t\t\t\t\tnewNode.Edge2 = eNext;\n\t\t\t\t\t//newNode.Pt = pt;\n\t\t\t\t\tnewNode.Pt.X = pt.X;\n\t\t\t\t\tnewNode.Pt.Y = pt.Y;\n\t\t\t\t\tif (ClipperLib.use_xyz) newNode.Pt.Z = pt.Z;\n\t\t\t\t\tthis.m_IntersectList.push(newNode);\n\t\t\t\t\tthis.SwapPositionsInSEL(e, eNext);\n\t\t\t\t\tisModified = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\te = eNext;\n\t\t\t}\n\t\t\tif (e.PrevInSEL !== null)\n\t\t\t\te.PrevInSEL.NextInSEL = null;\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.m_SortedEdges = null;\n\t};\n\n\tClipperLib.Clipper.prototype.EdgesAdjacent = function (inode)\n\t{\n\t\treturn (inode.Edge1.NextInSEL === inode.Edge2) || (inode.Edge1.PrevInSEL === inode.Edge2);\n\t};\n\n\tClipperLib.Clipper.IntersectNodeSort = function (node1, node2)\n\t{\n\t\t//the following typecast is safe because the differences in Pt.Y will\n\t\t//be limited to the height of the scanbeam.\n\t\treturn (node2.Pt.Y - node1.Pt.Y);\n\t};\n\n\tClipperLib.Clipper.prototype.FixupIntersectionOrder = function ()\n\t{\n\t\t//pre-condition: intersections are sorted bottom-most first.\n\t\t//Now it's crucial that intersections are made only between adjacent edges,\n\t\t//so to ensure this the order of intersections may need adjusting ...\n\t\tthis.m_IntersectList.sort(this.m_IntersectNodeComparer);\n\t\tthis.CopyAELToSEL();\n\t\tvar cnt = this.m_IntersectList.length;\n\t\tfor (var i = 0; i < cnt; i++)\n\t\t{\n\t\t\tif (!this.EdgesAdjacent(this.m_IntersectList[i]))\n\t\t\t{\n\t\t\t\tvar j = i + 1;\n\t\t\t\twhile (j < cnt && !this.EdgesAdjacent(this.m_IntersectList[j]))\n\t\t\t\t\tj++;\n\t\t\t\tif (j === cnt)\n\t\t\t\t\treturn false;\n\t\t\t\tvar tmp = this.m_IntersectList[i];\n\t\t\t\tthis.m_IntersectList[i] = this.m_IntersectList[j];\n\t\t\t\tthis.m_IntersectList[j] = tmp;\n\t\t\t}\n\t\t\tthis.SwapPositionsInSEL(this.m_IntersectList[i].Edge1, this.m_IntersectList[i].Edge2);\n\t\t}\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessIntersectList = function ()\n\t{\n\t\tfor (var i = 0, ilen = this.m_IntersectList.length; i < ilen; i++)\n\t\t{\n\t\t\tvar iNode = this.m_IntersectList[i];\n\t\t\tthis.IntersectEdges(iNode.Edge1, iNode.Edge2, iNode.Pt);\n\t\t\tthis.SwapPositionsInAEL(iNode.Edge1, iNode.Edge2);\n\t\t}\n\t\tthis.m_IntersectList.length = 0;\n\t};\n\n\tClipperLib.Clipper.TopX = function (edge, currentY)\n\t{\n\t\t//if (edge.Bot == edge.Curr) alert (\"edge.Bot = edge.Curr\");\n\t\t//if (edge.Bot == edge.Top) alert (\"edge.Bot = edge.Top\");\n\t\tif (currentY === edge.Top.Y)\n\t\t\treturn edge.Top.X;\n\t\treturn edge.Bot.X + edge.Dx * (currentY - edge.Bot.Y);\n\t};\n\n\tClipperLib.Clipper.prototype.IntersectPoint = function (edge1, edge2, ip)\n\t{\n\t\tip.X = 0;\n\t\tip.Y = 0;\n\t\tvar b1, b2;\n\t\t//nb: with very large coordinate values, it's possible for SlopesEqual() to\n\t\t//return false but for the edge.Dx value be equal due to double precision rounding.\n\t\tif (edge1.Dx === edge2.Dx)\n\t\t{\n\t\t\tip.Y = edge1.Curr.Y;\n\t\t\tip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n\t\t\treturn;\n\t\t}\n\t\tif (edge1.Delta.X === 0)\n\t\t{\n\t\t\tip.X = edge1.Bot.X;\n\t\t\tif (ClipperLib.ClipperBase.IsHorizontal(edge2))\n\t\t\t{\n\t\t\t\tip.Y = edge2.Bot.Y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb2 = edge2.Bot.Y - (edge2.Bot.X / edge2.Dx);\n\t\t\t\tip.Y = ip.X / edge2.Dx + b2;\n\t\t\t}\n\t\t}\n\t\telse if (edge2.Delta.X === 0)\n\t\t{\n\t\t\tip.X = edge2.Bot.X;\n\t\t\tif (ClipperLib.ClipperBase.IsHorizontal(edge1))\n\t\t\t{\n\t\t\t\tip.Y = edge1.Bot.Y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb1 = edge1.Bot.Y - (edge1.Bot.X / edge1.Dx);\n\t\t\t\tip.Y = ip.X / edge1.Dx + b1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb1 = edge1.Bot.X - edge1.Bot.Y * edge1.Dx;\n\t\t\tb2 = edge2.Bot.X - edge2.Bot.Y * edge2.Dx;\n\t\t\tvar q = (b2 - b1) / (edge1.Dx - edge2.Dx);\n\t\t\tip.Y = q;\n\t\t\tif (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n\t\t\t\tip.X = edge1.Dx * q + b1;\n\t\t\telse\n\t\t\t\tip.X = edge2.Dx * q + b2;\n\t\t}\n\t\tif (ip.Y < edge1.Top.Y || ip.Y < edge2.Top.Y)\n\t\t{\n\t\t\tif (edge1.Top.Y > edge2.Top.Y)\n\t\t\t{\n\t\t\t\tip.Y = edge1.Top.Y;\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge2, edge1.Top.Y);\n\t\t\t\treturn ip.X < edge1.Top.X;\n\t\t\t}\n\t\t\telse\n\t\t\t\tip.Y = edge2.Top.Y;\n\t\t\tif (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n\t\t\telse\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n\t\t}\n\t\t//finally, don't allow 'ip' to be BELOW curr.Y (ie bottom of scanbeam) ...\n\t\tif (ip.Y > edge1.Curr.Y)\n\t\t{\n\t\t\tip.Y = edge1.Curr.Y;\n\t\t\t//better to use the more vertical edge to derive X ...\n\t\t\tif (Math.abs(edge1.Dx) > Math.abs(edge2.Dx))\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n\t\t\telse\n\t\t\t\tip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.ProcessEdgesAtTopOfScanbeam = function (topY)\n\t{\n\t\tvar e = this.m_ActiveEdges;\n\n\t\twhile (e !== null)\n\t\t{\n\t\t\t//1. process maxima, treating them as if they're 'bent' horizontal edges,\n\t\t\t//   but exclude maxima with horizontal edges. nb: e can't be a horizontal.\n\t\t\tvar IsMaximaEdge = this.IsMaxima(e, topY);\n\t\t\tif (IsMaximaEdge)\n\t\t\t{\n\t\t\t\tvar eMaxPair = this.GetMaximaPairEx(e);\n\t\t\t\tIsMaximaEdge = (eMaxPair === null || !ClipperLib.ClipperBase.IsHorizontal(eMaxPair));\n\t\t\t}\n\t\t\tif (IsMaximaEdge)\n\t\t\t{\n\t\t\t\tif (this.StrictlySimple)\n\t\t\t\t{\n\t\t\t\t\tthis.InsertMaxima(e.Top.X);\n\t\t\t\t}\n\t\t\t\tvar ePrev = e.PrevInAEL;\n\t\t\t\tthis.DoMaxima(e);\n\t\t\t\tif (ePrev === null)\n\t\t\t\t\te = this.m_ActiveEdges;\n\t\t\t\telse\n\t\t\t\t\te = ePrev.NextInAEL;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//2. promote horizontal edges, otherwise update Curr.X and Curr.Y ...\n\t\t\t\tif (this.IsIntermediate(e, topY) && ClipperLib.ClipperBase.IsHorizontal(e.NextInLML))\n\t\t\t\t{\n\t\t\t\t\te = this.UpdateEdgeIntoAEL(e);\n\t\t\t\t\tif (e.OutIdx >= 0)\n\t\t\t\t\t\tthis.AddOutPt(e, e.Bot);\n\t\t\t\t\tthis.AddEdgeToSEL(e);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\te.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n\t\t\t\t\te.Curr.Y = topY;\n\t\t\t\t}\n\n\t\t\t\tif (ClipperLib.use_xyz)\n\t\t\t\t{\n\t\t\t\t\tif (e.Top.Y === topY) e.Curr.Z = e.Top.Z;\n\t\t\t\t\telse if (e.Bot.Y === topY) e.Curr.Z = e.Bot.Z;\n\t\t\t\t\telse e.Curr.Z = 0;\n\t\t\t\t}\n\n\t\t\t\t//When StrictlySimple and 'e' is being touched by another edge, then\n\t\t\t\t//make sure both edges have a vertex here ...\n\t\t\t\tif (this.StrictlySimple)\n\t\t\t\t{\n\t\t\t\t\tvar ePrev = e.PrevInAEL;\n\t\t\t\t\tif ((e.OutIdx >= 0) && (e.WindDelta !== 0) && ePrev !== null &&\n\t\t\t\t\t\t(ePrev.OutIdx >= 0) && (ePrev.Curr.X === e.Curr.X) &&\n\t\t\t\t\t\t(ePrev.WindDelta !== 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ip = new ClipperLib.FPoint1(e.Curr);\n\n\t\t\t\t\t\tif (ClipperLib.use_xyz)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.SetZ(ip, ePrev, e);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar op = this.AddOutPt(ePrev, ip);\n\t\t\t\t\t\tvar op2 = this.AddOutPt(e, ip);\n\t\t\t\t\t\tthis.AddJoin(op, op2, ip); //StrictlySimple (type-3) join\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te = e.NextInAEL;\n\t\t\t}\n\t\t}\n\t\t//3. Process horizontals at the Top of the scanbeam ...\n\t\tthis.ProcessHorizontals();\n\t\tthis.m_Maxima = null;\n\t\t//4. Promote intermediate vertices ...\n\t\te = this.m_ActiveEdges;\n\t\twhile (e !== null)\n\t\t{\n\t\t\tif (this.IsIntermediate(e, topY))\n\t\t\t{\n\t\t\t\tvar op = null;\n\t\t\t\tif (e.OutIdx >= 0)\n\t\t\t\t\top = this.AddOutPt(e, e.Top);\n\t\t\t\te = this.UpdateEdgeIntoAEL(e);\n\t\t\t\t//if output polygons share an edge, they'll need joining later ...\n\t\t\t\tvar ePrev = e.PrevInAEL;\n\t\t\t\tvar eNext = e.NextInAEL;\n\n\t\t\t\tif (ePrev !== null && ePrev.Curr.X === e.Bot.X && ePrev.Curr.Y === e.Bot.Y && op !== null && ePrev.OutIdx >= 0 && ePrev.Curr.Y === ePrev.Top.Y && ClipperLib.ClipperBase.SlopesEqual5(e.Curr, e.Top, ePrev.Curr, ePrev.Top) && (e.WindDelta !== 0) && (ePrev.WindDelta !== 0))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.AddOutPt(ePrev2, e.Bot);\n\t\t\t\t\tthis.AddJoin(op, op2, e.Top);\n\t\t\t\t}\n\t\t\t\telse if (eNext !== null && eNext.Curr.X === e.Bot.X && eNext.Curr.Y === e.Bot.Y && op !== null && eNext.OutIdx >= 0 && eNext.Curr.Y === eNext.Top.Y && ClipperLib.ClipperBase.SlopesEqual5(e.Curr, e.Top, eNext.Curr, eNext.Top) && (e.WindDelta !== 0) && (eNext.WindDelta !== 0))\n\t\t\t\t{\n\t\t\t\t\tvar op2 = this.AddOutPt(eNext, e.Bot);\n\t\t\t\t\tthis.AddJoin(op, op2, e.Top);\n\t\t\t\t}\n\t\t\t}\n\t\t\te = e.NextInAEL;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.DoMaxima = function (e)\n\t{\n\t\tvar eMaxPair = this.GetMaximaPairEx(e);\n\t\tif (eMaxPair === null)\n\t\t{\n\t\t\tif (e.OutIdx >= 0)\n\t\t\t\tthis.AddOutPt(e, e.Top);\n\t\t\tthis.DeleteFromAEL(e);\n\t\t\treturn;\n\t\t}\n\t\tvar eNext = e.NextInAEL;\n\t\twhile (eNext !== null && eNext !== eMaxPair)\n\t\t{\n\t\t\tthis.IntersectEdges(e, eNext, e.Top);\n\t\t\tthis.SwapPositionsInAEL(e, eNext);\n\t\t\teNext = e.NextInAEL;\n\t\t}\n\t\tif (e.OutIdx === -1 && eMaxPair.OutIdx === -1)\n\t\t{\n\t\t\tthis.DeleteFromAEL(e);\n\t\t\tthis.DeleteFromAEL(eMaxPair);\n\t\t}\n\t\telse if (e.OutIdx >= 0 && eMaxPair.OutIdx >= 0)\n\t\t{\n\t\t\tif (e.OutIdx >= 0) this.AddLocalMaxPoly(e, eMaxPair, e.Top);\n\t\t\tthis.DeleteFromAEL(e);\n\t\t\tthis.DeleteFromAEL(eMaxPair);\n\t\t}\n\t\telse if (ClipperLib.use_lines && e.WindDelta === 0)\n\t\t{\n\t\t\tif (e.OutIdx >= 0)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(e, e.Top);\n\t\t\t\te.OutIdx = ClipperLib.ClipperBase.Unassigned;\n\t\t\t}\n\t\t\tthis.DeleteFromAEL(e);\n\t\t\tif (eMaxPair.OutIdx >= 0)\n\t\t\t{\n\t\t\t\tthis.AddOutPt(eMaxPair, e.Top);\n\t\t\t\teMaxPair.OutIdx = ClipperLib.ClipperBase.Unassigned;\n\t\t\t}\n\t\t\tthis.DeleteFromAEL(eMaxPair);\n\t\t}\n\t\telse\n\t\t\tClipperLib.Error(\"DoMaxima error\");\n\t};\n\n\tClipperLib.Clipper.ReversePaths = function (polys)\n\t{\n\t\tfor (var i = 0, len = polys.length; i < len; i++)\n\t\t\tpolys[i].reverse();\n\t};\n\n\tClipperLib.Clipper.Orientation = function (poly)\n\t{\n\t\treturn ClipperLib.Clipper.Area(poly) >= 0;\n\t};\n\n\tClipperLib.Clipper.prototype.PointCount = function (pts)\n\t{\n\t\tif (pts === null)\n\t\t\treturn 0;\n\t\tvar result = 0;\n\t\tvar p = pts;\n\t\tdo {\n\t\t\tresult++;\n\t\t\tp = p.Next;\n\t\t}\n\t\twhile (p !== pts)\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.BuildResult = function (polyg)\n\t{\n\t\tClipperLib.Clear(polyg);\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\tvar outRec = this.m_PolyOuts[i];\n\t\t\tif (outRec.Pts === null)\n\t\t\t\tcontinue;\n\t\t\tvar p = outRec.Pts.Prev;\n\t\t\tvar cnt = this.PointCount(p);\n\t\t\tif (cnt < 2)\n\t\t\t\tcontinue;\n\t\t\tvar pg = new Array(cnt);\n\t\t\tfor (var j = 0; j < cnt; j++)\n\t\t\t{\n\t\t\t\tpg[j] = p.Pt;\n\t\t\t\tp = p.Prev;\n\t\t\t}\n\t\t\tpolyg.push(pg);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.BuildResult2 = function (polytree)\n\t{\n\t\tpolytree.Clear();\n\t\t//add each output polygon/contour to polytree ...\n\t\t//polytree.m_AllPolys.set_Capacity(this.m_PolyOuts.length);\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\tvar outRec = this.m_PolyOuts[i];\n\t\t\tvar cnt = this.PointCount(outRec.Pts);\n\t\t\tif ((outRec.IsOpen && cnt < 2) || (!outRec.IsOpen && cnt < 3))\n\t\t\t\tcontinue;\n\t\t\tthis.FixHoleLinkage(outRec);\n\t\t\tvar pn = new ClipperLib.PolyNode();\n\t\t\tpolytree.m_AllPolys.push(pn);\n\t\t\toutRec.PolyNode = pn;\n\t\t\tpn.m_polygon.length = cnt;\n\t\t\tvar op = outRec.Pts.Prev;\n\t\t\tfor (var j = 0; j < cnt; j++)\n\t\t\t{\n\t\t\t\tpn.m_polygon[j] = op.Pt;\n\t\t\t\top = op.Prev;\n\t\t\t}\n\t\t}\n\t\t//fixup PolyNode links etc ...\n\t\t//polytree.m_Childs.set_Capacity(this.m_PolyOuts.length);\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\tvar outRec = this.m_PolyOuts[i];\n\t\t\tif (outRec.PolyNode === null)\n\t\t\t\tcontinue;\n\t\t\telse if (outRec.IsOpen)\n\t\t\t{\n\t\t\t\toutRec.PolyNode.IsOpen = true;\n\t\t\t\tpolytree.AddChild(outRec.PolyNode);\n\t\t\t}\n\t\t\telse if (outRec.FirstLeft !== null && outRec.FirstLeft.PolyNode !== null)\n\t\t\t\toutRec.FirstLeft.PolyNode.AddChild(outRec.PolyNode);\n\t\t\telse\n\t\t\t\tpolytree.AddChild(outRec.PolyNode);\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.FixupOutPolyline = function (outRec)\n\t{\n\t\tvar pp = outRec.Pts;\n\t\tvar lastPP = pp.Prev;\n\t\twhile (pp !== lastPP)\n\t\t{\n\t\t\tpp = pp.Next;\n\t\t\tif (ClipperLib.FPoint.op_Equality(pp.Pt, pp.Prev.Pt))\n\t\t\t{\n\t\t\t\tif (pp === lastPP)\n\t\t\t\t{\n\t\t\t\t\tlastPP = pp.Prev;\n\t\t\t\t}\n\t\t\t\tvar tmpPP = pp.Prev;\n\t\t\t\ttmpPP.Next = pp.Next;\n\t\t\t\tpp.Next.Prev = tmpPP;\n\t\t\t\tpp = tmpPP;\n\t\t\t}\n\t\t}\n\t\tif (pp === pp.Prev)\n\t\t{\n\t\t\toutRec.Pts = null;\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.FixupOutPolygon = function (outRec)\n\t{\n\t\t//FixupOutPolygon() - removes duplicate points and simplifies consecutive\n\t\t//parallel edges by removing the middle vertex.\n\t\tvar lastOK = null;\n\t\toutRec.BottomPt = null;\n\t\tvar pp = outRec.Pts;\n\t\tvar preserveCol = this.PreserveCollinear || this.StrictlySimple;\n\t\tfor (;;)\n\t\t{\n\t\t\tif (pp.Prev === pp || pp.Prev === pp.Next)\n\t\t\t{\n\t\t\t\toutRec.Pts = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//test for duplicate points and collinear edges ...\n\t\t\tif ((ClipperLib.FPoint.op_Equality(pp.Pt, pp.Next.Pt)) || (ClipperLib.FPoint.op_Equality(pp.Pt, pp.Prev.Pt)) || (ClipperLib.ClipperBase.SlopesEqual4(pp.Prev.Pt, pp.Pt, pp.Next.Pt) && (!preserveCol || !this.Pt2IsBetweenPt1AndPt3(pp.Prev.Pt, pp.Pt, pp.Next.Pt))))\n\t\t\t{\n\t\t\t\tlastOK = null;\n\t\t\t\tpp.Prev.Next = pp.Next;\n\t\t\t\tpp.Next.Prev = pp.Prev;\n\t\t\t\tpp = pp.Prev;\n\t\t\t}\n\t\t\telse if (pp === lastOK)\n\t\t\t\tbreak;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (lastOK === null)\n\t\t\t\t\tlastOK = pp;\n\t\t\t\tpp = pp.Next;\n\t\t\t}\n\t\t}\n\t\toutRec.Pts = pp;\n\t};\n\n\tClipperLib.Clipper.prototype.DupOutPt = function (outPt, InsertAfter)\n\t{\n\t\tvar result = new ClipperLib.OutPt();\n\t\t//result.Pt = outPt.Pt;\n\t\tresult.Pt.X = outPt.Pt.X;\n\t\tresult.Pt.Y = outPt.Pt.Y;\n\t\tif (ClipperLib.use_xyz) result.Pt.Z = outPt.Pt.Z;\n\t\tresult.Idx = outPt.Idx;\n\t\tif (InsertAfter)\n\t\t{\n\t\t\tresult.Next = outPt.Next;\n\t\t\tresult.Prev = outPt;\n\t\t\toutPt.Next.Prev = result;\n\t\t\toutPt.Next = result;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.Prev = outPt.Prev;\n\t\t\tresult.Next = outPt;\n\t\t\toutPt.Prev.Next = result;\n\t\t\toutPt.Prev = result;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.GetOverlap = function (a1, a2, b1, b2, $val)\n\t{\n\t\tif (a1 < a2)\n\t\t{\n\t\t\tif (b1 < b2)\n\t\t\t{\n\t\t\t\t$val.Left = Math.max(a1, b1);\n\t\t\t\t$val.Right = Math.min(a2, b2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$val.Left = Math.max(a1, b2);\n\t\t\t\t$val.Right = Math.min(a2, b1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b1 < b2)\n\t\t\t{\n\t\t\t\t$val.Left = Math.max(a2, b1);\n\t\t\t\t$val.Right = Math.min(a1, b2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$val.Left = Math.max(a2, b2);\n\t\t\t\t$val.Right = Math.min(a1, b1);\n\t\t\t}\n\t\t}\n\t\treturn $val.Left < $val.Right;\n\t};\n\n\tClipperLib.Clipper.prototype.JoinHorz = function (op1, op1b, op2, op2b, Pt, DiscardLeft)\n\t{\n\t\tvar Dir1 = (op1.Pt.X > op1b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n\t\tvar Dir2 = (op2.Pt.X > op2b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n\t\tif (Dir1 === Dir2)\n\t\t\treturn false;\n\t\t//When DiscardLeft, we want Op1b to be on the Left of Op1, otherwise we\n\t\t//want Op1b to be on the Right. (And likewise with Op2 and Op2b.)\n\t\t//So, to facilitate this while inserting Op1b and Op2b ...\n\t\t//when DiscardLeft, make sure we're AT or RIGHT of Pt before adding Op1b,\n\t\t//otherwise make sure we're AT or LEFT of Pt. (Likewise with Op2b.)\n\t\tif (Dir1 === ClipperLib.Direction.dLeftToRight)\n\t\t{\n\t\t\twhile (op1.Next.Pt.X <= Pt.X &&\n\t\t\t\top1.Next.Pt.X >= op1.Pt.X && op1.Next.Pt.Y === Pt.Y)\n\t\t\t\top1 = op1.Next;\n\t\t\tif (DiscardLeft && (op1.Pt.X !== Pt.X))\n\t\t\t\top1 = op1.Next;\n\t\t\top1b = this.DupOutPt(op1, !DiscardLeft);\n\t\t\tif (ClipperLib.FPoint.op_Inequality(op1b.Pt, Pt))\n\t\t\t{\n\t\t\t\top1 = op1b;\n\t\t\t\t//op1.Pt = Pt;\n\t\t\t\top1.Pt.X = Pt.X;\n\t\t\t\top1.Pt.Y = Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) op1.Pt.Z = Pt.Z;\n\t\t\t\top1b = this.DupOutPt(op1, !DiscardLeft);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile (op1.Next.Pt.X >= Pt.X &&\n\t\t\t\top1.Next.Pt.X <= op1.Pt.X && op1.Next.Pt.Y === Pt.Y)\n\t\t\t\top1 = op1.Next;\n\t\t\tif (!DiscardLeft && (op1.Pt.X !== Pt.X))\n\t\t\t\top1 = op1.Next;\n\t\t\top1b = this.DupOutPt(op1, DiscardLeft);\n\t\t\tif (ClipperLib.FPoint.op_Inequality(op1b.Pt, Pt))\n\t\t\t{\n\t\t\t\top1 = op1b;\n\t\t\t\t//op1.Pt = Pt;\n\t\t\t\top1.Pt.X = Pt.X;\n\t\t\t\top1.Pt.Y = Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) op1.Pt.Z = Pt.Z;\n\t\t\t\top1b = this.DupOutPt(op1, DiscardLeft);\n\t\t\t}\n\t\t}\n\t\tif (Dir2 === ClipperLib.Direction.dLeftToRight)\n\t\t{\n\t\t\twhile (op2.Next.Pt.X <= Pt.X &&\n\t\t\t\top2.Next.Pt.X >= op2.Pt.X && op2.Next.Pt.Y === Pt.Y)\n\t\t\t\top2 = op2.Next;\n\t\t\tif (DiscardLeft && (op2.Pt.X !== Pt.X))\n\t\t\t\top2 = op2.Next;\n\t\t\top2b = this.DupOutPt(op2, !DiscardLeft);\n\t\t\tif (ClipperLib.FPoint.op_Inequality(op2b.Pt, Pt))\n\t\t\t{\n\t\t\t\top2 = op2b;\n\t\t\t\t//op2.Pt = Pt;\n\t\t\t\top2.Pt.X = Pt.X;\n\t\t\t\top2.Pt.Y = Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) op2.Pt.Z = Pt.Z;\n\t\t\t\top2b = this.DupOutPt(op2, !DiscardLeft);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile (op2.Next.Pt.X >= Pt.X &&\n\t\t\t\top2.Next.Pt.X <= op2.Pt.X && op2.Next.Pt.Y === Pt.Y)\n\t\t\t\top2 = op2.Next;\n\t\t\tif (!DiscardLeft && (op2.Pt.X !== Pt.X))\n\t\t\t\top2 = op2.Next;\n\t\t\top2b = this.DupOutPt(op2, DiscardLeft);\n\t\t\tif (ClipperLib.FPoint.op_Inequality(op2b.Pt, Pt))\n\t\t\t{\n\t\t\t\top2 = op2b;\n\t\t\t\t//op2.Pt = Pt;\n\t\t\t\top2.Pt.X = Pt.X;\n\t\t\t\top2.Pt.Y = Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) op2.Pt.Z = Pt.Z;\n\t\t\t\top2b = this.DupOutPt(op2, DiscardLeft);\n\t\t\t}\n\t\t}\n\t\tif ((Dir1 === ClipperLib.Direction.dLeftToRight) === DiscardLeft)\n\t\t{\n\t\t\top1.Prev = op2;\n\t\t\top2.Next = op1;\n\t\t\top1b.Next = op2b;\n\t\t\top2b.Prev = op1b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\top1.Next = op2;\n\t\t\top2.Prev = op1;\n\t\t\top1b.Prev = op2b;\n\t\t\top2b.Next = op1b;\n\t\t}\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.JoinPoints = function (j, outRec1, outRec2)\n\t{\n\t\tvar op1 = j.OutPt1,\n\t\t\top1b = new ClipperLib.OutPt();\n\t\tvar op2 = j.OutPt2,\n\t\t\top2b = new ClipperLib.OutPt();\n\t\t//There are 3 kinds of joins for output polygons ...\n\t\t//1. Horizontal joins where Join.OutPt1 & Join.OutPt2 are vertices anywhere\n\t\t//along (horizontal) collinear edges (& Join.OffPt is on the same horizontal).\n\t\t//2. Non-horizontal joins where Join.OutPt1 & Join.OutPt2 are at the same\n\t\t//location at the Bottom of the overlapping segment (& Join.OffPt is above).\n\t\t//3. StrictlySimple joins where edges touch but are not collinear and where\n\t\t//Join.OutPt1, Join.OutPt2 & Join.OffPt all share the same point.\n\t\tvar isHorizontal = (j.OutPt1.Pt.Y === j.OffPt.Y);\n\t\tif (isHorizontal && (ClipperLib.FPoint.op_Equality(j.OffPt, j.OutPt1.Pt)) && (ClipperLib.FPoint.op_Equality(j.OffPt, j.OutPt2.Pt)))\n\t\t{\n\t\t\t//Strictly Simple join ...\n\t\t\tif (outRec1 !== outRec2) return false;\n\n\t\t\top1b = j.OutPt1.Next;\n\t\t\twhile (op1b !== op1 && (ClipperLib.FPoint.op_Equality(op1b.Pt, j.OffPt)))\n\t\t\t\top1b = op1b.Next;\n\t\t\tvar reverse1 = (op1b.Pt.Y > j.OffPt.Y);\n\t\t\top2b = j.OutPt2.Next;\n\t\t\twhile (op2b !== op2 && (ClipperLib.FPoint.op_Equality(op2b.Pt, j.OffPt)))\n\t\t\t\top2b = op2b.Next;\n\t\t\tvar reverse2 = (op2b.Pt.Y > j.OffPt.Y);\n\t\t\tif (reverse1 === reverse2)\n\t\t\t\treturn false;\n\t\t\tif (reverse1)\n\t\t\t{\n\t\t\t\top1b = this.DupOutPt(op1, false);\n\t\t\t\top2b = this.DupOutPt(op2, true);\n\t\t\t\top1.Prev = op2;\n\t\t\t\top2.Next = op1;\n\t\t\t\top1b.Next = op2b;\n\t\t\t\top2b.Prev = op1b;\n\t\t\t\tj.OutPt1 = op1;\n\t\t\t\tj.OutPt2 = op1b;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\top1b = this.DupOutPt(op1, true);\n\t\t\t\top2b = this.DupOutPt(op2, false);\n\t\t\t\top1.Next = op2;\n\t\t\t\top2.Prev = op1;\n\t\t\t\top1b.Prev = op2b;\n\t\t\t\top2b.Next = op1b;\n\t\t\t\tj.OutPt1 = op1;\n\t\t\t\tj.OutPt2 = op1b;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (isHorizontal)\n\t\t{\n\t\t\t//treat horizontal joins differently to non-horizontal joins since with\n\t\t\t//them we're not yet sure where the overlapping is. OutPt1.Pt & OutPt2.Pt\n\t\t\t//may be anywhere along the horizontal edge.\n\t\t\top1b = op1;\n\t\t\twhile (op1.Prev.Pt.Y === op1.Pt.Y && op1.Prev !== op1b && op1.Prev !== op2)\n\t\t\t\top1 = op1.Prev;\n\t\t\twhile (op1b.Next.Pt.Y === op1b.Pt.Y && op1b.Next !== op1 && op1b.Next !== op2)\n\t\t\t\top1b = op1b.Next;\n\t\t\tif (op1b.Next === op1 || op1b.Next === op2)\n\t\t\t\treturn false;\n\t\t\t//a flat 'polygon'\n\t\t\top2b = op2;\n\t\t\twhile (op2.Prev.Pt.Y === op2.Pt.Y && op2.Prev !== op2b && op2.Prev !== op1b)\n\t\t\t\top2 = op2.Prev;\n\t\t\twhile (op2b.Next.Pt.Y === op2b.Pt.Y && op2b.Next !== op2 && op2b.Next !== op1)\n\t\t\t\top2b = op2b.Next;\n\t\t\tif (op2b.Next === op2 || op2b.Next === op1)\n\t\t\t\treturn false;\n\t\t\t//a flat 'polygon'\n\t\t\t//Op1 -. Op1b & Op2 -. Op2b are the extremites of the horizontal edges\n\n\t\t\tvar $val = {\n\t\t\t\tLeft: null,\n\t\t\t\tRight: null\n\t\t\t};\n\n\t\t\tif (!this.GetOverlap(op1.Pt.X, op1b.Pt.X, op2.Pt.X, op2b.Pt.X, $val))\n\t\t\t\treturn false;\n\t\t\tvar Left = $val.Left;\n\t\t\tvar Right = $val.Right;\n\n\t\t\t//DiscardLeftSide: when overlapping edges are joined, a spike will created\n\t\t\t//which needs to be cleaned up. However, we don't want Op1 or Op2 caught up\n\t\t\t//on the discard Side as either may still be needed for other joins ...\n\t\t\tvar Pt = new ClipperLib.FPoint0();\n\t\t\tvar DiscardLeftSide;\n\t\t\tif (op1.Pt.X >= Left && op1.Pt.X <= Right)\n\t\t\t{\n\t\t\t\t//Pt = op1.Pt;\n\t\t\t\tPt.X = op1.Pt.X;\n\t\t\t\tPt.Y = op1.Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) Pt.Z = op1.Pt.Z;\n\t\t\t\tDiscardLeftSide = (op1.Pt.X > op1b.Pt.X);\n\t\t\t}\n\t\t\telse if (op2.Pt.X >= Left && op2.Pt.X <= Right)\n\t\t\t{\n\t\t\t\t//Pt = op2.Pt;\n\t\t\t\tPt.X = op2.Pt.X;\n\t\t\t\tPt.Y = op2.Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) Pt.Z = op2.Pt.Z;\n\t\t\t\tDiscardLeftSide = (op2.Pt.X > op2b.Pt.X);\n\t\t\t}\n\t\t\telse if (op1b.Pt.X >= Left && op1b.Pt.X <= Right)\n\t\t\t{\n\t\t\t\t//Pt = op1b.Pt;\n\t\t\t\tPt.X = op1b.Pt.X;\n\t\t\t\tPt.Y = op1b.Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) Pt.Z = op1b.Pt.Z;\n\t\t\t\tDiscardLeftSide = op1b.Pt.X > op1.Pt.X;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Pt = op2b.Pt;\n\t\t\t\tPt.X = op2b.Pt.X;\n\t\t\t\tPt.Y = op2b.Pt.Y;\n\t\t\t\tif (ClipperLib.use_xyz) Pt.Z = op2b.Pt.Z;\n\t\t\t\tDiscardLeftSide = (op2b.Pt.X > op2.Pt.X);\n\t\t\t}\n\t\t\tj.OutPt1 = op1;\n\t\t\tj.OutPt2 = op2;\n\t\t\treturn this.JoinHorz(op1, op1b, op2, op2b, Pt, DiscardLeftSide);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//nb: For non-horizontal joins ...\n\t\t\t//    1. Jr.OutPt1.Pt.Y == Jr.OutPt2.Pt.Y\n\t\t\t//    2. Jr.OutPt1.Pt > Jr.OffPt.Y\n\t\t\t//make sure the polygons are correctly oriented ...\n\t\t\top1b = op1.Next;\n\t\t\twhile ((ClipperLib.FPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b !== op1))\n\t\t\t\top1b = op1b.Next;\n\t\t\tvar Reverse1 = ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual4(op1.Pt, op1b.Pt, j.OffPt));\n\t\t\tif (Reverse1)\n\t\t\t{\n\t\t\t\top1b = op1.Prev;\n\t\t\t\twhile ((ClipperLib.FPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b !== op1))\n\t\t\t\t\top1b = op1b.Prev;\n\n\t\t\t\tif ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual4(op1.Pt, op1b.Pt, j.OffPt))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\top2b = op2.Next;\n\t\t\twhile ((ClipperLib.FPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b !== op2))\n\t\t\t\top2b = op2b.Next;\n\n\t\t\tvar Reverse2 = ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual4(op2.Pt, op2b.Pt, j.OffPt));\n\t\t\tif (Reverse2)\n\t\t\t{\n\t\t\t\top2b = op2.Prev;\n\t\t\t\twhile ((ClipperLib.FPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b !== op2))\n\t\t\t\t\top2b = op2b.Prev;\n\n\t\t\t\tif ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual4(op2.Pt, op2b.Pt, j.OffPt))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((op1b === op1) || (op2b === op2) || (op1b === op2b) ||\n\t\t\t\t((outRec1 === outRec2) && (Reverse1 === Reverse2)))\n\t\t\t\treturn false;\n\t\t\tif (Reverse1)\n\t\t\t{\n\t\t\t\top1b = this.DupOutPt(op1, false);\n\t\t\t\top2b = this.DupOutPt(op2, true);\n\t\t\t\top1.Prev = op2;\n\t\t\t\top2.Next = op1;\n\t\t\t\top1b.Next = op2b;\n\t\t\t\top2b.Prev = op1b;\n\t\t\t\tj.OutPt1 = op1;\n\t\t\t\tj.OutPt2 = op1b;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\top1b = this.DupOutPt(op1, true);\n\t\t\t\top2b = this.DupOutPt(op2, false);\n\t\t\t\top1.Next = op2;\n\t\t\t\top2.Prev = op1;\n\t\t\t\top1b.Prev = op2b;\n\t\t\t\top2b.Next = op1b;\n\t\t\t\tj.OutPt1 = op1;\n\t\t\t\tj.OutPt2 = op1b;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.GetBounds = function (paths)\n\t{\n\t\tvar i = 0,\n\t\t\tcnt = paths.length;\n\t\twhile (i < cnt && paths[i].length === 0) i++;\n\t\tif (i === cnt) return new ClipperLib.FRect(0, 0, 0, 0);\n\t\tvar result = new ClipperLib.FRect();\n\t\tresult.left = paths[i][0].X;\n\t\tresult.right = result.left;\n\t\tresult.top = paths[i][0].Y;\n\t\tresult.bottom = result.top;\n\t\tfor (; i < cnt; i++)\n\t\t\tfor (var j = 0, jlen = paths[i].length; j < jlen; j++)\n\t\t\t{\n\t\t\t\tif (paths[i][j].X < result.left) result.left = paths[i][j].X;\n\t\t\t\telse if (paths[i][j].X > result.right) result.right = paths[i][j].X;\n\t\t\t\tif (paths[i][j].Y < result.top) result.top = paths[i][j].Y;\n\t\t\t\telse if (paths[i][j].Y > result.bottom) result.bottom = paths[i][j].Y;\n\t\t\t}\n\t\treturn result;\n\t}\n\tClipperLib.Clipper.prototype.GetBounds2 = function (ops)\n\t{\n\t\tvar opStart = ops;\n\t\tvar result = new ClipperLib.FRect();\n\t\tresult.left = ops.Pt.X;\n\t\tresult.right = ops.Pt.X;\n\t\tresult.top = ops.Pt.Y;\n\t\tresult.bottom = ops.Pt.Y;\n\t\tops = ops.Next;\n\t\twhile (ops !== opStart)\n\t\t{\n\t\t\tif (ops.Pt.X < result.left)\n\t\t\t\tresult.left = ops.Pt.X;\n\t\t\tif (ops.Pt.X > result.right)\n\t\t\t\tresult.right = ops.Pt.X;\n\t\t\tif (ops.Pt.Y < result.top)\n\t\t\t\tresult.top = ops.Pt.Y;\n\t\t\tif (ops.Pt.Y > result.bottom)\n\t\t\t\tresult.bottom = ops.Pt.Y;\n\t\t\tops = ops.Next;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.PointInPolygon = function (pt, path)\n\t{\n\t\t//returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n\t\t//See \"The Point in Polygon Problem for Arbitrary Polygons\" by Hormann & Agathos\n\t\t//http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf\n\t\tvar result = 0,\n\t\t\tcnt = path.length;\n\t\tif (cnt < 3)\n\t\t\treturn 0;\n\t\tvar ip = path[0];\n\t\tfor (var i = 1; i <= cnt; ++i)\n\t\t{\n\t\t\tvar ipNext = (i === cnt ? path[0] : path[i]);\n\t\t\tif (ipNext.Y === pt.Y)\n\t\t\t{\n\t\t\t\tif ((ipNext.X === pt.X) || (ip.Y === pt.Y && ((ipNext.X > pt.X) === (ip.X < pt.X))))\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ((ip.Y < pt.Y) !== (ipNext.Y < pt.Y))\n\t\t\t{\n\t\t\t\tif (ip.X >= pt.X)\n\t\t\t\t{\n\t\t\t\t\tif (ipNext.X > pt.X)\n\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n\t\t\t\t\t\tif (d === 0)\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\telse if ((d > 0) === (ipNext.Y > ip.Y))\n\t\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ipNext.X > pt.X)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n\t\t\t\t\t\tif (d === 0)\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\telse if ((d > 0) === (ipNext.Y > ip.Y))\n\t\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tip = ipNext;\n\t\t}\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.PointInPolygon = function (pt, op)\n\t{\n\t\t//returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n\t\tvar result = 0;\n\t\tvar startOp = op;\n\t\tvar ptx = pt.X,\n\t\t\tpty = pt.Y;\n\t\tvar poly0x = op.Pt.X,\n\t\t\tpoly0y = op.Pt.Y;\n\t\tdo {\n\t\t\top = op.Next;\n\t\t\tvar poly1x = op.Pt.X,\n\t\t\t\tpoly1y = op.Pt.Y;\n\t\t\tif (poly1y === pty)\n\t\t\t{\n\t\t\t\tif ((poly1x === ptx) || (poly0y === pty && ((poly1x > ptx) === (poly0x < ptx))))\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ((poly0y < pty) !== (poly1y < pty))\n\t\t\t{\n\t\t\t\tif (poly0x >= ptx)\n\t\t\t\t{\n\t\t\t\t\tif (poly1x > ptx)\n\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);\n\t\t\t\t\t\tif (d === 0)\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\tif ((d > 0) === (poly1y > poly0y))\n\t\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (poly1x > ptx)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar d = (poly0x - ptx) * (poly1y - pty) - (poly1x - ptx) * (poly0y - pty);\n\t\t\t\t\t\tif (d === 0)\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\tif ((d > 0) === (poly1y > poly0y))\n\t\t\t\t\t\t\tresult = 1 - result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpoly0x = poly1x;\n\t\t\tpoly0y = poly1y;\n\t\t} while (startOp !== op);\n\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.prototype.Poly2ContainsPoly1 = function (outPt1, outPt2)\n\t{\n\t\tvar op = outPt1;\n\t\tdo {\n\t\t\t//nb: PointInPolygon returns 0 if false, +1 if true, -1 if pt on polygon\n\t\t\tvar res = this.PointInPolygon(op.Pt, outPt2);\n\t\t\tif (res >= 0)\n\t\t\t\treturn res > 0;\n\t\t\top = op.Next;\n\t\t}\n\t\twhile (op !== outPt1)\n\t\treturn true;\n\t};\n\n\tClipperLib.Clipper.prototype.FixupFirstLefts1 = function (OldOutRec, NewOutRec)\n\t{\n\t\tvar outRec, firstLeft;\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\tfirstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n\t\t\tif (outRec.Pts !== null && firstLeft === OldOutRec)\n\t\t\t{\n\t\t\t\tif (this.Poly2ContainsPoly1(outRec.Pts, NewOutRec.Pts))\n\t\t\t\t\toutRec.FirstLeft = NewOutRec;\n\t\t\t}\n\t\t}\n\t}\n\n\tClipperLib.Clipper.prototype.FixupFirstLefts2 = function (innerOutRec, outerOutRec)\n\t{\n\t\t//A polygon has split into two such that one is now the inner of the other.\n\t\t//It's possible that these polygons now wrap around other polygons, so check\n\t\t//every polygon that's also contained by OuterOutRec's FirstLeft container\n\t\t//(including nil) to see if they've become inner to the new inner polygon ...\n\t\tvar orfl = outerOutRec.FirstLeft;\n\t\tvar outRec, firstLeft;\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\tif (outRec.Pts === null || outRec === outerOutRec || outRec === innerOutRec)\n\t\t\t\tcontinue;\n\t\t\tfirstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n\t\t\tif (firstLeft !== orfl && firstLeft !== innerOutRec && firstLeft !== outerOutRec)\n\t\t\t\tcontinue;\n\t\t\tif (this.Poly2ContainsPoly1(outRec.Pts, innerOutRec.Pts))\n\t\t\t\toutRec.FirstLeft = innerOutRec;\n\t\t\telse if (this.Poly2ContainsPoly1(outRec.Pts, outerOutRec.Pts))\n\t\t\t\toutRec.FirstLeft = outerOutRec;\n\t\t\telse if (outRec.FirstLeft === innerOutRec || outRec.FirstLeft === outerOutRec)\n\t\t\t\toutRec.FirstLeft = orfl;\n\t\t}\n\t}\n\n\tClipperLib.Clipper.prototype.FixupFirstLefts3 = function (OldOutRec, NewOutRec)\n\t{\n\t\t//same as FixupFirstLefts1 but doesn't call Poly2ContainsPoly1()\n\t\tvar outRec;\n\t\tvar firstLeft;\n\t\tfor (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n\t\t{\n\t\t\toutRec = this.m_PolyOuts[i];\n\t\t\tfirstLeft = ClipperLib.Clipper.ParseFirstLeft(outRec.FirstLeft);\n\t\t\tif (outRec.Pts !== null && firstLeft === OldOutRec)\n\t\t\t\toutRec.FirstLeft = NewOutRec;\n\t\t}\n\t}\n\n\tClipperLib.Clipper.ParseFirstLeft = function (FirstLeft)\n\t{\n\t\twhile (FirstLeft !== null && FirstLeft.Pts === null)\n\t\t\tFirstLeft = FirstLeft.FirstLeft;\n\t\treturn FirstLeft;\n\t};\n\n\tClipperLib.Clipper.prototype.JoinCommonEdges = function ()\n\t{\n\t\tfor (var i = 0, ilen = this.m_Joins.length; i < ilen; i++)\n\t\t{\n\t\t\tvar join = this.m_Joins[i];\n\t\t\tvar outRec1 = this.GetOutRec(join.OutPt1.Idx);\n\t\t\tvar outRec2 = this.GetOutRec(join.OutPt2.Idx);\n\t\t\tif (outRec1.Pts === null || outRec2.Pts === null)\n\t\t\t\tcontinue;\n\n\t\t\tif (outRec1.IsOpen || outRec2.IsOpen)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//get the polygon fragment with the correct hole state (FirstLeft)\n\t\t\t//before calling JoinPoints() ...\n\t\t\tvar holeStateRec;\n\t\t\tif (outRec1 === outRec2)\n\t\t\t\tholeStateRec = outRec1;\n\t\t\telse if (this.OutRec1RightOfOutRec2(outRec1, outRec2))\n\t\t\t\tholeStateRec = outRec2;\n\t\t\telse if (this.OutRec1RightOfOutRec2(outRec2, outRec1))\n\t\t\t\tholeStateRec = outRec1;\n\t\t\telse\n\t\t\t\tholeStateRec = this.GetLowermostRec(outRec1, outRec2);\n\n\t\t\tif (!this.JoinPoints(join, outRec1, outRec2)) continue;\n\n\t\t\tif (outRec1 === outRec2)\n\t\t\t{\n\t\t\t\t//instead of joining two polygons, we've just created a new one by\n\t\t\t\t//splitting one polygon into two.\n\t\t\t\toutRec1.Pts = join.OutPt1;\n\t\t\t\toutRec1.BottomPt = null;\n\t\t\t\toutRec2 = this.CreateOutRec();\n\t\t\t\toutRec2.Pts = join.OutPt2;\n\t\t\t\t//update all OutRec2.Pts Idx's ...\n\t\t\t\tthis.UpdateOutPtIdxs(outRec2);\n\n\t\t\t\tif (this.Poly2ContainsPoly1(outRec2.Pts, outRec1.Pts))\n\t\t\t\t{\n\t\t\t\t\t//outRec1 contains outRec2 ...\n\t\t\t\t\toutRec2.IsHole = !outRec1.IsHole;\n\t\t\t\t\toutRec2.FirstLeft = outRec1;\n\t\t\t\t\tif (this.m_UsingPolyTree)\n\t\t\t\t\t\tthis.FixupFirstLefts2(outRec2, outRec1);\n\t\t\t\t\tif ((outRec2.IsHole ^ this.ReverseSolution) == (this.Area$1(outRec2) > 0))\n\t\t\t\t\t\tthis.ReversePolyPtLinks(outRec2.Pts);\n\t\t\t\t}\n\t\t\t\telse if (this.Poly2ContainsPoly1(outRec1.Pts, outRec2.Pts))\n\t\t\t\t{\n\t\t\t\t\t//outRec2 contains outRec1 ...\n\t\t\t\t\toutRec2.IsHole = outRec1.IsHole;\n\t\t\t\t\toutRec1.IsHole = !outRec2.IsHole;\n\t\t\t\t\toutRec2.FirstLeft = outRec1.FirstLeft;\n\t\t\t\t\toutRec1.FirstLeft = outRec2;\n\t\t\t\t\tif (this.m_UsingPolyTree)\n\t\t\t\t\t\tthis.FixupFirstLefts2(outRec1, outRec2);\n\n\t\t\t\t\tif ((outRec1.IsHole ^ this.ReverseSolution) == (this.Area$1(outRec1) > 0))\n\t\t\t\t\t\tthis.ReversePolyPtLinks(outRec1.Pts);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//the 2 polygons are completely separate ...\n\t\t\t\t\toutRec2.IsHole = outRec1.IsHole;\n\t\t\t\t\toutRec2.FirstLeft = outRec1.FirstLeft;\n\t\t\t\t\t//fixup FirstLeft pointers that may need reassigning to OutRec2\n\t\t\t\t\tif (this.m_UsingPolyTree)\n\t\t\t\t\t\tthis.FixupFirstLefts1(outRec1, outRec2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//joined 2 polygons together ...\n\t\t\t\toutRec2.Pts = null;\n\t\t\t\toutRec2.BottomPt = null;\n\t\t\t\toutRec2.Idx = outRec1.Idx;\n\t\t\t\toutRec1.IsHole = holeStateRec.IsHole;\n\t\t\t\tif (holeStateRec === outRec2)\n\t\t\t\t\toutRec1.FirstLeft = outRec2.FirstLeft;\n\t\t\t\toutRec2.FirstLeft = outRec1;\n\t\t\t\t//fixup FirstLeft pointers that may need reassigning to OutRec1\n\t\t\t\tif (this.m_UsingPolyTree)\n\t\t\t\t\tthis.FixupFirstLefts3(outRec2, outRec1);\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.Clipper.prototype.UpdateOutPtIdxs = function (outrec)\n\t{\n\t\tvar op = outrec.Pts;\n\t\tdo {\n\t\t\top.Idx = outrec.Idx;\n\t\t\top = op.Prev;\n\t\t}\n\t\twhile (op !== outrec.Pts)\n\t};\n\n\tClipperLib.Clipper.prototype.DoSimplePolygons = function ()\n\t{\n\t\tvar i = 0;\n\t\twhile (i < this.m_PolyOuts.length)\n\t\t{\n\t\t\tvar outrec = this.m_PolyOuts[i++];\n\t\t\tvar op = outrec.Pts;\n\t\t\tif (op === null || outrec.IsOpen)\n\t\t\t\tcontinue;\n\t\t\tdo //for each Pt in Polygon until duplicate found do ...\n\t\t\t{\n\t\t\t\tvar op2 = op.Next;\n\t\t\t\twhile (op2 !== outrec.Pts)\n\t\t\t\t{\n\t\t\t\t\tif ((ClipperLib.FPoint.op_Equality(op.Pt, op2.Pt)) && op2.Next !== op && op2.Prev !== op)\n\t\t\t\t\t{\n\t\t\t\t\t\t//split the polygon into two ...\n\t\t\t\t\t\tvar op3 = op.Prev;\n\t\t\t\t\t\tvar op4 = op2.Prev;\n\t\t\t\t\t\top.Prev = op4;\n\t\t\t\t\t\top4.Next = op;\n\t\t\t\t\t\top2.Prev = op3;\n\t\t\t\t\t\top3.Next = op2;\n\t\t\t\t\t\toutrec.Pts = op;\n\t\t\t\t\t\tvar outrec2 = this.CreateOutRec();\n\t\t\t\t\t\toutrec2.Pts = op2;\n\t\t\t\t\t\tthis.UpdateOutPtIdxs(outrec2);\n\t\t\t\t\t\tif (this.Poly2ContainsPoly1(outrec2.Pts, outrec.Pts))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//OutRec2 is contained by OutRec1 ...\n\t\t\t\t\t\t\toutrec2.IsHole = !outrec.IsHole;\n\t\t\t\t\t\t\toutrec2.FirstLeft = outrec;\n\t\t\t\t\t\t\tif (this.m_UsingPolyTree) this.FixupFirstLefts2(outrec2, outrec);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (this.Poly2ContainsPoly1(outrec.Pts, outrec2.Pts))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//OutRec1 is contained by OutRec2 ...\n\t\t\t\t\t\t\toutrec2.IsHole = outrec.IsHole;\n\t\t\t\t\t\t\toutrec.IsHole = !outrec2.IsHole;\n\t\t\t\t\t\t\toutrec2.FirstLeft = outrec.FirstLeft;\n\t\t\t\t\t\t\toutrec.FirstLeft = outrec2;\n\t\t\t\t\t\t\tif (this.m_UsingPolyTree) this.FixupFirstLefts2(outrec, outrec2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//the 2 polygons are separate ...\n\t\t\t\t\t\t\toutrec2.IsHole = outrec.IsHole;\n\t\t\t\t\t\t\toutrec2.FirstLeft = outrec.FirstLeft;\n\t\t\t\t\t\t\tif (this.m_UsingPolyTree) this.FixupFirstLefts1(outrec, outrec2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\top2 = op;\n\t\t\t\t\t\t//ie get ready for the next iteration\n\t\t\t\t\t}\n\t\t\t\t\top2 = op2.Next;\n\t\t\t\t}\n\t\t\t\top = op.Next;\n\t\t\t}\n\t\t\twhile (op !== outrec.Pts)\n\t\t}\n\t};\n\n\tClipperLib.Clipper.Area = function (poly)\n\t{\n\t\tif (!Array.isArray(poly))\n\t\t\treturn 0;\n\t\tvar cnt = poly.length;\n\t\tif (cnt < 3)\n\t\t\treturn 0;\n\t\tvar a = 0;\n\t\tfor (var i = 0, j = cnt - 1; i < cnt; ++i)\n\t\t{\n\t\t\ta += (poly[j].X + poly[i].X) * (poly[j].Y - poly[i].Y);\n\t\t\tj = i;\n\t\t}\n\t\treturn -a * 0.5;\n\t};\n\n\tClipperLib.Clipper.prototype.Area = function (op)\n\t{\n\t\tvar opFirst = op;\n\t\tif (op === null) return 0;\n\t\tvar a = 0;\n\t\tdo {\n\t\t\ta = a + (op.Prev.Pt.X + op.Pt.X) * (op.Prev.Pt.Y - op.Pt.Y);\n\t\t\top = op.Next;\n\t\t} while (op !== opFirst); // && typeof op !== 'undefined');\n\t\treturn a * 0.5;\n\t}\n\n\tClipperLib.Clipper.prototype.Area$1 = function (outRec)\n\t{\n\t\treturn this.Area(outRec.Pts);\n\t};\n\n\tClipperLib.Clipper.SimplifyPolygon = function (poly, fillType)\n\t{\n\t\tvar result = new Array();\n\t\tvar c = new ClipperLib.Clipper(0);\n\t\tc.StrictlySimple = true;\n\t\tc.AddPath(poly, ClipperLib.PolyType.ptSubject, true);\n\t\tc.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.SimplifyPolygons = function (polys, fillType)\n\t{\n\t\tif (typeof (fillType) === \"undefined\") fillType = ClipperLib.PolyFillType.pftEvenOdd;\n\t\tvar result = new Array();\n\t\tvar c = new ClipperLib.Clipper(0);\n\t\tc.StrictlySimple = true;\n\t\tc.AddPaths(polys, ClipperLib.PolyType.ptSubject, true);\n\t\tc.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.DistanceSqrd = function (pt1, pt2)\n\t{\n\t\tvar dx = (pt1.X - pt2.X);\n\t\tvar dy = (pt1.Y - pt2.Y);\n\t\treturn (dx * dx + dy * dy);\n\t};\n\n\tClipperLib.Clipper.DistanceFromLineSqrd = function (pt, ln1, ln2)\n\t{\n\t\t//The equation of a line in general form (Ax + By + C = 0)\n\t\t//given 2 points (x¹,y¹) & (x²,y²) is ...\n\t\t//(y¹ - y²)x + (x² - x¹)y + (y² - y¹)x¹ - (x² - x¹)y¹ = 0\n\t\t//A = (y¹ - y²); B = (x² - x¹); C = (y² - y¹)x¹ - (x² - x¹)y¹\n\t\t//perpendicular distance of point (x³,y³) = (Ax³ + By³ + C)/Sqrt(A² + B²)\n\t\t//see http://en.wikipedia.org/wiki/Perpendicular_distance\n\t\tvar A = ln1.Y - ln2.Y;\n\t\tvar B = ln2.X - ln1.X;\n\t\tvar C = A * ln1.X + B * ln1.Y;\n\t\tC = A * pt.X + B * pt.Y - C;\n\t\treturn (C * C) / (A * A + B * B);\n\t};\n\n\tClipperLib.Clipper.SlopesNearCollinear = function (pt1, pt2, pt3, distSqrd)\n\t{\n\t\t//this function is more accurate when the point that's GEOMETRICALLY\n\t\t//between the other 2 points is the one that's tested for distance.\n\t\t//nb: with 'spikes', either pt1 or pt3 is geometrically between the other pts\n\t\tif (Math.abs(pt1.X - pt2.X) > Math.abs(pt1.Y - pt2.Y))\n\t\t{\n\t\t\tif ((pt1.X > pt2.X) === (pt1.X < pt3.X))\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt1, pt2, pt3) < distSqrd;\n\t\t\telse if ((pt2.X > pt1.X) === (pt2.X < pt3.X))\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n\t\t\telse\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt3, pt1, pt2) < distSqrd;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((pt1.Y > pt2.Y) === (pt1.Y < pt3.Y))\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt1, pt2, pt3) < distSqrd;\n\t\t\telse if ((pt2.Y > pt1.Y) === (pt2.Y < pt3.Y))\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n\t\t\telse\n\t\t\t\treturn ClipperLib.Clipper.DistanceFromLineSqrd(pt3, pt1, pt2) < distSqrd;\n\t\t}\n\t}\n\n\tClipperLib.Clipper.PointsAreClose = function (pt1, pt2, distSqrd)\n\t{\n\t\tvar dx = pt1.X - pt2.X;\n\t\tvar dy = pt1.Y - pt2.Y;\n\t\treturn ((dx * dx) + (dy * dy) <= distSqrd);\n\t};\n\n\tClipperLib.Clipper.ExcludeOp = function (op)\n\t{\n\t\tvar result = op.Prev;\n\t\tresult.Next = op.Next;\n\t\top.Next.Prev = result;\n\t\tresult.Idx = 0;\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.CleanPolygon = function (path, distance)\n\t{\n\t\tif (typeof (distance) === \"undefined\") distance = 1.415;\n\t\t//distance = proximity in units/pixels below which vertices will be stripped.\n\t\t//Default ~= sqrt(2) so when adjacent vertices or semi-adjacent vertices have\n\t\t//both x & y coords within 1 unit, then the second vertex will be stripped.\n\t\tvar cnt = path.length;\n\t\tif (cnt === 0)\n\t\t\treturn new Array();\n\t\tvar outPts = new Array(cnt);\n\t\tfor (var i = 0; i < cnt; ++i)\n\t\t\toutPts[i] = new ClipperLib.OutPt();\n\t\tfor (var i = 0; i < cnt; ++i)\n\t\t{\n\t\t\toutPts[i].Pt = path[i];\n\t\t\toutPts[i].Next = outPts[(i + 1) % cnt];\n\t\t\toutPts[i].Next.Prev = outPts[i];\n\t\t\toutPts[i].Idx = 0;\n\t\t}\n\t\tvar distSqrd = distance * distance;\n\t\tvar op = outPts[0];\n\t\twhile (op.Idx === 0 && op.Next !== op.Prev)\n\t\t{\n\t\t\tif (ClipperLib.Clipper.PointsAreClose(op.Pt, op.Prev.Pt, distSqrd))\n\t\t\t{\n\t\t\t\top = ClipperLib.Clipper.ExcludeOp(op);\n\t\t\t\tcnt--;\n\t\t\t}\n\t\t\telse if (ClipperLib.Clipper.PointsAreClose(op.Prev.Pt, op.Next.Pt, distSqrd))\n\t\t\t{\n\t\t\t\tClipperLib.Clipper.ExcludeOp(op.Next);\n\t\t\t\top = ClipperLib.Clipper.ExcludeOp(op);\n\t\t\t\tcnt -= 2;\n\t\t\t}\n\t\t\telse if (ClipperLib.Clipper.SlopesNearCollinear(op.Prev.Pt, op.Pt, op.Next.Pt, distSqrd))\n\t\t\t{\n\t\t\t\top = ClipperLib.Clipper.ExcludeOp(op);\n\t\t\t\tcnt--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\top.Idx = 1;\n\t\t\t\top = op.Next;\n\t\t\t}\n\t\t}\n\t\tif (cnt < 3)\n\t\t\tcnt = 0;\n\t\tvar result = new Array(cnt);\n\t\tfor (var i = 0; i < cnt; ++i)\n\t\t{\n\t\t\tresult[i] = new ClipperLib.FPoint1(op.Pt);\n\t\t\top = op.Next;\n\t\t}\n\t\toutPts = null;\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.CleanPolygons = function (polys, distance)\n\t{\n\t\tvar result = new Array(polys.length);\n\t\tfor (var i = 0, ilen = polys.length; i < ilen; i++)\n\t\t\tresult[i] = ClipperLib.Clipper.CleanPolygon(polys[i], distance);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.Minkowski = function (pattern, path, IsSum, IsClosed)\n\t{\n\t\tvar delta = (IsClosed ? 1 : 0);\n\t\tvar polyCnt = pattern.length;\n\t\tvar pathCnt = path.length;\n\t\tvar result = new Array();\n\t\tif (IsSum)\n\t\t\tfor (var i = 0; i < pathCnt; i++)\n\t\t\t{\n\t\t\t\tvar p = new Array(polyCnt);\n\t\t\t\tfor (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n\t\t\t\t\tp[j] = new ClipperLib.FPoint2(path[i].X + ip.X, path[i].Y + ip.Y);\n\t\t\t\tresult.push(p);\n\t\t\t}\n\t\telse\n\t\t\tfor (var i = 0; i < pathCnt; i++)\n\t\t\t{\n\t\t\t\tvar p = new Array(polyCnt);\n\t\t\t\tfor (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n\t\t\t\t\tp[j] = new ClipperLib.FPoint2(path[i].X - ip.X, path[i].Y - ip.Y);\n\t\t\t\tresult.push(p);\n\t\t\t}\n\t\tvar quads = new Array();\n\t\tfor (var i = 0; i < pathCnt - 1 + delta; i++)\n\t\t\tfor (var j = 0; j < polyCnt; j++)\n\t\t\t{\n\t\t\t\tvar quad = new Array();\n\t\t\t\tquad.push(result[i % pathCnt][j % polyCnt]);\n\t\t\t\tquad.push(result[(i + 1) % pathCnt][j % polyCnt]);\n\t\t\t\tquad.push(result[(i + 1) % pathCnt][(j + 1) % polyCnt]);\n\t\t\t\tquad.push(result[i % pathCnt][(j + 1) % polyCnt]);\n\t\t\t\tif (!ClipperLib.Clipper.Orientation(quad))\n\t\t\t\t\tquad.reverse();\n\t\t\t\tquads.push(quad);\n\t\t\t}\n\t\treturn quads;\n\t};\n\n\tClipperLib.Clipper.MinkowskiSum = function (pattern, path_or_paths, pathIsClosed)\n\t{\n\t\tif (!(path_or_paths[0] instanceof Array))\n\t\t{\n\t\t\tvar path = path_or_paths;\n\t\t\tvar paths = ClipperLib.Clipper.Minkowski(pattern, path, true, pathIsClosed);\n\t\t\tvar c = new ClipperLib.Clipper();\n\t\t\tc.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\n\t\t\tc.Execute(ClipperLib.ClipType.ctUnion, paths, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\t\treturn paths;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar paths = path_or_paths;\n\t\t\tvar solution = new ClipperLib.Paths();\n\t\t\tvar c = new ClipperLib.Clipper();\n\t\t\tfor (var i = 0; i < paths.length; ++i)\n\t\t\t{\n\t\t\t\tvar tmp = ClipperLib.Clipper.Minkowski(pattern, paths[i], true, pathIsClosed);\n\t\t\t\tc.AddPaths(tmp, ClipperLib.PolyType.ptSubject, true);\n\t\t\t\tif (pathIsClosed)\n\t\t\t\t{\n\t\t\t\t\tvar path = ClipperLib.Clipper.TranslatePath(paths[i], pattern[0]);\n\t\t\t\t\tc.AddPath(path, ClipperLib.PolyType.ptClip, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.Execute(ClipperLib.ClipType.ctUnion, solution,\n\t\t\t\tClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\t\treturn solution;\n\t\t}\n\t}\n\n\tClipperLib.Clipper.TranslatePath = function (path, delta)\n\t{\n\t\tvar outPath = new ClipperLib.Path();\n\t\tfor (var i = 0; i < path.length; i++)\n\t\t\toutPath.push(new ClipperLib.FPoint2(path[i].X + delta.X, path[i].Y + delta.Y));\n\t\treturn outPath;\n\t}\n\n\tClipperLib.Clipper.MinkowskiDiff = function (poly1, poly2)\n\t{\n\t\tvar paths = ClipperLib.Clipper.Minkowski(poly1, poly2, false, true);\n\t\tvar c = new ClipperLib.Clipper();\n\t\tc.AddPaths(paths, ClipperLib.PolyType.ptSubject, true);\n\t\tc.Execute(ClipperLib.ClipType.ctUnion, paths, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n\t\treturn paths;\n\t}\n\n\tClipperLib.Clipper.PolyTreeToPaths = function (polytree)\n\t{\n\t\tvar result = new Array();\n\t\t//result.set_Capacity(polytree.get_Total());\n\t\tClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntAny, result);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.AddPolyNodeToPaths = function (polynode, nt, paths)\n\t{\n\t\tvar match = true;\n\t\tswitch (nt)\n\t\t{\n\t\t\tcase ClipperLib.Clipper.NodeType.ntOpen:\n\t\t\t\treturn;\n\t\t\tcase ClipperLib.Clipper.NodeType.ntClosed:\n\t\t\t\tmatch = !polynode.IsOpen;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (polynode.m_polygon.length > 0 && match)\n\t\t\tpaths.push(polynode.m_polygon);\n\t\tfor (var $i3 = 0, $t3 = polynode.Childs(), $l3 = $t3.length, pn = $t3[$i3]; $i3 < $l3; $i3++, pn = $t3[$i3])\n\t\t\tClipperLib.Clipper.AddPolyNodeToPaths(pn, nt, paths);\n\t};\n\n\tClipperLib.Clipper.OpenPathsFromPolyTree = function (polytree)\n\t{\n\t\tvar result = new ClipperLib.Paths();\n\t\t//result.set_Capacity(polytree.ChildCount());\n\t\tfor (var i = 0, ilen = polytree.ChildCount(); i < ilen; i++)\n\t\t\tif (polytree.Childs()[i].IsOpen)\n\t\t\t\tresult.push(polytree.Childs()[i].m_polygon);\n\t\treturn result;\n\t};\n\n\tClipperLib.Clipper.ClosedPathsFromPolyTree = function (polytree)\n\t{\n\t\tvar result = new ClipperLib.Paths();\n\t\t//result.set_Capacity(polytree.Total());\n\t\tClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntClosed, result);\n\t\treturn result;\n\t};\n\n\tInherit(ClipperLib.Clipper, ClipperLib.ClipperBase);\n\tClipperLib.Clipper.NodeType = {\n\t\tntAny: 0,\n\t\tntOpen: 1,\n\t\tntClosed: 2\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.ClipperOffset = function (miterLimit, arcTolerance)\n\t{\n\t\tif (typeof (miterLimit) === \"undefined\") miterLimit = 2;\n\t\tif (typeof (arcTolerance) === \"undefined\") arcTolerance = ClipperLib.ClipperOffset.def_arc_tolerance;\n\t\tthis.m_destPolys = new ClipperLib.Paths();\n\t\tthis.m_srcPoly = new ClipperLib.Path();\n\t\tthis.m_destPoly = new ClipperLib.Path();\n\t\tthis.m_normals = new Array();\n\t\tthis.m_delta = 0;\n\t\tthis.m_sinA = 0;\n\t\tthis.m_sin = 0;\n\t\tthis.m_cos = 0;\n\t\tthis.m_miterLim = 0;\n\t\tthis.m_StepsPerRad = 0;\n\t\tthis.m_lowest = new ClipperLib.FPoint0();\n\t\tthis.m_polyNodes = new ClipperLib.PolyNode();\n\t\tthis.MiterLimit = miterLimit;\n\t\tthis.ArcTolerance = arcTolerance;\n\t\tthis.m_lowest.X = -1;\n\t};\n\n\tClipperLib.ClipperOffset.two_pi = 6.28318530717959;\n\tClipperLib.ClipperOffset.def_arc_tolerance = 0.25;\n\tClipperLib.ClipperOffset.prototype.Clear = function ()\n\t{\n\t\tClipperLib.Clear(this.m_polyNodes.Childs());\n\t\tthis.m_lowest.X = -1;\n\t};\n\n\tClipperLib.ClipperOffset.prototype.AddPath = function (path, joinType, endType)\n\t{\n\t\tvar highI = path.length - 1;\n\t\tif (highI < 0)\n\t\t\treturn;\n\t\tvar newNode = new ClipperLib.PolyNode();\n\t\tnewNode.m_jointype = joinType;\n\t\tnewNode.m_endtype = endType;\n\t\t//strip duplicate points from path and also get index to the lowest point ...\n\t\tif (endType === ClipperLib.EndType.etClosedLine || endType === ClipperLib.EndType.etClosedPolygon)\n\t\t\twhile (highI > 0 && ClipperLib.FPoint.op_Equality(path[0], path[highI]))\n\t\t\t\thighI--;\n\t\t//newNode.m_polygon.set_Capacity(highI + 1);\n\t\tnewNode.m_polygon.push(path[0]);\n\t\tvar j = 0,\n\t\t\tk = 0;\n\t\tfor (var i = 1; i <= highI; i++)\n\t\t\tif (ClipperLib.FPoint.op_Inequality(newNode.m_polygon[j], path[i]))\n\t\t\t{\n\t\t\t\tj++;\n\t\t\t\tnewNode.m_polygon.push(path[i]);\n\t\t\t\tif (path[i].Y > newNode.m_polygon[k].Y || (path[i].Y === newNode.m_polygon[k].Y && path[i].X < newNode.m_polygon[k].X))\n\t\t\t\t\tk = j;\n\t\t\t}\n\t\tif (endType === ClipperLib.EndType.etClosedPolygon && j < 2) return;\n\n\t\tthis.m_polyNodes.AddChild(newNode);\n\t\t//if this path's lowest pt is lower than all the others then update m_lowest\n\t\tif (endType !== ClipperLib.EndType.etClosedPolygon)\n\t\t\treturn;\n\t\tif (this.m_lowest.X < 0)\n\t\t\tthis.m_lowest = new ClipperLib.FPoint2(this.m_polyNodes.ChildCount() - 1, k);\n\t\telse\n\t\t{\n\t\t\tvar ip = this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon[this.m_lowest.Y];\n\t\t\tif (newNode.m_polygon[k].Y > ip.Y || (newNode.m_polygon[k].Y === ip.Y && newNode.m_polygon[k].X < ip.X))\n\t\t\t\tthis.m_lowest = new ClipperLib.FPoint2(this.m_polyNodes.ChildCount() - 1, k);\n\t\t}\n\t};\n\n\tClipperLib.ClipperOffset.prototype.AddPaths = function (paths, joinType, endType)\n\t{\n\t\tfor (var i = 0, ilen = paths.length; i < ilen; i++)\n\t\t\tthis.AddPath(paths[i], joinType, endType);\n\t};\n\n\tClipperLib.ClipperOffset.prototype.FixOrientations = function ()\n\t{\n\t\t//fixup orientations of all closed paths if the orientation of the\n\t\t//closed path with the lowermost vertex is wrong ...\n\t\tif (this.m_lowest.X >= 0 && !ClipperLib.Clipper.Orientation(this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon))\n\t\t{\n\t\t\tfor (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n\t\t\t{\n\t\t\t\tvar node = this.m_polyNodes.Childs()[i];\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedPolygon || (node.m_endtype === ClipperLib.EndType.etClosedLine && ClipperLib.Clipper.Orientation(node.m_polygon)))\n\t\t\t\t\tnode.m_polygon.reverse();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n\t\t\t{\n\t\t\t\tvar node = this.m_polyNodes.Childs()[i];\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedLine && !ClipperLib.Clipper.Orientation(node.m_polygon))\n\t\t\t\t\tnode.m_polygon.reverse();\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.ClipperOffset.GetUnitNormal = function (pt1, pt2)\n\t{\n\t\tvar dx = (pt2.X - pt1.X);\n\t\tvar dy = (pt2.Y - pt1.Y);\n\t\tif ((dx === 0) && (dy === 0))\n\t\t\treturn new ClipperLib.FPoint2(0, 0);\n\t\tvar f = 1 / Math.sqrt(dx * dx + dy * dy);\n\t\tdx *= f;\n\t\tdy *= f;\n\t\treturn new ClipperLib.FPoint2(dy, -dx);\n\t};\n\n\tClipperLib.ClipperOffset.prototype.DoOffset = function (delta)\n\t{\n\t\tthis.m_destPolys = new Array();\n\t\tthis.m_delta = delta;\n\t\t//if Zero offset, just copy any CLOSED polygons to m_p and return ...\n\t\tif (ClipperLib.ClipperBase.near_zero(delta))\n\t\t{\n\t\t\t//this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount);\n\t\t\tfor (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n\t\t\t{\n\t\t\t\tvar node = this.m_polyNodes.Childs()[i];\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedPolygon)\n\t\t\t\t\tthis.m_destPolys.push(node.m_polygon);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t//see offset_triginometry3.svg in the documentation folder ...\n\t\tif (this.MiterLimit > 2)\n\t\t\tthis.m_miterLim = 2 / (this.MiterLimit * this.MiterLimit);\n\t\telse\n\t\t\tthis.m_miterLim = 0.5;\n\t\tvar y;\n\t\tif (this.ArcTolerance <= 0)\n\t\t\ty = ClipperLib.ClipperOffset.def_arc_tolerance;\n\t\telse if (this.ArcTolerance > Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance)\n\t\t\ty = Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance;\n\t\telse\n\t\t\ty = this.ArcTolerance;\n\t\t//see offset_triginometry2.svg in the documentation folder ...\n\t\tvar steps = 3.14159265358979 / Math.acos(1 - y / Math.abs(delta));\n\t\tthis.m_sin = Math.sin(ClipperLib.ClipperOffset.two_pi / steps);\n\t\tthis.m_cos = Math.cos(ClipperLib.ClipperOffset.two_pi / steps);\n\t\tthis.m_StepsPerRad = steps / ClipperLib.ClipperOffset.two_pi;\n\t\tif (delta < 0)\n\t\t\tthis.m_sin = -this.m_sin;\n\t\t//this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount * 2);\n\t\tfor (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n\t\t{\n\t\t\tvar node = this.m_polyNodes.Childs()[i];\n\t\t\tthis.m_srcPoly = node.m_polygon;\n\t\t\tvar len = this.m_srcPoly.length;\n\t\t\tif (len === 0 || (delta <= 0 && (len < 3 || node.m_endtype !== ClipperLib.EndType.etClosedPolygon)))\n\t\t\t\tcontinue;\n\t\t\tthis.m_destPoly = new Array();\n\t\t\tif (len === 1)\n\t\t\t{\n\t\t\t\tif (node.m_jointype === ClipperLib.JoinType.jtRound)\n\t\t\t\t{\n\t\t\t\t\tvar X = 1,\n\t\t\t\t\t\tY = 0;\n\t\t\t\t\tfor (var j = 1; j <= steps; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(this.m_srcPoly[0].X + X * delta, this.m_srcPoly[0].Y + Y * delta));\n\t\t\t\t\t\tvar X2 = X;\n\t\t\t\t\t\tX = X * this.m_cos - this.m_sin * Y;\n\t\t\t\t\t\tY = X2 * this.m_sin + Y * this.m_cos;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar X = -1,\n\t\t\t\t\t\tY = -1;\n\t\t\t\t\tfor (var j = 0; j < 4; ++j)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(this.m_srcPoly[0].X + X * delta, this.m_srcPoly[0].Y + Y * delta));\n\t\t\t\t\t\tif (X < 0)\n\t\t\t\t\t\t\tX = 1;\n\t\t\t\t\t\telse if (Y < 0)\n\t\t\t\t\t\t\tY = 1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tX = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//build m_normals ...\n\t\t\tthis.m_normals.length = 0;\n\t\t\t//this.m_normals.set_Capacity(len);\n\t\t\tfor (var j = 0; j < len - 1; j++)\n\t\t\t\tthis.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[j], this.m_srcPoly[j + 1]));\n\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedLine || node.m_endtype === ClipperLib.EndType.etClosedPolygon)\n\t\t\t\tthis.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[len - 1], this.m_srcPoly[0]));\n\t\t\telse\n\t\t\t\tthis.m_normals.push(new ClipperLib.FPoint1(this.m_normals[len - 2]));\n\t\t\tif (node.m_endtype === ClipperLib.EndType.etClosedPolygon)\n\t\t\t{\n\t\t\t\tvar k = len - 1;\n\t\t\t\tfor (var j = 0; j < len; j++)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t}\n\t\t\telse if (node.m_endtype === ClipperLib.EndType.etClosedLine)\n\t\t\t{\n\t\t\t\tvar k = len - 1;\n\t\t\t\tfor (var j = 0; j < len; j++)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t\tthis.m_destPoly = new Array();\n\t\t\t\t//re-build m_normals ...\n\t\t\t\tvar n = this.m_normals[len - 1];\n\t\t\t\tfor (var j = len - 1; j > 0; j--)\n\t\t\t\t\tthis.m_normals[j] = new ClipperLib.FPoint2(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n\t\t\t\tthis.m_normals[0] = new ClipperLib.FPoint2(-n.X, -n.Y);\n\t\t\t\tk = 0;\n\t\t\t\tfor (var j = len - 1; j >= 0; j--)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar k = 0;\n\t\t\t\tfor (var j = 1; j < len - 1; ++j)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tvar pt1;\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etOpenButt)\n\t\t\t\t{\n\t\t\t\t\tvar j = len - 1;\n\t\t\t\t\tpt1 = new ClipperLib.FPoint2(this.m_srcPoly[j].X + this.m_normals[j].X * delta, this.m_srcPoly[j].Y + this.m_normals[j].Y * delta);\n\t\t\t\t\tthis.m_destPoly.push(pt1);\n\t\t\t\t\tpt1 = new ClipperLib.FPoint2(this.m_srcPoly[j].X - this.m_normals[j].X * delta, this.m_srcPoly[j].Y - this.m_normals[j].Y * delta);\n\t\t\t\t\tthis.m_destPoly.push(pt1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar j = len - 1;\n\t\t\t\t\tk = len - 2;\n\t\t\t\t\tthis.m_sinA = 0;\n\t\t\t\t\tthis.m_normals[j] = new ClipperLib.FPoint2(-this.m_normals[j].X, -this.m_normals[j].Y);\n\t\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etOpenSquare)\n\t\t\t\t\t\tthis.DoSquare(j, k);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.DoRound(j, k);\n\t\t\t\t}\n\t\t\t\t//re-build m_normals ...\n\t\t\t\tfor (var j = len - 1; j > 0; j--)\n\t\t\t\t\tthis.m_normals[j] = new ClipperLib.FPoint2(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n\t\t\t\tthis.m_normals[0] = new ClipperLib.FPoint2(-this.m_normals[1].X, -this.m_normals[1].Y);\n\t\t\t\tk = len - 1;\n\t\t\t\tfor (var j = k - 1; j > 0; --j)\n\t\t\t\t\tk = this.OffsetPoint(j, k, node.m_jointype);\n\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etOpenButt)\n\t\t\t\t{\n\t\t\t\t\tpt1 = new ClipperLib.FPoint2(this.m_srcPoly[0].X - this.m_normals[0].X * delta, this.m_srcPoly[0].Y - this.m_normals[0].Y * delta);\n\t\t\t\t\tthis.m_destPoly.push(pt1);\n\t\t\t\t\tpt1 = new ClipperLib.FPoint2(this.m_srcPoly[0].X + this.m_normals[0].X * delta, this.m_srcPoly[0].Y + this.m_normals[0].Y * delta);\n\t\t\t\t\tthis.m_destPoly.push(pt1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tk = 1;\n\t\t\t\t\tthis.m_sinA = 0;\n\t\t\t\t\tif (node.m_endtype === ClipperLib.EndType.etOpenSquare)\n\t\t\t\t\t\tthis.DoSquare(0, 1);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.DoRound(0, 1);\n\t\t\t\t}\n\t\t\t\tthis.m_destPolys.push(this.m_destPoly);\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.ClipperOffset.prototype.Execute = function ()\n\t{\n\t\tvar a = arguments,\n\t\t\tispolytree = a[0] instanceof ClipperLib.PolyTree;\n\t\tif (!ispolytree) // function (solution, delta)\n\t\t{\n\t\t\tvar solution = a[0],\n\t\t\t\tdelta = a[1];\n\t\t\tClipperLib.Clear(solution);\n\t\t\tthis.FixOrientations();\n\t\t\tthis.DoOffset(delta);\n\t\t\t//now clean up 'corners' ...\n\t\t\tvar clpr = new ClipperLib.Clipper(0);\n\t\t\tclpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n\t\t\tif (delta > 0)\n\t\t\t{\n\t\t\t\tclpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n\t\t\t\tvar outer = new ClipperLib.Path();\n\t\t\t\touter.push(new ClipperLib.FPoint2(r.left - 10, r.bottom + 10));\n\t\t\t\touter.push(new ClipperLib.FPoint2(r.right + 10, r.bottom + 10));\n\t\t\t\touter.push(new ClipperLib.FPoint2(r.right + 10, r.top - 10));\n\t\t\t\touter.push(new ClipperLib.FPoint2(r.left - 10, r.top - 10));\n\t\t\t\tclpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n\t\t\t\tclpr.ReverseSolution = true;\n\t\t\t\tclpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n\t\t\t\tif (solution.length > 0)\n\t\t\t\t\tsolution.splice(0, 1);\n\t\t\t}\n\t\t\t//console.log(JSON.stringify(solution));\n\t\t}\n\t\telse // function (polytree, delta)\n\t\t{\n\t\t\tvar solution = a[0],\n\t\t\t\tdelta = a[1];\n\t\t\tsolution.Clear();\n\t\t\tthis.FixOrientations();\n\t\t\tthis.DoOffset(delta);\n\t\t\t//now clean up 'corners' ...\n\t\t\tvar clpr = new ClipperLib.Clipper(0);\n\t\t\tclpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n\t\t\tif (delta > 0)\n\t\t\t{\n\t\t\t\tclpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n\t\t\t\tvar outer = new ClipperLib.Path();\n\t\t\t\touter.push(new ClipperLib.FPoint2(r.left - 10, r.bottom + 10));\n\t\t\t\touter.push(new ClipperLib.FPoint2(r.right + 10, r.bottom + 10));\n\t\t\t\touter.push(new ClipperLib.FPoint2(r.right + 10, r.top - 10));\n\t\t\t\touter.push(new ClipperLib.FPoint2(r.left - 10, r.top - 10));\n\t\t\t\tclpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n\t\t\t\tclpr.ReverseSolution = true;\n\t\t\t\tclpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n\t\t\t\t//remove the outer PolyNode rectangle ...\n\t\t\t\tif (solution.ChildCount() === 1 && solution.Childs()[0].ChildCount() > 0)\n\t\t\t\t{\n\t\t\t\t\tvar outerNode = solution.Childs()[0];\n\t\t\t\t\t//solution.Childs.set_Capacity(outerNode.ChildCount);\n\t\t\t\t\tsolution.Childs()[0] = outerNode.Childs()[0];\n\t\t\t\t\tsolution.Childs()[0].m_Parent = solution;\n\t\t\t\t\tfor (var i = 1; i < outerNode.ChildCount(); i++)\n\t\t\t\t\t\tsolution.AddChild(outerNode.Childs()[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsolution.Clear();\n\t\t\t}\n\t\t}\n\t};\n\n\tClipperLib.ClipperOffset.prototype.OffsetPoint = function (j, k, jointype)\n\t{\n\t\t//cross product ...\n\t\tthis.m_sinA = (this.m_normals[k].X * this.m_normals[j].Y - this.m_normals[j].X * this.m_normals[k].Y);\n\n\t\tif (this.m_sinA === 0)\n\t\t{\n      return k;\n\t\t}\n\n/*\n\t\telse if (this.m_sinA < 0.00005 && this.m_sinA > -0.00005)\n{\n\t\t\tconsole.log(this.m_sinA);\n      return k;\n}\n*/\n/*\n\t\tif (Math.abs(this.m_sinA * this.m_delta) < 1.0)\n\t\t{\n\t\t\t//dot product ...\n\t\t\tvar cosA = (this.m_normals[k].X * this.m_normals[j].X + this.m_normals[j].Y * this.m_normals[k].Y);\n\t\t\tif (cosA > 0) // angle ==> 0 degrees\n\t\t\t{\n\t\t\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta,\n\t\t\t\t\tthis.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta));\n\t\t\t\treturn k;\n\t\t\t}\n\t\t\t//else angle ==> 180 degrees\n\t\t}\n*/\n\t\telse if (this.m_sinA > 1)\n\t\t\tthis.m_sinA = 1.0;\n\t\telse if (this.m_sinA < -1)\n\t\t\tthis.m_sinA = -1.0;\n\t\tif (this.m_sinA * this.m_delta < 0)\n\t\t{\n\t\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta,\n\t\t\t\tthis.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta));\n\t\t\tthis.m_destPoly.push(new ClipperLib.FPoint1(this.m_srcPoly[j]));\n\t\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta,\n\t\t\t\tthis.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta));\n\t\t}\n\t\telse\n\t\t\tswitch (jointype)\n\t\t\t{\n\t\t\tcase ClipperLib.JoinType.jtMiter:\n\t\t\t\t{\n\t\t\t\t\tvar r = 1 + (this.m_normals[j].X * this.m_normals[k].X + this.m_normals[j].Y * this.m_normals[k].Y);\n\t\t\t\t\tif (r >= this.m_miterLim)\n\t\t\t\t\t\tthis.DoMiter(j, k, r);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.DoSquare(j, k);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase ClipperLib.JoinType.jtSquare:\n\t\t\t\tthis.DoSquare(j, k);\n\t\t\t\tbreak;\n\t\t\tcase ClipperLib.JoinType.jtRound:\n\t\t\t\tthis.DoRound(j, k);\n\t\t\t\tbreak;\n\t\t\t}\n\t\tk = j;\n\t\treturn k;\n\t};\n\n\tClipperLib.ClipperOffset.prototype.DoSquare = function (j, k)\n\t{\n\t\tvar dx = Math.tan(Math.atan2(this.m_sinA,\n\t\t\tthis.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y) / 4);\n\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(\n\t\t\tthis.m_srcPoly[j].X + this.m_delta * (this.m_normals[k].X - this.m_normals[k].Y * dx),\n\t\t\tthis.m_srcPoly[j].Y + this.m_delta * (this.m_normals[k].Y + this.m_normals[k].X * dx)));\n\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(\n\t\t\tthis.m_srcPoly[j].X + this.m_delta * (this.m_normals[j].X + this.m_normals[j].Y * dx),\n\t\t\tthis.m_srcPoly[j].Y + this.m_delta * (this.m_normals[j].Y - this.m_normals[j].X * dx)));\n\t};\n\n\tClipperLib.ClipperOffset.prototype.DoMiter = function (j, k, r)\n\t{\n\t\tvar q = this.m_delta / r;\n\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(\n\t\t\tthis.m_srcPoly[j].X + (this.m_normals[k].X + this.m_normals[j].X) * q,\n\t\t\tthis.m_srcPoly[j].Y + (this.m_normals[k].Y + this.m_normals[j].Y) * q));\n\t};\n\n\tClipperLib.ClipperOffset.prototype.DoRound = function (j, k)\n\t{\n\t\tvar a = Math.atan2(this.m_sinA,\n\t\t\tthis.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y);\n\n\t\tvar steps = Math.max(Math.round(this.m_StepsPerRad * Math.abs(a)), 1);\n\n\t\tvar X = this.m_normals[k].X,\n\t\t\tY = this.m_normals[k].Y,\n\t\t\tX2;\n\t\tfor (var i = 0; i < steps; ++i)\n\t\t{\n\t\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(\n\t\t\t\tthis.m_srcPoly[j].X + X * this.m_delta,\n\t\t\t\tthis.m_srcPoly[j].Y + Y * this.m_delta));\n\t\t\tX2 = X;\n\t\t\tX = X * this.m_cos - this.m_sin * Y;\n\t\t\tY = X2 * this.m_sin + Y * this.m_cos;\n\t\t}\n\t\tthis.m_destPoly.push(new ClipperLib.FPoint2(\n\t\t\tthis.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta,\n\t\t\tthis.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta));\n\t};\n\n\tClipperLib.Error = function (message)\n\t{\n\t\ttry\n\t\t{\n\t\t\tthrow new Error(message);\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\talert(err.message);\n\t\t}\n\t};\n\n\t// ---------------------------------------------\n\n\t// JS extension by Timo 2013\n\tClipperLib.JS = {};\n\n\tClipperLib.JS.AreaOfPolygon = function (poly)\n\t{\n\t\treturn ClipperLib.Clipper.Area(poly);\n\t};\n\n\tClipperLib.JS.AreaOfPolygons = function (poly)\n\t{\n\t\tvar area = 0;\n\t\tfor (var i = 0; i < poly.length; i++)\n\t\t{\n\t\t\tarea += ClipperLib.Clipper.Area(poly[i]);\n\t\t}\n\t\treturn area;\n\t};\n\n\tClipperLib.JS.BoundsOfPath = function (path)\n\t{\n\t\treturn ClipperLib.JS.BoundsOfPaths([path]);\n\t};\n\n\tClipperLib.JS.BoundsOfPaths = function (paths)\n\t{\n\t\tvar bounds = ClipperLib.Clipper.GetBounds(paths);\n\t\treturn bounds;\n\t};\n\n\t// Clean() joins vertices that are too near each other\n\t// and causes distortion to offsetted polygons without cleaning\n\tClipperLib.JS.Clean = function (polygon, delta)\n\t{\n\t\tif (!(polygon instanceof Array)) return [];\n\t\tvar isPolygons = polygon[0] instanceof Array;\n\t\tvar polygon = ClipperLib.JS.Clone(polygon);\n\t\tif (typeof delta !== \"number\" || delta === null)\n\t\t{\n\t\t\tClipperLib.Error(\"Delta is not a number in Clean().\");\n\t\t\treturn polygon;\n\t\t}\n\t\tif (polygon.length === 0 || (polygon.length === 1 && polygon[0].length === 0) || delta < 0) return polygon;\n\t\tif (!isPolygons) polygon = [polygon];\n\t\tvar k_length = polygon.length;\n\t\tvar len, poly, result, d, p, j, i;\n\t\tvar results = [];\n\t\tfor (var k = 0; k < k_length; k++)\n\t\t{\n\t\t\tpoly = polygon[k];\n\t\t\tlen = poly.length;\n\t\t\tif (len === 0) continue;\n\t\t\telse if (len < 3)\n\t\t\t{\n\t\t\t\tresult = poly;\n\t\t\t\tresults.push(result);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult = poly;\n\t\t\td = delta * delta;\n\t\t\t//d = Math.floor(c_delta * c_delta);\n\t\t\tp = poly[0];\n\t\t\tj = 1;\n\t\t\tfor (i = 1; i < len; i++)\n\t\t\t{\n\t\t\t\tif ((poly[i].X - p.X) * (poly[i].X - p.X) +\n\t\t\t\t\t(poly[i].Y - p.Y) * (poly[i].Y - p.Y) <= d)\n\t\t\t\t\tcontinue;\n\t\t\t\tresult[j] = poly[i];\n\t\t\t\tp = poly[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tp = poly[j - 1];\n\t\t\tif ((poly[0].X - p.X) * (poly[0].X - p.X) +\n\t\t\t\t(poly[0].Y - p.Y) * (poly[0].Y - p.Y) <= d)\n\t\t\t\tj--;\n\t\t\tif (j < len)\n\t\t\t\tresult.splice(j, len - j);\n\t\t\tif (result.length) results.push(result);\n\t\t}\n\t\tif (!isPolygons && results.length) results = results[0];\n\t\telse if (!isPolygons && results.length === 0) results = [];\n\t\telse if (isPolygons && results.length === 0) results = [\n\t\t\t[]\n\t\t];\n\t\treturn results;\n\t}\n\t// Make deep copy of Polygons or Polygon\n\t// so that also FPoint objects are cloned and not only referenced\n\t// This should be the fastest way\n\tClipperLib.JS.Clone = function (polygon)\n\t{\n\t\tif (!(polygon instanceof Array)) return [];\n\t\tif (polygon.length === 0) return [];\n\t\telse if (polygon.length === 1 && polygon[0].length === 0) return [\n\t\t\t[]\n\t\t];\n\t\tvar isPolygons = polygon[0] instanceof Array;\n\t\tif (!isPolygons) polygon = [polygon];\n\t\tvar len = polygon.length,\n\t\t\tplen, i, j, result;\n\t\tvar results = new Array(len);\n\t\tfor (i = 0; i < len; i++)\n\t\t{\n\t\t\tplen = polygon[i].length;\n\t\t\tresult = new Array(plen);\n\t\t\tfor (j = 0; j < plen; j++)\n\t\t\t{\n\t\t\t\tresult[j] = {\n\t\t\t\t\tX: polygon[i][j].X,\n\t\t\t\t\tY: polygon[i][j].Y\n\t\t\t\t};\n\n\t\t\t}\n\t\t\tresults[i] = result;\n\t\t}\n\t\tif (!isPolygons) results = results[0];\n\t\treturn results;\n\t};\n\n\t// Removes points that doesn't affect much to the visual appearance.\n\t// If middle point is at or under certain distance (tolerance) of the line segment between\n\t// start and end point, the middle point is removed.\n\tClipperLib.JS.Lighten = function (polygon, tolerance)\n\t{\n\t\tif (!(polygon instanceof Array)) return [];\n\t\tif (typeof tolerance !== \"number\" || tolerance === null)\n\t\t{\n\t\t\tClipperLib.Error(\"Tolerance is not a number in Lighten().\")\n\t\t\treturn ClipperLib.JS.Clone(polygon);\n\t\t}\n\t\tif (polygon.length === 0 || (polygon.length === 1 && polygon[0].length === 0) || tolerance < 0)\n\t\t{\n\t\t\treturn ClipperLib.JS.Clone(polygon);\n\t\t}\n\t\tvar isPolygons = polygon[0] instanceof Array;\n\t\tif (!isPolygons) polygon = [polygon];\n\t\tvar i, j, poly, k, poly2, plen, A, B, P, d, rem, addlast;\n\t\tvar bxax, byay, l, ax, ay;\n\t\tvar len = polygon.length;\n\t\tvar toleranceSq = tolerance * tolerance;\n\t\tvar results = [];\n\t\tfor (i = 0; i < len; i++)\n\t\t{\n\t\t\tpoly = polygon[i];\n\t\t\tplen = poly.length;\n\t\t\tif (plen === 0) continue;\n\t\t\tfor (k = 0; k < 1000000; k++) // could be forever loop, but wiser to restrict max repeat count\n\t\t\t{\n\t\t\t\tpoly2 = [];\n\t\t\t\tplen = poly.length;\n\t\t\t\t// the first have to added to the end, if first and last are not the same\n\t\t\t\t// this way we ensure that also the actual last point can be removed if needed\n\t\t\t\tif (poly[plen - 1].X !== poly[0].X || poly[plen - 1].Y !== poly[0].Y)\n\t\t\t\t{\n\t\t\t\t\taddlast = 1;\n\t\t\t\t\tpoly.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tX: poly[0].X,\n\t\t\t\t\t\tY: poly[0].Y\n\t\t\t\t\t});\n\t\t\t\t\tplen = poly.length;\n\t\t\t\t}\n\t\t\t\telse addlast = 0;\n\t\t\t\trem = []; // Indexes of removed points\n\t\t\t\tfor (j = 0; j < plen - 2; j++)\n\t\t\t\t{\n\t\t\t\t\tA = poly[j]; // Start point of line segment\n\t\t\t\t\tP = poly[j + 1]; // Middle point. This is the one to be removed.\n\t\t\t\t\tB = poly[j + 2]; // End point of line segment\n\t\t\t\t\tax = A.X;\n\t\t\t\t\tay = A.Y;\n\t\t\t\t\tbxax = B.X - ax;\n\t\t\t\t\tbyay = B.Y - ay;\n\t\t\t\t\tif (bxax !== 0 || byay !== 0) // To avoid Nan, when A==P && P==B. And to avoid peaks (A==B && A!=P), which have lenght, but not area.\n\t\t\t\t\t{\n\t\t\t\t\t\tl = ((P.X - ax) * bxax + (P.Y - ay) * byay) / (bxax * bxax + byay * byay);\n\t\t\t\t\t\tif (l > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tax = B.X;\n\t\t\t\t\t\t\tay = B.Y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (l > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tax += bxax * l;\n\t\t\t\t\t\t\tay += byay * l;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbxax = P.X - ax;\n\t\t\t\t\tbyay = P.Y - ay;\n\t\t\t\t\td = bxax * bxax + byay * byay;\n\t\t\t\t\tif (d <= toleranceSq)\n\t\t\t\t\t{\n\t\t\t\t\t\trem[j + 1] = 1;\n\t\t\t\t\t\tj++; // when removed, transfer the pointer to the next one\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// add all unremoved points to poly2\n\t\t\t\tpoly2.push(\n\t\t\t\t{\n\t\t\t\t\tX: poly[0].X,\n\t\t\t\t\tY: poly[0].Y\n\t\t\t\t});\n\t\t\t\tfor (j = 1; j < plen - 1; j++)\n\t\t\t\t\tif (!rem[j]) poly2.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tX: poly[j].X,\n\t\t\t\t\t\tY: poly[j].Y\n\t\t\t\t\t});\n\t\t\t\tpoly2.push(\n\t\t\t\t{\n\t\t\t\t\tX: poly[plen - 1].X,\n\t\t\t\t\tY: poly[plen - 1].Y\n\t\t\t\t});\n\t\t\t\t// if the first point was added to the end, remove it\n\t\t\t\tif (addlast) poly.pop();\n\t\t\t\t// break, if there was not anymore removed points\n\t\t\t\tif (!rem.length) break;\n\t\t\t\t// else continue looping using poly2, to check if there are points to remove\n\t\t\t\telse poly = poly2;\n\t\t\t}\n\t\t\tplen = poly2.length;\n\t\t\t// remove duplicate from end, if needed\n\t\t\tif (poly2[plen - 1].X === poly2[0].X && poly2[plen - 1].Y === poly2[0].Y)\n\t\t\t{\n\t\t\t\tpoly2.pop();\n\t\t\t}\n\t\t\tif (poly2.length > 2) // to avoid two-point-polygons\n\t\t\t\tresults.push(poly2);\n\t\t}\n\t\tif (!isPolygons)\n\t\t{\n\t\t\tresults = results[0];\n\t\t}\n\t\tif (typeof (results) === \"undefined\")\n\t\t{\n\t\t\tresults = [];\n\t\t}\n\t\treturn results;\n\t}\n\n\tClipperLib.JS.PerimeterOfPath = function (path, closed)\n\t{\n\t\tif (typeof (path) === \"undefined\") return 0;\n\t\tvar sqrt = Math.sqrt;\n\t\tvar perimeter = 0.0;\n\t\tvar p1, p2, p1x = 0.0,\n\t\t\tp1y = 0.0,\n\t\t\tp2x = 0.0,\n\t\t\tp2y = 0.0;\n\t\tvar j = path.length;\n\t\tif (j < 2) return 0;\n\t\tif (closed)\n\t\t{\n\t\t\tpath[j] = path[0];\n\t\t\tj++;\n\t\t}\n\t\twhile (--j)\n\t\t{\n\t\t\tp1 = path[j];\n\t\t\tp1x = p1.X;\n\t\t\tp1y = p1.Y;\n\t\t\tp2 = path[j - 1];\n\t\t\tp2x = p2.X;\n\t\t\tp2y = p2.Y;\n\t\t\tperimeter += sqrt((p1x - p2x) * (p1x - p2x) + (p1y - p2y) * (p1y - p2y));\n\t\t}\n\t\tif (closed) path.pop();\n\t\treturn perimeter;\n\t};\n\n\tClipperLib.JS.PerimeterOfPaths = function (paths, closed)\n\t{\n\t\tvar perimeter = 0;\n\t\tfor (var i = 0; i < paths.length; i++)\n\t\t{\n\t\t\tperimeter += ClipperLib.JS.PerimeterOfPath(paths[i], closed);\n\t\t}\n\t\treturn perimeter;\n\t};\n\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.ExPolygons = function ()\n\t{\n\t\treturn [];\n\t}\n\t/**\n\t* @constructor\n\t*/\n\tClipperLib.ExPolygon = function ()\n\t{\n\t\tthis.outer = null;\n\t\tthis.holes = null;\n\t};\n\n\tClipperLib.JS.AddOuterPolyNodeToExPolygons = function (polynode, expolygons)\n\t{\n\t\tvar ep = new ClipperLib.ExPolygon();\n\t\tep.outer = polynode.Contour();\n\t\tvar childs = polynode.Childs();\n\t\tvar ilen = childs.length;\n\t\tep.holes = new Array(ilen);\n\t\tvar node, n, i, j, childs2, jlen;\n\t\tfor (i = 0; i < ilen; i++)\n\t\t{\n\t\t\tnode = childs[i];\n\t\t\tep.holes[i] = node.Contour();\n\t\t\t//Add outer polygons contained by (nested within) holes ...\n\t\t\tfor (j = 0, childs2 = node.Childs(), jlen = childs2.length; j < jlen; j++)\n\t\t\t{\n\t\t\t\tn = childs2[j];\n\t\t\t\tClipperLib.JS.AddOuterPolyNodeToExPolygons(n, expolygons);\n\t\t\t}\n\t\t}\n\t\texpolygons.push(ep);\n\t};\n\n\tClipperLib.JS.ExPolygonsToPaths = function (expolygons)\n\t{\n\t\tvar a, i, alen, ilen;\n\t\tvar paths = new ClipperLib.Paths();\n\t\tfor (a = 0, alen = expolygons.length; a < alen; a++)\n\t\t{\n\t\t\tpaths.push(expolygons[a].outer);\n\t\t\tfor (i = 0, ilen = expolygons[a].holes.length; i < ilen; i++)\n\t\t\t{\n\t\t\t\tpaths.push(expolygons[a].holes[i]);\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\tClipperLib.JS.PolyTreeToExPolygons = function (polytree)\n\t{\n\t\tvar expolygons = new ClipperLib.ExPolygons();\n\t\tvar node, i, childs, ilen;\n\t\tfor (i = 0, childs = polytree.Childs(), ilen = childs.length; i < ilen; i++)\n\t\t{\n\t\t\tnode = childs[i];\n\t\t\tClipperLib.JS.AddOuterPolyNodeToExPolygons(node, expolygons);\n\t\t}\n\t\treturn expolygons;\n\t};\n\n})();\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    var filteredBridge = filterPoints(bridge, bridge.next);\n    filterPoints(bridgeReverse, bridgeReverse.next);\n\n    // Check if input node was removed by the filtering\n    return outerNode === bridge ? filteredBridge : outerNode;\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n/* jshint maxcomplexity:11 */\n\n\"use strict\";\n\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\n\n// -------------------------------------------------------------------------Node\n\n/**\n * Advancing front node\n * @constructor\n * @private\n * @struct\n * @param {!XY} p - Point\n * @param {Triangle=} t triangle (optional)\n */\nvar Node = function(p, t) {\n    /** @type {XY} */\n    this.point = p;\n\n    /** @type {Triangle|null} */\n    this.triangle = t || null;\n\n    /** @type {Node|null} */\n    this.next = null;\n    /** @type {Node|null} */\n    this.prev = null;\n\n    /** @type {number} */\n    this.value = p.x;\n};\n\n// ---------------------------------------------------------------AdvancingFront\n/**\n * @constructor\n * @private\n * @struct\n * @param {Node} head\n * @param {Node} tail\n */\nvar AdvancingFront = function(head, tail) {\n    /** @type {Node} */\n    this.head_ = head;\n    /** @type {Node} */\n    this.tail_ = tail;\n    /** @type {Node} */\n    this.search_node_ = head;\n};\n\n/** @return {Node} */\nAdvancingFront.prototype.head = function() {\n    return this.head_;\n};\n\n/** @param {Node} node */\nAdvancingFront.prototype.setHead = function(node) {\n    this.head_ = node;\n};\n\n/** @return {Node} */\nAdvancingFront.prototype.tail = function() {\n    return this.tail_;\n};\n\n/** @param {Node} node */\nAdvancingFront.prototype.setTail = function(node) {\n    this.tail_ = node;\n};\n\n/** @return {Node} */\nAdvancingFront.prototype.search = function() {\n    return this.search_node_;\n};\n\n/** @param {Node} node */\nAdvancingFront.prototype.setSearch = function(node) {\n    this.search_node_ = node;\n};\n\n/** @return {Node} */\nAdvancingFront.prototype.findSearchNode = function(/*x*/) {\n    // TODO: implement BST index\n    return this.search_node_;\n};\n\n/**\n * @param {number} x value\n * @return {Node}\n */\nAdvancingFront.prototype.locateNode = function(x) {\n    var node = this.search_node_;\n\n    /* jshint boss:true */\n    if (x < node.value) {\n        while (node = node.prev) {\n            if (x >= node.value) {\n                this.search_node_ = node;\n                return node;\n            }\n        }\n    } else {\n        while (node = node.next) {\n            if (x < node.value) {\n                this.search_node_ = node.prev;\n                return node.prev;\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @param {!XY} point - Point\n * @return {Node}\n */\nAdvancingFront.prototype.locatePoint = function(point) {\n    var px = point.x;\n    var node = this.findSearchNode(px);\n    var nx = node.point.x;\n\n    if (px === nx) {\n        // Here we are comparing point references, not values\n        if (point !== node.point) {\n            // We might have two nodes with same x value for a short time\n            if (point === node.prev.point) {\n                node = node.prev;\n            } else if (point === node.next.point) {\n                node = node.next;\n            } else {\n                throw new Error('poly2tri Invalid AdvancingFront.locatePoint() call');\n            }\n        }\n    } else if (px < nx) {\n        /* jshint boss:true */\n        while (node = node.prev) {\n            if (point === node.point) {\n                break;\n            }\n        }\n    } else {\n        while (node = node.next) {\n            if (point === node.point) {\n                break;\n            }\n        }\n    }\n\n    if (node) {\n        this.search_node_ = node;\n    }\n    return node;\n};\n\n\n// ----------------------------------------------------------------------Exports\n\nmodule.exports = AdvancingFront;\nmodule.exports.Node = Node;\n\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n *\n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n *\n * All rights reserved.\n *\n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n/*\n * Function added in the JavaScript version (was not present in the c++ version)\n */\n\n/**\n * assert and throw an exception.\n *\n * @private\n * @param {boolean} condition   the condition which is asserted\n * @param {string} message      the message which is display is condition is falsy\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || \"Assert Failed\");\n    }\n}\nmodule.exports = assert;\n\n\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\nvar xy = require('./xy');\n\n// ------------------------------------------------------------------------Point\n/**\n * Construct a point\n * @example\n *      var point = new poly2tri.Point(150, 150);\n * @public\n * @constructor\n * @struct\n * @param {number=} x    coordinate (0 if undefined)\n * @param {number=} y    coordinate (0 if undefined)\n */\nvar Point = function(x, y) {\n    /**\n     * @type {number}\n     * @expose\n     */\n    this.x = +x || 0;\n    /**\n     * @type {number}\n     * @expose\n     */\n    this.y = +y || 0;\n\n    // All extra fields added to Point are prefixed with _p2t_\n    // to avoid collisions if custom Point class is used.\n\n    /**\n     * The edges this point constitutes an upper ending point\n     * @private\n     * @type {Array.<Edge>}\n     */\n    this._p2t_edge_list = null;\n};\n\n/**\n * For pretty printing\n * @example\n *      \"p=\" + new poly2tri.Point(5,42)\n *      // → \"p=(5;42)\"\n * @returns {string} <code>\"(x;y)\"</code>\n */\nPoint.prototype.toString = function() {\n    return xy.toStringBase(this);\n};\n\n/**\n * JSON output, only coordinates\n * @example\n *      JSON.stringify(new poly2tri.Point(1,2))\n *      // → '{\"x\":1,\"y\":2}'\n */\nPoint.prototype.toJSON = function() {\n    return { x: this.x, y: this.y };\n};\n\n/**\n * Creates a copy of this Point object.\n * @return {Point} new cloned point\n */\nPoint.prototype.clone = function() {\n    return new Point(this.x, this.y);\n};\n\n/**\n * Set this Point instance to the origo. <code>(0; 0)</code>\n * @return {Point} this (for chaining)\n */\nPoint.prototype.set_zero = function() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this; // for chaining\n};\n\n/**\n * Set the coordinates of this instance.\n * @param {number} x   coordinate\n * @param {number} y   coordinate\n * @return {Point} this (for chaining)\n */\nPoint.prototype.set = function(x, y) {\n    this.x = +x || 0;\n    this.y = +y || 0;\n    return this; // for chaining\n};\n\n/**\n * Negate this Point instance. (component-wise)\n * @return {Point} this (for chaining)\n */\nPoint.prototype.negate = function() {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this; // for chaining\n};\n\n/**\n * Add another Point object to this instance. (component-wise)\n * @param {!Point} n - Point object.\n * @return {Point} this (for chaining)\n */\nPoint.prototype.add = function(n) {\n    this.x += n.x;\n    this.y += n.y;\n    return this; // for chaining\n};\n\n/**\n * Subtract this Point instance with another point given. (component-wise)\n * @param {!Point} n - Point object.\n * @return {Point} this (for chaining)\n */\nPoint.prototype.sub = function(n) {\n    this.x -= n.x;\n    this.y -= n.y;\n    return this; // for chaining\n};\n\n/**\n * Multiply this Point instance by a scalar. (component-wise)\n * @param {number} s   scalar.\n * @return {Point} this (for chaining)\n */\nPoint.prototype.mul = function(s) {\n    this.x *= s;\n    this.y *= s;\n    return this; // for chaining\n};\n\n/**\n * Return the distance of this Point instance from the origo.\n * @return {number} distance\n */\nPoint.prototype.length = function() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n};\n\n/**\n * Normalize this Point instance (as a vector).\n * @return {number} The original distance of this instance from the origo.\n */\nPoint.prototype.normalize = function() {\n    var len = this.length();\n    this.x /= len;\n    this.y /= len;\n    return len;\n};\n\n/**\n * Test this Point object with another for equality.\n * @param {!XY} p - any \"Point like\" object with {x,y}\n * @return {boolean} <code>true</code> if same x and y coordinates, <code>false</code> otherwise.\n */\nPoint.prototype.equals = function(p) {\n    return this.x === p.x && this.y === p.y;\n};\n\n\n// -----------------------------------------------------Point (\"static\" methods)\n\n/**\n * Negate a point component-wise and return the result as a new Point object.\n * @param {!XY} p - any \"Point like\" object with {x,y}\n * @return {Point} the resulting Point object.\n */\nPoint.negate = function(p) {\n    return new Point(-p.x, -p.y);\n};\n\n/**\n * Add two points component-wise and return the result as a new Point object.\n * @param {!XY} a - any \"Point like\" object with {x,y}\n * @param {!XY} b - any \"Point like\" object with {x,y}\n * @return {Point} the resulting Point object.\n */\nPoint.add = function(a, b) {\n    return new Point(a.x + b.x, a.y + b.y);\n};\n\n/**\n * Subtract two points component-wise and return the result as a new Point object.\n * @param {!XY} a - any \"Point like\" object with {x,y}\n * @param {!XY} b - any \"Point like\" object with {x,y}\n * @return {Point} the resulting Point object.\n */\nPoint.sub = function(a, b) {\n    return new Point(a.x - b.x, a.y - b.y);\n};\n\n/**\n * Multiply a point by a scalar and return the result as a new Point object.\n * @param {number} s - the scalar\n * @param {!XY} p - any \"Point like\" object with {x,y}\n * @return {Point} the resulting Point object.\n */\nPoint.mul = function(s, p) {\n    return new Point(s * p.x, s * p.y);\n};\n\n/**\n * Perform the cross product on either two points (this produces a scalar)\n * or a point and a scalar (this produces a point).\n * This function requires two parameters, either may be a Point object or a\n * number.\n * @param  {XY|number} a - Point object or scalar.\n * @param  {XY|number} b - Point object or scalar.\n * @return {Point|number} a Point object or a number, depending on the parameters.\n */\nPoint.cross = function(a, b) {\n    if (typeof(a) === 'number') {\n        if (typeof(b) === 'number') {\n            return a * b;\n        } else {\n            return new Point(-a * b.y, a * b.x);\n        }\n    } else {\n        if (typeof(b) === 'number') {\n            return new Point(b * a.y, -b * a.x);\n        } else {\n            return a.x * b.y - a.y * b.x;\n        }\n    }\n};\n\n\n// -----------------------------------------------------------------\"Point-Like\"\n/*\n * The following functions operate on \"Point\" or any \"Point like\" object \n * with {x,y} (duck typing).\n */\n\nPoint.toString = xy.toString;\nPoint.compare = xy.compare;\nPoint.cmp = xy.compare; // backward compatibility\nPoint.equals = xy.equals;\n\n/**\n * Peform the dot product on two vectors.\n * @public\n * @param {!XY} a - any \"Point like\" object with {x,y}\n * @param {!XY} b - any \"Point like\" object with {x,y}\n * @return {number} The dot product\n */\nPoint.dot = function(a, b) {\n    return a.x * b.x + a.y * b.y;\n};\n\n\n// ---------------------------------------------------------Exports (public API)\n\nmodule.exports = Point;\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n/*\n * Class added in the JavaScript version (was not present in the c++ version)\n */\n\nvar xy = require('./xy');\n\n/**\n * Custom exception class to indicate invalid Point values\n * @constructor\n * @public\n * @extends Error\n * @struct\n * @param {string=} message - error message\n * @param {Array.<XY>=} points - invalid points\n */\nvar PointError = function(message, points) {\n    this.name = \"PointError\";\n    /**\n     * Invalid points\n     * @public\n     * @type {Array.<XY>}\n     */\n    this.points = points = points || [];\n    /**\n     * Error message\n     * @public\n     * @type {string}\n     */\n    this.message = message || \"Invalid Points!\";\n    for (var i = 0; i < points.length; i++) {\n        this.message += \" \" + xy.toString(points[i]);\n    }\n};\nPointError.prototype = new Error();\nPointError.prototype.constructor = PointError;\n\n\nmodule.exports = PointError;\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n *\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n * * Neither the name of Poly2Tri nor the names of its contributors may be\n *   used to endorse or promote products derived from this software without specific\n *   prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n\"use strict\";\n\n/**\n * Public API for poly2tri.js\n * @module poly2tri\n */\n\n\n/**\n * If you are not using a module system (e.g. CommonJS, RequireJS), you can access this library\n * as a global variable <code>poly2tri</code> i.e. <code>window.poly2tri</code> in a browser.\n * @name poly2tri\n * @global\n * @public\n * @type {module:poly2tri}\n */\nvar previousPoly2tri = global.poly2tri;\n/**\n * For Browser + &lt;script&gt; :\n * reverts the {@linkcode poly2tri} global object to its previous value,\n * and returns a reference to the instance called.\n *\n * @example\n *              var p = poly2tri.noConflict();\n * @public\n * @return {module:poly2tri} instance called\n */\n// (this feature is not automatically provided by browserify).\nexports.noConflict = function() {\n    global.poly2tri = previousPoly2tri;\n    return exports;\n};\n\n/**\n * poly2tri library version\n * @public\n * @const {string}\n */\nexports.VERSION = require('../dist/version.json').version;\n\n/**\n * Exports the {@linkcode PointError} class.\n * @public\n * @typedef {PointError} module:poly2tri.PointError\n * @function\n */\nexports.PointError = require('./pointerror');\n/**\n * Exports the {@linkcode Point} class.\n * @public\n * @typedef {Point} module:poly2tri.Point\n * @function\n */\nexports.Point = require('./point');\n/**\n * Exports the {@linkcode Triangle} class.\n * @public\n * @typedef {Triangle} module:poly2tri.Triangle\n * @function\n */\nexports.Triangle = require('./triangle');\n/**\n * Exports the {@linkcode SweepContext} class.\n * @public\n * @typedef {SweepContext} module:poly2tri.SweepContext\n * @function\n */\nexports.SweepContext = require('./sweepcontext');\n\n\n// Backward compatibility\nvar sweep = require('./sweep');\n/**\n * @function\n * @deprecated use {@linkcode SweepContext#triangulate} instead\n */\nexports.triangulate = sweep.triangulate;\n/**\n * @deprecated use {@linkcode SweepContext#triangulate} instead\n * @property {function} Triangulate - use {@linkcode SweepContext#triangulate} instead\n */\nexports.sweep = {Triangulate: sweep.triangulate};\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n/* jshint latedef:nofunc, maxcomplexity:9 */\n\n\"use strict\";\n\n/**\n * This 'Sweep' module is present in order to keep this JavaScript version\n * as close as possible to the reference C++ version, even though almost all\n * functions could be declared as methods on the {@linkcode module:sweepcontext~SweepContext} object.\n * @module\n * @private\n */\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\nvar assert = require('./assert');\nvar PointError = require('./pointerror');\nvar Triangle = require('./triangle');\nvar Node = require('./advancingfront').Node;\n\n\n// ------------------------------------------------------------------------utils\n\nvar utils = require('./utils');\n\n/** @const */\nvar EPSILON = utils.EPSILON;\n\n/** @const */\nvar Orientation = utils.Orientation;\n/** @const */\nvar orient2d = utils.orient2d;\n/** @const */\nvar inScanArea = utils.inScanArea;\n/** @const */\nvar isAngleObtuse = utils.isAngleObtuse;\n\n\n// ------------------------------------------------------------------------Sweep\n\n/**\n * Triangulate the polygon with holes and Steiner points.\n * Do this AFTER you've added the polyline, holes, and Steiner points\n * @private\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction triangulate(tcx) {\n    tcx.initTriangulation();\n    tcx.createAdvancingFront();\n    // Sweep points; build mesh\n    sweepPoints(tcx);\n    // Clean up\n    finalizationPolygon(tcx);\n}\n\n/**\n * Start sweeping the Y-sorted point set from bottom to top\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction sweepPoints(tcx) {\n    var i, len = tcx.pointCount();\n    for (i = 1; i < len; ++i) {\n        var point = tcx.getPoint(i);\n        var node = pointEvent(tcx, point);\n        var edges = point._p2t_edge_list;\n        for (var j = 0; edges && j < edges.length; ++j) {\n            edgeEventByEdge(tcx, edges[j], node);\n        }\n    }\n}\n\n/**\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction finalizationPolygon(tcx) {\n    // Get an Internal triangle to start with\n    var t = tcx.front().head().next.triangle;\n    var p = tcx.front().head().next.point;\n    while (!t.getConstrainedEdgeCW(p)) {\n        t = t.neighborCCW(p);\n    }\n\n    // Collect interior triangles constrained by edges\n    tcx.meshClean(t);\n}\n\n/**\n * Find closes node to the left of the new point and\n * create a new triangle. If needed new holes and basins\n * will be filled to.\n * @param {!SweepContext} tcx - SweepContext object\n * @param {!XY} point   Point\n */\nfunction pointEvent(tcx, point) {\n    var node = tcx.locateNode(point);\n    var new_node = newFrontTriangle(tcx, point, node);\n\n    // Only need to check +epsilon since point never have smaller\n    // x value than node due to how we fetch nodes from the front\n    if (point.x <= node.point.x + (EPSILON)) {\n        fill(tcx, node);\n    }\n\n    //tcx.AddNode(new_node);\n\n    fillAdvancingFront(tcx, new_node);\n    return new_node;\n}\n\nfunction edgeEventByEdge(tcx, edge, node) {\n    tcx.edge_event.constrained_edge = edge;\n    tcx.edge_event.right = (edge.p.x > edge.q.x);\n\n    if (isEdgeSideOfTriangle(node.triangle, edge.p, edge.q)) {\n        return;\n    }\n\n    // For now we will do all needed filling\n    // TODO: integrate with flip process might give some better performance\n    //       but for now this avoid the issue with cases that needs both flips and fills\n    fillEdgeEvent(tcx, edge, node);\n    edgeEventByPoints(tcx, edge.p, edge.q, node.triangle, edge.q);\n}\n\nfunction edgeEventByPoints(tcx, ep, eq, triangle, point) {\n    if (isEdgeSideOfTriangle(triangle, ep, eq)) {\n        return;\n    }\n\n    var p1 = triangle.pointCCW(point);\n    var o1 = orient2d(eq, p1, ep);\n    if (o1 === Orientation.COLLINEAR) {\n        // TODO integrate here changes from C++ version\n        // (C++ repo revision 09880a869095 dated March 8, 2011)\n        throw new PointError('poly2tri EdgeEvent: Collinear not supported!', [eq, p1, ep]);\n    }\n\n    var p2 = triangle.pointCW(point);\n    var o2 = orient2d(eq, p2, ep);\n    if (o2 === Orientation.COLLINEAR) {\n        // TODO integrate here changes from C++ version\n        // (C++ repo revision 09880a869095 dated March 8, 2011)\n        throw new PointError('poly2tri EdgeEvent: Collinear not supported!', [eq, p2, ep]);\n    }\n\n    if (o1 === o2) {\n        // Need to decide if we are rotating CW or CCW to get to a triangle\n        // that will cross edge\n        if (o1 === Orientation.CW) {\n            triangle = triangle.neighborCCW(point);\n        } else {\n            triangle = triangle.neighborCW(point);\n        }\n        edgeEventByPoints(tcx, ep, eq, triangle, point);\n    } else {\n        // This triangle crosses constraint so lets flippin start!\n        flipEdgeEvent(tcx, ep, eq, triangle, point);\n    }\n}\n\nfunction isEdgeSideOfTriangle(triangle, ep, eq) {\n    var index = triangle.edgeIndex(ep, eq);\n    if (index !== -1) {\n        triangle.markConstrainedEdgeByIndex(index);\n        var t = triangle.getNeighbor(index);\n        if (t) {\n            t.markConstrainedEdgeByPoints(ep, eq);\n        }\n        return true;\n    }\n    return false;\n}\n\n/**\n * Creates a new front triangle and legalize it\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction newFrontTriangle(tcx, point, node) {\n    var triangle = new Triangle(point, node.point, node.next.point);\n\n    triangle.markNeighbor(node.triangle);\n    tcx.addToMap(triangle);\n\n    var new_node = new Node(point);\n    new_node.next = node.next;\n    new_node.prev = node;\n    node.next.prev = new_node;\n    node.next = new_node;\n\n    if (!legalize(tcx, triangle)) {\n        tcx.mapTriangleToNodes(triangle);\n    }\n\n    return new_node;\n}\n\n/**\n * Adds a triangle to the advancing front to fill a hole.\n * @param {!SweepContext} tcx - SweepContext object\n * @param node - middle node, that is the bottom of the hole\n */\nfunction fill(tcx, node) {\n    var triangle = new Triangle(node.prev.point, node.point, node.next.point);\n\n    // TODO: should copy the constrained_edge value from neighbor triangles\n    //       for now constrained_edge values are copied during the legalize\n    triangle.markNeighbor(node.prev.triangle);\n    triangle.markNeighbor(node.triangle);\n\n    tcx.addToMap(triangle);\n\n    // Update the advancing front\n    node.prev.next = node.next;\n    node.next.prev = node.prev;\n\n\n    // If it was legalized the triangle has already been mapped\n    if (!legalize(tcx, triangle)) {\n        tcx.mapTriangleToNodes(triangle);\n    }\n\n    //tcx.removeNode(node);\n}\n\n/**\n * Fills holes in the Advancing Front\n * @param {!SweepContext} tcx - SweepContext object\n */\nfunction fillAdvancingFront(tcx, n) {\n    // Fill right holes\n    var node = n.next;\n    while (node.next) {\n        // TODO integrate here changes from C++ version\n        // (C++ repo revision acf81f1f1764 dated April 7, 2012)\n        if (isAngleObtuse(node.point, node.next.point, node.prev.point)) {\n            break;\n        }\n        fill(tcx, node);\n        node = node.next;\n    }\n\n    // Fill left holes\n    node = n.prev;\n    while (node.prev) {\n        // TODO integrate here changes from C++ version\n        // (C++ repo revision acf81f1f1764 dated April 7, 2012)\n        if (isAngleObtuse(node.point, node.next.point, node.prev.point)) {\n            break;\n        }\n        fill(tcx, node);\n        node = node.prev;\n    }\n\n    // Fill right basins\n    if (n.next && n.next.next) {\n        if (isBasinAngleRight(n)) {\n            fillBasin(tcx, n);\n        }\n    }\n}\n\n/**\n * The basin angle is decided against the horizontal line [1,0].\n * @param {Node} node\n * @return {boolean} true if angle < 3*π/4\n */\nfunction isBasinAngleRight(node) {\n    var ax = node.point.x - node.next.next.point.x;\n    var ay = node.point.y - node.next.next.point.y;\n    assert(ay >= 0, \"unordered y\");\n    return (ax >= 0 || Math.abs(ax) < ay);\n}\n\n/**\n * Returns true if triangle was legalized\n * @param {!SweepContext} tcx - SweepContext object\n * @return {boolean}\n */\nfunction legalize(tcx, t) {\n    // To legalize a triangle we start by finding if any of the three edges\n    // violate the Delaunay condition\n    for (var i = 0; i < 3; ++i) {\n        if (t.delaunay_edge[i]) {\n            continue;\n        }\n        var ot = t.getNeighbor(i);\n        if (ot) {\n            var p = t.getPoint(i);\n            var op = ot.oppositePoint(t, p);\n            var oi = ot.index(op);\n\n            // If this is a Constrained Edge or a Delaunay Edge(only during recursive legalization)\n            // then we should not try to legalize\n            if (ot.constrained_edge[oi] || ot.delaunay_edge[oi]) {\n                t.constrained_edge[i] = ot.constrained_edge[oi];\n                continue;\n            }\n\n            var inside = inCircle(p, t.pointCCW(p), t.pointCW(p), op);\n            if (inside) {\n                // Lets mark this shared edge as Delaunay\n                t.delaunay_edge[i] = true;\n                ot.delaunay_edge[oi] = true;\n\n                // Lets rotate shared edge one vertex CW to legalize it\n                rotateTrianglePair(t, p, ot, op);\n\n                // We now got one valid Delaunay Edge shared by two triangles\n                // This gives us 4 new edges to check for Delaunay\n\n                // Make sure that triangle to node mapping is done only one time for a specific triangle\n                var not_legalized = !legalize(tcx, t);\n                if (not_legalized) {\n                    tcx.mapTriangleToNodes(t);\n                }\n\n                not_legalized = !legalize(tcx, ot);\n                if (not_legalized) {\n                    tcx.mapTriangleToNodes(ot);\n                }\n                // Reset the Delaunay edges, since they only are valid Delaunay edges\n                // until we add a new triangle or point.\n                // XXX: need to think about this. Can these edges be tried after we\n                //      return to previous recursive level?\n                t.delaunay_edge[i] = false;\n                ot.delaunay_edge[oi] = false;\n\n                // If triangle have been legalized no need to check the other edges since\n                // the recursive legalization will handles those so we can end here.\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * <b>Requirement</b>:<br>\n * 1. a,b and c form a triangle.<br>\n * 2. a and d is know to be on opposite side of bc<br>\n * <pre>\n *                a\n *                +\n *               / \\\n *              /   \\\n *            b/     \\c\n *            +-------+\n *           /    d    \\\n *          /           \\\n * </pre>\n * <b>Fact</b>: d has to be in area B to have a chance to be inside the circle formed by\n *  a,b and c<br>\n *  d is outside B if orient2d(a,b,d) or orient2d(c,a,d) is CW<br>\n *  This preknowledge gives us a way to optimize the incircle test\n * @param pa - triangle point, opposite d\n * @param pb - triangle point\n * @param pc - triangle point\n * @param pd - point opposite a\n * @return {boolean} true if d is inside circle, false if on circle edge\n */\nfunction inCircle(pa, pb, pc, pd) {\n    var adx = pa.x - pd.x;\n    var ady = pa.y - pd.y;\n    var bdx = pb.x - pd.x;\n    var bdy = pb.y - pd.y;\n\n    var adxbdy = adx * bdy;\n    var bdxady = bdx * ady;\n    var oabd = adxbdy - bdxady;\n    if (oabd <= 0) {\n        return false;\n    }\n\n    var cdx = pc.x - pd.x;\n    var cdy = pc.y - pd.y;\n\n    var cdxady = cdx * ady;\n    var adxcdy = adx * cdy;\n    var ocad = cdxady - adxcdy;\n    if (ocad <= 0) {\n        return false;\n    }\n\n    var bdxcdy = bdx * cdy;\n    var cdxbdy = cdx * bdy;\n\n    var alift = adx * adx + ady * ady;\n    var blift = bdx * bdx + bdy * bdy;\n    var clift = cdx * cdx + cdy * cdy;\n\n    var det = alift * (bdxcdy - cdxbdy) + blift * ocad + clift * oabd;\n    return det > 0;\n}\n\n/**\n * Rotates a triangle pair one vertex CW\n *<pre>\n *       n2                    n2\n *  P +-----+             P +-----+\n *    | t  /|               |\\  t |\n *    |   / |               | \\   |\n *  n1|  /  |n3           n1|  \\  |n3\n *    | /   |    after CW   |   \\ |\n *    |/ oT |               | oT \\|\n *    +-----+ oP            +-----+\n *       n4                    n4\n * </pre>\n */\nfunction rotateTrianglePair(t, p, ot, op) {\n    var n1, n2, n3, n4;\n    n1 = t.neighborCCW(p);\n    n2 = t.neighborCW(p);\n    n3 = ot.neighborCCW(op);\n    n4 = ot.neighborCW(op);\n\n    var ce1, ce2, ce3, ce4;\n    ce1 = t.getConstrainedEdgeCCW(p);\n    ce2 = t.getConstrainedEdgeCW(p);\n    ce3 = ot.getConstrainedEdgeCCW(op);\n    ce4 = ot.getConstrainedEdgeCW(op);\n\n    var de1, de2, de3, de4;\n    de1 = t.getDelaunayEdgeCCW(p);\n    de2 = t.getDelaunayEdgeCW(p);\n    de3 = ot.getDelaunayEdgeCCW(op);\n    de4 = ot.getDelaunayEdgeCW(op);\n\n    t.legalize(p, op);\n    ot.legalize(op, p);\n\n    // Remap delaunay_edge\n    ot.setDelaunayEdgeCCW(p, de1);\n    t.setDelaunayEdgeCW(p, de2);\n    t.setDelaunayEdgeCCW(op, de3);\n    ot.setDelaunayEdgeCW(op, de4);\n\n    // Remap constrained_edge\n    ot.setConstrainedEdgeCCW(p, ce1);\n    t.setConstrainedEdgeCW(p, ce2);\n    t.setConstrainedEdgeCCW(op, ce3);\n    ot.setConstrainedEdgeCW(op, ce4);\n\n    // Remap neighbors\n    // XXX: might optimize the markNeighbor by keeping track of\n    //      what side should be assigned to what neighbor after the\n    //      rotation. Now mark neighbor does lots of testing to find\n    //      the right side.\n    t.clearNeighbors();\n    ot.clearNeighbors();\n    if (n1) {\n        ot.markNeighbor(n1);\n    }\n    if (n2) {\n        t.markNeighbor(n2);\n    }\n    if (n3) {\n        t.markNeighbor(n3);\n    }\n    if (n4) {\n        ot.markNeighbor(n4);\n    }\n    t.markNeighbor(ot);\n}\n\n/**\n * Fills a basin that has formed on the Advancing Front to the right\n * of given node.<br>\n * First we decide a left,bottom and right node that forms the\n * boundaries of the basin. Then we do a reqursive fill.\n *\n * @param {!SweepContext} tcx - SweepContext object\n * @param node - starting node, this or next node will be left node\n */\nfunction fillBasin(tcx, node) {\n    if (orient2d(node.point, node.next.point, node.next.next.point) === Orientation.CCW) {\n        tcx.basin.left_node = node.next.next;\n    } else {\n        tcx.basin.left_node = node.next;\n    }\n\n    // Find the bottom and right node\n    tcx.basin.bottom_node = tcx.basin.left_node;\n    while (tcx.basin.bottom_node.next && tcx.basin.bottom_node.point.y >= tcx.basin.bottom_node.next.point.y) {\n        tcx.basin.bottom_node = tcx.basin.bottom_node.next;\n    }\n    if (tcx.basin.bottom_node === tcx.basin.left_node) {\n        // No valid basin\n        return;\n    }\n\n    tcx.basin.right_node = tcx.basin.bottom_node;\n    while (tcx.basin.right_node.next && tcx.basin.right_node.point.y < tcx.basin.right_node.next.point.y) {\n        tcx.basin.right_node = tcx.basin.right_node.next;\n    }\n    if (tcx.basin.right_node === tcx.basin.bottom_node) {\n        // No valid basins\n        return;\n    }\n\n    tcx.basin.width = tcx.basin.right_node.point.x - tcx.basin.left_node.point.x;\n    tcx.basin.left_highest = tcx.basin.left_node.point.y > tcx.basin.right_node.point.y;\n\n    fillBasinReq(tcx, tcx.basin.bottom_node);\n}\n\n/**\n * Recursive algorithm to fill a Basin with triangles\n *\n * @param {!SweepContext} tcx - SweepContext object\n * @param node - bottom_node\n */\nfunction fillBasinReq(tcx, node) {\n    // if shallow stop filling\n    if (isShallow(tcx, node)) {\n        return;\n    }\n\n    fill(tcx, node);\n\n    var o;\n    if (node.prev === tcx.basin.left_node && node.next === tcx.basin.right_node) {\n        return;\n    } else if (node.prev === tcx.basin.left_node) {\n        o = orient2d(node.point, node.next.point, node.next.next.point);\n        if (o === Orientation.CW) {\n            return;\n        }\n        node = node.next;\n    } else if (node.next === tcx.basin.right_node) {\n        o = orient2d(node.point, node.prev.point, node.prev.prev.point);\n        if (o === Orientation.CCW) {\n            return;\n        }\n        node = node.prev;\n    } else {\n        // Continue with the neighbor node with lowest Y value\n        if (node.prev.point.y < node.next.point.y) {\n            node = node.prev;\n        } else {\n            node = node.next;\n        }\n    }\n\n    fillBasinReq(tcx, node);\n}\n\nfunction isShallow(tcx, node) {\n    var height;\n    if (tcx.basin.left_highest) {\n        height = tcx.basin.left_node.point.y - node.point.y;\n    } else {\n        height = tcx.basin.right_node.point.y - node.point.y;\n    }\n\n    // if shallow stop filling\n    if (tcx.basin.width > height) {\n        return true;\n    }\n    return false;\n}\n\nfunction fillEdgeEvent(tcx, edge, node) {\n    if (tcx.edge_event.right) {\n        fillRightAboveEdgeEvent(tcx, edge, node);\n    } else {\n        fillLeftAboveEdgeEvent(tcx, edge, node);\n    }\n}\n\nfunction fillRightAboveEdgeEvent(tcx, edge, node) {\n    while (node.next.point.x < edge.p.x) {\n        // Check if next node is below the edge\n        if (orient2d(edge.q, node.next.point, edge.p) === Orientation.CCW) {\n            fillRightBelowEdgeEvent(tcx, edge, node);\n        } else {\n            node = node.next;\n        }\n    }\n}\n\nfunction fillRightBelowEdgeEvent(tcx, edge, node) {\n    if (node.point.x < edge.p.x) {\n        if (orient2d(node.point, node.next.point, node.next.next.point) === Orientation.CCW) {\n            // Concave\n            fillRightConcaveEdgeEvent(tcx, edge, node);\n        } else {\n            // Convex\n            fillRightConvexEdgeEvent(tcx, edge, node);\n            // Retry this one\n            fillRightBelowEdgeEvent(tcx, edge, node);\n        }\n    }\n}\n\nfunction fillRightConcaveEdgeEvent(tcx, edge, node) {\n    fill(tcx, node.next);\n    if (node.next.point !== edge.p) {\n        // Next above or below edge?\n        if (orient2d(edge.q, node.next.point, edge.p) === Orientation.CCW) {\n            // Below\n            if (orient2d(node.point, node.next.point, node.next.next.point) === Orientation.CCW) {\n                // Next is concave\n                fillRightConcaveEdgeEvent(tcx, edge, node);\n            } else {\n                // Next is convex\n                /* jshint noempty:false */\n            }\n        }\n    }\n}\n\nfunction fillRightConvexEdgeEvent(tcx, edge, node) {\n    // Next concave or convex?\n    if (orient2d(node.next.point, node.next.next.point, node.next.next.next.point) === Orientation.CCW) {\n        // Concave\n        fillRightConcaveEdgeEvent(tcx, edge, node.next);\n    } else {\n        // Convex\n        // Next above or below edge?\n        if (orient2d(edge.q, node.next.next.point, edge.p) === Orientation.CCW) {\n            // Below\n            fillRightConvexEdgeEvent(tcx, edge, node.next);\n        } else {\n            // Above\n            /* jshint noempty:false */\n        }\n    }\n}\n\nfunction fillLeftAboveEdgeEvent(tcx, edge, node) {\n    while (node.prev.point.x > edge.p.x) {\n        // Check if next node is below the edge\n        if (orient2d(edge.q, node.prev.point, edge.p) === Orientation.CW) {\n            fillLeftBelowEdgeEvent(tcx, edge, node);\n        } else {\n            node = node.prev;\n        }\n    }\n}\n\nfunction fillLeftBelowEdgeEvent(tcx, edge, node) {\n    if (node.point.x > edge.p.x) {\n        if (orient2d(node.point, node.prev.point, node.prev.prev.point) === Orientation.CW) {\n            // Concave\n            fillLeftConcaveEdgeEvent(tcx, edge, node);\n        } else {\n            // Convex\n            fillLeftConvexEdgeEvent(tcx, edge, node);\n            // Retry this one\n            fillLeftBelowEdgeEvent(tcx, edge, node);\n        }\n    }\n}\n\nfunction fillLeftConvexEdgeEvent(tcx, edge, node) {\n    // Next concave or convex?\n    if (orient2d(node.prev.point, node.prev.prev.point, node.prev.prev.prev.point) === Orientation.CW) {\n        // Concave\n        fillLeftConcaveEdgeEvent(tcx, edge, node.prev);\n    } else {\n        // Convex\n        // Next above or below edge?\n        if (orient2d(edge.q, node.prev.prev.point, edge.p) === Orientation.CW) {\n            // Below\n            fillLeftConvexEdgeEvent(tcx, edge, node.prev);\n        } else {\n            // Above\n            /* jshint noempty:false */\n        }\n    }\n}\n\nfunction fillLeftConcaveEdgeEvent(tcx, edge, node) {\n    fill(tcx, node.prev);\n    if (node.prev.point !== edge.p) {\n        // Next above or below edge?\n        if (orient2d(edge.q, node.prev.point, edge.p) === Orientation.CW) {\n            // Below\n            if (orient2d(node.point, node.prev.point, node.prev.prev.point) === Orientation.CW) {\n                // Next is concave\n                fillLeftConcaveEdgeEvent(tcx, edge, node);\n            } else {\n                // Next is convex\n                /* jshint noempty:false */\n            }\n        }\n    }\n}\n\nfunction flipEdgeEvent(tcx, ep, eq, t, p) {\n    var ot = t.neighborAcross(p);\n    assert(ot, \"FLIP failed due to missing triangle!\");\n\n    var op = ot.oppositePoint(t, p);\n\n    // Additional check from Java version (see issue #88)\n    if (t.getConstrainedEdgeAcross(p)) {\n        var index = t.index(p);\n        throw new PointError(\"poly2tri Intersecting Constraints\",\n                [p, op, t.getPoint((index + 1) % 3), t.getPoint((index + 2) % 3)]);\n    }\n\n    if (inScanArea(p, t.pointCCW(p), t.pointCW(p), op)) {\n        // Lets rotate shared edge one vertex CW\n        rotateTrianglePair(t, p, ot, op);\n        tcx.mapTriangleToNodes(t);\n        tcx.mapTriangleToNodes(ot);\n\n        // XXX: in the original C++ code for the next 2 lines, we are\n        // comparing point values (and not pointers). In this JavaScript\n        // code, we are comparing point references (pointers). This works\n        // because we can't have 2 different points with the same values.\n        // But to be really equivalent, we should use \"Point.equals\" here.\n        if (p === eq && op === ep) {\n            if (eq === tcx.edge_event.constrained_edge.q && ep === tcx.edge_event.constrained_edge.p) {\n                t.markConstrainedEdgeByPoints(ep, eq);\n                ot.markConstrainedEdgeByPoints(ep, eq);\n                legalize(tcx, t);\n                legalize(tcx, ot);\n            } else {\n                // XXX: I think one of the triangles should be legalized here?\n                /* jshint noempty:false */\n            }\n        } else {\n            var o = orient2d(eq, op, ep);\n            t = nextFlipTriangle(tcx, o, t, ot, p, op);\n            flipEdgeEvent(tcx, ep, eq, t, p);\n        }\n    } else {\n        var newP = nextFlipPoint(ep, eq, ot, op);\n        flipScanEdgeEvent(tcx, ep, eq, t, ot, newP);\n        edgeEventByPoints(tcx, ep, eq, t, p);\n    }\n}\n\n/**\n * After a flip we have two triangles and know that only one will still be\n * intersecting the edge. So decide which to contiune with and legalize the other\n *\n * @param {!SweepContext} tcx - SweepContext object\n * @param o - should be the result of an orient2d( eq, op, ep )\n * @param t - triangle 1\n * @param ot - triangle 2\n * @param p - a point shared by both triangles\n * @param op - another point shared by both triangles\n * @return returns the triangle still intersecting the edge\n */\nfunction nextFlipTriangle(tcx, o, t, ot, p, op) {\n    var edge_index;\n    if (o === Orientation.CCW) {\n        // ot is not crossing edge after flip\n        edge_index = ot.edgeIndex(p, op);\n        ot.delaunay_edge[edge_index] = true;\n        legalize(tcx, ot);\n        ot.clearDelaunayEdges();\n        return t;\n    }\n\n    // t is not crossing edge after flip\n    edge_index = t.edgeIndex(p, op);\n\n    t.delaunay_edge[edge_index] = true;\n    legalize(tcx, t);\n    t.clearDelaunayEdges();\n    return ot;\n}\n\n/**\n * When we need to traverse from one triangle to the next we need\n * the point in current triangle that is the opposite point to the next\n * triangle.\n */\nfunction nextFlipPoint(ep, eq, ot, op) {\n    var o2d = orient2d(eq, op, ep);\n    if (o2d === Orientation.CW) {\n        // Right\n        return ot.pointCCW(op);\n    } else if (o2d === Orientation.CCW) {\n        // Left\n        return ot.pointCW(op);\n    } else {\n        throw new PointError(\"poly2tri [Unsupported] nextFlipPoint: opposing point on constrained edge!\", [eq, op, ep]);\n    }\n}\n\n/**\n * Scan part of the FlipScan algorithm<br>\n * When a triangle pair isn't flippable we will scan for the next\n * point that is inside the flip triangle scan area. When found\n * we generate a new flipEdgeEvent\n *\n * @param {!SweepContext} tcx - SweepContext object\n * @param ep - last point on the edge we are traversing\n * @param eq - first point on the edge we are traversing\n * @param {!Triangle} flip_triangle - the current triangle sharing the point eq with edge\n * @param t\n * @param p\n */\nfunction flipScanEdgeEvent(tcx, ep, eq, flip_triangle, t, p) {\n    var ot = t.neighborAcross(p);\n    assert(ot, \"FLIP failed due to missing triangle\");\n\n    var op = ot.oppositePoint(t, p);\n\n    if (inScanArea(eq, flip_triangle.pointCCW(eq), flip_triangle.pointCW(eq), op)) {\n        // flip with new edge op.eq\n        flipEdgeEvent(tcx, eq, op, ot, op);\n    } else {\n        var newP = nextFlipPoint(ep, eq, ot, op);\n        flipScanEdgeEvent(tcx, ep, eq, flip_triangle, ot, newP);\n    }\n}\n\n\n// ----------------------------------------------------------------------Exports\n\nexports.triangulate = triangulate;\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n/* jshint maxcomplexity:6 */\n\n\"use strict\";\n\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\nvar PointError = require('./pointerror');\nvar Point = require('./point');\nvar Triangle = require('./triangle');\nvar sweep = require('./sweep');\nvar AdvancingFront = require('./advancingfront');\nvar Node = AdvancingFront.Node;\n\n\n// ------------------------------------------------------------------------utils\n\n/**\n * Initial triangle factor, seed triangle will extend 30% of\n * PointSet width to both left and right.\n * @private\n * @const\n */\nvar kAlpha = 0.3;\n\n\n// -------------------------------------------------------------------------Edge\n/**\n * Represents a simple polygon's edge\n * @constructor\n * @struct\n * @private\n * @param {Point} p1\n * @param {Point} p2\n * @throw {PointError} if p1 is same as p2\n */\nvar Edge = function(p1, p2) {\n    this.p = p1;\n    this.q = p2;\n\n    if (p1.y > p2.y) {\n        this.q = p1;\n        this.p = p2;\n    } else if (p1.y === p2.y) {\n        if (p1.x > p2.x) {\n            this.q = p1;\n            this.p = p2;\n        } else if (p1.x === p2.x) {\n            throw new PointError('poly2tri Invalid Edge constructor: repeated points!', [p1]);\n        }\n    }\n\n    if (!this.q._p2t_edge_list) {\n        this.q._p2t_edge_list = [];\n    }\n    this.q._p2t_edge_list.push(this);\n};\n\n\n// ------------------------------------------------------------------------Basin\n/**\n * @constructor\n * @struct\n * @private\n */\nvar Basin = function() {\n    /** @type {Node} */\n    this.left_node = null;\n    /** @type {Node} */\n    this.bottom_node = null;\n    /** @type {Node} */\n    this.right_node = null;\n    /** @type {number} */\n    this.width = 0.0;\n    /** @type {boolean} */\n    this.left_highest = false;\n};\n\nBasin.prototype.clear = function() {\n    this.left_node = null;\n    this.bottom_node = null;\n    this.right_node = null;\n    this.width = 0.0;\n    this.left_highest = false;\n};\n\n// --------------------------------------------------------------------EdgeEvent\n/**\n * @constructor\n * @struct\n * @private\n */\nvar EdgeEvent = function() {\n    /** @type {Edge} */\n    this.constrained_edge = null;\n    /** @type {boolean} */\n    this.right = false;\n};\n\n// ----------------------------------------------------SweepContext (public API)\n/**\n * SweepContext constructor option\n * @typedef {Object} SweepContextOptions\n * @property {boolean=} cloneArrays - if <code>true</code>, do a shallow copy of the Array parameters\n *                  (contour, holes). Points inside arrays are never copied.\n *                  Default is <code>false</code> : keep a reference to the array arguments,\n *                  who will be modified in place.\n */\n/**\n * Constructor for the triangulation context.\n * It accepts a simple polyline (with non repeating points), \n * which defines the constrained edges.\n *\n * @example\n *          var contour = [\n *              new poly2tri.Point(100, 100),\n *              new poly2tri.Point(100, 300),\n *              new poly2tri.Point(300, 300),\n *              new poly2tri.Point(300, 100)\n *          ];\n *          var swctx = new poly2tri.SweepContext(contour, {cloneArrays: true});\n * @example\n *          var contour = [{x:100, y:100}, {x:100, y:300}, {x:300, y:300}, {x:300, y:100}];\n *          var swctx = new poly2tri.SweepContext(contour, {cloneArrays: true});\n * @constructor\n * @public\n * @struct\n * @param {Array.<XY>} contour - array of point objects. The points can be either {@linkcode Point} instances,\n *          or any \"Point like\" custom class with <code>{x, y}</code> attributes.\n * @param {SweepContextOptions=} options - constructor options\n */\nvar SweepContext = function(contour, options) {\n    options = options || {};\n    this.triangles_ = [];\n    this.map_ = [];\n    this.points_ = (options.cloneArrays ? contour.slice(0) : contour);\n    this.edge_list = [];\n\n    // Bounding box of all points. Computed at the start of the triangulation, \n    // it is stored in case it is needed by the caller.\n    this.pmin_ = this.pmax_ = null;\n\n    /**\n     * Advancing front\n     * @private\n     * @type {AdvancingFront}\n     */\n    this.front_ = null;\n\n    /**\n     * head point used with advancing front\n     * @private\n     * @type {Point}\n     */\n    this.head_ = null;\n\n    /**\n     * tail point used with advancing front\n     * @private\n     * @type {Point}\n     */\n    this.tail_ = null;\n\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.af_head_ = null;\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.af_middle_ = null;\n    /**\n     * @private\n     * @type {Node}\n     */\n    this.af_tail_ = null;\n\n    this.basin = new Basin();\n    this.edge_event = new EdgeEvent();\n\n    this.initEdges(this.points_);\n};\n\n\n/**\n * Add a hole to the constraints\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var hole = [\n *          new poly2tri.Point(200, 200),\n *          new poly2tri.Point(200, 250),\n *          new poly2tri.Point(250, 250)\n *      ];\n *      swctx.addHole(hole);\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.addHole([{x:200, y:200}, {x:200, y:250}, {x:250, y:250}]);\n * @public\n * @param {Array.<XY>} polyline - array of \"Point like\" objects with {x,y}\n */\nSweepContext.prototype.addHole = function(polyline) {\n    this.initEdges(polyline);\n    var i, len = polyline.length;\n    for (i = 0; i < len; i++) {\n        this.points_.push(polyline[i]);\n    }\n    return this; // for chaining\n};\n\n/**\n * For backward compatibility\n * @function\n * @deprecated use {@linkcode SweepContext#addHole} instead\n */\nSweepContext.prototype.AddHole = SweepContext.prototype.addHole;\n\n\n/**\n * Add several holes to the constraints\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var holes = [\n *          [ new poly2tri.Point(200, 200), new poly2tri.Point(200, 250), new poly2tri.Point(250, 250) ],\n *          [ new poly2tri.Point(300, 300), new poly2tri.Point(300, 350), new poly2tri.Point(350, 350) ]\n *      ];\n *      swctx.addHoles(holes);\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var holes = [\n *          [{x:200, y:200}, {x:200, y:250}, {x:250, y:250}],\n *          [{x:300, y:300}, {x:300, y:350}, {x:350, y:350}]\n *      ];\n *      swctx.addHoles(holes);\n * @public\n * @param {Array.<Array.<XY>>} holes - array of array of \"Point like\" objects with {x,y}\n */\n// Method added in the JavaScript version (was not present in the c++ version)\nSweepContext.prototype.addHoles = function(holes) {\n    var i, len = holes.length;\n    for (i = 0; i < len; i++) {\n        this.initEdges(holes[i]);\n    }\n    this.points_ = this.points_.concat.apply(this.points_, holes);\n    return this; // for chaining\n};\n\n\n/**\n * Add a Steiner point to the constraints\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var point = new poly2tri.Point(150, 150);\n *      swctx.addPoint(point);\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.addPoint({x:150, y:150});\n * @public\n * @param {XY} point - any \"Point like\" object with {x,y}\n */\nSweepContext.prototype.addPoint = function(point) {\n    this.points_.push(point);\n    return this; // for chaining\n};\n\n/**\n * For backward compatibility\n * @function\n * @deprecated use {@linkcode SweepContext#addPoint} instead\n */\nSweepContext.prototype.AddPoint = SweepContext.prototype.addPoint;\n\n\n/**\n * Add several Steiner points to the constraints\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      var points = [\n *          new poly2tri.Point(150, 150),\n *          new poly2tri.Point(200, 250),\n *          new poly2tri.Point(250, 250)\n *      ];\n *      swctx.addPoints(points);\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.addPoints([{x:150, y:150}, {x:200, y:250}, {x:250, y:250}]);\n * @public\n * @param {Array.<XY>} points - array of \"Point like\" object with {x,y}\n */\n// Method added in the JavaScript version (was not present in the c++ version)\nSweepContext.prototype.addPoints = function(points) {\n    this.points_ = this.points_.concat(points);\n    return this; // for chaining\n};\n\n\n/**\n * Triangulate the polygon with holes and Steiner points.\n * Do this AFTER you've added the polyline, holes, and Steiner points\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.triangulate();\n *      var triangles = swctx.getTriangles();\n * @public\n */\n// Shortcut method for sweep.triangulate(SweepContext).\n// Method added in the JavaScript version (was not present in the c++ version)\nSweepContext.prototype.triangulate = function() {\n    sweep.triangulate(this);\n    return this; // for chaining\n};\n\n\n/**\n * Get the bounding box of the provided constraints (contour, holes and \n * Steinter points). Warning : these values are not available if the triangulation \n * has not been done yet.\n * @public\n * @returns {{min:Point,max:Point}} object with 'min' and 'max' Point\n */\n// Method added in the JavaScript version (was not present in the c++ version)\nSweepContext.prototype.getBoundingBox = function() {\n    return {min: this.pmin_, max: this.pmax_};\n};\n\n/**\n * Get result of triangulation.\n * The output triangles have vertices which are references\n * to the initial input points (not copies): any custom fields in the\n * initial points can be retrieved in the output triangles.\n * @example\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.triangulate();\n *      var triangles = swctx.getTriangles();\n * @example\n *      var contour = [{x:100, y:100, id:1}, {x:100, y:300, id:2}, {x:300, y:300, id:3}];\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.triangulate();\n *      var triangles = swctx.getTriangles();\n *      typeof triangles[0].getPoint(0).id\n *      // → \"number\"\n * @public\n * @returns {array<Triangle>}   array of triangles\n */\nSweepContext.prototype.getTriangles = function() {\n    return this.triangles_;\n};\n\n/**\n * For backward compatibility\n * @function\n * @deprecated use {@linkcode SweepContext#getTriangles} instead\n */\nSweepContext.prototype.GetTriangles = SweepContext.prototype.getTriangles;\n\n\n// ---------------------------------------------------SweepContext (private API)\n\n/** @private */\nSweepContext.prototype.front = function() {\n    return this.front_;\n};\n\n/** @private */\nSweepContext.prototype.pointCount = function() {\n    return this.points_.length;\n};\n\n/** @private */\nSweepContext.prototype.head = function() {\n    return this.head_;\n};\n\n/** @private */\nSweepContext.prototype.setHead = function(p1) {\n    this.head_ = p1;\n};\n\n/** @private */\nSweepContext.prototype.tail = function() {\n    return this.tail_;\n};\n\n/** @private */\nSweepContext.prototype.setTail = function(p1) {\n    this.tail_ = p1;\n};\n\n/** @private */\nSweepContext.prototype.getMap = function() {\n    return this.map_;\n};\n\n/** @private */\nSweepContext.prototype.initTriangulation = function() {\n    var xmax = this.points_[0].x;\n    var xmin = this.points_[0].x;\n    var ymax = this.points_[0].y;\n    var ymin = this.points_[0].y;\n\n    // Calculate bounds\n    var i, len = this.points_.length;\n    for (i = 1; i < len; i++) {\n        var p = this.points_[i];\n        /* jshint expr:true */\n        (p.x > xmax) && (xmax = p.x);\n        (p.x < xmin) && (xmin = p.x);\n        (p.y > ymax) && (ymax = p.y);\n        (p.y < ymin) && (ymin = p.y);\n    }\n    this.pmin_ = new Point(xmin, ymin);\n    this.pmax_ = new Point(xmax, ymax);\n\n    var dx = kAlpha * (xmax - xmin);\n    var dy = kAlpha * (ymax - ymin);\n    this.head_ = new Point(xmax + dx, ymin - dy);\n    this.tail_ = new Point(xmin - dx, ymin - dy);\n\n    // Sort points along y-axis\n    this.points_.sort(Point.compare);\n};\n\n/** @private */\nSweepContext.prototype.initEdges = function(polyline) {\n    var i, len = polyline.length;\n    for (i = 0; i < len; ++i) {\n        this.edge_list.push(new Edge(polyline[i], polyline[(i + 1) % len]));\n    }\n};\n\n/** @private */\nSweepContext.prototype.getPoint = function(index) {\n    return this.points_[index];\n};\n\n/** @private */\nSweepContext.prototype.addToMap = function(triangle) {\n    this.map_.push(triangle);\n};\n\n/** @private */\nSweepContext.prototype.locateNode = function(point) {\n    return this.front_.locateNode(point.x);\n};\n\n/** @private */\nSweepContext.prototype.createAdvancingFront = function() {\n    var head;\n    var middle;\n    var tail;\n    // Initial triangle\n    var triangle = new Triangle(this.points_[0], this.tail_, this.head_);\n\n    this.map_.push(triangle);\n\n    head = new Node(triangle.getPoint(1), triangle);\n    middle = new Node(triangle.getPoint(0), triangle);\n    tail = new Node(triangle.getPoint(2));\n\n    this.front_ = new AdvancingFront(head, tail);\n\n    head.next = middle;\n    middle.next = tail;\n    middle.prev = head;\n    tail.prev = middle;\n};\n\n/** @private */\nSweepContext.prototype.removeNode = function(node) {\n    // do nothing\n    /* jshint unused:false */\n};\n\n/** @private */\nSweepContext.prototype.mapTriangleToNodes = function(t) {\n    for (var i = 0; i < 3; ++i) {\n        if (!t.getNeighbor(i)) {\n            var n = this.front_.locatePoint(t.pointCW(t.getPoint(i)));\n            if (n) {\n                n.triangle = t;\n            }\n        }\n    }\n};\n\n/** @private */\nSweepContext.prototype.removeFromMap = function(triangle) {\n    var i, map = this.map_, len = map.length;\n    for (i = 0; i < len; i++) {\n        if (map[i] === triangle) {\n            map.splice(i, 1);\n            break;\n        }\n    }\n};\n\n/**\n * Do a depth first traversal to collect triangles\n * @private\n * @param {Triangle} triangle start\n */\nSweepContext.prototype.meshClean = function(triangle) {\n    // New implementation avoids recursive calls and use a loop instead.\n    // Cf. issues # 57, 65 and 69.\n    var triangles = [triangle], t, i;\n    /* jshint boss:true */\n    while (t = triangles.pop()) {\n        if (!t.isInterior()) {\n            t.setInterior(true);\n            this.triangles_.push(t);\n            for (i = 0; i < 3; i++) {\n                if (!t.constrained_edge[i]) {\n                    triangles.push(t.getNeighbor(i));\n                }\n            }\n        }\n    }\n};\n\n// ----------------------------------------------------------------------Exports\n\nmodule.exports = SweepContext;\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n *\n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n/* jshint maxcomplexity:10 */\n\n\"use strict\";\n\n\n/*\n * Note\n * ====\n * the structure of this JavaScript version of poly2tri intentionally follows\n * as closely as possible the structure of the reference C++ version, to make it \n * easier to keep the 2 versions in sync.\n */\n\nvar xy = require(\"./xy\");\n\n\n// ---------------------------------------------------------------------Triangle\n/**\n * Triangle class.<br>\n * Triangle-based data structures are known to have better performance than\n * quad-edge structures.\n * See: J. Shewchuk, \"Triangle: Engineering a 2D Quality Mesh Generator and\n * Delaunay Triangulator\", \"Triangulations in CGAL\"\n *\n * @constructor\n * @struct\n * @param {!XY} pa  point object with {x,y}\n * @param {!XY} pb  point object with {x,y}\n * @param {!XY} pc  point object with {x,y}\n */\nvar Triangle = function(a, b, c) {\n    /**\n     * Triangle points\n     * @private\n     * @type {Array.<XY>}\n     */\n    this.points_ = [a, b, c];\n\n    /**\n     * Neighbor list\n     * @private\n     * @type {Array.<Triangle>}\n     */\n    this.neighbors_ = [null, null, null];\n\n    /**\n     * Has this triangle been marked as an interior triangle?\n     * @private\n     * @type {boolean}\n     */\n    this.interior_ = false;\n\n    /**\n     * Flags to determine if an edge is a Constrained edge\n     * @private\n     * @type {Array.<boolean>}\n     */\n    this.constrained_edge = [false, false, false];\n\n    /**\n     * Flags to determine if an edge is a Delauney edge\n     * @private\n     * @type {Array.<boolean>}\n     */\n    this.delaunay_edge = [false, false, false];\n};\n\nvar p2s = xy.toString;\n/**\n * For pretty printing ex. <code>\"[(5;42)(10;20)(21;30)]\"</code>.\n * @public\n * @return {string}\n */\nTriangle.prototype.toString = function() {\n    return (\"[\" + p2s(this.points_[0]) + p2s(this.points_[1]) + p2s(this.points_[2]) + \"]\");\n};\n\n/**\n * Get one vertice of the triangle.\n * The output triangles of a triangulation have vertices which are references\n * to the initial input points (not copies): any custom fields in the\n * initial points can be retrieved in the output triangles.\n * @example\n *      var contour = [{x:100, y:100, id:1}, {x:100, y:300, id:2}, {x:300, y:300, id:3}];\n *      var swctx = new poly2tri.SweepContext(contour);\n *      swctx.triangulate();\n *      var triangles = swctx.getTriangles();\n *      typeof triangles[0].getPoint(0).id\n *      // → \"number\"\n * @param {number} index - vertice index: 0, 1 or 2\n * @public\n * @returns {XY}\n */\nTriangle.prototype.getPoint = function(index) {\n    return this.points_[index];\n};\n\n/**\n * For backward compatibility\n * @function\n * @deprecated use {@linkcode Triangle#getPoint} instead\n */\nTriangle.prototype.GetPoint = Triangle.prototype.getPoint;\n\n/**\n * Get all 3 vertices of the triangle as an array\n * @public\n * @return {Array.<XY>}\n */\n// Method added in the JavaScript version (was not present in the c++ version)\nTriangle.prototype.getPoints = function() {\n    return this.points_;\n};\n\n/**\n * @private\n * @param {number} index\n * @returns {?Triangle}\n */\nTriangle.prototype.getNeighbor = function(index) {\n    return this.neighbors_[index];\n};\n\n/**\n * Test if this Triangle contains the Point object given as parameter as one of its vertices.\n * Only point references are compared, not values.\n * @public\n * @param {XY} point - point object with {x,y}\n * @return {boolean} <code>True</code> if the Point object is of the Triangle's vertices,\n *         <code>false</code> otherwise.\n */\nTriangle.prototype.containsPoint = function(point) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    return (point === points[0] || point === points[1] || point === points[2]);\n};\n\n/**\n * Test if this Triangle contains the Edge object given as parameter as its\n * bounding edges. Only point references are compared, not values.\n * @private\n * @param {Edge} edge\n * @return {boolean} <code>True</code> if the Edge object is of the Triangle's bounding\n *         edges, <code>false</code> otherwise.\n */\nTriangle.prototype.containsEdge = function(edge) {\n    return this.containsPoint(edge.p) && this.containsPoint(edge.q);\n};\n\n/**\n * Test if this Triangle contains the two Point objects given as parameters among its vertices.\n * Only point references are compared, not values.\n * @param {XY} p1 - point object with {x,y}\n * @param {XY} p2 - point object with {x,y}\n * @return {boolean}\n */\nTriangle.prototype.containsPoints = function(p1, p2) {\n    return this.containsPoint(p1) && this.containsPoint(p2);\n};\n\n/**\n * Has this triangle been marked as an interior triangle?\n * @returns {boolean}\n */\nTriangle.prototype.isInterior = function() {\n    return this.interior_;\n};\n\n/**\n * Mark this triangle as an interior triangle\n * @private\n * @param {boolean} interior\n * @returns {Triangle} this\n */\nTriangle.prototype.setInterior = function(interior) {\n    this.interior_ = interior;\n    return this;\n};\n\n/**\n * Update neighbor pointers.\n * @private\n * @param {XY} p1 - point object with {x,y}\n * @param {XY} p2 - point object with {x,y}\n * @param {Triangle} t Triangle object.\n * @throws {Error} if can't find objects\n */\nTriangle.prototype.markNeighborPointers = function(p1, p2, t) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if ((p1 === points[2] && p2 === points[1]) || (p1 === points[1] && p2 === points[2])) {\n        this.neighbors_[0] = t;\n    } else if ((p1 === points[0] && p2 === points[2]) || (p1 === points[2] && p2 === points[0])) {\n        this.neighbors_[1] = t;\n    } else if ((p1 === points[0] && p2 === points[1]) || (p1 === points[1] && p2 === points[0])) {\n        this.neighbors_[2] = t;\n    } else {\n        throw new Error('poly2tri Invalid Triangle.markNeighborPointers() call');\n    }\n};\n\n/**\n * Exhaustive search to update neighbor pointers\n * @private\n * @param {!Triangle} t\n */\nTriangle.prototype.markNeighbor = function(t) {\n    var points = this.points_;\n    if (t.containsPoints(points[1], points[2])) {\n        this.neighbors_[0] = t;\n        t.markNeighborPointers(points[1], points[2], this);\n    } else if (t.containsPoints(points[0], points[2])) {\n        this.neighbors_[1] = t;\n        t.markNeighborPointers(points[0], points[2], this);\n    } else if (t.containsPoints(points[0], points[1])) {\n        this.neighbors_[2] = t;\n        t.markNeighborPointers(points[0], points[1], this);\n    }\n};\n\n\nTriangle.prototype.clearNeighbors = function() {\n    this.neighbors_[0] = null;\n    this.neighbors_[1] = null;\n    this.neighbors_[2] = null;\n};\n\nTriangle.prototype.clearDelaunayEdges = function() {\n    this.delaunay_edge[0] = false;\n    this.delaunay_edge[1] = false;\n    this.delaunay_edge[2] = false;\n};\n\n/**\n * Returns the point clockwise to the given point.\n * @private\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.pointCW = function(p) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (p === points[0]) {\n        return points[2];\n    } else if (p === points[1]) {\n        return points[0];\n    } else if (p === points[2]) {\n        return points[1];\n    } else {\n        return null;\n    }\n};\n\n/**\n * Returns the point counter-clockwise to the given point.\n * @private\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.pointCCW = function(p) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (p === points[0]) {\n        return points[1];\n    } else if (p === points[1]) {\n        return points[2];\n    } else if (p === points[2]) {\n        return points[0];\n    } else {\n        return null;\n    }\n};\n\n/**\n * Returns the neighbor clockwise to given point.\n * @private\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.neighborCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.neighbors_[1];\n    } else if (p === this.points_[1]) {\n        return this.neighbors_[2];\n    } else {\n        return this.neighbors_[0];\n    }\n};\n\n/**\n * Returns the neighbor counter-clockwise to given point.\n * @private\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.neighborCCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.neighbors_[2];\n    } else if (p === this.points_[1]) {\n        return this.neighbors_[0];\n    } else {\n        return this.neighbors_[1];\n    }\n};\n\nTriangle.prototype.getConstrainedEdgeCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.constrained_edge[1];\n    } else if (p === this.points_[1]) {\n        return this.constrained_edge[2];\n    } else {\n        return this.constrained_edge[0];\n    }\n};\n\nTriangle.prototype.getConstrainedEdgeCCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.constrained_edge[2];\n    } else if (p === this.points_[1]) {\n        return this.constrained_edge[0];\n    } else {\n        return this.constrained_edge[1];\n    }\n};\n\n// Additional check from Java version (see issue #88)\nTriangle.prototype.getConstrainedEdgeAcross = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.constrained_edge[0];\n    } else if (p === this.points_[1]) {\n        return this.constrained_edge[1];\n    } else {\n        return this.constrained_edge[2];\n    }\n};\n\nTriangle.prototype.setConstrainedEdgeCW = function(p, ce) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        this.constrained_edge[1] = ce;\n    } else if (p === this.points_[1]) {\n        this.constrained_edge[2] = ce;\n    } else {\n        this.constrained_edge[0] = ce;\n    }\n};\n\nTriangle.prototype.setConstrainedEdgeCCW = function(p, ce) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        this.constrained_edge[2] = ce;\n    } else if (p === this.points_[1]) {\n        this.constrained_edge[0] = ce;\n    } else {\n        this.constrained_edge[1] = ce;\n    }\n};\n\nTriangle.prototype.getDelaunayEdgeCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.delaunay_edge[1];\n    } else if (p === this.points_[1]) {\n        return this.delaunay_edge[2];\n    } else {\n        return this.delaunay_edge[0];\n    }\n};\n\nTriangle.prototype.getDelaunayEdgeCCW = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.delaunay_edge[2];\n    } else if (p === this.points_[1]) {\n        return this.delaunay_edge[0];\n    } else {\n        return this.delaunay_edge[1];\n    }\n};\n\nTriangle.prototype.setDelaunayEdgeCW = function(p, e) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        this.delaunay_edge[1] = e;\n    } else if (p === this.points_[1]) {\n        this.delaunay_edge[2] = e;\n    } else {\n        this.delaunay_edge[0] = e;\n    }\n};\n\nTriangle.prototype.setDelaunayEdgeCCW = function(p, e) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        this.delaunay_edge[2] = e;\n    } else if (p === this.points_[1]) {\n        this.delaunay_edge[0] = e;\n    } else {\n        this.delaunay_edge[1] = e;\n    }\n};\n\n/**\n * The neighbor across to given point.\n * @private\n * @param {XY} p - point object with {x,y}\n * @returns {Triangle}\n */\nTriangle.prototype.neighborAcross = function(p) {\n    // Here we are comparing point references, not values\n    if (p === this.points_[0]) {\n        return this.neighbors_[0];\n    } else if (p === this.points_[1]) {\n        return this.neighbors_[1];\n    } else {\n        return this.neighbors_[2];\n    }\n};\n\n/**\n * @private\n * @param {!Triangle} t Triangle object.\n * @param {XY} p - point object with {x,y}\n */\nTriangle.prototype.oppositePoint = function(t, p) {\n    var cw = t.pointCW(p);\n    return this.pointCW(cw);\n};\n\n/**\n * Legalize triangle by rotating clockwise around oPoint\n * @private\n * @param {XY} opoint - point object with {x,y}\n * @param {XY} npoint - point object with {x,y}\n * @throws {Error} if oPoint can not be found\n */\nTriangle.prototype.legalize = function(opoint, npoint) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (opoint === points[0]) {\n        points[1] = points[0];\n        points[0] = points[2];\n        points[2] = npoint;\n    } else if (opoint === points[1]) {\n        points[2] = points[1];\n        points[1] = points[0];\n        points[0] = npoint;\n    } else if (opoint === points[2]) {\n        points[0] = points[2];\n        points[2] = points[1];\n        points[1] = npoint;\n    } else {\n        throw new Error('poly2tri Invalid Triangle.legalize() call');\n    }\n};\n\n/**\n * Returns the index of a point in the triangle. \n * The point *must* be a reference to one of the triangle's vertices.\n * @private\n * @param {XY} p - point object with {x,y}\n * @returns {number} index 0, 1 or 2\n * @throws {Error} if p can not be found\n */\nTriangle.prototype.index = function(p) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (p === points[0]) {\n        return 0;\n    } else if (p === points[1]) {\n        return 1;\n    } else if (p === points[2]) {\n        return 2;\n    } else {\n        throw new Error('poly2tri Invalid Triangle.index() call');\n    }\n};\n\n/**\n * @private\n * @param {XY} p1 - point object with {x,y}\n * @param {XY} p2 - point object with {x,y}\n * @return {number} index 0, 1 or 2, or -1 if errror\n */\nTriangle.prototype.edgeIndex = function(p1, p2) {\n    var points = this.points_;\n    // Here we are comparing point references, not values\n    if (p1 === points[0]) {\n        if (p2 === points[1]) {\n            return 2;\n        } else if (p2 === points[2]) {\n            return 1;\n        }\n    } else if (p1 === points[1]) {\n        if (p2 === points[2]) {\n            return 0;\n        } else if (p2 === points[0]) {\n            return 2;\n        }\n    } else if (p1 === points[2]) {\n        if (p2 === points[0]) {\n            return 1;\n        } else if (p2 === points[1]) {\n            return 0;\n        }\n    }\n    return -1;\n};\n\n/**\n * Mark an edge of this triangle as constrained.\n * @private\n * @param {number} index - edge index\n */\nTriangle.prototype.markConstrainedEdgeByIndex = function(index) {\n    this.constrained_edge[index] = true;\n};\n/**\n * Mark an edge of this triangle as constrained.\n * @private\n * @param {Edge} edge instance\n */\nTriangle.prototype.markConstrainedEdgeByEdge = function(edge) {\n    this.markConstrainedEdgeByPoints(edge.p, edge.q);\n};\n/**\n * Mark an edge of this triangle as constrained.\n * This method takes two Point instances defining the edge of the triangle.\n * @private\n * @param {XY} p - point object with {x,y}\n * @param {XY} q - point object with {x,y}\n */\nTriangle.prototype.markConstrainedEdgeByPoints = function(p, q) {\n    var points = this.points_;\n    // Here we are comparing point references, not values        \n    if ((q === points[0] && p === points[1]) || (q === points[1] && p === points[0])) {\n        this.constrained_edge[2] = true;\n    } else if ((q === points[0] && p === points[2]) || (q === points[2] && p === points[0])) {\n        this.constrained_edge[1] = true;\n    } else if ((q === points[1] && p === points[2]) || (q === points[2] && p === points[1])) {\n        this.constrained_edge[0] = true;\n    }\n};\n\n\n// ---------------------------------------------------------Exports (public API)\n\nmodule.exports = Triangle;\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n/**\n * Precision to detect repeated or collinear points\n * @private\n * @const {number}\n * @default\n */\nvar EPSILON = 1e-12;\nexports.EPSILON = EPSILON;\n\n/**\n * @private\n * @enum {number}\n * @readonly\n */\nvar Orientation = {\n    \"CW\": 1,\n    \"CCW\": -1,\n    \"COLLINEAR\": 0\n};\nexports.Orientation = Orientation;\n\n\n/**\n * Formula to calculate signed area<br>\n * Positive if CCW<br>\n * Negative if CW<br>\n * 0 if collinear<br>\n * <pre>\n * A[P1,P2,P3]  =  (x1*y2 - y1*x2) + (x2*y3 - y2*x3) + (x3*y1 - y3*x1)\n *              =  (x1-x3)*(y2-y3) - (y1-y3)*(x2-x3)\n * </pre>\n *\n * @private\n * @param {!XY} pa  point object with {x,y}\n * @param {!XY} pb  point object with {x,y}\n * @param {!XY} pc  point object with {x,y}\n * @return {Orientation}\n */\nfunction orient2d(pa, pb, pc) {\n    var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n    var detright = (pa.y - pc.y) * (pb.x - pc.x);\n    var val = detleft - detright;\n    if (val > -(EPSILON) && val < (EPSILON)) {\n        return Orientation.COLLINEAR;\n    } else if (val > 0) {\n        return Orientation.CCW;\n    } else {\n        return Orientation.CW;\n    }\n}\nexports.orient2d = orient2d;\n\n\n/**\n *\n * @private\n * @param {!XY} pa  point object with {x,y}\n * @param {!XY} pb  point object with {x,y}\n * @param {!XY} pc  point object with {x,y}\n * @param {!XY} pd  point object with {x,y}\n * @return {boolean}\n */\nfunction inScanArea(pa, pb, pc, pd) {\n    var oadb = (pa.x - pb.x) * (pd.y - pb.y) - (pd.x - pb.x) * (pa.y - pb.y);\n    if (oadb >= -EPSILON) {\n        return false;\n    }\n\n    var oadc = (pa.x - pc.x) * (pd.y - pc.y) - (pd.x - pc.x) * (pa.y - pc.y);\n    if (oadc <= EPSILON) {\n        return false;\n    }\n    return true;\n}\nexports.inScanArea = inScanArea;\n\n\n/**\n * Check if the angle between (pa,pb) and (pa,pc) is obtuse i.e. (angle > π/2 || angle < -π/2)\n *\n * @private\n * @param {!XY} pa  point object with {x,y}\n * @param {!XY} pb  point object with {x,y}\n * @param {!XY} pc  point object with {x,y}\n * @return {boolean} true if angle is obtuse\n */\nfunction isAngleObtuse(pa, pb, pc) {\n    var ax = pb.x - pa.x;\n    var ay = pb.y - pa.y;\n    var bx = pc.x - pa.x;\n    var by = pc.y - pa.y;\n    return (ax * bx + ay * by) < 0;\n}\nexports.isAngleObtuse = isAngleObtuse;\n\n","/*\n * Poly2Tri Copyright (c) 2009-2014, Poly2Tri Contributors\n * http://code.google.com/p/poly2tri/\n * \n * poly2tri.js (JavaScript port) (c) 2009-2014, Poly2Tri Contributors\n * https://github.com/r3mi/poly2tri.js\n * \n * All rights reserved.\n * \n * Distributed under the 3-clause BSD License, see LICENSE.txt\n */\n\n\"use strict\";\n\n/**\n * The following functions operate on \"Point\" or any \"Point like\" object with {x,y},\n * as defined by the {@link XY} type\n * ([duck typing]{@link http://en.wikipedia.org/wiki/Duck_typing}).\n * @module\n * @private\n */\n\n/**\n * poly2tri.js supports using custom point class instead of {@linkcode Point}.\n * Any \"Point like\" object with <code>{x, y}</code> attributes is supported\n * to initialize the SweepContext polylines and points\n * ([duck typing]{@link http://en.wikipedia.org/wiki/Duck_typing}).\n *\n * poly2tri.js might add extra fields to the point objects when computing the\n * triangulation : they are prefixed with <code>_p2t_</code> to avoid collisions\n * with fields in the custom class.\n *\n * @example\n *      var contour = [{x:100, y:100}, {x:100, y:300}, {x:300, y:300}, {x:300, y:100}];\n *      var swctx = new poly2tri.SweepContext(contour);\n *\n * @typedef {Object} XY\n * @property {number} x - x coordinate\n * @property {number} y - y coordinate\n */\n\n\n/**\n * Point pretty printing : prints x and y coordinates.\n * @example\n *      xy.toStringBase({x:5, y:42})\n *      // → \"(5;42)\"\n * @protected\n * @param {!XY} p - point object with {x,y}\n * @returns {string} <code>\"(x;y)\"</code>\n */\nfunction toStringBase(p) {\n    return (\"(\" + p.x + \";\" + p.y + \")\");\n}\n\n/**\n * Point pretty printing. Delegates to the point's custom \"toString()\" method if exists,\n * else simply prints x and y coordinates.\n * @example\n *      xy.toString({x:5, y:42})\n *      // → \"(5;42)\"\n * @example\n *      xy.toString({x:5,y:42,toString:function() {return this.x+\":\"+this.y;}})\n *      // → \"5:42\"\n * @param {!XY} p - point object with {x,y}\n * @returns {string} <code>\"(x;y)\"</code>\n */\nfunction toString(p) {\n    // Try a custom toString first, and fallback to own implementation if none\n    var s = p.toString();\n    return (s === '[object Object]' ? toStringBase(p) : s);\n}\n\n\n/**\n * Compare two points component-wise. Ordered by y axis first, then x axis.\n * @param {!XY} a - point object with {x,y}\n * @param {!XY} b - point object with {x,y}\n * @return {number} <code>&lt; 0</code> if <code>a &lt; b</code>,\n *         <code>&gt; 0</code> if <code>a &gt; b</code>, \n *         <code>0</code> otherwise.\n */\nfunction compare(a, b) {\n    if (a.y === b.y) {\n        return a.x - b.x;\n    } else {\n        return a.y - b.y;\n    }\n}\n\n/**\n * Test two Point objects for equality.\n * @param {!XY} a - point object with {x,y}\n * @param {!XY} b - point object with {x,y}\n * @return {boolean} <code>True</code> if <code>a == b</code>, <code>false</code> otherwise.\n */\nfunction equals(a, b) {\n    return a.x === b.x && a.y === b.y;\n}\n\n\nmodule.exports = {\n    toString: toString,\n    toStringBase: toStringBase,\n    compare: compare,\n    equals: equals\n};\n","import ClipperLib from \"clipper-lib-fpoint\";\nimport Earcut from \"earcut\";\nimport { TesselateQuad, TesselateCubic, DefaultTessParams } from \"./bezier\";\n\n//Helper for converting complex HTML Canvas paths to simple polylines / polygons\n\n\n const  MOVETO  = 0,\n        LINETO  = 1,\n        ARC     = 2,\n        ARCTO   = 3,\n        QUADTO  = 4,\n        CUBICTO = 5,\n        ELLIPSE = 6,\n        CLOSE   = 7;\n\n\nlet _v2 = new THREE.Vector2();\nlet _tmpSize = new THREE.Vector2();\nlet _tmpBox = new THREE.Box2();\n\n// Tmp objct for Ellipse Arcs. We need delayed initialization,\n// because Autodesk.Extensions.CompGeom might not be available yet at compile time.\nlet _tmpArc = null;\nlet getTmpArc = () => {\n    _tmpArc = _tmpArc || new Autodesk.Extensions.CompGeom.EllipseArc();\n    return _tmpArc;\n};\n\nexport function Path2D(precisionTolerance) {\n    this.segTypes = [];\n    this.segData = [];\n    this.hasCurves = false;\n    this.bbox = new THREE.Box2();\n    this.precisionTolerance = precisionTolerance;\n}\n\n/** @static @property {boolean} */\nPath2D.FORCE_MITER_LINES_FOR_TESTING = false;\n\n// Optional: Use custom tesselation params for bezier arcs. Undefined sets to default.\nPath2D.prototype.setTessParams = function(tessParams) {\n    this.tessParams = tessParams;\n};\n\nPath2D.prototype.isClosedPath = function() {\n    return (this.segTypes.length && this.segTypes[this.segTypes.length - 1] === CLOSE);\n};\n\nPath2D.prototype.isPoint = function() {\n    return (this.segTypes.length==2 && this.segTypes[0] === MOVETO && this.segTypes[1] === LINETO &&\n            this.segData[0]==this.segData[2] && this.segData[1]==this.segData[3]);\n};\n\n\n\nPath2D.prototype.closePath = function() {\n    if (this.isClosedPath())\n        return;\n    this.segTypes.push(CLOSE);\n};\n\n\nPath2D.prototype.moveTo = function(x, y) {\n    this.segTypes.push(MOVETO);\n    this.segData.push(x, y);\n\n    this.bbox.expandByPoint(_v2.set(x,y));\n};\n\nPath2D.prototype.lineTo = function(x, y) {\n    this.segTypes.push(LINETO);\n    this.segData.push(x, y);\n\n    this.bbox.expandByPoint(_v2.set(x,y));\n};\n\nPath2D.prototype.arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n    this.hasCurves = true;\n    this.segTypes.push(ARC);\n    this.segData.push(x, y, radius, startAngle, endAngle, anticlockwise);\n\n    this.bbox.expandByPoint(_v2.set(x,y)); //TODO: all corners\n};\n\nPath2D.prototype.arcTo = function(x1, y1, x2, y2, radius) {\n    this.hasCurves = true;\n    this.segTypes.push(ARCTO);\n    this.segData.push(x1, y1, x2, y2, radius);\n\n    this.bbox.expandByPoint(_v2.set(x1,y1));\n    this.bbox.expandByPoint(_v2.set(x2,y2));\n};\n\nPath2D.prototype.quadraticCurveTo = function(cp1x, cp1y, x, y) {\n    this.hasCurves = true;\n    this.segTypes.push(QUADTO);\n    this.segData.push(cp1x, cp1y, x, y);\n\n    this.bbox.expandByPoint(_v2.set(cp1x,cp1y));\n    this.bbox.expandByPoint(_v2.set(x,y));\n};\n\nPath2D.prototype.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n    this.hasCurves = true;\n    this.segTypes.push(CUBICTO);\n    this.segData.push(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.bbox.expandByPoint(_v2.set(cp1x,cp1y));\n    this.bbox.expandByPoint(_v2.set(cp2x,cp2y));\n    this.bbox.expandByPoint(_v2.set(x,y));\n};\n\n// for params, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/ellipse\nPath2D.prototype.ellipse = function(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw) {\n\n    this.hasCurves = true;\n    this.segTypes.push(ELLIPSE);\n    this.segData.push(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw);\n\n    // consider arc in bbox\n    const arcBox = getTmpArc().set(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw).computeBBox(_tmpBox);\n    this.bbox.union(arcBox);\n};\n\nPath2D.prototype.flatten = function(forceCloseContours) {\n\n    var ret = new Path2D(this.precisionTolerance);\n\n    var dataOffset = 0;\n    var lastX = 0;\n    var lastY = 0;\n    var contourStartX = lastX;\n    var contourStartY = lastY;\n\n    var segTypes = this.segTypes;\n    var segData = this.segData;\n\n    let sz = this.bbox.getSize(_tmpSize).length();\n\n    for (var i=0; i<segTypes.length; i++) {\n\n        var st = segTypes[i];\n\n        switch(st) {\n\n            case MOVETO: {\n                    if (forceCloseContours) {\n                        if (lastX !== contourStartX || lastY !== contourStartY) {\n                            ret.closePath();\n                        }\n                    }\n\n                    lastX = segData[dataOffset++];\n                    lastY = segData[dataOffset++];\n                    contourStartX = lastX;\n                    contourStartY = lastY;\n                    ret.moveTo(lastX, lastY);\n                }\n                break;\n            case CLOSE:\n                ret.closePath();\n                break;\n            case LINETO: {\n                    var x = segData[dataOffset++];\n                    var y = segData[dataOffset++];\n\n                    if (x !== lastX || y !== lastY) {\n                        ret.lineTo(x, y);\n\n                        lastX = x;\n                        lastY = y;\n                    }\n                }\n                break;\n            case QUADTO: {\n                    const cp1x = segData[dataOffset++], cp1y = segData[dataOffset++],\n                        x = segData[dataOffset++], y = segData[dataOffset++];\n                    TesselateQuad(ret, lastX, lastY, cp1x, cp1y, x, y, sz, this.tessParams, !!this.isFontChar);\n\n                    lastX = x;\n                    lastY = y;\n                }\n                break;\n            case CUBICTO: {\n                    const cp1x = segData[dataOffset++], cp1y = segData[dataOffset++],\n                        cp2x = segData[dataOffset++], cp2y = segData[dataOffset++],\n                        x = segData[dataOffset++], y = segData[dataOffset++];\n                    TesselateCubic(ret, lastX, lastY, cp1x, cp1y, cp2x, cp2y, x, y, sz, this.tessParams, !!this.isFontChar);\n                    lastX = x;\n                    lastY = y;\n                }\n                break;\n            case ARC:\n                console.warn(\"not implemented: arc\");\n                dataOffset += 6;\n                break;\n            case ARCTO:\n                console.warn(\"not implemented: arcto\");\n                dataOffset += 4;\n                break;\n            case ELLIPSE: {\n                    // read ellipse params\n                    var cx = segData[dataOffset++];\n                    var cy = segData[dataOffset++];\n                    var rx = segData[dataOffset++];\n                    var ry = segData[dataOffset++];\n                    var rotation   = segData[dataOffset++];\n                    var startAngle = segData[dataOffset++];\n                    var endAngle   = segData[dataOffset++];\n                    var ccw        = segData[dataOffset++];\n\n                    // determine tesselation params\n                    const tessParams       = this.tessParams || DefaultTessParams;\n                    const maxSegments      = tessParams.numIterations;\n                    const minSegmentLength = tessParams.minSegLenFraction * sz;\n\n                    // tesselate arc\n                    const arc = getTmpArc().set(cx, cy, rx, ry, rotation, startAngle, endAngle, ccw);\n                    arc.tesselate(ret, maxSegments, minSegmentLength);\n\n                    // Update lastX/lastY\n                    // The last lineTo() appends x and y of the end position to ret.segData.\n                    // So, we can always extract it from there.\n                    lastX = ret.segData[ret.segData.length-2];\n                    lastY = ret.segData[ret.segData.length-1];\n                }\n                break;\n        }\n    }\n\n    if (forceCloseContours) {\n        if (lastX !== contourStartX || lastY !== contourStartY) {\n            ret.closePath();\n        }\n    }\n\n    return ret;\n};\n\nPath2D.prototype.applyTransform = function(loader, xform) {\n\n    for (let i=0; i<this.segData.length; i+=2) {\n\n        let x = this.segData[i];\n        let y = this.segData[i+1];\n\n        this.segData[i] = loader.tx(x, y, xform);\n        this.segData[i+1] = loader.ty(x, y, xform);\n    }\n};\n\nPath2D.prototype.stroke = function (loader, lineWidth, color, dbId, layerId, clipPathIn, applyTransform, lineStyle, lineCap) {\n    var needClipping = clipPathIn != null;\n    let subjFlatted = this;\n    if (applyTransform || this.hasCurves) {\n        subjFlatted = this.flatten(false);\n    }\n\n    var self = this;\n    // check whether we can do simple path\n    if (needClipping) {\n        var subPaths = [];\n        var subPath;\n        var segIndex = 0;\n        for (var i = 0; i < subjFlatted.segTypes.length; i++) {\n            if (subjFlatted.segTypes[i] == MOVETO) {\n                subPath = new Path2D(this.precisionTolerance);\n                subPaths.push(subPath);\n                subPath.moveTo(subjFlatted.segData[segIndex++], subjFlatted.segData[segIndex++]);\n            } else if (subjFlatted.segTypes[i] == LINETO) {\n                subPath?.lineTo(subjFlatted.segData[segIndex++], subjFlatted.segData[segIndex++]);\n            } else if (subjFlatted.segTypes[i] == CLOSE) {\n                subPath?.closePath();\n            }\n        }\n\n        // workaround for endless loops in ClipperLib.Clipper.AddPath()\n        // Some input paths with start==end that are marked as open will run into an endless loop when setting up internal data structures.\n        // This is a known issue without a fix. The workaround will simply make the end points non-identical.\n        // BLMV-8304, BLMV-8326: some degenerate input will cause ClipperLib to add points from the clip poly for no apparent reason.\n        //   Fix by ensuring there are no duplicate points. For simplicity, I slightly shift all coordinates by a tiny amount.\n        //   This might lead self-intersections. Not sure if this is a problem.\n        const fixInput = function(path) {\n            // coordinates here are given in inches, Math.pow(2, -32) is a small enough value to not have any visible impact\n            const tinyShift = Math.pow(2, -32);\n            for (let i=1; i<path.length; i++) {\n                // perturb each coordinate by moving it towards the previous coordinate\n                // this should reduce the chance of self-intersections\n                const dx = path[i].X - path[i-1].X;\n                const dy = path[i].Y - path[i-1].Y;\n                if (Math.abs(dx) > Math.abs(dy)) {\n                    if (dx > 0) {\n                        path[i].X -= i * tinyShift;\n                    } else {\n                        path[i].X += i * tinyShift;\n                    }\n                } else {\n                    if (dy > 0) {\n                        path[i].Y -= i * tinyShift;\n                    } else {\n                        path[i].Y += i * tinyShift;\n                    }\n                }\n            }\n        };\n\n        var clipFlatted = clipPathIn.flattened || clipPathIn.flatten(true);\n        var clips = clipFlatted.toClipperPath(loader, false);\n        subPaths.map((subPath) => {\n            // still need to do a check for each subPath\n            var subPreResult = self.preCheckForClipping(loader, clipFlatted, subPath, applyTransform, true);\n            if (subPreResult.needCancel) {\n                return;\n            } else if (subPreResult.needClipping && !subPath.isPoint()) {  // points (i.e., lines of length 0) are not handled well by Clipper -> check separately\n                var myPath = subPath.toClipperPath(loader, applyTransform)[0];\n                if (!myPath) {\n                    return;\n                }\n\n                if (ClipperLib.Clipper.Orientation(myPath)) {\n                    // LMV-5983\n                    // turn closed paths to clockwise orientation\n                    // to workaround a problem where anticlockwise self-intersecting paths ended up with\n                    // a different order of vertices after clipping\n                    myPath.reverse();\n                }\n\n                var solution = new ClipperLib.PolyTree();\n                var cpr = new ClipperLib.Clipper();\n                // always treat myPath as open in order to get correct stroke clipping. Prevent endless loop in AddPath.\n                fixInput(myPath);\n                cpr.AddPath(myPath, ClipperLib.PolyType.ptSubject, false);\n                cpr.AddPaths(clips, ClipperLib.PolyType.ptClip, true);\n\n                cpr.Execute(ClipperLib.ClipType.ctIntersection, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n                strokeClipperSolution(solution);\n            } else if (!subPreResult.needClipping ||\n                      (clips.length==1 && ClipperLib.Clipper.PointInPolygon({ X: subPath.segData[0], Y: subPath.segData[1] }, clips[0])))  // if needClipping is true, subPath must be a point. So check if it's inside the clip polygon.\n            {\n                this.strokeFlattedPath(loader, subPath, lineWidth, color, dbId, layerId, applyTransform, lineStyle, lineCap);\n            }\n        });\n    } else {\n        // just draw all the segments\n        this.strokeFlattedPath(loader, subjFlatted, lineWidth, color, dbId, layerId, applyTransform, lineStyle, lineCap);\n    }\n\n    function strokeClipperSolution(solution) {\n        var node = solution.GetFirst();\n        while (node) {\n            self.strokeClipperContour(loader, node.Contour(), node.IsOpen, color, lineWidth, dbId, layerId, loader.currentVpId, lineStyle, false, lineCap);\n            node = node.GetNext();\n        }\n    }\n};\n\nPath2D.prototype.strokeFlattedPath = function (loader, flatted, lineWidth, color, dbId, layerId, applyTransform, lineStyle, lineCap) {\n    let segData = flatted.segData;\n    let segTypes = flatted.segTypes;\n\n    let xform;\n    if (applyTransform) {\n        xform = loader.getCurrentTransform();\n    }\n\n    // our shader only supports \"butt\" and \"round\" as line ends. Use round for \"square\" as well.\n    const lineEndButtCap = lineCap === \"butt\";\n\n    var dataOffset = 0;\n    var lastLastX = 0;\n    var lastLastY = 0;\n    var lastX = 0;\n    var lastY = 0;\n    var contourStartX = 0;\n    var contourStartY = 0;\n\n    for (var i = 0; i < segTypes.length; i++) {\n\n        var st = segTypes[i];\n\n        switch (st) {\n\n            case MOVETO: {\n                let tmpx = segData[dataOffset++];\n                let tmpy = segData[dataOffset++];\n\n                if (applyTransform) {\n                    contourStartX = loader.tx(tmpx, tmpy, xform);\n                    contourStartY = loader.ty(tmpx, tmpy, xform);\n                } else {\n                    contourStartX = tmpx;\n                    contourStartY = tmpy;\n                }\n\n                lastX = lastLastX = contourStartX;\n                lastY = lastLastY = contourStartY;\n            }\n                break;\n            case CLOSE:\n            case LINETO: {\n                let x, y;\n                if (st === CLOSE) {\n                    x = contourStartX;\n                    y = contourStartY;\n                } else {\n                    let tmpx = segData[dataOffset++];\n                    let tmpy = segData[dataOffset++];\n\n                    if (applyTransform) {\n                        x = loader.tx(tmpx, tmpy, xform);\n                        y = loader.ty(tmpx, tmpy, xform);\n                    } else {\n                        x = tmpx;\n                        y = tmpy;\n                    }\n                }\n\n                // LMV-5336 - Paths that contain a moveTo and a lineTo at the same X, Y positions were not being drawn.\n                // Add the segment when the previous operation was moveTo.\n                const isPrevMoveTo = i > 0 && segTypes[i - 1] === MOVETO;\n                if (x !== lastX || y !== lastY || isPrevMoveTo) {\n\n                    // lineCap only applies to real ends, i.e., if a line segment starts with a MOVETO, is the last segment and ends with a LINETO, or is followed by a MOVETO\n                    const buttCapStart = (lineEndButtCap && isPrevMoveTo);\n                    const hasNext = i < segTypes.length - 1;\n                    const buttCapEnd = (lineEndButtCap && ((!hasNext && st === LINETO) || (hasNext && segTypes[i + 1] === MOVETO)));\n\n                    //Use centerpoint for the initial inside check for better numeric stability,\n                    //in case the start point is exactly on the clip polygon's edge, in which case the inside\n                    //check would return a random result\n\n                    //Segment is either completely inside or completely outside (does not intersect the clip path at all)\n                    loader.flushBuffer(4);\n\n                    if (this.isMiterLine || Path2D.FORCE_MITER_LINES_FOR_TESTING) {\n                        let nextX = x;\n                        let nextY = y;\n\n                        const nextIsValid = hasNext && (segTypes[i + 1] === LINETO || segTypes[i + 1] === CLOSE);\n                        if (st !== CLOSE && nextIsValid) {\n                            let tmpx = segData[dataOffset + 0];\n                            let tmpy = segData[dataOffset + 1];\n\n                            if (applyTransform) {\n                                nextX = loader.tx(tmpx, tmpy, xform);\n                                nextY = loader.ty(tmpx, tmpy, xform);\n                            } else {\n                                nextX = tmpx;\n                                nextY = tmpy;\n                            }\n                        }\n\n                        loader.currentVbb.addMiterSegment(lastLastX, lastLastY, lastX, lastY, x, y, nextX, nextY,\n                            /*totalDistance*/0, lineWidth, color, dbId, layerId, loader.currentVpId || 0, lineStyle, buttCapStart, buttCapEnd\n                        );\n                    } else {\n                        loader.currentVbb.addSegment(lastX, lastY, x, y,\n                            /*totalDistance*/0, lineWidth, color, dbId, layerId, loader.currentVpId || 0, lineStyle, buttCapStart, buttCapEnd\n                        );\n                    }\n\n                    lastLastX = lastX;\n                    lastLastY = lastY;\n                    lastX = x;\n                    lastY = y;\n                }\n            }\n                break;\n            default: {\n                console.error(\"Path must be flattened before rendering\");\n            }\n        }\n    }\n};\n\nPath2D.prototype.strokeClipperContour = function (loader, contour, isOpen, color, lineWidth, dbId, layerId, vpId, lineStyle, applyTransform, lineCap) {\n    let l = contour.length;\n    let lastIndex = isOpen ? 0 : l - 1;\n    let startIndex = isOpen ? 1 : 0;\n    let xform;\n    if (applyTransform) {\n        xform = loader.getCurrentTransform();\n    }\n\n    // our shader only supports \"butt\" and \"round\" as line ends. Use round for \"square\" as well.\n    const lineEndCap = lineCap === \"butt\";\n\n    let lastx = applyTransform ? loader.tx(contour[lastIndex].X, contour[lastIndex].Y, xform) : contour[lastIndex].X;\n    let lasty = applyTransform ? loader.ty(contour[lastIndex].X, contour[lastIndex].Y, xform) : contour[lastIndex].Y;\n    for (var i = startIndex; i < l; i++) {\n        let x = applyTransform ? loader.tx(contour[i].X, contour[i].Y, xform) : contour[i].X;\n        let y = applyTransform ? loader.ty(contour[i].X, contour[i].Y, xform) : contour[i].Y;\n\n        // lineEndCap only applies to real line ends, i.e., the beginning or end of an open contour\n        const capStart = lineEndCap && i === 0; // no need to test for isOpen, since i==0 cannot happen for open contours\n        const capEnd = lineEndCap && i === l - 1 && isOpen;\n\n        loader.flushBuffer(4);\n        loader.currentVbb.addSegment(lastx, lasty, x, y, 0, lineWidth, color, dbId, layerId, vpId, lineStyle, capStart, capEnd);\n        lastx = x, lasty = y;\n    }\n};\n\n//Checks if the path is a simple AABB.\n//Used to speed up polygon clipping operations.\nPath2D.prototype.isAABB = function() {\n\n    const EPS = 1e-10;\n    const ANGLE_EPS = 1e-3;\n\n    let st = this.segTypes;\n\n    if (st.length !== 6 && st.length !== 5)\n        return false;\n\n    if (st[0] !== MOVETO)\n        return false;\n\n    if (st.length === 6 && st[5] !== CLOSE)\n        return false;\n    else if (st.length === 5 && (st[4] !== CLOSE && st[4] !== LINETO))\n        return false;\n\n    for (let i=1; i<st.length-1; i++)\n        if (st[i] !== LINETO)\n            return false;\n\n\n    let seg = this.segData;\n\n    //check segments 1 and 3 for parallel and same length\n    let dxA = seg[2] - seg[0];\n    let dyA = seg[3] - seg[1];\n    let dxC = seg[6] - seg[4];\n    let dyC = seg[7] - seg[5];\n    let lenA = Math.sqrt(dxA*dxA + dyA*dyA);\n    let lenC = Math.sqrt(dxC*dxC + dyC*dyC);\n\n    if (Math.abs(lenA - lenC) > EPS)\n        return false;\n\n    dxA /= lenA; dyA /= lenA;\n    dxC /= lenC; dyC /= lenC;\n    let dot = dxA*dxC + dyA*dyC;\n\n    if (Math.abs(1 + dot) > ANGLE_EPS)\n        return false;\n\n    //check segments 2 and 4 for parallel and same length\n    let dxB = seg[4] - seg[2];\n    let dyB = seg[5] - seg[3];\n    let dxD = seg[8] - seg[6];\n    let dyD = seg[9] - seg[7];\n    let lenB = Math.sqrt(dxB*dxB + dyB*dyB);\n    let lenD = Math.sqrt(dxD*dxD + dyD*dyD);\n\n    if (Math.abs(lenB - lenD) > EPS)\n        return false;\n\n    dxB /= lenB; dyB /= lenB;\n    dxD /= lenD; dyD /= lenD;\n    dot = dxB*dxD + dyB*dyD;\n\n    if (Math.abs(1 + dot) > ANGLE_EPS)\n        return false;\n\n    //make sure there is a right angle\n    dot = dxA*dxB + dyA*dyB;\n\n    if (Math.abs(dot) > ANGLE_EPS)\n        return false;\n\n    //make sure segments are vertical/horizontal\n    if (Math.abs(dxA) > EPS && Math.abs(dyA))\n        return false;\n\n    return true;\n};\n\nconst INSIDE = 1;\nconst OUTSIDE = 2;\nconst UNKNOWN = 4;\n\nfunction bboxOverlap(clipBox, pathBox, precisionTolerance) {\n\n    if (clipBox.containsBox(pathBox))\n        return INSIDE;\n\n    //The above AABB containment check is exact\n    //and sometimes misses cases where the bboxes are\n    //almost exactly equal, with very slight numeric noise in the values\n    //(which happens quite often with Revit PDFs)\n\n    //So now do another check if our bbox contains the input bbox within a tolerance\n    let EPS = precisionTolerance;\n\n    if (EPS === undefined) {\n        EPS = 1e-3 / clipBox.size().length();\n    }\n\n    if (pathBox.min.x - clipBox.max.x > EPS)\n        return OUTSIDE;\n    if ((pathBox.min.y - clipBox.min.y) > EPS)\n        return OUTSIDE;\n\n    if ((pathBox.max.x - clipBox.max.x) < -EPS)\n        return OUTSIDE;\n    if ((pathBox.max.y - clipBox.max.y) < -EPS)\n        return OUTSIDE;\n\n    if ((pathBox.min.x - clipBox.min.x) < -EPS)\n        return UNKNOWN;\n    if ((pathBox.min.y - clipBox.min.y) < -EPS)\n        return UNKNOWN;\n\n    if ((pathBox.max.x - clipBox.max.x) > EPS)\n        return UNKNOWN;\n    if ((pathBox.max.y - clipBox.max.y) > EPS)\n        return UNKNOWN;\n\n    return INSIDE;\n}\n\nPath2D.prototype.isAABBContain = function(bbox) {\n\n    if (!this.isAABB())\n        return UNKNOWN;\n\n    return bboxOverlap(this.bbox, bbox, this.precisionTolerance);\n};\n\n\nPath2D.prototype.clip = function (clipPathIn, mode) {\n    var clipFlatted = clipPathIn.flattened || clipPathIn.flatten(true);\n    var subjFlatted = this.flattened || this.flatten(true);\n\n    var preResult = this.preCheckForClipping(null, clipFlatted, subjFlatted, false, false);\n    if (preResult.needCancel) {\n        console.warn(\"No overlap between nested clip regions.\");\n        return new Path2D();\n    } else if (preResult.needClipping == false) {\n        if (preResult.needSwapSubject) {\n            return clipPathIn;\n        } else {\n            return this;\n        }\n    } else {\n        // do the clipping here\n        var clips = clipFlatted.toClipperPath(null, false);\n        var myPath = subjFlatted.toClipperPath(null, false);\n\n        var solution = new ClipperLib.PolyTree();\n        var cpr = new ClipperLib.Clipper();\n        cpr.AddPaths(myPath, ClipperLib.PolyType.ptSubject, true);\n        cpr.AddPaths(clips, ClipperLib.PolyType.ptClip, true);\n\n        cpr.Execute(ClipperLib.ClipType.ctIntersection, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n\n        // need to rebuild a path from the solution, no need to do the tesselation\n        let res = new Path2D(this.precisionTolerance);\n        var node = solution.GetFirst();\n        while (node) {\n            var contour = node.Contour();\n            for (var i = 0; i < contour.length; i++) {\n                if (i == 0) {\n                    res.moveTo(contour[i].X, contour[i].Y);\n                } else {\n                    res.lineTo(contour[i].X, contour[i].Y);\n                }\n            }\n\n            if (contour[contour.length - 1].X != contour[0].X || contour[contour.length - 1].Y != contour[0].Y) {\n                res.lineTo(contour[0].X, contour[0].Y);\n            }\n            node = node.GetNext();\n        }\n        return res;\n    }\n};\n\n/**\n * If segments type is 0, 1, 0, 1 pattern, we should avoid to do fill to it\n * Most of the time, it wants to be line segments, but from 2D, you can always pass a fill/stroke command to it.\n * Eatch MoveTo should start with a segment.\n */\nPath2D.prototype.isFillable = function () {\n    //Skip some easily detectable degenerate polygons that result in no fill\n    let p = this.flattened || this.flatten(true);\n    if (p.segTypes.length < 3) {\n        return false;\n    } else if (p.segTypes.length === 3) {\n        const isClosedLine = (p.segTypes[2] === CLOSE && p.segTypes[1] === LINETO && p.segTypes[0] === MOVETO);\n        return !isClosedLine;\n    } else {\n        var isFillable = false;\n\n        for (var i = 0; i < p.segTypes.length; i += 2) {\n            if (!(p.segTypes[i] == MOVETO && p.segTypes[i + 1] == LINETO)) {\n                isFillable = true;\n                break;\n            }\n        }\n        return isFillable;\n    }\n};\n\nPath2D.prototype.fill = function (loader, color, dbId, layerId, clipPathIn, applyTransform, isFillStrokeCombo, fillRule) {\n    if(!this.isFillable()) {\n        return;\n    }\n\n    const clipperFillRule = fillRule === 'nonzero' ? ClipperLib.PolyFillType.pftNonZero : ClipperLib.PolyFillType.pftEvenOdd;\n\n    let subjFlatted = this.flattened || this.flatten(true);\n    var self = this;\n\n    function clipProcess() {\n        var needClipping = clipPathIn != null;\n        var needSwapSubject = false;\n        // check weather we can do simple path\n        if (needClipping) {\n            var clipFlatted = clipPathIn.flattened || clipPathIn.flatten(true);\n\n            var preResult = self.preCheckForClipping(loader, clipFlatted, subjFlatted, applyTransform, false);\n            if (preResult.needCancel) {\n                return;\n            }\n\n            needClipping = preResult.needClipping;\n            needSwapSubject = preResult.needSwapSubject;\n        }\n\n        if (needClipping) {\n            const clipFlatted = clipPathIn.flattened || clipPathIn.flatten(true);\n            var clips = clipFlatted.toClipperPath(loader, false);\n            var myPath = subjFlatted.toClipperPath(loader, applyTransform);\n\n            var solution = new ClipperLib.PolyTree();\n            var cpr = new ClipperLib.Clipper();\n            cpr.AddPaths(myPath, ClipperLib.PolyType.ptSubject, true);\n            cpr.AddPaths(clips, ClipperLib.PolyType.ptClip, true);\n\n            cpr.Execute(ClipperLib.ClipType.ctIntersection, solution, clipperFillRule, ClipperLib.PolyFillType.pftEvenOdd);\n\n            var polygons = self.getPolygonFromClipperSolution(solution);\n            return {\n                polygons,\n                appliedTransform: applyTransform,\n                needClipping\n            };\n        } else {\n            // if we use clip path directly as subject, we can not cache it, and should not apply transform to it\n            subjFlatted = !needSwapSubject ? subjFlatted : clipFlatted;\n            if (self.cached) {\n                return {\n                    polygons: self.cached,\n                    appliedTransform: false,\n                    needClipping,\n                    subjFlatted\n                };\n            } else {\n                const myPath = subjFlatted.toClipperPath(loader, false);\n\n                const solution = new ClipperLib.PolyTree();\n                const cpr = new ClipperLib.Clipper();\n                cpr.AddPaths(myPath, ClipperLib.PolyType.ptSubject, true);\n                cpr.Execute(ClipperLib.ClipType.ctUnion, solution, clipperFillRule, ClipperLib.PolyFillType.pftEvenOdd);\n                const polygons = self.getPolygonFromClipperSolution(solution);\n                if (!needSwapSubject) {\n                    self.cached = polygons;\n                }\n                return {\n                    polygons,\n                    appliedTransform: needSwapSubject,      // clipPath has already applied transform\n                    needClipping,\n                    subjFlatted\n                };\n            }\n        }\n    }\n\n    function fillPolygon(polygon, needApplytransform, needClipping) {\n        var vertices = polygon.vertices;\n\n        if (needApplytransform) {\n            var xform = loader.getCurrentTransform();\n            var vertices1 = [];\n            for (var i = 0; i < vertices.length; i += 2) {\n                let x = loader.tx(vertices[i], vertices[i + 1], xform);\n                let y = loader.ty(vertices[i], vertices[i + 1], xform);\n                vertices1.push(x, y);\n            }\n            vertices = vertices1;\n        }\n        loader.addPolyTriangle(vertices, polygon.indices, color, dbId, layerId, false);\n\n        // do the antialias stroke here\n        if (!isFillStrokeCombo) {\n            if (needClipping || !self.isFontChar) {\n                for (var c in polygon.contours) {\n                    self.strokeClipperContour(loader, polygon.contours[c], true, color, -0.5, dbId, layerId, loader.currentVpId, 0, needApplytransform);\n                }\n            } else {\n                // stroke the line with the original flatted path\n                self.strokeFlattedPath(loader, result.subjFlatted, -0.5, color, dbId, layerId, needApplytransform, 0);\n            }\n        }\n    }\n\n    var result = clipProcess();\n    if (result) {\n        result.polygons.map((polygon) => {\n            var needApplytransform = applyTransform && !result.appliedTransform;\n            fillPolygon(polygon, needApplytransform, result.needClipping);\n        });\n    }\n};\n\n\nPath2D.prototype.toClipperPath = function (loader, applyTransform) {\n    var paths = [];\n    var path = [];\n    var segTypes = this.segTypes;\n    var segData = this.segData;\n    var segIndex = 0;\n    var xform;\n    if (applyTransform) {\n        xform = loader.getCurrentTransform();\n    }\n\n    function addPoint(path, point) {\n        if (applyTransform) {\n            let x = loader.tx(point.X, point.Y, xform);\n            let y = loader.ty(point.X, point.Y, xform);\n            point.X = x;\n            point.Y = y;\n        }\n\n        if ((path.length > 0 && (path[path.length - 1].X != point.X || path[path.length - 1].Y != point.Y)) || path.length == 0) {\n            path.push(point);\n        }\n    }\n\n    for (var i = 0; i < segTypes.length; i++) {\n        if (segTypes[i] == MOVETO) {\n            if (path && path.length > 1) {\n                paths.push(path);\n            }\n            path = [];\n            addPoint(path, { X: segData[segIndex++], Y: segData[segIndex++] });\n        } else if (segTypes[i] == LINETO) {\n            addPoint(path, { X: segData[segIndex++], Y: segData[segIndex++] });\n        } else if (segTypes[i] == CLOSE) {\n            path.push({ X: path[0].X, Y: path[0].Y });\n            paths.push(path);\n            path = [];\n        }\n    }\n\n    if (path && path.length > 1) {\n        paths.push(path);\n    }\n\n    return paths;\n};\n\nPath2D.prototype.hasIntersection = function (box1, box2, tolerance) {\n    return !(box1.max.x - box2.min.x <= -tolerance ||   // left\n        box1.max.y - box2.min.y <= -tolerance ||   // bottom\n        box1.min.x - box2.max.x >= tolerance ||   // right\n        box1.min.y - box2.max.y >= tolerance);    // top\n};\n\nPath2D.prototype.preCheckForClipping = function (loader, clipFlatted, subjFlatted, applyTransform, strokeOnly) {\n    var clipBound = clipFlatted.bbox;\n    var subjBound = subjFlatted.bbox;\n\n    if (applyTransform) {\n        let xform = loader.getCurrentTransform();\n        // we need to apply transform to the subject bounds\n        subjBound = loader.transformBox(subjBound, xform, _tmpBox);\n    }\n\n    // do a simple check if two bounds has no overlap, set need cancel to true\n    if (!this.hasIntersection(clipBound, subjBound, this.precisionTolerance)) {\n        return {\n            needCancel: true\n        };\n    } else if (clipFlatted.isAABB() && clipBound.containsBox(subjBound)) {\n        return {\n            needClipping: false\n        };\n    }\n    else if (subjFlatted.isAABB() && subjBound.containsBox(clipBound)) {\n        // there is nothing to stroke\n        if (strokeOnly) {\n            return {\n                needCancel: true\n            };\n        } else {\n            return {\n                needClipping: false,\n                needSwapSubject: true\n            };\n        }\n    }\n    else {\n        return {\n            needClipping: true\n        };\n    }\n};\n\nPath2D.prototype.getPolygonFromClipperSolution = function (solution) {\n    function addContour(contours, vertices, contour) {\n        for (var i = 0; i < contour.length; i++) {\n            vertices.push(contour[i].X, contour[i].Y);\n        }\n        contours.push(contour);\n    }\n\n    var exPolygons = ClipperLib.JS.PolyTreeToExPolygons(solution);\n    var polygons = exPolygons.map((item) => {\n        var vertices = [];\n        var holeIndices = [];\n        var contours = [];\n\n        // clipper library has some defect when we use 4 thickline to construct a rectangle with border\n        // It flipped the hole and outer\n        // Add this logic to flip it back to the correct value\n        if(item.holes.length == 1 && Math.abs(ClipperLib.JS.AreaOfPolygons(item.holes)) > Math.abs(ClipperLib.JS.AreaOfPolygon(item.outer))) {\n            let temp = item.holes[0];\n            item.holes[0] = item.outer;\n            item.outer = temp;\n        }\n        addContour(contours, vertices, item.outer);\n\n        item.holes.map((hole) => {\n            holeIndices.push(vertices.length / 2);\n            addContour(contours, vertices, hole);\n        });\n\n        var indices = Earcut(vertices, holeIndices);\n        return {\n            vertices,\n            indices,\n            holeIndices,\n            contours\n        };\n    });\n\n    return polygons;\n};\n\n\nPath2D.prototype.msdfClipping = function(clipFlatted) {\n    var subjFlatted = this.flattened || this.flatten(true);\n    var myPath = subjFlatted.toClipperPath(null, false);\n    var clips = clipFlatted.toClipperPath(null, false);\n\n    var solution = new ClipperLib.PolyTree();\n    var cpr = new ClipperLib.Clipper();\n    cpr.AddPaths(myPath, ClipperLib.PolyType.ptSubject, true);\n    cpr.AddPaths(clips, ClipperLib.PolyType.ptClip, true);\n\n    cpr.Execute(ClipperLib.ClipType.ctIntersection, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n\n    return this.getPolygonFromClipperSolution(solution);\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n/* Pruned version of THREE.Vector3, for use in the LMV web worker */\n\nexport let LmvVector3 = function( x, y, z ) {\n\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n\n};\n\nLmvVector3.prototype = {\n\n    constructor: LmvVector3,\n\n    set: function ( x, y, z ) {\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n\n    },\n\n    setX: function ( x ) {\n\n        this.x = x;\n\n        return this;\n\n    },\n\n    setY: function ( y ) {\n\n        this.y = y;\n\n        return this;\n\n    },\n\n    setZ: function ( z ) {\n\n        this.z = z;\n\n        return this;\n\n    },\n\n    setComponent: function ( index, value ) {\n\n        switch ( index ) {\n\n            case 0: this.x = value; break;\n            case 1: this.y = value; break;\n            case 2: this.z = value; break;\n            default: throw new Error( 'index is out of range: ' + index );\n\n        }\n\n    },\n\n    getComponent: function ( index ) {\n\n        switch ( index ) {\n\n            case 0: return this.x;\n            case 1: return this.y;\n            case 2: return this.z;\n            default: throw new Error( 'index is out of range: ' + index );\n\n        }\n\n    },\n\n    clone: function () {\n\n        return new this.constructor( this.x, this.y, this.z );\n\n    },\n\n    copy: function ( v ) {\n\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n\n        return this;\n\n    },\n\n    add: function ( v, w ) {\n\n        if ( w !== undefined ) {\n\n            console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n            return this.addVectors( v, w );\n\n        }\n\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n\n        return this;\n\n    },\n\n    addScalar: function ( s ) {\n\n        this.x += s;\n        this.y += s;\n        this.z += s;\n\n        return this;\n\n    },\n\n    addVectors: function ( a, b ) {\n\n        this.x = a.x + b.x;\n        this.y = a.y + b.y;\n        this.z = a.z + b.z;\n\n        return this;\n\n    },\n\n    addScaledVector: function ( v, s ) {\n\n        this.x += v.x * s;\n        this.y += v.y * s;\n        this.z += v.z * s;\n\n        return this;\n\n    },\n\n    sub: function ( v, w ) {\n\n        if ( w !== undefined ) {\n\n            console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n            return this.subVectors( v, w );\n\n        }\n\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n\n        return this;\n\n    },\n\n    subScalar: function ( s ) {\n\n        this.x -= s;\n        this.y -= s;\n        this.z -= s;\n\n        return this;\n\n    },\n\n    subVectors: function ( a, b ) {\n\n        this.x = a.x - b.x;\n        this.y = a.y - b.y;\n        this.z = a.z - b.z;\n\n        return this;\n\n    },\n\n    multiply: function ( v, w ) {\n\n        if ( w !== undefined ) {\n\n            console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n            return this.multiplyVectors( v, w );\n\n        }\n\n        this.x *= v.x;\n        this.y *= v.y;\n        this.z *= v.z;\n\n        return this;\n\n    },\n\n    multiplyScalar: function ( scalar ) {\n\n        this.x *= scalar;\n        this.y *= scalar;\n        this.z *= scalar;\n\n        return this;\n\n    },\n\n    multiplyVectors: function ( a, b ) {\n\n        this.x = a.x * b.x;\n        this.y = a.y * b.y;\n        this.z = a.z * b.z;\n\n        return this;\n\n    },\n\n    applyMatrix3: function ( m ) {\n\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n\n        var e = m.elements;\n\n        this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n        this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n        this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n        return this;\n\n    },\n\n    applyMatrix4: function ( m ) {\n\n        // input: THREE.Matrix4 affine matrix\n\n        var x = this.x, y = this.y, z = this.z;\n\n        var e = m.elements;\n\n        this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n        this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n        this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n        return this;\n\n    },\n\n    applyProjection: function ( m ) {\n\n        // input: THREE.Matrix4 projection matrix\n\n        var x = this.x, y = this.y, z = this.z;\n\n        var e = m.elements;\n        var d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n        this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n        this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n        this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n        return this;\n\n    },\n\n    applyQuaternion: function ( q ) {\n\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n\n        var qx = q.x;\n        var qy = q.y;\n        var qz = q.z;\n        var qw = q.w;\n\n        // calculate quat * vector\n\n        var ix =  qw * x + qy * z - qz * y;\n        var iy =  qw * y + qz * x - qx * z;\n        var iz =  qw * z + qx * y - qy * x;\n        var iw = - qx * x - qy * y - qz * z;\n\n        // calculate result * inverse quat\n\n        this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n        this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n        this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n        return this;\n\n    },\n\n    transformDirection: function ( m ) {\n\n        // input: THREE.Matrix4 affine matrix\n        // vector interpreted as a direction\n\n        var x = this.x, y = this.y, z = this.z;\n\n        var e = m.elements;\n\n        this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n        this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n        this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n        this.normalize();\n\n        return this;\n\n    },\n\n    divide: function ( v ) {\n\n        this.x /= v.x;\n        this.y /= v.y;\n        this.z /= v.z;\n\n        return this;\n\n    },\n\n    divideScalar: function ( scalar ) {\n\n        if ( scalar !== 0 ) {\n\n            var invScalar = 1 / scalar;\n\n            this.x *= invScalar;\n            this.y *= invScalar;\n            this.z *= invScalar;\n\n        } else {\n\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n\n        }\n\n        return this;\n\n    },\n\n    min: function ( v ) {\n\n        if ( this.x > v.x ) {\n\n            this.x = v.x;\n\n        }\n\n        if ( this.y > v.y ) {\n\n            this.y = v.y;\n\n        }\n\n        if ( this.z > v.z ) {\n\n            this.z = v.z;\n\n        }\n\n        return this;\n\n    },\n\n    max: function ( v ) {\n\n        if ( this.x < v.x ) {\n\n            this.x = v.x;\n\n        }\n\n        if ( this.y < v.y ) {\n\n            this.y = v.y;\n\n        }\n\n        if ( this.z < v.z ) {\n\n            this.z = v.z;\n\n        }\n\n        return this;\n\n    },\n\n    clamp: function ( min, max ) {\n\n        // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n        if ( this.x < min.x ) {\n\n            this.x = min.x;\n\n        } else if ( this.x > max.x ) {\n\n            this.x = max.x;\n\n        }\n\n        if ( this.y < min.y ) {\n\n            this.y = min.y;\n\n        } else if ( this.y > max.y ) {\n\n            this.y = max.y;\n\n        }\n\n        if ( this.z < min.z ) {\n\n            this.z = min.z;\n\n        } else if ( this.z > max.z ) {\n\n            this.z = max.z;\n\n        }\n\n        return this;\n\n    },\n\n    clampScalar: function () {\n\n        var min, max;\n\n        return function clampScalar( minVal, maxVal ) {\n\n            if ( min === undefined ) {\n\n                min = new LmvVector3();\n                max = new LmvVector3();\n\n            }\n\n            min.set( minVal, minVal, minVal );\n            max.set( maxVal, maxVal, maxVal );\n\n            return this.clamp( min, max );\n\n        };\n\n    }(),\n\n    floor: function () {\n\n        this.x = Math.floor( this.x );\n        this.y = Math.floor( this.y );\n        this.z = Math.floor( this.z );\n\n        return this;\n\n    },\n\n    ceil: function () {\n\n        this.x = Math.ceil( this.x );\n        this.y = Math.ceil( this.y );\n        this.z = Math.ceil( this.z );\n\n        return this;\n\n    },\n\n    round: function () {\n\n        this.x = Math.round( this.x );\n        this.y = Math.round( this.y );\n        this.z = Math.round( this.z );\n\n        return this;\n\n    },\n\n    roundToZero: function () {\n\n        this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n        this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n        this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n        return this;\n\n    },\n\n    negate: function () {\n\n        this.x = - this.x;\n        this.y = - this.y;\n        this.z = - this.z;\n\n        return this;\n\n    },\n\n    dot: function ( v ) {\n\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n\n    },\n\n    lengthSq: function () {\n\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n\n    },\n\n    length: function () {\n\n        return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n    },\n\n    lengthManhattan: function () {\n\n        return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n    },\n\n    normalize: function () {\n\n        return this.divideScalar( this.length() );\n\n    },\n\n    setLength: function ( l ) {\n\n        var oldLength = this.length();\n\n        if ( oldLength !== 0 && l !== oldLength  ) {\n\n            this.multiplyScalar( l / oldLength );\n\n        }\n\n        return this;\n\n    },\n\n    lerp: function ( v, alpha ) {\n\n        this.x += ( v.x - this.x ) * alpha;\n        this.y += ( v.y - this.y ) * alpha;\n        this.z += ( v.z - this.z ) * alpha;\n\n        return this;\n\n    },\n\n    lerpVectors: function ( v1, v2, alpha ) {\n\n        this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n        return this;\n\n    },\n\n    cross: function ( v, w ) {\n\n        if ( w !== undefined ) {\n\n            console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n            return this.crossVectors( v, w );\n\n        }\n\n        var x = this.x, y = this.y, z = this.z;\n\n        this.x = y * v.z - z * v.y;\n        this.y = z * v.x - x * v.z;\n        this.z = x * v.y - y * v.x;\n\n        return this;\n\n    },\n\n    crossVectors: function ( a, b ) {\n\n        var ax = a.x, ay = a.y, az = a.z;\n        var bx = b.x, by = b.y, bz = b.z;\n\n        this.x = ay * bz - az * by;\n        this.y = az * bx - ax * bz;\n        this.z = ax * by - ay * bx;\n\n        return this;\n\n    },\n\n    projectOnVector: function () {\n\n        var v1, dot;\n\n        return function projectOnVector( vector ) {\n\n            if ( v1 === undefined ) v1 = new LmvVector3();\n\n            v1.copy( vector ).normalize();\n\n            dot = this.dot( v1 );\n\n            return this.copy( v1 ).multiplyScalar( dot );\n\n        };\n\n    }(),\n\n    projectOnPlane: function () {\n\n        var v1;\n\n        return function projectOnPlane( planeNormal ) {\n\n            if ( v1 === undefined ) v1 = new LmvVector3();\n\n            v1.copy( this ).projectOnVector( planeNormal );\n\n            return this.sub( v1 );\n\n        };\n\n    }(),\n\n    reflect: function () {\n\n        // reflect incident vector off plane orthogonal to normal\n        // normal is assumed to have unit length\n\n        var v1;\n\n        return function reflect( normal ) {\n\n            if ( v1 === undefined ) v1 = new LmvVector3();\n\n            return this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n        };\n\n    }(),\n\n    distanceTo: function ( v ) {\n\n        return Math.sqrt( this.distanceToSquared( v ) );\n\n    },\n\n    distanceToSquared: function ( v ) {\n\n        var dx = this.x - v.x;\n        var dy = this.y - v.y;\n        var dz = this.z - v.z;\n\n        return dx * dx + dy * dy + dz * dz;\n\n    },\n\n    setEulerFromRotationMatrix: function ( m, order ) {\n\n        console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n    },\n\n    setEulerFromQuaternion: function ( q, order ) {\n\n        console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n    },\n\n    getPositionFromMatrix: function ( m ) {\n\n        console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\n        return this.setFromMatrixPosition( m );\n\n    },\n\n    getScaleFromMatrix: function ( m ) {\n\n        console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\n        return this.setFromMatrixScale( m );\n\n    },\n\n    getColumnFromMatrix: function ( index, matrix ) {\n\n        console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\n        return this.setFromMatrixColumn( index, matrix );\n\n    },\n\n    setFromMatrixPosition: function ( m ) {\n\n        this.x = m.elements[ 12 ];\n        this.y = m.elements[ 13 ];\n        this.z = m.elements[ 14 ];\n\n        return this;\n\n    },\n\n    setFromMatrixScale: function ( m ) {\n\n        var sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\n        var sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\n        var sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\n\n        this.x = sx;\n        this.y = sy;\n        this.z = sz;\n\n        return this;\n\n    },\n\n    setFromMatrixColumn: function ( index, matrix ) {\n\n        var offset = index * 4;\n\n        var me = matrix.elements;\n\n        this.x = me[ offset ];\n        this.y = me[ offset + 1 ];\n        this.z = me[ offset + 2 ];\n\n        return this;\n\n    },\n\n    equals: function ( v ) {\n\n        return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n    },\n\n    fromArray: function ( array, offset ) {\n\n        if ( offset === undefined ) offset = 0;\n\n        this.x = array[ offset ];\n        this.y = array[ offset + 1 ];\n        this.z = array[ offset + 2 ];\n\n        return this;\n\n    },\n\n    toArray: function ( array, offset ) {\n\n        if ( array === undefined ) array = [];\n        if ( offset === undefined ) offset = 0;\n\n        array[ offset ] = this.x;\n        array[ offset + 1 ] = this.y;\n        array[ offset + 2 ] = this.z;\n\n        return array;\n\n    },\n\n    fromAttribute: function ( attribute, index, offset ) {\n\n        if ( offset === undefined ) offset = 0;\n\n        index = index * attribute.itemSize + offset;\n\n        this.x = attribute.array[ index ];\n        this.y = attribute.array[ index + 1 ];\n        this.z = attribute.array[ index + 2 ];\n\n        return this;\n\n    }\n\n};\n","\nimport {TOL} from \"./fuzzy-math\";\nimport { QuadTree } from \"./quad-tree\";\nimport lmv_poly2tri from \"./ThirdParty/lmv_poly2tri\";\nimport { LmvVector3 } from '../../src/wgs/scene/LmvVector3';\n\nconst tmpVec3 = new LmvVector3();\nexport class UniquePointList {\n\n    constructor(bbox, precisionTolerance, VertexConstructor, useQuadTree) {\n\n        this.bbox = bbox;\n        this.boxSize = this.bbox.getSize(tmpVec3).length();\n\n        if (typeof precisionTolerance === \"number\") {\n            //Input is in model units, e.g. if model is in feet,\n            //precision tolerance has to be in feet\n            this.precisionTolerance = precisionTolerance;\n            this.scale = 1.0 / this.precisionTolerance;\n        } else {\n            this.precisionTolerance = TOL * this.boxSize;\n            this.scale = 1.0 / this.precisionTolerance;\n        }\n\n        this.precisionToleranceSq = this.precisionTolerance * this.precisionTolerance;\n\n        this.snapBaseX = (this.bbox.min.x); ///- 0.5 * this.precisionTolerance;\n        this.snapBaseY = (this.bbox.min.y); //- 0.5 * this.precisionTolerance;\n\n\n        this.pts = [];\n        this.xymap = new Map();\n\n        if (useQuadTree)\n            this.quadTreeVerts = new QuadTree(bbox.min.x, bbox.min.y, bbox.max.x, bbox.max.y, precisionTolerance);\n\n        this.vertexConstructor = VertexConstructor;\n    }\n\n    findOrAddPoint(px, py, dbIds) {\n\n        //Snap the vertex to our desired granularity\n        let x = 0 | /*Math.round*/((px - this.snapBaseX) * this.scale);\n        let y = 0 | /*Math.round*/((py - this.snapBaseY) * this.scale);\n\n        //Find the nearest snapped vertex or create new\n        let v;\n        let minDist = Infinity;\n        //Look in the 9 square area surrounding the vertex\n        for (let i=x-1; i<=x+1; i++) {\n            let mx = this.xymap.get(i);\n            if (!mx)\n                continue;\n\n            for (let j=y-1; j<=y+1; j++) {\n                let tmp = mx.get(j);\n                if (!tmp)\n                    continue;\n\n                let dist = (tmp.x - px) * (tmp.x - px) + (tmp.y - py) * (tmp.y - py);\n\n                if (dist < minDist) {\n                    v = tmp;\n                    minDist = dist;\n                }\n            }\n        }\n\n        if (minDist > this.precisionToleranceSq)\n            v = undefined;\n\n        if (v === undefined) {\n            let mx = this.xymap.get(x);\n\n            if (!mx) {\n                mx = new Map();\n                this.xymap.set(x, mx);\n            }\n\n            v = this.vertexConstructor ? new this.vertexConstructor(px, py) : new lmv_poly2tri.Point(px, py);\n            mx.set(y, v);\n            v.id = this.pts.length;\n            this.pts.push(v);\n\n            if (this.quadTreeVerts)\n                this.quadTreeVerts.addItem(v);\n        }\n\n        //Remember the source object that's adding this vertex\n        if (typeof dbIds !== \"undefined\") {\n            if (typeof dbIds === \"number\") {\n                if (v.dbIds.indexOf(dbIds) === -1)\n                    v.dbIds.push(dbIds);\n            } else if (dbIds) {\n                for (let i=0; i<dbIds.length; i++) {\n                    let dbId = dbIds[i];\n                    if (v.dbIds.indexOf(dbId) === -1)\n                        v.dbIds.push(dbId);\n                }\n            }\n            v.dbIdsChanged = true;\n        }\n\n        return v;\n    }\n\n\n    forEach(f) {\n        this.pts.forEach(f);\n    }\n\n    delete(v) {\n        this.pts[v.id] = undefined;\n\n        if (this.quadTreeVerts)\n            this.quadTreeVerts.deleteItem(v);\n    }\n\n    //filters out null entries from the point list\n    compact() {\n\n        let pts = [];\n\n        for (let i=0, len=this.pts.length; i<len; i++) {\n            let v = this.pts[i];\n            if (!v)\n                continue;\n\n            v.oldid = v.id;\n            v.id = pts.length;\n            pts.push(v);\n        }\n\n        this.pts = pts;\n\n    }\n\n    enumInBox(minx, miny, maxx, maxy, f) {\n        this.quadTreeVerts.enumInBox(minx, miny, maxx, maxy, f);\n    }\n\n}","import { xLineBox } from \"./x-line-box\";\nimport { xBoxBox } from \"./x-box-box\";\n\n//Spatial index data structure for fast lookup of line segments or points.\n//\n// It can also be used for other kinds of items. For this, you can specify an itemHandler, which tells the quadtree\n// how to work with the items. It must provide two functions:\n//\n// itemHandler = {\n//    // Check wheter the (bbox of) this item intersects with the given one\n//    insersectsBox: function(item, xmin, ymin, xmax, ymax) {...},\n//\n//    // Set 'outPoint' to a point on or close to the item, e.g. bbox center. outPoint is a {x, y} pair.\n//    getPoint: function(item, outPoint) {...}\n//  }\n\n\n\nconst ITEMS_PER_NODE = 16;\nconst EPS = 1e-20;\n\nlet logger;\n\nconst tmpPoint = {x:0, y:0};\n\nexport class QuadTree {\n\n    constructor(minx, miny, maxx, maxy, extraDistance, itemHandler) {\n\n        this.items = [];\n        this.children = null;\n        this.itemCount = 0;\n\n        this.extraDistance = extraDistance;\n\n        this.minx = minx;\n        this.miny = miny;\n        this.maxx = maxx;\n        this.maxy = maxy;\n\n        this.itemHandler = itemHandler;\n\n        logger = Autodesk.Viewing.Private.logger;\n    }\n\n\n    addItem(e) {\n\n        //TODO: must check if item fits inside our total bbox\n        //before adding. In such case we may have to expand the\n        //tree somehow\n\n        this.itemCount++;\n\n        if (this.children) {\n            let overlapCount = 0;\n            let whichChild = null;\n\n            for (let i=0; i<4; i++) {\n                if (this.children[i].intersectsItem(e)) {\n                    whichChild = this.children[i];\n                    overlapCount++;\n                }\n            }\n\n            if (overlapCount === 1) {\n                whichChild.addItem(e);\n            } else if (overlapCount !== 0) {\n                this.items.push(e);\n            }\n\n        } else {\n            this.items.push(e);\n\n            if (this.items.length > ITEMS_PER_NODE)\n                this.subdivide();\n        }\n\n        return this.itemCount;\n    }\n\n    deleteItem(e) {\n\n        if (!this.intersectsItem(e))\n            return 0;\n\n        if (this.items) {\n            let idx = this.items.indexOf(e);\n            if (idx >=0) {\n                this.items.splice(idx, 1);\n                this.itemCount--;\n                return 1;\n            }\n        }\n\n        if (this.children) {\n            let deleteCount = 0;\n            let remainingItemsCount = 0;\n            for (let i=0; i<4; i++) {\n                deleteCount += this.children[i].deleteItem(e);\n                remainingItemsCount += this.children[i].itemCount;\n            }\n\n            if (remainingItemsCount < ITEMS_PER_NODE) {\n                //TODO: un-split the node here\n            }\n\n            if (deleteCount === 1) {\n                this.itemCount--;\n                return 1;\n            } else {\n                logger.warn(\"Did not find item to delete. Something is wrong.\", deleteCount);\n                return 0;\n            }\n        }\n\n        return 0;\n    }\n\n    intersectsBox(minx, miny, maxx, maxy) {\n\n        let d = this.extraDistance;\n\n        return xBoxBox(minx, miny, maxx, maxy,\n            this.minx - d, this.miny - d, this.maxx + d, this.maxy + d);\n    }\n\n    intersectsItem(e) {\n\n        if (this.itemHandler) {\n            return this.itemHandler.intersectsBox(e,\n                this.minx - this.extraDistance, this.miny - this.extraDistance,\n                this.maxx + this.extraDistance, this.maxy + this.extraDistance\n            );\n        } else if (e.v1) {\n            //Edge\n            return xLineBox(e.v1.x, e.v1.y, e.v2.x, e.v2.y,\n                            this.minx - this.extraDistance, this.miny - this.extraDistance,\n                            this.maxx + this.extraDistance, this.maxy + this.extraDistance);\n        } else {\n            //Vertex\n            return this.intersectsBox(e.x, e.y, e.x, e.y);\n        }\n    }\n\n    findSplitPoint() {\n        //determine split location -- we split along the\n        //midpoint of actual data inside the node\n        let xs = [];\n        let ys = [];\n\n        if (this.itemHandler) {\n            for (let i=0; i<this.items.length; i++) {\n                this.itemHandler.getPoint(this.items[i], tmpPoint);\n                xs.push(tmpPoint.x);\n                ys.push(tmpPoint.y);\n            }\n        } else if (this.items[0].v1) {\n            for (let i=0; i<this.items.length; i++) {\n                xs.push(this.items[i].v1.x);\n                ys.push(this.items[i].v1.y);\n            }\n        } else {\n            for (let i=0; i<this.items.length; i++) {\n                xs.push(this.items[i].x);\n                ys.push(this.items[i].y);\n            }\n        }\n\n        xs.sort((a,b) => { return a-b;});\n        ys.sort((a,b) => { return a-b;});\n\n        //Split slightly to the left of the median min point for all edge items\n        let midx = xs[0 | ((xs.length+1) / 2)] - this.extraDistance - EPS;\n        let midy = ys[0 | ((ys.length+1) / 2)] - this.extraDistance - EPS;\n\n        if (midx <= this.minx || midx >= this.maxx || midy <= this.miny || midy >= this.maxy) {\n            //logger.warn(\"Failed to split quad tree node. Something is wrong with the split choice.\");\n            return null;\n        }\n\n        return { midx, midy };\n    }\n\n\n    subdivide() {\n\n        if (this.children) {\n            logger.error(\"Attempt to subdivide already split node\");\n            return;\n        }\n\n        if (!this.items.length) {\n            logger.error(\"Attempt to subdivide empty node\");\n            return;\n        }\n\n        let minx = this.minx;\n        let miny = this.miny;\n        let maxx = this.maxx;\n        let maxy = this.maxy;\n\n        //determine split location -- we split along the\n        //midpoint of actual data inside the node\n        let split = this.findSplitPoint();\n\n        if (!split) {\n            //logger.warn(\"Failed to split node\");\n            return;\n        }\n\n        let { midx, midy } = split;\n\n        this.children = new Array(4);\n        this.children[0] = new QuadTree(minx, miny, midx, midy, this.extraDistance, this.itemHandler);\n        this.children[1] = new QuadTree(midx, miny, maxx, midy, this.extraDistance, this.itemHandler);\n        this.children[2] = new QuadTree(midx, midy, maxx, maxy, this.extraDistance, this.itemHandler);\n        this.children[3] = new QuadTree(minx, midy, midx, maxy, this.extraDistance, this.itemHandler);\n\n        let keepItems = [];\n\n        for (let i=0, iEnd = this.items.length; i<iEnd; i++) {\n\n            let overlapCount = 0;\n            let whichChild = null;\n\n            for (let j=0; j<4; j++) {\n                if (this.children[j].intersectsItem(this.items[i])) {\n                    whichChild = this.children[j];\n                    overlapCount++;\n                }\n            }\n\n            if (overlapCount === 0) {\n                logger.error(\"Expected at least one overlap\");\n            } else if (overlapCount === 1) {\n                whichChild.addItem(this.items[i]);\n            } else {\n                keepItems.push(this.items[i]);\n            }\n        }\n\n        this.items = keepItems;\n    }\n\n    enumNearItems(e, cb) {\n\n        if (!this.intersectsItem(e))\n            return;\n\n        if (this.items) {\n            for (let i=0; i<this.items.length; i++) {\n                cb(this.items[i]);\n            }\n        }\n\n        if (this.children) {\n            for (let i=0; i<4; i++) {\n                this.children[i].enumNearItems(e, cb);\n            }\n        }\n\n    }\n\n    enumInBox(minx, miny, maxx, maxy, cb) {\n\n        if (!this.intersectsBox(minx, miny, maxx, maxy))\n            return;\n\n        if (this.items) {\n            for (let i=0; i<this.items.length; i++) {\n                let e = this.items[i];\n\n                if (this.itemHandler) {\n                    if (this.itemHandler.intersectsBox(e, minx, miny, maxx, maxy)) {\n                        cb(e);\n                    }\n                } else if (e.v1) {\n                    if (xLineBox(e.v1.x, e.v1.y, e.v2.x, e.v2.y, minx, miny, maxx, maxy))\n                        cb(e);\n                } else {\n                    if (xBoxBox(e.x, e.y, e.x, e.y, minx, miny, maxx, maxy))\n                        cb(e);\n                }\n            }\n        }\n\n        if (this.children) {\n            for (let i=0; i<4; i++) {\n                this.children[i].enumInBox(minx, miny, maxx, maxy, cb);\n            }\n        }\n\n    }\n\n\n    pointInPolygonRec(e, x, y) {\n\n        // get the last point in the polygon\n        var vtx0X = e.v1.x;\n        var vtx0Y = e.v1.y;\n\n        // get test bit for above/below X axis\n        var yflag0 = (vtx0Y >= y);\n\n        var vtx1X = e.v2.x;\n        var vtx1Y = e.v2.y;\n\n        var yflag1 = (vtx1Y >= y);\n\n        // Check if endpoints straddle (are on opposite sides) of X axis\n        // (i.e. the Y's differ); if so, +X ray could intersect this edge.\n        // The old test also checked whether the endpoints are both to the\n        // right or to the left of the test point.  However, given the faster\n        // intersection point computation used below, this test was found to\n        // be a break-even proposition for most polygons and a loser for\n        // triangles (where 50% or more of the edges which survive this test\n        // will cross quadrants and so have to have the X intersection computed\n        // anyway).  I credit Joseph Samosky with inspiring me to try dropping\n        // the \"both left or both right\" part of my code.\n        if (yflag0 != yflag1)\n        {\n            // Check intersection of pgon segment with +X ray.\n            // Note if >= point's X; if so, the ray hits it.\n            // The division operation is avoided for the \">=\" test by checking\n            // the sign of the first vertex wrto the test point; idea inspired\n            // by Joseph Samosky's and Mark Haigh-Hutchinson's different\n            // polygon inclusion tests.\n            if (((vtx1Y-y)*(vtx0X-vtx1X) >=\n                    (vtx1X-x)*(vtx0Y-vtx1Y)) == yflag1)\n            {\n                this.pipResult = !this.pipResult;\n            }\n        }\n\n    }\n\n    pointInPolygon(x, y) {\n\n        this.pipResult = false;\n\n        this.enumInBox(-Infinity, y, Infinity, y, item => {\n\n            this.pointInPolygonRec(item, x, y);\n\n        });\n\n        return this.pipResult;\n\n    }\n\n\n}\n\n","\nexport function xBoxBox(minx1, miny1, maxx1, maxy1,\n                 minx2, miny2, maxx2, maxy2) {\n\n    return ((minx1 <= maxx2)\n        && (miny1 <= maxy2)\n        && (maxx1 >= minx2)\n        && (maxy1 >= miny2));\n\n}\n","\nvar point = new THREE.Vector3();\n\nexport function xBoxPlane(plane, box) {\n\n    point.set( box.min.x, box.min.y, box.min.z ); // 000\n    var d = plane.distanceToPoint(point);\n    var s = Math.sign(d);\n\n    point.set( box.min.x, box.min.y, box.max.z ); // 001\n    var d2 = plane.distanceToPoint(point);\n    if (Math.sign(d2) !== s)\n        return true;\n\n    point.set( box.min.x, box.max.y, box.min.z ); // 010\n    d2 = plane.distanceToPoint(point);\n    if (Math.sign(d2) !== s)\n        return true;\n\n    point.set( box.min.x, box.max.y, box.max.z ); // 011\n    d2 = plane.distanceToPoint(point);\n    if (Math.sign(d2) !== s)\n        return true;\n\n    point.set( box.max.x, box.min.y, box.min.z ); // 100\n    d2 = plane.distanceToPoint(point);\n    if (Math.sign(d2) !== s)\n        return true;\n\n    point.set( box.max.x, box.min.y, box.max.z ); // 101\n    d2 = plane.distanceToPoint(point);\n    if (Math.sign(d2) !== s)\n        return true;\n\n    point.set( box.max.x, box.max.y, box.min.z ); // 110\n    d2 = plane.distanceToPoint(point);\n    if (Math.sign(d2) !== s)\n        return true;\n\n    point.set( box.max.x, box.max.y, box.max.z ); // 111\n    d2 = plane.distanceToPoint(point);\n    if (Math.sign(d2) !== s)\n        return true;\n\n    return false;\n}\n","\nconst INSIDE = 0; // 0000\nconst LEFT = 1;   // 0001\nconst RIGHT = 2;  // 0010\nconst BOTTOM = 4; // 0100\nconst TOP = 8;    // 1000\n\n// Compute the bit code for a point (x, y) using the clip rectangle\n// bounded diagonally by (xmin, ymin), and (xmax, ymax)\n\nfunction ComputeOutCode(x, y, xmin, ymin, xmax, ymax)\n{\n    let code;\n\n    code = INSIDE;          // initialised as being inside of [[clip window]]\n\n    if (x < xmin)           // to the left of clip window\n        code |= LEFT;\n    else if (x > xmax)      // to the right of clip window\n        code |= RIGHT;\n    if (y < ymin)           // below the clip window\n        code |= BOTTOM;\n    else if (y > ymax)      // above the clip window\n        code |= TOP;\n\n    return code;\n}\n\n// Cohen–Sutherland clipping algorithm clips a line from\n// P0 = (x0, y0) to P1 = (x1, y1) against a rectangle with\n// diagonal from (xmin, ymin) to (xmax, ymax).\nexport function xLineBox(x0, y0, x1, y1, xmin, ymin, xmax, ymax)\n{\n    // compute outcodes for P0, P1, and whatever point lies outside the clip rectangle\n    let outcode0 = ComputeOutCode(x0, y0, xmin, ymin, xmax, ymax);\n    let outcode1 = ComputeOutCode(x1, y1, xmin, ymin, xmax, ymax);\n    let accept = false;\n\n    while (true) {\n        if (!(outcode0 | outcode1)) {\n            // bitwise OR is 0: both points inside window; trivially accept and exit loop\n            accept = true;\n            break;\n        } else if (outcode0 & outcode1) {\n            // bitwise AND is not 0: both points share an outside zone (LEFT, RIGHT, TOP,\n            // or BOTTOM), so both must be outside window; exit loop (accept is false)\n            break;\n        } else {\n            // failed both tests, so calculate the line segment to clip\n            // from an outside point to an intersection with clip edge\n            let x, y;\n\n            // At least one endpoint is outside the clip rectangle; pick it.\n            let outcodeOut = outcode0 ? outcode0 : outcode1;\n\n            // Now find the intersection point;\n            // use formulas:\n            //   slope = (y1 - y0) / (x1 - x0)\n            //   x = x0 + (1 / slope) * (ym - y0), where ym is ymin or ymax\n            //   y = y0 + slope * (xm - x0), where xm is xmin or xmax\n            // No need to worry about divide-by-zero because, in each case, the\n            // outcode bit being tested guarantees the denominator is non-zero\n            if (outcodeOut & TOP) {           // point is above the clip window\n                x = x0 + (x1 - x0) * (ymax - y0) / (y1 - y0);\n                y = ymax;\n            } else if (outcodeOut & BOTTOM) { // point is below the clip window\n                x = x0 + (x1 - x0) * (ymin - y0) / (y1 - y0);\n                y = ymin;\n            } else if (outcodeOut & RIGHT) {  // point is to the right of clip window\n                y = y0 + (y1 - y0) * (xmax - x0) / (x1 - x0);\n                x = xmax;\n            } else if (outcodeOut & LEFT) {   // point is to the left of clip window\n                y = y0 + (y1 - y0) * (xmin - x0) / (x1 - x0);\n                x = xmin;\n            }\n\n            // Now we move outside point to intersection point to clip\n            // and get ready for next pass.\n            if (outcodeOut === outcode0) {\n                x0 = x;\n                y0 = y;\n                outcode0 = ComputeOutCode(x0, y0, xmin, ymin, xmax, ymax);\n            } else {\n                x1 = x;\n                y1 = y;\n                outcode1 = ComputeOutCode(x1, y1, xmin, ymin, xmax, ymax);\n            }\n        }\n    }\n\n    return accept;\n}\n\n","\nimport { TOL } from  \"./fuzzy-math\";\n\nfunction ABS(x) {\n    return Math.abs(x);\n}\n\nconst EPS = TOL;\n\nexport const ONE_INTERSECTION = 4;\nexport const OVERLAP = 5;\n\n\n//Returns true if the given point lies on and inside the given line segment\nexport function pointOnLine(x, y, e, checkInsideSegment, precisionDistance, outPt) {\n\n    if (e.length < EPS) {\n        return false;\n    }\n\n    let dot = (x - e.v1.x) * e.dx + (y - e.v1.y) * e.dy;\n\n    if (!precisionDistance)\n        precisionDistance = EPS * e.length;\n\n    let u = dot / e.length2;\n\n    if (checkInsideSegment) {\n        if (u * e.length < -precisionDistance || u * e.length > e.length + precisionDistance)\n            return false;\n    }\n\n    let lx = e.v1.x + u * e.dx;\n    let ly = e.v1.y + u * e.dy;\n\n    let len2 = (lx - x) * (lx - x) + (ly - y) * (ly - y);\n\n    if (outPt) {\n        outPt.x = lx;\n        outPt.y = ly;\n        outPt.d = Math.sqrt(len2);\n        outPt.u = u;\n    }\n\n    if (len2 < precisionDistance * precisionDistance)\n        return true;\n\n    return false;\n}\n\n\nfunction parallelLinesOverlap(e1, e2, precisionDistance) {\n\n    //Check of the segments are parallel but not on the same infinite line\n    if (!pointOnLine(e2.v1.x, e2.v1.y, e1, false, precisionDistance)) {\n        return null;\n    }\n\n    let res = {\n        status: OVERLAP,\n        e1: [],\n        e2: []\n    };\n\n    //They are on the same line. Find overlap points.\n    //TODO: There is probably a more efficient way to do this\n    let p3_seg1 = pointOnLine(e2.v1.x, e2.v1.y, e1, true, precisionDistance);\n    let p4_seg1 = pointOnLine(e2.v2.x, e2.v2.y, e1, true, precisionDistance);\n\n    //If both points of the second segment are inside the first\n    //then the reverse cannot be true...\n    if (p3_seg1 && p4_seg1) {\n        res.e1.push(e2.v1.x, e2.v1.y, e2.v2.x, e2.v2.y);\n        return res;\n    }\n\n    let p1_seg2 = pointOnLine(e1.v1.x, e1.v1.y, e2, true, precisionDistance);\n    let p2_seg2 = pointOnLine(e1.v2.x, e1.v2.y, e2, true, precisionDistance);\n\n    if (p3_seg1)\n        res.e1.push(e2.v1.x, e2.v1.y);\n    if (p4_seg1)\n        res.e1.push(e2.v2.x, e2.v2.y);\n    if (p1_seg2)\n        res.e2.push(e1.v1.x, e1.v1.y);\n    if (p2_seg2)\n        res.e2.push(e1.v2.x, e1.v2.y);\n\n    return res;\n}\n\n\n/*\n   Determine the intersection point of two line segments\n   Modified source from here:\n   http://www.paulbourke.net/geometry/pointlineplane/\n*/\nexport function segmentsIntersect(e1, e2, precisionDistance)\n{\n    let denom  = e2.dy * e1.dx - e2.dx * e1.dy;\n    let numera = e2.dx * (e1.v1.y - e2.v1.y) - e2.dy * (e1.v1.x - e2.v1.x);\n    let numerb = e1.dx * (e1.v1.y - e2.v1.y) - e1.dy * (e1.v1.x - e2.v1.x);\n\n    /* Are the lines coincident? */\n    if (ABS(numera) < EPS && ABS(numerb) < EPS && ABS(denom) < EPS) {\n        return null;\n    }\n\n    /* Are the lines parallel */\n    if (ABS(denom) < EPS) {\n        /* check for overlap */\n        return parallelLinesOverlap(e1, e2, precisionDistance);\n    }\n\n    /* Is the intersection along the segments */\n    let mua = numera / denom;\n    let da = mua * e1.length;\n    if (da < -precisionDistance || da > e1.length + precisionDistance) {\n        return null;\n    }\n\n    let mub = numerb / denom;\n    let db = mub * e2.length;\n    if (db < -precisionDistance || db > e2.length + precisionDistance) {\n        return null;\n    }\n\n    let x = e1.v1.x + mua * e1.dx;\n    let y = e1.v1.y + mua * e1.dy;\n\n    return {\n        status: ONE_INTERSECTION,\n        e1: [x, y],\n        e2: [x, y]\n    };\n}","\n\"use strict\";\n\n//const THREE = THREE;\nconst avp = Autodesk.Viewing.Private;\nconst VertexEnumerator = avp.VertexEnumerator;\n\nimport { isZero } from \"./fuzzy-math\";\nimport { xTrianglePlane } from \"./x-triangle-plane\";\n\n\nvar mi = new THREE.Matrix4();\nvar pi = new THREE.Plane();\n\nexport function xMeshPlane( plane, {geometry, matrixWorld, fragId}, intersects ) {\n\n    if (!geometry)\n        return;\n\n    let baseIndex = intersects.length;\n\n    mi.copy(matrixWorld).invert();\n    pi.copy(plane).applyMatrix4(mi);\n\n    VertexEnumerator.enumMeshTriangles(geometry, function(vA, vB, vC, a, b, c) {\n\n        xTrianglePlane(pi, vA, vB, vC, a, b, c, intersects, fragId);\n\n    });\n\n    //Put the points into world space. It should actually be possible to do\n    //the entire math in object space -- but we have to check if all fragments\n    //that belong to the same dbId have the same world transform.\n    for (let i=baseIndex, iEnd=intersects.length; i<iEnd; i++) {\n        intersects[i].v1.applyMatrix4(matrixWorld);\n        intersects[i].v2.applyMatrix4(matrixWorld);\n    }\n\n}\n\n\nfunction makeRotationAxis( axis, cosa, m ) {\n\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n    let c = cosa;\n    let s = Math.sqrt(1.0 - c*c);\n    let t = 1 - c;\n    let x = axis.x, y = axis.y, z = axis.z;\n    let tx = t * x, ty = t * y;\n\n    m.set(\n\n        tx * x + c, tx * y - s * z, tx * z + s * y, 0,\n        tx * y + s * z, ty * y + c, ty * z - s * x, 0,\n        tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n        0, 0, 0, 1\n\n    );\n\n}\n\n\nexport function makePlaneBasis(plane) {\n\n    //var origin = plane.coplanarPoint();\n\n    let sceneUp = new THREE.Vector3(0,0,1);\n    let cross = plane.normal.clone().cross(sceneUp);\n    cross = cross.normalize();\n    let dot = sceneUp.dot(plane.normal);\n\n    //We are ignoring the translation here, since\n    //we will drop the Z coord for the 2D processing steps anyway.\n    let planeBasis = new THREE.Matrix4();\n\n    if (!(isZero(cross.x) && isZero(cross.y) && isZero(cross.z))) {\n        makeRotationAxis(cross, dot, planeBasis);\n        planeBasis.elements[14] = plane.constant;\n    } else {\n        planeBasis.elements[14] = dot * plane.constant;\n    }\n\n    return planeBasis;\n}\n\n\nexport function convertToPlaneCoords(planeBasis, edges3d, bbox) {\n\n    for (let i=0; i<edges3d.length; i++) {\n        let e = edges3d[i];\n\n        e.v1.applyMatrix4(planeBasis);\n        e.v2.applyMatrix4(planeBasis);\n\n        bbox.expandByPoint(e.v1);\n        bbox.expandByPoint(e.v2);\n    }\n}\n\n","\nimport { isZero, TOL } from \"./fuzzy-math\";\n\nlet v1 = new THREE.Vector3();\n\nexport function xPlaneSegment(plane, pt0, pt1, res1, res2) {\n\n    let direction = v1.subVectors(pt1, pt0);\n\n    let denominator = plane.normal.dot( direction );\n\n    if ( isZero(denominator) ) {\n\n        res1.copy(pt0);\n        res2.copy(pt1);\n\n        // line is coplanar\n        return 2;\n    }\n\n    denominator = 1.0 / denominator;\n\n    let t = - ( pt0.dot( plane.normal ) * denominator + plane.constant * denominator);\n\n    if ( t < -TOL || t > 1 + TOL ) {\n\n        return 0;\n\n    }\n\n    let pt = direction.multiplyScalar( t ).add( pt0 );\n\n    res1.copy(pt);\n\n    return 1;\n}\n","import { TOL } from \"./fuzzy-math\";\nimport { xPlaneSegment } from \"./x-plane-segment\";\n\nconst avp = Autodesk.Viewing.Private;\nconst logger = avp.logger;\n\nfunction Edge(pt1, pt2, id1From, id1To, id2From, id2To, meshId) {\n\n    this.v1 = pt1.clone();\n    this.v2 = pt2.clone();\n\n}\n\n\n\nlet res1 = new THREE.Vector3();\nlet res2 = new THREE.Vector3();\n\n// res is array containing result segments.\n// returns number of intersection point on the plane (0, 1, or 2) with the values of the points stored in the res array\nexport function xTrianglePlane(plane, pt0, pt1, pt2, i0, i1, i2, res, meshId) {\n\n    let d0 = plane.distanceToPoint(pt0);\n    let d1 = plane.distanceToPoint(pt1);\n    let d2 = plane.distanceToPoint(pt2);\n\n    // Check if all points are to one side of the plane\n    if (d0 < -TOL && d1 < -TOL && d2 < -TOL) {\n        return null;\n    }\n    if (d0 > TOL && d1 > TOL && d2 > TOL) {\n        return null;\n    }\n\n    let s0 = Math.sign(d0);\n    let s1 = Math.sign(d1);\n    let s2 = Math.sign(d2);\n\n    // Skip coplanar triangles (leave it to the neighbouring triangles to contribute their edges)\n    if (s0 === 0 && s1 === 0 && s2 === 0) {\n        return null;\n    }\n\n    let tmp1, tmp2;\n    let i1From, i1To, i2From, i2To;\n\n    //There is intersection, compute it\n    if (s0 !== s1) {\n        let numInts = xPlaneSegment(plane, pt0, pt1, res1, res2);\n        if (numInts === 2) {\n            res.push(new Edge(pt0, pt1, i0, i0, i1, i1, meshId));\n            return;\n        } else if (numInts === 1) {\n            i1From = i0;\n            i1To = i1;\n            tmp1 = res1.clone();\n        } else {\n            logger.warn(\"Unexpected zero intersections where at least one was expected\");\n        }\n    }\n\n    if (s1 !== s2) {\n        let numInts = xPlaneSegment(plane, pt1, pt2, res1, res2);\n        if (numInts === 2) {\n            res.push(new Edge(pt1, pt2, i1, i1, i2, i2, meshId));\n            return;\n        } else if (numInts === 1) {\n            if (tmp1) {\n                // Avoid the singular scenario where the signs are 0, -1 and +1\n                if (res1.distanceTo(tmp1) > TOL) {\n                    i2From = i1;\n                    i2To = i2;\n                    tmp2 = res1.clone();\n                }\n            }\n            else {\n                i1From = i1;\n                i1To = i2;\n                tmp1 = res1.clone();\n            }\n        } else {\n            logger.warn(\"Unexpected zero intersections where at least one was expected\");\n        }\n    }\n\n    if (s2 !== s0) {\n        let numInts = xPlaneSegment(plane, pt2, pt0, res1, res2);\n        if (numInts === 2) {\n            res.push(new Edge(pt2, pt0, i2, i2, i0, i0, meshId));\n            return;\n        } else if (numInts === 1) {\n            if (tmp1) {\n                // Avoid the singular scenario where the signs are 0, -1 and +1\n                if (res1.distanceTo(tmp1) > TOL) {\n                    i2From = i2;\n                    i2To = i0;\n                    tmp2 = res1.clone();\n                }\n            } else {\n                logger.warn(\"Unexpected single intersection point\");\n            }\n        } else {\n            logger.warn(\"Unexpected zero intersections where at least one was expected\");\n        }\n    }\n\n\n    if (tmp1 && tmp2) {\n        res.push(new Edge(tmp1, tmp2, i1From, i1To, i2From, i2To, meshId));\n    } else {\n        //logger.warn(\"Unexpected one intersection where two were expected\");\n    }\n\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6082);\n"],"names":["av","Autodesk","Viewing","avp","Private","VertexBufferBuilder","hijackContextAPI","inContext","lmvContext","forEach","fn","bind","_tmpXform","Array","_tmpVec","THREE","Vector2","_tmpBox","Box2","_offset","Vector3","_quat","Quaternion","_scale","_axis","_mtx4","Matrix4","LmvCanvasContext","getLayerKey","properties","key","ocgId","undefined","name","isRef","obj","num","gen","refKey","ref","applyTransform","p","m","inverseTransform","d","constructor","viewport","toPageUnits","meshCallback","fontEngine","usingTextLayer","fontAtlas","pdfRefMap","canvas","getGlobal","document","createElement","context","getContext","height","width","imageSmoothingEnabled","this","canvasContext","clipToViewport","offsetX","offsetY","bounds","Vector4","currentMeshIndex","imageNumber","currentVbb","_curPath","_curClip","first","states","glyphCache","precisionTolerance","dbId","maxDbId","consecutiveIds","isMobileDevice","Extensions","CompGeom","SetTesselationParams","lineStyle","isScreenSpace","layers","defaultLayerId","currentLayerId","sequencedDbId","taggedId","defaultVPId","viewportCounter","currentVpId","viewports","createViewPortData","makeScale","scale","elements","viewportMap","ocgStack","msdfRender","smallImageSequenceToCheck","inSmallImageRendering","inChildGroup","overrideCompositeOperation","overrideAlpha","destroy","updateDBId","Math","max","snapToPixel","x","y","invM","mozCurrentTransformInverse","mozCurrentTransform","round","save","push","clip","lineDashedDef","_originalsave","restore","state","pop","_originalrestore","flushBuffer","addCount","finalFlush","textureOption","vcount","compositeOperation","globalCompOp","globalCompositeOperation","blendModeChanged","currentCompositeOperation","isFull","mesh","toMesh","material","skipEllipticals","numEllipticals","skipCircles","numCirculars","skipTriangleGeoms","numTriangleGeoms","skipMiterLines","numMiterLines","useInstancing","currentImage","hasLineStyles","msdfFontTexture","hasMSDFContent","viewportBounds","imageUVTexture","image","cacheKey","compositeCanvasColor","opacity","globalAlpha","hasOpacity","reset","addPolyTriangle","points","inds","color","layer","antialiasEdges","me","edgeMap","processEdge","iFrom","iTo","tmp","adjacentVerts","idx","lastIndexOf","antialiasOneEdge","indexOf","addSegment","length","i","iEnd","i0","i1","i2","isNaN","isPattern","imageTransform","count","vbb","vbase","xform","getCurrentTransform","repetition","isGradient","uv","addVertexImagePolytriangle","u","v","x1","bbox","min","y1","getCurrentInverseTransform","tx","ty","x2","y2","addIndices","addTriangleGeom","addVertexPolytriangle","j","addAllAntialiasEdges","createGradientData","data","GradientData","getFillColor","getGradientFill","gradientData","startPoint","slice","endPoint","sp0","ep0","toCanvas","maxDim","tempCanvas","tempCtx","gradient","generateCanvasGradient","fillStyle","fillRect","pattern","createPattern","CanvasGradient","console","warn","rgb","parseInt","getStrokeColor","ctx","lastStrokeStyle","strokeStyle","lastAlpha","lastRgb","c","isFontChar","invXform","a","b","e","f","scaleValue","sqrt","abs","transformBox","dst","makeEmpty","set","expandByPoint","copy","clone","w","h","p1","p2","wS","hS","_originalfillRect","rect","fill","beginPath","strokeRect","log","clearRect","_beginTextChar","character","font","fontSize","hashKey","codePointAt","loadedName","cachedGlyph","skipPath","drawMSDFText","scaleX","scaleY","fontName","distance","x0","y0","charsMap","charIndex","charCodeAt","char","chars","page","common","info","size","flag","inverseYAxis","txoffset","tyoffset","ps","scaleW","scaleH","path","Path2D","index","moveTo","lineTo","closePath","subjFlatted","flattened","flatten","clipFlatted","precheckResult","preCheckForClipping","needClipping","polygons","msdfClipping","x3","y3","w1","h1","polygon","vertices","dy","dx","addVertexMSDFPolytriangle","indices","pages","needCancel","_originalbeginPath","setTessParams","tessParams","setMiterLine","isMiterLine","_originalclosePath","_originalmoveTo","_originallineTo","arc","radius","startAngle","endAngle","anticlockwise","_originalarc","arcTo","_originalarcTo","quadraticCurveTo","cp1x","cp1y","_originalquadraticCurveTo","bezierCurveTo","cp2x","cp2y","_originalbezierCurveTo","ellipse","cx","cy","rx","ry","rotation","ccw","_originalellipse","_originalrect","arguments","_originalfill","isFillStrokeCombo","fillRule","_ref","lastArg","stroke","_originalstroke","updateLineDashStyle","sign","lineWidth","lineCap","param1","param2","_originalclip","strokeText","text","maxWidth","translate","drawText","fillText","getRotationAndScale","decompose","s","z","angle","acos","PI","drawImage","sx","sy","sWidth","sHeight","dWidth","dHeight","fourParam","_originaldrawImage","x4","y4","uv2page","imageClip","addTexturedQuad","_processProperties","beginMarkedContent","tag","DBID","VP","viewPortId","beginMarkedContentProps","layerId","endMarkedContent","findLast","prevLayerId","prevVpId","prevTaggedId","tagChanged","setLineStyleParam","param","lineStyleInitialized","exH","LineStyleDefs","exW","def","tex","pw","lineStyleTex","createLinePatternTextureData","lineStyleIndex","lineStylePw","lineStyleTexData","lineStyleTexture","lineStyleIndexMap","addNewDashedLineStyle","ls","dpi","join","createLinePatternForDef","setLineDash","_originalcreatePattern","def1","parseFloat","toFixed","setCircleInfo","circleInfo","setCurrentOperatorIndex","addPointBBox","transformBBox","result","currentOpIndex","hiddenColor","addVertexLine","finalizeQuad","sis","smallImageSequences","start","imgBBox","transform","imgX","floor","imgY","imgWidth","ceil","imgHeight","setTransform","_originalclearRect","end","imgCanvas","setSmallImageSequences","finish","matrix","units","precision","initGeomMetrics","isLMVCanvasContext","addContextCurrentTransform","_originalSave","_originalRestore","_originalRotate","rotate","_originalScale","_originalTranslate","_originalTransform","_originalSetTransform","_transformMatrix","_transformStack","Object","defineProperty","get","ad_bc","bc_ad","old","prev","cosValue","cos","sinValue","sin","beginChildGroup","group","smask","endChildGroup","_getModelToViewportMatrix","vpData","isUnitsDefined","vp","JSON","parse","vpMat","LmvMatrix4","fromArray","multiply","prototype","hasOwnProperty","call","rawData","type","colorStops","startRadius","endRadius","assign","isValid","getFillStyle","tempGradient","createLinearGradient","p0","r0","r1","grad","createRadialGradient","ii","addColorStop","lmv_poly2tri","require","Edge","q","Error","_p2t_edge_list","SweepContext","initEdges","polyline","isOpen","len","edge_list","module","exports","DefaultTessParams","numIterations","minSegLenFraction","num_iterations","min_seg_len_fraction","adjustMaxdim","maxdim","segLength","time","TesselateCubic","px1","py1","px2","py2","px3","py3","px4","py4","isFont","aproximateLength","minSegLen","dt","dt3","pre1","pre2","pre3","pre4","temp1x","temp1y","temp2x","temp2y","fx","fy","dfx","dfy","ddfx","ddfy","dddfx","dddfy","error","tMax","t","TesselateQuad","dt2","ax","ay","getCubeBezierPoint","optionalTarget","k","bp1","bp2","bp3","bp4","ComplexPolygon","uniquePoints","customInsidechecker","pts","contours","customInsideChecker","Box3","addContour","pointInContour","cntr","yflag0","yflag1","vtx0X","vtx0Y","vtx1X","vtx1Y","inside_flag","jEnd","pointInPolygon","inside","triangulate","options","triangulateInternal","message","triangulationFailed","createPointInPolygonChecker","edges","it","IntervalTree","build","wantJitter","skipOpenContour","_pts","sz","getSize","offsetx","offsety","pts2","_triidx","copyPoints","random","jitterPoints","sweepCtx","points_","edge","processResult","tris","map_","tpts","filterFace","e1x","e1y","e2x","findSegmentIntersections","ex1","ey1","ex2","ey2","cachedEdges","etmp","v1","v2","res","xsect","segmentsIntersect","status","ONE_INTERSECTION","pt","e1","sort","shift","toPolygonMesh","packNormals","polygonMesh","bg","BufferGeometry","pos","Float32Array","setAttribute","BufferAttribute","normal","Uint16Array","pnx","pny","attributes","bytesPerItem","normalized","setIndex","streamingDraw","streamingIndex","toExtrudedMesh","thickness","extrudedMesh","vb","iblines","z1","z2","normalize","vbp","vbi","vbili","mdata","vbstride","vblayout","position","offset","itemSize","boundingBox","boundingSphere","center","getCenter","BufferGeometryUtils","meshToGeometry","FromClipperPaths","paths","ptList","UniquePointList","complexPolygon","findOrAddPoint","X","Y","id","polygonArea","needsClose","total","ContourSet","areas","allPoints","allPointsMap","verts","skipZeroAreas","perimeterMem","area","reverse","addContourSet","cset","ptlist","map","areaNet","perimeter","getThemeColor","r","g","hash","all","vids","stringify","stitchContours","openCntrs","didSomething","cntr_edge_table","entry","toerase","c1","c2","apply","splice","containsPointFrom","cs2","logger","Vertex","dbIds","dbIdsChanged","isDegenerate","addEdge","de","removeEdge","findEdgeTo","getOppositeVertex","disconnect","sortEdges","angle1","angle2","_canTraverse","flagFwd","flagRev","findUntraversedEdge","findNextCCWEdge","idxNext","eNext","DirectedEdge","swap","length2","atan2","isZero","isEqual","minx","miny","maxx","maxy","dbIdsCached","paramAlong","getDbIds","idv1","idv2","DCEL","boxSize","TOL","quadTreeEdges","QuadTree","nextEdgeId","_addVertex","px","py","splitEdge","removeDirectedEdge","addDirectedEdge","_enumNearEdges","cb","enumNearItems","skipSplitting","addedEdge","sourcePts","addItem","myInts","otherInts","ints","e2","dirty","deleteItem","removeDanglingPolyline","startVertex","endVertex","cleanupFlatEdges","removeList","angleDelta","vOther1","vOther2","delete","_compactLists","compact","oldid","_detectHolesNonZero","holes","outerPerimeter","closedAreas","cs","isHole","holeProcessFlag","filteredNonHoles","_detectHolesEvenOdd","allAreas","openAreas","concat","cmap","values","csAll","finalize","useEvenOddFill","openPolygons","vNext","deleteEdgesOnLine","v1Tmp","v2Tmp","deTmp","sid","eid","deleteEdgesInRectangle","enumInBox","findNearestVertex","dNear","Infinity","vNear","findNearestPointOnEdge","ptNearest","pointOnLine","getAppNamespace","globalScope","LMV_APP_NAMESPACE","window","self","global","USE_LMV_APP_NAMESPACES","globalProxy","Proxy","prop","value","func","target","thisArg","argumentsList","createFunctionProxy","_window","isBrowser","navigator","userAgent","match","test","toLowerCase","platform","maxTouchPoints","_navigator$platform","EdgeSet","getPointIndex","snapEdges","sanitizeEdges","edgeSet","sanitizedEdges","edge_table","cur_cntr","_window$Autodesk","sfrom","cur","cur_segs","toPt","removePt","next","dx1","dy1","dx2","dy2","len1","len2","dot","getEllipsePoint","point","getEllipseArcPoint","deltaAngle","Number","EPSILON","normalizeAngle","trunc","getAngleDelta","delta","angleInsideArcCCW","angleInsideArc","insideCCW","svgAngle","ux","uy","vx","vy","ang","tmpVec","EllipseArc","setFromSvgArc","xAxisRotation","largeArcFlag","sweepFlag","minAngleDelta","distanceTo","x1p","y1p","rxs","rys","x1ps","y1ps","cr","dq","pq","cxp","cyp","theta","getPoint","isFinite","computeBBox","targetBox","tanPhi","tan","thetaX1","atan","thetaX2","thetaY1","thetaY2","box","addEllipsePoint","tesselate","maxSegments","minSegmentLength","lastPoint","avecg","AutodeskNamespace","_export","ns","CompGeomExtension","Extension","viewer","super","load","unload","activate","deactivate","theExtensionManager","registerExtension","IntervalNode","left","right","node_edges","pipResult","splitNode","node","split","ne","remaining_node_edges","tmpPt","p1y","p2y","boxPtr","root","edge_indices","pointInPolygonRec","nl","nr","ClipperLib","isNode","nav","toString","appName","browser","chrome","chromium","safari","firefox","firefox17","firefox15","firefox3","opera","msie10","msie9","msie8","msie7","msie","Inherit","ce","ce2","getOwnPropertyNames","$baseCtor","props","getOwnPropertyDescriptor","Path","Paths","PolyNode","m_Parent","m_polygon","m_Index","m_jointype","m_endtype","m_Childs","IsOpen","IsHoleNode","ChildCount","Contour","AddChild","Child","cnt","GetNext","GetNextSiblingUp","Childs","Parent","IsHole","PolyTree","m_AllPolys","Clear","ilen","GetFirst","Total","PI2","FPoint","alen","use_xyz","Z","dp","op_Equality","op_Inequality","FPoint0","FPoint1","FPoint1dp","FPoint2","FRect","top","bottom","ir","FRect0","FRect1","FRect4","l","ClipType","ctIntersection","ctUnion","ctDifference","ctXor","PolyType","ptSubject","ptClip","PolyFillType","pftEvenOdd","pftNonZero","pftPositive","pftNegative","JoinType","jtSquare","jtRound","jtMiter","EndType","etOpenSquare","etOpenRound","etOpenButt","etClosedLine","etClosedPolygon","EdgeSide","esLeft","esRight","Direction","dRightToLeft","dLeftToRight","TEdge","Bot","Curr","Top","Delta","Dx","PolyTyp","Side","WindDelta","WindCnt","WindCnt2","OutIdx","Next","Prev","NextInLML","NextInAEL","PrevInAEL","NextInSEL","PrevInSEL","IntersectNode","Edge1","Edge2","Pt","MyIntersectNodeSort","Compare","node1","node2","LocalMinima","LeftBound","RightBound","Scanbeam","Maxima","OutRec","Idx","FirstLeft","Pts","BottomPt","OutPt","Join","OutPt1","OutPt2","OffPt","ClipperBase","m_MinimaList","m_CurrentLM","m_edges","m_HasOpenPaths","PreserveCollinear","m_Scanbeam","m_PolyOuts","m_ActiveEdges","horizontal","Skip","Unassigned","tolerance","maxValue","MAX_VALUE","minValue","MIN_VALUE","near_zero","val","IsHorizontal","PointIsVertex","pp","pp2","PointOnLineSegment","linePt1","linePt2","PointOnPolygon","SlopesEqual","pt1","pt2","pt3","pt4","SlopesEqual3","SlopesEqual4","SlopesEqual5","DisposeLocalMinimaList","jlen","tmpLm","RangeTest","InitEdge","ePrev","InitEdge2","polyType","SetDx","FindNextLocMin","E","E2","ProcessBound","LeftBoundIsForward","EStart","Horz","Result","locMin","InsertLocalMinima","ReverseHorizontal","AddPath","pg","Closed","use_lines","highI","IsFlat","leftBoundIsForward","eStart","eLoopStop","Pt2IsBetweenPt1AndPt3","RemoveEdge","EMin","AddPaths","ppg","closed","newLm","PopLocalMinima","current","Reset","lm","InsertScanbeam","newSb","sb2","newSb1","PopScanbeam","LocalMinimaPending","CreateOutRec","DisposeOutRec","outRec","UpdateEdgeIntoAEL","AelPrev","AelNext","SwapPositionsInAEL","edge1","edge2","next1","prev1","next2","prev2","DeleteFromAEL","Clipper","InitOptions","m_ClipType","m_Maxima","m_SortedEdges","m_IntersectList","m_IntersectNodeComparer","m_ExecuteLocked","m_ClipFillType","m_SubjFillType","m_Joins","m_GhostJoins","m_UsingPolyTree","ReverseSolution","StrictlySimple","ZFillFunction","ioReverseSolution","ioStrictlySimple","ioPreserveCollinear","DisposeAllPolyPts","InsertMaxima","newMax","Execute","ispolytree","clipType","solution","subjFillType","clipFillType","succeeded","ExecuteInternal","BuildResult","polytree","BuildResult2","FixHoleLinkage","orfl","botY","topY","InsertLocalMinimaIntoAEL","ProcessHorizontals","ProcessIntersections","ProcessEdgesAtTopOfScanbeam","Area$1","ReversePolyPtLinks","JoinCommonEdges","FixupOutPolyline","FixupOutPolygon","DoSimplePolygons","AddJoin","Op1","Op2","AddGhostJoin","Op","SetZ","lb","rb","InsertEdgeIntoAEL","SetWindingCount","IsContributing","AddOutPt","AddLocalMinPoly","AddEdgeToSEL","HorzSegmentsOverlap","IntersectEdges","startEdge","E2InsertsBeforeE1","TopX","IsEvenOddFillType","IsEvenOddAltFillType","pft","pft2","Inside","PopEdgeFromSEL","oldE","CopyAELToSEL","SwapPositionsInSEL","AddLocalMaxPoly","AppendPolygon","prevE","xPrev","xE","outPt","newOp","SetHoleState","op","ToFront","GetLastOutPt","SwapPoints","Value","seg1a","seg1b","seg2a","seg2b","eTmp","GetDx","FirstIsBottomPt","btmPt1","btmPt2","dx1p","dx1n","dx2p","dx2n","Area","GetBottomPt","dups","GetLowermostRec","outRec1","outRec2","bPt1","bPt2","OutRec1RightOfOutRec2","GetOutRec","outrec","holeStateRec","p1_lft","p1_rt","p2_lft","p2_rt","OKIdx","ObsoleteIdx","pp1","SwapSides","side","SwapPolyIndexes","outIdx","e1Contributing","e2Contributing","oldE1WindCnt","e1FillType","e2FillType","e1FillType2","e2FillType2","e1Wc","e2Wc","e1Wc2","e2Wc2","DeleteFromSEL","SelPrev","SelNext","horzEdge","ProcessHorizontal","GetHorzDirection","HorzEdge","$var","Left","Right","Dir","dir","horzLeft","horzRight","eLastHorz","eMaxPair","GetMaximaPair","currMax","op1","IsLastHorz","GetNextInAEL","eNextHorz","op2","IsMinima","IsMaxima","IsIntermediate","GetMaximaPairEx","BuildIntersectList","FixupIntersectionOrder","ProcessIntersectList","$$e2","isModified","IntersectPoint","newNode","EdgesAdjacent","inode","IntersectNodeSort","iNode","currentY","ip","b1","b2","IsMaximaEdge","DoMaxima","ePrev2","ReversePaths","polys","Orientation","poly","PointCount","polyg","pn","lastPP","tmpPP","lastOK","preserveCol","DupOutPt","InsertAfter","GetOverlap","a1","a2","$val","JoinHorz","op1b","op2b","DiscardLeft","Dir1","Dir2","JoinPoints","isHorizontal","reverse1","DiscardLeftSide","Reverse1","Reverse2","GetBounds","GetBounds2","ops","opStart","PointInPolygon","ipNext","startOp","ptx","pty","poly0x","poly0y","poly1x","poly1y","Poly2ContainsPoly1","outPt1","outPt2","FixupFirstLefts1","OldOutRec","NewOutRec","firstLeft","ParseFirstLeft","FixupFirstLefts2","innerOutRec","outerOutRec","FixupFirstLefts3","UpdateOutPtIdxs","op3","op4","outrec2","isArray","opFirst","SimplifyPolygon","fillType","SimplifyPolygons","DistanceSqrd","DistanceFromLineSqrd","ln1","ln2","A","B","C","SlopesNearCollinear","distSqrd","PointsAreClose","ExcludeOp","CleanPolygon","outPts","CleanPolygons","Minkowski","IsSum","IsClosed","polyCnt","pathCnt","quads","quad","MinkowskiSum","path_or_paths","pathIsClosed","TranslatePath","outPath","MinkowskiDiff","poly1","poly2","PolyTreeToPaths","AddPolyNodeToPaths","NodeType","ntAny","polynode","nt","ntOpen","ntClosed","$i3","$t3","$l3","OpenPathsFromPolyTree","ClosedPathsFromPolyTree","ClipperOffset","miterLimit","arcTolerance","def_arc_tolerance","m_destPolys","m_srcPoly","m_destPoly","m_normals","m_delta","m_sinA","m_sin","m_cos","m_miterLim","m_StepsPerRad","m_lowest","m_polyNodes","MiterLimit","ArcTolerance","two_pi","joinType","endType","FixOrientations","GetUnitNormal","DoOffset","steps","OffsetPoint","n","DoSquare","DoRound","X2","clpr","outer","outerNode","jointype","DoMiter","err","alert","JS","AreaOfPolygon","AreaOfPolygons","BoundsOfPath","BoundsOfPaths","Clean","isPolygons","Clone","k_length","results","plen","Lighten","P","rem","addlast","bxax","byay","toleranceSq","PerimeterOfPath","p1x","p2x","PerimeterOfPaths","ExPolygons","ExPolygon","AddOuterPolyNodeToExPolygons","expolygons","ep","childs2","childs","ExPolygonsToPaths","PolyTreeToExPolygons","earcut","holeIndices","dim","minX","minY","maxX","maxY","invSize","hasHoles","outerLen","linkedList","triangles","list","queue","steiner","getLeftmost","compareX","filterPoints","eliminateHole","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","equals","removeNode","again","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","maxZ","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","filteredBridge","leftmost","bx","by","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","Node","an","bp","sum","deviation","trianglesArea","dimensions","holeIndex","AdvancingFront","head","head_","tail_","search_node_","setHead","setTail","search","setSearch","findSearchNode","locateNode","locatePoint","nx","triangle","condition","xy","Point","toStringBase","toJSON","set_zero","negate","add","sub","mul","cross","compare","cmp","PointError","previousPoly2tri","poly2tri","noConflict","VERSION","Triangle","sweep","Triangulate","assert","utils","orient2d","inScanArea","isAngleObtuse","pointEvent","tcx","new_node","markNeighbor","addToMap","legalize","mapTriangleToNodes","newFrontTriangle","isBasinAngleRight","CCW","basin","left_node","bottom_node","right_node","left_highest","fillBasinReq","fillBasin","fillAdvancingFront","edgeEventByEdge","edge_event","constrained_edge","isEdgeSideOfTriangle","fillRightBelowEdgeEvent","fillRightAboveEdgeEvent","CW","fillLeftBelowEdgeEvent","fillLeftAboveEdgeEvent","fillEdgeEvent","edgeEventByPoints","eq","pointCCW","COLLINEAR","pointCW","neighborCCW","neighborCW","flipEdgeEvent","edgeIndex","markConstrainedEdgeByIndex","getNeighbor","markConstrainedEdgeByPoints","delaunay_edge","ot","oppositePoint","oi","inCircle","rotateTrianglePair","not_legalized","pa","pb","pc","pd","adx","ady","bdx","bdy","oabd","cdx","cdy","ocad","n1","n2","n3","n4","ce1","ce3","ce4","de1","de2","de3","de4","getConstrainedEdgeCCW","getConstrainedEdgeCW","getDelaunayEdgeCCW","getDelaunayEdgeCW","setDelaunayEdgeCCW","setDelaunayEdgeCW","setConstrainedEdgeCCW","setConstrainedEdgeCW","clearNeighbors","isShallow","fillRightConcaveEdgeEvent","fillRightConvexEdgeEvent","fillLeftConcaveEdgeEvent","fillLeftConvexEdgeEvent","neighborAcross","getConstrainedEdgeAcross","o","edge_index","clearDelaunayEdges","nextFlipTriangle","flipScanEdgeEvent","nextFlipPoint","o2d","flip_triangle","initTriangulation","createAdvancingFront","pointCount","sweepPoints","front","meshClean","finalizationPolygon","Basin","clear","EdgeEvent","contour","triangles_","cloneArrays","pmin_","pmax_","front_","af_head_","af_middle_","af_tail_","addHole","AddHole","addHoles","addPoint","AddPoint","addPoints","getBoundingBox","getTriangles","GetTriangles","getMap","xmax","xmin","ymax","ymin","middle","removeFromMap","isInterior","setInterior","neighbors_","interior_","p2s","GetPoint","getPoints","containsPoint","containsEdge","containsPoints","interior","markNeighborPointers","cw","opoint","npoint","markConstrainedEdgeByEdge","_v2","_tmpSize","_tmpArc","getTmpArc","segTypes","segData","hasCurves","FORCE_MITER_LINES_FOR_TESTING","isClosedPath","isPoint","arcBox","union","forceCloseContours","ret","dataOffset","lastX","lastY","contourStartX","contourStartY","loader","clipPathIn","subPath","subPaths","segIndex","_subPath","_subPath2","fixInput","tinyShift","pow","clips","toClipperPath","subPreResult","myPath","cpr","strokeClipperContour","strokeClipperSolution","strokeFlattedPath","flatted","lineEndButtCap","lastLastX","lastLastY","st","tmpx","tmpy","isPrevMoveTo","buttCapStart","hasNext","buttCapEnd","nextX","nextY","nextIsValid","addMiterSegment","vpId","lastIndex","startIndex","lineEndCap","lastx","lasty","capStart","capEnd","isAABB","EPS","ANGLE_EPS","seg","dxA","dyA","dxC","dyC","lenA","lenC","dxB","dyB","dxD","dyD","lenB","lenD","isAABBContain","clipBox","pathBox","containsBox","bboxOverlap","mode","preResult","needSwapSubject","isFillable","clipperFillRule","getPolygonFromClipperSolution","appliedTransform","cached","clipProcess","needApplytransform","vertices1","fillPolygon","hasIntersection","box1","box2","strokeOnly","clipBound","subjBound","item","temp","Earcut","LmvVector3","setX","setY","setZ","setComponent","getComponent","addVectors","addScalar","addScaledVector","subVectors","subScalar","multiplyVectors","multiplyScalar","scalar","applyMatrix3","applyMatrix4","applyProjection","applyQuaternion","qy","qz","qw","ix","iy","iz","iw","transformDirection","divide","divideScalar","invScalar","clamp","clampScalar","minVal","maxVal","roundToZero","lengthSq","lengthManhattan","setLength","oldLength","lerp","alpha","lerpVectors","crossVectors","az","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","distanceToSquared","dz","setEulerFromRotationMatrix","order","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","array","toArray","fromAttribute","attribute","tmpVec3","VertexConstructor","useQuadTree","precisionToleranceSq","snapBaseX","snapBaseY","xymap","Map","quadTreeVerts","vertexConstructor","minDist","dist","tmpPoint","extraDistance","itemHandler","items","children","itemCount","overlapCount","whichChild","intersectsItem","subdivide","deleteCount","remainingItemsCount","intersectsBox","xBoxBox","xLineBox","findSplitPoint","xs","ys","midx","midy","keepItems","minx1","miny1","maxx1","maxy1","minx2","miny2","maxx2","maxy2","xBoxPlane","plane","distanceToPoint","d2","INSIDE","LEFT","RIGHT","BOTTOM","TOP","ComputeOutCode","code","outcode0","outcode1","accept","outcodeOut","ABS","OVERLAP","checkInsideSegment","precisionDistance","lx","ly","denom","numera","numerb","p3_seg1","p4_seg1","p1_seg2","p2_seg2","parallelLinesOverlap","mua","da","db","VertexEnumerator","mi","pi","Plane","xMeshPlane","geometry","matrixWorld","fragId","baseIndex","invert","enumMeshTriangles","vA","vB","vC","xTrianglePlane","makePlaneBasis","sceneUp","planeBasis","constant","axis","cosa","makeRotationAxis","convertToPlaneCoords","edges3d","xPlaneSegment","pt0","res1","res2","direction","denominator","id1From","id1To","id2From","id2To","meshId","d0","d1","tmp1","tmp2","i1From","i1To","i2From","i2To","s0","s1","s2","numInts","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}